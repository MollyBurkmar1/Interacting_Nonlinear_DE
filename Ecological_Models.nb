(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1223094,      23752]
NotebookOptionsPosition[   1200621,      23410]
NotebookOutlinePosition[   1201059,      23427]
CellTagsIndexPosition[   1201016,      23424]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Ecological Models", "Title",
 CellChangeTimes->{{3.887783532393198*^9, 
  3.8877835364706507`*^9}},ExpressionUUID->"4f8dd6d0-bdcb-4e22-8002-\
cec151dc518d"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Predator - Prey system", "Section",
 FontColor->RGBColor[
  0.7607843137254902, 0.29411764705882354`, 0.08235294117647059]]], "Section",\

 CellChangeTimes->{{3.887794370414534*^9, 
  3.8877943817005157`*^9}},ExpressionUUID->"934bac1c-9c7c-4aaf-8375-\
244abd6c5bbe"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Dynamical", " ", "system", " ", "for", " ", "a", " ", "prey", 
     RowBox[{"(", "x", ")"}]}], "-", 
    RowBox[{"predator", 
     RowBox[{"(", "y", ")"}], " ", "system"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"de1", ":=", 
    RowBox[{
     RowBox[{"x", "'"}], "=", 
     RowBox[{
      RowBox[{"a", "*", "x"}], "-", 
      RowBox[{"b", "*", "x", "*", "y"}]}]}]}], "\[IndentingNewLine]", 
   RowBox[{"de2", ":=", 
    RowBox[{
     RowBox[{"y", "'"}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "c"}], "*", "y"}], "+", 
      RowBox[{"d", "*", "x", "*", "y"}]}]}]}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.887717609462604*^9, 3.8877176484521923`*^9}, {
  3.8877811369759207`*^9, 3.887781169078684*^9}},
 CellLabel->
  "In[165]:=",ExpressionUUID->"4f2b3283-30ed-4a70-be21-a08102c8b296"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Define", " ", "the", " ", "differential", " ", "equations", " ", "in", 
    " ", "terms", " ", "of", " ", "their", " ", "variables"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Prey", "[", 
      RowBox[{"a_", ",", "b_"}], "]"}], "=", "de1"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Predator", "[", 
      RowBox[{"c_", ",", "d_"}], "]"}], "=", "de2"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.8877176526600943`*^9, 3.887717690874249*^9}, {
  3.8877811773912907`*^9, 3.887781199966773*^9}},
 CellLabel->
  "In[167]:=",ExpressionUUID->"80a92158-4335-4178-8e6e-ef7d7e9ab438"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Plot", " ", "the", " ", "prey"}], "-", 
    RowBox[{"predator", " ", "dynamical", " ", "system"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Assumed", " ", "a"}], ",", " ", "b", ",", " ", "c", ",", " ", 
    RowBox[{"d", " ", ">", " ", "0"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"In", " ", "this", " ", "system"}], ",", " ", 
    RowBox[{
     RowBox[{
     "there", " ", "is", " ", "no", " ", "assumption", " ", "on", " ", "the", 
      " ", 
      RowBox[{"Prey", "'"}], "s", " ", "food", " ", "source"}], " ", "->", 
     " ", 
     RowBox[{"assumed", " ", "unlimited"}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Manipulate", "[", 
   RowBox[{
    RowBox[{"StreamPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Prey", "[", 
         RowBox[{"a", ",", "b"}], "]"}], ",", 
        RowBox[{"Predator", "[", 
         RowBox[{"c", ",", "d"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", "10"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", "0", ",", "10"}], "}"}], ",", 
      RowBox[{"FrameLabel", "->", 
       RowBox[{"{", 
        RowBox[{"\"\<Prey\>\"", ",", "\"\<Predator\>\""}], "}"}]}]}], "]"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", "0", ",", "10", ",", 
      RowBox[{"Appearance", "->", "\"\<Open\>\""}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"b", ",", "0", ",", "10", ",", 
      RowBox[{"Appearance", "->", "\"\<Open\>\""}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"c", ",", "0", ",", "10", ",", 
      RowBox[{"Appearance", "->", "\"\<Open\>\""}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"d", ",", "0", ",", "10", ",", 
      RowBox[{"Appearance", "->", "\"\<Open\>\""}]}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.887717697850222*^9, 3.887717748754854*^9}, {
  3.887717799845435*^9, 3.887717802690984*^9}, {3.887781045210868*^9, 
  3.887781064224286*^9}, {3.88778110286388*^9, 3.88778116259156*^9}, {
  3.8877812018870564`*^9, 3.8877812131831503`*^9}},
 CellLabel->
  "In[169]:=",ExpressionUUID->"10ab93a6-55c7-40af-88f0-28f4b690b097"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 1., $CellContext`b$$ = 
    1., $CellContext`c$$ = 1., $CellContext`d$$ = 1., Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`a$$], 0, 10}, {
      Hold[$CellContext`b$$], 0, 10}, {
      Hold[$CellContext`c$$], 0, 10}, {
      Hold[$CellContext`d$$], 0, 10}}, Typeset`size$$ = {
    360., {178., 182.3515625}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`a$$ = 0, $CellContext`b$$ = 
        0, $CellContext`c$$ = 0, $CellContext`d$$ = 0}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> StreamPlot[{
         $CellContext`Prey[$CellContext`a$$, $CellContext`b$$], 
         $CellContext`Predator[$CellContext`c$$, $CellContext`d$$]}, \
{$CellContext`x, 0, 10}, {$CellContext`y, 0, 10}, 
        FrameLabel -> {"Prey", "Predator"}], 
      "Specifications" :> {{$CellContext`a$$, 0, 10, Appearance -> 
         "Open"}, {$CellContext`b$$, 0, 10, Appearance -> 
         "Open"}, {$CellContext`c$$, 0, 10, Appearance -> 
         "Open"}, {$CellContext`d$$, 0, 10, Appearance -> "Open"}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{406., {300.6875, 306.3125}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.8877177497423773`*^9, 3.887717806199462*^9, {3.887781033088161*^9, 
   3.887781064719802*^9}, 3.887795459242052*^9, 3.888492697544147*^9},
 CellLabel->
  "Out[169]=",ExpressionUUID->"850b1b38-0f18-421f-9407-43dbbecec5f1"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Application to Cosmology", "Chapter",
 FontColor->RGBColor[
  0.7607843137254902, 0.29411764705882354`, 0.08235294117647059]]], "Section",\

 CellChangeTimes->{{3.8877835489666653`*^9, 
  3.8877835541991367`*^9}},ExpressionUUID->"baa56de3-431e-4ef1-bafa-\
11fe058a1dbb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Define", " ", "the", " ", "dynamical", " ", "system", " ", "for", " ", 
    "coupled", " ", "dark", " ", "matter", " ", 
    RowBox[{"(", "z", ")"}], " ", "and", " ", "dark", " ", "energy", " ", 
    RowBox[{"(", "x", ")"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"dex", ":=", 
    RowBox[{
     RowBox[{"x", "'"}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "3"}], "*", "x", "*", 
       RowBox[{"(", 
        RowBox[{"1", "+", "wx"}], ")"}]}], "-", 
      RowBox[{"q", "*", "x", "*", "z"}]}]}]}], "\[IndentingNewLine]", 
   RowBox[{"dez", ":=", 
    RowBox[{
     RowBox[{"z", "'"}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "3"}], "*", "z"}], " ", "+", " ", 
      RowBox[{"q", "*", "x", "*", "z"}]}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.88778352760754*^9, 3.887783529359799*^9}, {
  3.8877836089673634`*^9, 3.887783636614414*^9}, {3.8877945671764097`*^9, 
  3.8877945681823*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"a1875164-ac45-472d-8739-d7ae5793612b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Find", " ", "the", " ", "fixed", " ", "points", " ", "of", " ", "the", 
    " ", "system"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"FPs", "=", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"dex", "==", "0"}], ",", 
       RowBox[{"dez", "==", "0"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "z"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.887783835950109*^9, 3.8877838945109367`*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"3c910a45-46ea-44f4-8300-154a37136f60"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "0"}], ",", 
     RowBox[{"z", "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", 
      FractionBox["3", "q"]}], ",", 
     RowBox[{"z", "\[Rule]", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"3", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", "wx"}], ")"}]}], "q"]}]}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.887783886343814*^9, 3.887783894791018*^9}, 
   3.8877954596027327`*^9, 3.888388004573082*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"908c68f3-ca9b-4f94-b638-c76da09ed1f2"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"FP", "[", "1", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "/.", 
      RowBox[{"FPs", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ",", 
     RowBox[{"z", "/.", 
      RowBox[{"FPs", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "2"}], "]"}], "]"}]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FP", "[", "2", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "/.", 
      RowBox[{"FPs", "[", 
       RowBox[{"[", 
        RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ",", 
     RowBox[{"z", "/.", 
      RowBox[{"FPs", "[", 
       RowBox[{"[", 
        RowBox[{"2", ",", "2"}], "]"}], "]"}]}]}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.888387992800191*^9, 3.888387994336494*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"2527b036-8a35-4803-aa90-f57f6c7210f4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Put", " ", "fixed", " ", "points", " ", "into", " ", "a", " ", "table"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"FPs", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"FP", "[", "i", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "2"}], "}"}]}], "]"}]}], ";"}]}]], "Input",\

 CellChangeTimes->{{3.8672143768787384`*^9, 3.8672144154966393`*^9}, {
   3.867224467122445*^9, 3.8672244725038586`*^9}, {3.868024836545911*^9, 
   3.868024837240116*^9}, 3.868958478845225*^9, 3.869126991902952*^9, 
   3.882269611642425*^9, {3.884941331752728*^9, 3.884941333151639*^9}, 
   3.887977524370623*^9, {3.8880648874787903`*^9, 3.888064887583043*^9}, {
   3.8883866629648542`*^9, 3.8883866668787622`*^9}, {3.888387685986022*^9, 
   3.888387686065666*^9}, 3.8883879975772333`*^9},
 CellLabel->"In[21]:=",ExpressionUUID->"6bbb93db-9be2-440e-bc00-a260b4f33e6d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Find", " ", "the", " ", "4", "D", " ", "Jacobian", " ", "matrix", " ", 
    "for", " ", "general", " ", "system", " ", "of", " ", 
    RowBox[{"equations", ".", " ", 
     RowBox[{"D", "[", "]"}]}], " ", "differentiates", " ", "each", " ", 
    "expression"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"J", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{"dex", ",", "x"}], "]"}], ",", 
          RowBox[{"D", "[", 
           RowBox[{"dex", ",", "z"}], "]"}]}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{"dez", ",", "x"}], "]"}], ",", 
          RowBox[{"D", "[", 
           RowBox[{"dez", ",", "z"}], "]"}]}], "}"}]}], "}"}], "]"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{"J", "//", "MatrixForm"}]}]}]], "Input",
 CellChangeTimes->{{3.8672146504912844`*^9, 3.867214712242198*^9}, {
  3.868944173552453*^9, 3.8689441811471653`*^9}, {3.883803822024252*^9, 
  3.88380382370331*^9}, {3.8849413374850473`*^9, 3.884941360072496*^9}, {
  3.888064788786353*^9, 3.888064809682465*^9}, {3.888386676661456*^9, 
  3.888386680406108*^9}, {3.8883878754897747`*^9, 3.8883878820335407`*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"724a626f-8f7a-40fa-9279-fb024d12a3c6"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"-", "3"}], "-", 
       RowBox[{"3", " ", "wx"}], "-", 
       RowBox[{"q", " ", "z"}]}], 
      RowBox[{
       RowBox[{"-", "q"}], " ", "x"}]},
     {
      RowBox[{"q", " ", "z"}], 
      RowBox[{
       RowBox[{"-", "3"}], "+", 
       RowBox[{"q", " ", "x"}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.884941390016919*^9, 3.884941450774749*^9, 
  3.884951190746726*^9, 3.8849512243211927`*^9, 3.8849512959086*^9, 
  3.8849513770966473`*^9, 3.884951420088645*^9, 3.884951801152663*^9, 
  3.8856222380041313`*^9, 3.885622503437155*^9, 3.885622645722885*^9, 
  3.8856396859627447`*^9, 3.885641687124854*^9, 3.885641923813918*^9, 
  3.88587511869125*^9, 3.885876467769642*^9, 3.885876603385765*^9, 
  3.885877104064621*^9, 3.8858771736928043`*^9, 3.88587958359562*^9, 
  3.885881073673758*^9, 3.885983970789137*^9, 3.8873508071776*^9, 
  3.887360789290834*^9, 3.8874370788470163`*^9, 3.887437220357789*^9, 
  3.887439218237136*^9, 3.8879775365170116`*^9, 3.8880648891890306`*^9, 
  3.888310946981617*^9, 3.88838491217284*^9, 3.8883858276275377`*^9, 
  3.88838669514375*^9, 3.888386761641879*^9, 3.888387939714788*^9, 
  3.888388007643704*^9},
 CellLabel->
  "Out[23]//MatrixForm=",ExpressionUUID->"c6fdd1c6-2200-44aa-bbbd-\
5481c615b3b9"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Find", " ", "the", " ", "Jacobian", " ", "and", " ", "eigenvalues", " ", 
    "for", " ", "each", " ", "fixed", " ", "point"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"FPTable", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"FPs", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "//", "MatrixForm"}], ",", 
        RowBox[{
         RowBox[{"Simplify", "[", 
          RowBox[{"J", "/.", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"x", "->", 
              RowBox[{"FPs", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "1"}], "]"}], "]"}]}], ",", 
             RowBox[{"z", "->", 
              RowBox[{"FPs", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "2"}], "]"}], "]"}]}]}], "}"}]}], "]"}], "//",
          "MatrixForm"}], ",", 
        RowBox[{
         RowBox[{"Eigenvalues", "[", 
          RowBox[{"J", "/.", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"x", "->", 
              RowBox[{"FPs", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "1"}], "]"}], "]"}]}], ",", 
             RowBox[{"z", "->", 
              RowBox[{"FPs", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "2"}], "]"}], "]"}]}]}], "}"}]}], "]"}], "//",
          "MatrixForm"}], ",", 
        RowBox[{
         RowBox[{"Eigenvectors", "[", 
          RowBox[{"J", "/.", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"x", "->", 
              RowBox[{"FPs", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "1"}], "]"}], "]"}]}], ",", 
             RowBox[{"z", "->", 
              RowBox[{"FPs", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "2"}], "]"}], "]"}]}]}], "}"}]}], "]"}], "//",
          "MatrixForm"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "2"}], "}"}]}], "]"}]}], ";"}]}]], "Input",\

 CellChangeTimes->{{3.867225318077546*^9, 3.8672254169870214`*^9}, {
   3.867225448024709*^9, 3.8672254542249594`*^9}, {3.8672255001121364`*^9, 
   3.8672255191902294`*^9}, {3.8672255581112022`*^9, 
   3.8672255642188787`*^9}, {3.8672255973534174`*^9, 
   3.8672256274971313`*^9}, {3.8672256839287667`*^9, 
   3.8672256945159383`*^9}, {3.867225730109685*^9, 3.867225738455241*^9}, {
   3.8672257699330273`*^9, 3.867225778278576*^9}, {3.867225811278432*^9, 
   3.86722581683035*^9}, {3.867225903530884*^9, 3.8672259267803965`*^9}, {
   3.867225979984497*^9, 3.867225987304329*^9}, 3.867226143110686*^9, {
   3.867227332365857*^9, 3.867227342142587*^9}, {3.867407053817068*^9, 
   3.8674070581695633`*^9}, {3.8680242099370823`*^9, 3.868024213440816*^9}, {
   3.868024365757309*^9, 3.8680243705990753`*^9}, {3.8680245930712137`*^9, 
   3.8680246064401407`*^9}, {3.8680247507314663`*^9, 3.868024752328637*^9}, {
   3.8689441880925694`*^9, 3.8689441917923965`*^9}, 3.868956001836708*^9, 
   3.8689590190222435`*^9, {3.869126738407119*^9, 3.8691267437236*^9}, 
   3.869126782049677*^9, {3.869127818860439*^9, 3.869127857050398*^9}, 
   3.8691279323005037`*^9, 3.869128019515766*^9, {3.8691294821423035`*^9, 
   3.869129491277402*^9}, {3.869197845521573*^9, 3.869197845678837*^9}, {
   3.87163244715317*^9, 3.8716324493928595`*^9}, {3.8716327635423284`*^9, 
   3.8716327651125145`*^9}, 3.8777566945081463`*^9, {3.8777569014323*^9, 
   3.877756902992178*^9}, 3.882269477299637*^9, 3.8822696146808777`*^9, {
   3.884941367280037*^9, 3.884941402363988*^9}, {3.884941530288258*^9, 
   3.884941535802528*^9}, {3.8849416037112207`*^9, 3.88494162633784*^9}, 
   3.88797755141038*^9, {3.8880648989189*^9, 3.888064918294055*^9}, {
   3.888386700285853*^9, 3.888386700909945*^9}, {3.888387946270321*^9, 
   3.888387946657957*^9}, 3.8883880011953497`*^9},
 CellLabel->"In[24]:=",ExpressionUUID->"98391c92-751f-4913-a7df-e13d3b9cf583"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Use", " ", "TableForm", " ", "to", " ", "display", " ", "the", " ", 
    "fixed", " ", "points", " ", "with", " ", "their", " ", "Jacobian", " ", 
    "matrix", " ", "and", " ", "eigenvalues"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"FPTable", "=", 
   RowBox[{"TableForm", "[", 
    RowBox[{"FPTable", ",", 
     RowBox[{"TableHeadings", "->", 
      RowBox[{"{", 
       RowBox[{"None", ",", 
        RowBox[{"{", 
         RowBox[{
         "\"\<Fixed Point\>\"", ",", "\"\<Jacobian\>\"", ",", 
          "\"\<Eigenvalues\>\"", ",", "\"\<Eigenvectors\>\""}], "}"}]}], 
       "}"}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8674732571734056`*^9, 3.8674733087235513`*^9}, {
   3.8680240454027176`*^9, 3.8680240517453375`*^9}, {3.868944198427647*^9, 
   3.8689442010925846`*^9}, {3.8691296342126307`*^9, 3.869129635352618*^9}, {
   3.8691296836226945`*^9, 3.8691297054374857`*^9}, 3.8691297421488905`*^9, {
   3.8691297832126884`*^9, 3.869129802932803*^9}, {3.8777567702425528`*^9, 
   3.8777567889867887`*^9}, {3.877756859522192*^9, 3.8777568704743633`*^9}, {
   3.877756944239081*^9, 3.8777569721182117`*^9}, {3.883803874115755*^9, 
   3.8838039117033367`*^9}, {3.884941538839074*^9, 3.884941542102433*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"79976a66-8e8b-4e03-9a78-1cb5b7e7156e"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      TagBox["\<\"Fixed Point\"\>",
       HoldForm], 
      TagBox["\<\"Jacobian\"\>",
       HoldForm], 
      TagBox["\<\"Eigenvalues\"\>",
       HoldForm], 
      TagBox["\<\"Eigenvectors\"\>",
       HoldForm]},
     {
      TagBox[
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {
           RowBox[{
            RowBox[{"-", "3"}], " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", "wx"}], ")"}]}], "0"},
          {"0", 
           RowBox[{"-", "3"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            RowBox[{"-", "3"}]},
           {
            RowBox[{"3", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "-", "wx"}], ")"}]}]}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "1"},
          {"1", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]]},
     {
      TagBox[
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            FractionBox["3", "q"]},
           {
            RowBox[{"-", 
             FractionBox[
              RowBox[{"3", " ", 
               RowBox[{"(", 
                RowBox[{"1", "+", "wx"}], ")"}]}], "q"]}]}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", 
           RowBox[{"-", "3"}]},
          {
           RowBox[{
            RowBox[{"-", "3"}], " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", "wx"}], ")"}]}], "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            RowBox[{
             RowBox[{"-", "3"}], " ", 
             SqrtBox[
              RowBox[{"1", "+", "wx"}]]}]},
           {
            RowBox[{"3", " ", 
             SqrtBox[
              RowBox[{"1", "+", "wx"}]]}]}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {
           FractionBox["1", 
            SqrtBox[
             RowBox[{"1", "+", "wx"}]]], "1"},
          {
           RowBox[{"-", 
            FractionBox["1", 
             SqrtBox[
              RowBox[{"1", "+", "wx"}]]]}], "1"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{
     "Columns" -> {{False}}, "Rows" -> {False, True, {False}, False}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   {None, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {
     None, {"Fixed Point", "Jacobian", "Eigenvalues", 
       "Eigenvectors"}}]]]], "Output",
 CellChangeTimes->{
  3.884941454690998*^9, {3.884941542933641*^9, 3.884941546476881*^9}, {
   3.884941605209611*^9, 3.884941629149145*^9}, 3.88495119079465*^9, 
   3.88495122436862*^9, 3.8849512959610043`*^9, 3.884951377134953*^9, 
   3.8849514201387043`*^9, 3.8849518012042103`*^9, 3.88562223805123*^9, 
   3.885622503492572*^9, 3.8856226457884483`*^9, 3.8856396860561047`*^9, 
   3.8856416872205048`*^9, 3.88564192395665*^9, 3.885875118753622*^9, 
   3.885876467829794*^9, 3.88587660344481*^9, 3.885877104125065*^9, 
   3.8858771737497377`*^9, 3.885879583665038*^9, 3.8858810737327747`*^9, 
   3.885983970859274*^9, 3.8873508072443657`*^9, 3.887360789363636*^9, 
   3.8874370789522543`*^9, 3.8874372204501667`*^9, 3.8874392183274717`*^9, 
   3.887977553478746*^9, 3.888064921266267*^9, 3.888310947009956*^9, 
   3.888384915379505*^9, 3.888385827648429*^9, 3.888386703120358*^9, 
   3.888386763050202*^9, 3.8883879486553*^9, 3.888388009936681*^9},
 CellLabel->
  "Out[25]//TableForm=",ExpressionUUID->"f9f1f653-c422-4875-bdf6-\
f7ec75b70a7c"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Define", " ", "the", " ", "differential", " ", "equations", " ", "in", 
    " ", "terms", " ", "of", " ", "their", " ", "variables"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"DE", "[", 
      RowBox[{"wx_", ",", "q_"}], "]"}], "=", "dex"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"DM", "[", "q_", "]"}], "=", "dez"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.887783657511712*^9, 3.887783686624045*^9}, {
  3.887783776422574*^9, 3.887783778430128*^9}},
 CellLabel->
  "In[184]:=",ExpressionUUID->"7c14175f-1b58-4be5-b371-72a2f40bd6cd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"StreamPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"DE", "[", 
        RowBox[{"wx", ",", "q"}], "]"}], ",", 
       RowBox[{"DM", "[", "q", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"z", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"FrameLabel", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<x\>\"", ",", "\"\<z\>\""}], "}"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"q", ",", "0", ",", "20", ",", 
     RowBox[{"Appearance", "->", "\"\<Open\>\""}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"wx", ",", 
     RowBox[{"-", "2"}], ",", "2", ",", 
     RowBox[{"Appearance", "->", "\"\<Open\>\""}]}], "}"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.88780538479677*^9, 3.887805484355207*^9}, {
  3.887805564447641*^9, 3.887805565013872*^9}},
 CellLabel->
  "In[187]:=",ExpressionUUID->"770db4d9-3641-48af-a5b1-738640a46834"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`q$$ = Rational[11, 2], $CellContext`wx$$ = 
    Rational[-3, 2], Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`q$$], 0, 20}, {
      Hold[$CellContext`wx$$], -2, 2}}, Typeset`size$$ = {
    360., {176., 181.2578125}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`q$$ = 0, $CellContext`wx$$ = -2}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> StreamPlot[{
         $CellContext`DE[$CellContext`wx$$, $CellContext`q$$], 
         $CellContext`DM[$CellContext`q$$]}, {$CellContext`x, 0, 
         1}, {$CellContext`z, 0, 1}, FrameLabel -> {"x", "z"}], 
      "Specifications" :> {{$CellContext`q$$, 0, 20, Appearance -> 
         "Open"}, {$CellContext`wx$$, -2, 2, Appearance -> "Open"}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{406., {254.1875, 259.8125}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.887805450105678*^9, 3.887805500580658*^9}, 
   3.887805565373466*^9},
 CellLabel->
  "Out[187]=",ExpressionUUID->"ca2d3fe5-f89b-4f0f-af6d-6b41a94e010a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Modified Energy Density System",
 FontColor->RGBColor[
  0.7607843137254902, 0.29411764705882354`, 0.08235294117647059]]], "Section",\

 CellChangeTimes->{{3.887794485950898*^9, 
  3.887794492608836*^9}},ExpressionUUID->"1986ee19-e1e4-40ed-ad83-\
0a8b363a8d07"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Non-Compact x - z Phase Space", "Subsubsection"]], \
"Subsection",
 CellChangeTimes->{{3.888396757108968*^9, 3.8883967792116327`*^9}, {
  3.888481974786878*^9, 
  3.888481978478022*^9}},ExpressionUUID->"f0afda35-ef1e-49d2-a869-\
54c3757c6752"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Define", " ", "the", " ", "dynamical", " ", "system", " ", "for", " ", 
    "coupled", " ", "dark", " ", "matter", " ", 
    RowBox[{"(", "z", ")"}], " ", "and", " ", "dark", " ", "energy", " ", 
    RowBox[{"(", "x", ")"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"dex", ":=", 
    RowBox[{
     RowBox[{"x", "'"}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "3"}], "*", "x", "*", 
       RowBox[{"(", 
        RowBox[{"1", "+", "wx", "+", 
         RowBox[{"\[Epsilon]", "*", "x"}]}], ")"}]}], "-", 
      RowBox[{"q", "*", "x", "*", "z"}]}]}]}], "\[IndentingNewLine]", 
   RowBox[{"dez", ":=", 
    RowBox[{
     RowBox[{"z", "'"}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "3"}], "*", "z"}], " ", "+", " ", 
      RowBox[{"q", "*", "x", "*", "z"}]}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.88778352760754*^9, 3.887783529359799*^9}, {
  3.8877836089673634`*^9, 3.887783636614414*^9}, {3.8877945671764097`*^9, 
  3.887794595132979*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"1b61d005-30c6-4387-a72d-e7cb1b20bebd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Find", " ", "the", " ", "fixed", " ", "points", " ", "of", " ", "the", 
    " ", "system"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"FPs", "=", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"dex", "==", "0"}], ",", 
       RowBox[{"dez", "==", "0"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "z"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.887783835950109*^9, 3.8877838945109367`*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"e5bb7e66-b80f-4782-8394-c56e1d4025dc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", 
      FractionBox["3", "q"]}], ",", 
     RowBox[{"z", "\[Rule]", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"3", " ", 
         RowBox[{"(", 
          RowBox[{"q", "+", 
           RowBox[{"q", " ", "wx"}], "+", 
           RowBox[{"3", " ", "\[Epsilon]"}]}], ")"}]}], 
        SuperscriptBox["q", "2"]]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "0"}], ",", 
     RowBox[{"z", "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"1", "+", "wx"}], "\[Epsilon]"]}]}], ",", 
     RowBox[{"z", "\[Rule]", "0"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.887783886343814*^9, 3.887783894791018*^9}, 
   3.887794602662032*^9, 3.887795460207513*^9, 3.887796811979241*^9, 
   3.88838793728578*^9, 3.888393308727167*^9, 3.888399217107098*^9, 
   3.888401640037324*^9, 3.888402175991043*^9, 3.8884806612815113`*^9, 
   3.888481208021104*^9, 3.888487913728973*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"1eb3ebb7-b9d8-4489-add1-1d21605f777d"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"FP", "[", "1", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "/.", 
      RowBox[{"FPs", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ",", 
     RowBox[{"z", "/.", 
      RowBox[{"FPs", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "2"}], "]"}], "]"}]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FP", "[", "2", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "/.", 
      RowBox[{"FPs", "[", 
       RowBox[{"[", 
        RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ",", 
     RowBox[{"z", "/.", 
      RowBox[{"FPs", "[", 
       RowBox[{"[", 
        RowBox[{"2", ",", "2"}], "]"}], "]"}]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FP", "[", "3", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "/.", 
      RowBox[{"FPs", "[", 
       RowBox[{"[", 
        RowBox[{"3", ",", "1"}], "]"}], "]"}]}], ",", 
     RowBox[{"z", "/.", 
      RowBox[{"FPs", "[", 
       RowBox[{"[", 
        RowBox[{"3", ",", "2"}], "]"}], "]"}]}]}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.887794606869719*^9, 3.887794612900786*^9}, {
  3.888387673082815*^9, 3.8883876780179157`*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"c7094358-c68c-4901-99e8-e89144fef781"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Put", " ", "fixed", " ", "points", " ", "into", " ", "a", " ", "table"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"FPs", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"FP", "[", "i", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "3"}], "}"}]}], "]"}]}], ";"}]}]], "Input",\

 CellChangeTimes->{{3.8672143768787384`*^9, 3.8672144154966393`*^9}, {
   3.867224467122445*^9, 3.8672244725038586`*^9}, {3.868024836545911*^9, 
   3.868024837240116*^9}, 3.868958478845225*^9, 3.869126991902952*^9, 
   3.882269611642425*^9, {3.884941331752728*^9, 3.884941333151639*^9}, 
   3.887977524370623*^9, {3.8880648874787903`*^9, 3.888064887583043*^9}, {
   3.8883866629648542`*^9, 3.8883866668787622`*^9}, {3.888387685986022*^9, 
   3.888387686065666*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"0580e945-1232-43c3-be44-c0b4ef8b727b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Find", " ", "the", " ", "4", "D", " ", "Jacobian", " ", "matrix", " ", 
    "for", " ", "general", " ", "system", " ", "of", " ", 
    RowBox[{"equations", ".", " ", 
     RowBox[{"D", "[", "]"}]}], " ", "differentiates", " ", "each", " ", 
    "expression"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"J", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{"dex", ",", "x"}], "]"}], ",", 
          RowBox[{"D", "[", 
           RowBox[{"dex", ",", "z"}], "]"}]}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{"dez", ",", "x"}], "]"}], ",", 
          RowBox[{"D", "[", 
           RowBox[{"dez", ",", "z"}], "]"}]}], "}"}]}], "}"}], "]"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{"J", "//", "MatrixForm"}]}]}]], "Input",
 CellChangeTimes->{{3.8672146504912844`*^9, 3.867214712242198*^9}, {
  3.868944173552453*^9, 3.8689441811471653`*^9}, {3.883803822024252*^9, 
  3.88380382370331*^9}, {3.8849413374850473`*^9, 3.884941360072496*^9}, {
  3.888064788786353*^9, 3.888064809682465*^9}, {3.888386676661456*^9, 
  3.888386680406108*^9}, {3.8883878754897747`*^9, 3.8883878820335407`*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"8fd7f574-1f97-40cf-bc9e-54b8c4370a45"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"-", "3"}], "-", 
       RowBox[{"3", " ", "wx"}], "-", 
       RowBox[{"q", " ", "z"}], "-", 
       RowBox[{"6", " ", "x", " ", "\[Epsilon]"}]}], 
      RowBox[{
       RowBox[{"-", "q"}], " ", "x"}]},
     {
      RowBox[{"q", " ", "z"}], 
      RowBox[{
       RowBox[{"-", "3"}], "+", 
       RowBox[{"q", " ", "x"}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGDQAuJZXQc4P3x847jvVIQgiNZ7ev3SFyBt5s51HUQ7CP+9
D6L3iCu/AtF615reg+h5j1TkvwLpG4oHqm0+v3HU+ft2Doh+oLh9HYg+d24f
gyuI/vf4F4iex10l4Qakd8hd+7odSL9YUDFvB5A2iMhZD6ITBJnegegS7W3f
QHQQ/2flXUA6t9/0Hoie4xAp8xZIP1v3tKnj2xvHZr+VSb1A+pDU7UWbgDRT
cfcWED1vmvu6zUA6plugY9f3N45dPGr6T4F0RmZ8SOwPoL3trEWNQPqUSMkT
ED1r5pOAJiDt1mUSCaK775e9AdGTpT52twLpp4nL8zqA9EFG9bmdQDpItuIB
iJ5+baXRBiD95QBjOYiu3x+3dzOQBgCkRczH
  "],
 CellLabel->
  "Out[9]//MatrixForm=",ExpressionUUID->"5cbc6a90-4cf1-4360-8e54-\
e3d0b66128ef"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Find", " ", "the", " ", "Jacobian", " ", "and", " ", "eigenvalues", " ", 
    "for", " ", "each", " ", "fixed", " ", "point"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"FPTable", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"FPs", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "//", "MatrixForm"}], ",", 
        RowBox[{
         RowBox[{"Simplify", "[", 
          RowBox[{"J", "/.", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"x", "->", 
              RowBox[{"FPs", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "1"}], "]"}], "]"}]}], ",", 
             RowBox[{"z", "->", 
              RowBox[{"FPs", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "2"}], "]"}], "]"}]}]}], "}"}]}], "]"}], "//",
          "MatrixForm"}], ",", 
        RowBox[{
         RowBox[{"Eigenvalues", "[", 
          RowBox[{"J", "/.", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"x", "->", 
              RowBox[{"FPs", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "1"}], "]"}], "]"}]}], ",", 
             RowBox[{"z", "->", 
              RowBox[{"FPs", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "2"}], "]"}], "]"}]}]}], "}"}]}], "]"}], "//",
          "MatrixForm"}], ",", 
        RowBox[{
         RowBox[{"Eigenvectors", "[", 
          RowBox[{"J", "/.", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"x", "->", 
              RowBox[{"FPs", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "1"}], "]"}], "]"}]}], ",", 
             RowBox[{"z", "->", 
              RowBox[{"FPs", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "2"}], "]"}], "]"}]}]}], "}"}]}], "]"}], "//",
          "MatrixForm"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "3"}], "}"}]}], "]"}]}], ";"}]}]], "Input",\

 CellChangeTimes->{{3.867225318077546*^9, 3.8672254169870214`*^9}, {
   3.867225448024709*^9, 3.8672254542249594`*^9}, {3.8672255001121364`*^9, 
   3.8672255191902294`*^9}, {3.8672255581112022`*^9, 
   3.8672255642188787`*^9}, {3.8672255973534174`*^9, 
   3.8672256274971313`*^9}, {3.8672256839287667`*^9, 
   3.8672256945159383`*^9}, {3.867225730109685*^9, 3.867225738455241*^9}, {
   3.8672257699330273`*^9, 3.867225778278576*^9}, {3.867225811278432*^9, 
   3.86722581683035*^9}, {3.867225903530884*^9, 3.8672259267803965`*^9}, {
   3.867225979984497*^9, 3.867225987304329*^9}, 3.867226143110686*^9, {
   3.867227332365857*^9, 3.867227342142587*^9}, {3.867407053817068*^9, 
   3.8674070581695633`*^9}, {3.8680242099370823`*^9, 3.868024213440816*^9}, {
   3.868024365757309*^9, 3.8680243705990753`*^9}, {3.8680245930712137`*^9, 
   3.8680246064401407`*^9}, {3.8680247507314663`*^9, 3.868024752328637*^9}, {
   3.8689441880925694`*^9, 3.8689441917923965`*^9}, 3.868956001836708*^9, 
   3.8689590190222435`*^9, {3.869126738407119*^9, 3.8691267437236*^9}, 
   3.869126782049677*^9, {3.869127818860439*^9, 3.869127857050398*^9}, 
   3.8691279323005037`*^9, 3.869128019515766*^9, {3.8691294821423035`*^9, 
   3.869129491277402*^9}, {3.869197845521573*^9, 3.869197845678837*^9}, {
   3.87163244715317*^9, 3.8716324493928595`*^9}, {3.8716327635423284`*^9, 
   3.8716327651125145`*^9}, 3.8777566945081463`*^9, {3.8777569014323*^9, 
   3.877756902992178*^9}, 3.882269477299637*^9, 3.8822696146808777`*^9, {
   3.884941367280037*^9, 3.884941402363988*^9}, {3.884941530288258*^9, 
   3.884941535802528*^9}, {3.8849416037112207`*^9, 3.88494162633784*^9}, 
   3.88797755141038*^9, {3.8880648989189*^9, 3.888064918294055*^9}, {
   3.888386700285853*^9, 3.888386700909945*^9}, {3.888387946270321*^9, 
   3.888387946657957*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"87fd21d2-bbe9-4ae8-8918-6a1eb12816e2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Use", " ", "TableForm", " ", "to", " ", "display", " ", "the", " ", 
    "fixed", " ", "points", " ", "with", " ", "their", " ", "Jacobian", " ", 
    "matrix", " ", "and", " ", "eigenvalues"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"FPTable", "=", 
   RowBox[{"TableForm", "[", 
    RowBox[{"FPTable", ",", 
     RowBox[{"TableHeadings", "->", 
      RowBox[{"{", 
       RowBox[{"None", ",", 
        RowBox[{"{", 
         RowBox[{
         "\"\<Fixed Point\>\"", ",", "\"\<Jacobian\>\"", ",", 
          "\"\<Eigenvalues\>\"", ",", "\"\<Eigenvectors\>\""}], "}"}]}], 
       "}"}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8674732571734056`*^9, 3.8674733087235513`*^9}, {
   3.8680240454027176`*^9, 3.8680240517453375`*^9}, {3.868944198427647*^9, 
   3.8689442010925846`*^9}, {3.8691296342126307`*^9, 3.869129635352618*^9}, {
   3.8691296836226945`*^9, 3.8691297054374857`*^9}, 3.8691297421488905`*^9, {
   3.8691297832126884`*^9, 3.869129802932803*^9}, {3.8777567702425528`*^9, 
   3.8777567889867887`*^9}, {3.877756859522192*^9, 3.8777568704743633`*^9}, {
   3.877756944239081*^9, 3.8777569721182117`*^9}, {3.883803874115755*^9, 
   3.8838039117033367`*^9}, {3.884941538839074*^9, 3.884941542102433*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"9d3b3f8b-a93f-44a2-ac91-8b32bc629dce"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      TagBox["\<\"Fixed Point\"\>",
       HoldForm], 
      TagBox["\<\"Jacobian\"\>",
       HoldForm], 
      TagBox["\<\"Eigenvalues\"\>",
       HoldForm], 
      TagBox["\<\"Eigenvectors\"\>",
       HoldForm]},
     {
      TagBox[
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            FractionBox["3", "q"]},
           {
            RowBox[{"-", 
             FractionBox[
              RowBox[{"3", " ", 
               RowBox[{"(", 
                RowBox[{"q", "+", 
                 RowBox[{"q", " ", "wx"}], "+", 
                 RowBox[{"3", " ", "\[Epsilon]"}]}], ")"}]}], 
              SuperscriptBox["q", "2"]]}]}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {
           RowBox[{"-", 
            FractionBox[
             RowBox[{"9", " ", "\[Epsilon]"}], "q"]}], 
           RowBox[{"-", "3"}]},
          {
           RowBox[{"-", 
            FractionBox[
             RowBox[{"3", " ", 
              RowBox[{"(", 
               RowBox[{"q", "+", 
                RowBox[{"q", " ", "wx"}], "+", 
                RowBox[{"3", " ", "\[Epsilon]"}]}], ")"}]}], "q"]}], "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            FractionBox[
             RowBox[{"3", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "3"}], " ", "q", " ", "\[Epsilon]"}], "-", 
                RowBox[{"q", " ", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{"4", " ", 
                    SuperscriptBox["q", "2"]}], "+", 
                   RowBox[{"4", " ", 
                    SuperscriptBox["q", "2"], " ", "wx"}], "+", 
                   RowBox[{"12", " ", "q", " ", "\[Epsilon]"}], "+", 
                   RowBox[{"9", " ", 
                    SuperscriptBox["\[Epsilon]", "2"]}]}]]}]}], ")"}]}], 
             RowBox[{"2", " ", 
              SuperscriptBox["q", "2"]}]]},
           {
            FractionBox[
             RowBox[{"3", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "3"}], " ", "q", " ", "\[Epsilon]"}], "+", 
                RowBox[{"q", " ", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{"4", " ", 
                    SuperscriptBox["q", "2"]}], "+", 
                   RowBox[{"4", " ", 
                    SuperscriptBox["q", "2"], " ", "wx"}], "+", 
                   RowBox[{"12", " ", "q", " ", "\[Epsilon]"}], "+", 
                   RowBox[{"9", " ", 
                    SuperscriptBox["\[Epsilon]", "2"]}]}]]}]}], ")"}]}], 
             RowBox[{"2", " ", 
              SuperscriptBox["q", "2"]}]]}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {
           RowBox[{"-", 
            FractionBox[
             RowBox[{
              RowBox[{
               RowBox[{"-", "3"}], " ", "\[Epsilon]"}], "-", 
              SqrtBox[
               RowBox[{
                RowBox[{"4", " ", 
                 SuperscriptBox["q", "2"]}], "+", 
                RowBox[{"4", " ", 
                 SuperscriptBox["q", "2"], " ", "wx"}], "+", 
                RowBox[{"12", " ", "q", " ", "\[Epsilon]"}], "+", 
                RowBox[{"9", " ", 
                 SuperscriptBox["\[Epsilon]", "2"]}]}]]}], 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{"q", "+", 
                RowBox[{"q", " ", "wx"}], "+", 
                RowBox[{"3", " ", "\[Epsilon]"}]}], ")"}]}]]}], "1"},
          {
           RowBox[{"-", 
            FractionBox[
             RowBox[{
              RowBox[{
               RowBox[{"-", "3"}], " ", "\[Epsilon]"}], "+", 
              SqrtBox[
               RowBox[{
                RowBox[{"4", " ", 
                 SuperscriptBox["q", "2"]}], "+", 
                RowBox[{"4", " ", 
                 SuperscriptBox["q", "2"], " ", "wx"}], "+", 
                RowBox[{"12", " ", "q", " ", "\[Epsilon]"}], "+", 
                RowBox[{"9", " ", 
                 SuperscriptBox["\[Epsilon]", "2"]}]}]]}], 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{"q", "+", 
                RowBox[{"q", " ", "wx"}], "+", 
                RowBox[{"3", " ", "\[Epsilon]"}]}], ")"}]}]]}], "1"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]]},
     {
      TagBox[
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {
           RowBox[{
            RowBox[{"-", "3"}], " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", "wx"}], ")"}]}], "0"},
          {"0", 
           RowBox[{"-", "3"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            RowBox[{"-", "3"}]},
           {
            RowBox[{"3", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "-", "wx"}], ")"}]}]}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "1"},
          {"1", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]]},
     {
      TagBox[
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            RowBox[{"-", 
             FractionBox[
              RowBox[{"1", "+", "wx"}], "\[Epsilon]"]}]},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {
           RowBox[{"3", " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", "wx"}], ")"}]}], 
           FractionBox[
            RowBox[{"q", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", "wx"}], ")"}]}], "\[Epsilon]"]},
          {"0", 
           RowBox[{
            RowBox[{"-", "3"}], "-", 
            FractionBox[
             RowBox[{"q", " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", "wx"}], ")"}]}], "\[Epsilon]"]}]}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            RowBox[{"3", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", "wx"}], ")"}]}]},
           {
            RowBox[{"-", 
             FractionBox[
              RowBox[{"q", "+", 
               RowBox[{"q", " ", "wx"}], "+", 
               RowBox[{"3", " ", "\[Epsilon]"}]}], "\[Epsilon]"]}]}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"1", "0"},
          {
           RowBox[{"-", 
            FractionBox[
             RowBox[{"q", " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", "wx"}], ")"}]}], 
             RowBox[{"q", "+", 
              RowBox[{"q", " ", "wx"}], "+", 
              RowBox[{"6", " ", "\[Epsilon]"}], "+", 
              RowBox[{"3", " ", "wx", " ", "\[Epsilon]"}]}]]}], "1"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{
     "Columns" -> {{False}}, "Rows" -> {False, True, {False}, False}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   {None, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {
     None, {"Fixed Point", "Jacobian", "Eigenvalues", 
       "Eigenvectors"}}]]]], "Output",
 CellChangeTimes->{
  3.884941454690998*^9, {3.884941542933641*^9, 3.884941546476881*^9}, {
   3.884941605209611*^9, 3.884941629149145*^9}, 3.88495119079465*^9, 
   3.88495122436862*^9, 3.8849512959610043`*^9, 3.884951377134953*^9, 
   3.8849514201387043`*^9, 3.8849518012042103`*^9, 3.88562223805123*^9, 
   3.885622503492572*^9, 3.8856226457884483`*^9, 3.8856396860561047`*^9, 
   3.8856416872205048`*^9, 3.88564192395665*^9, 3.885875118753622*^9, 
   3.885876467829794*^9, 3.88587660344481*^9, 3.885877104125065*^9, 
   3.8858771737497377`*^9, 3.885879583665038*^9, 3.8858810737327747`*^9, 
   3.885983970859274*^9, 3.8873508072443657`*^9, 3.887360789363636*^9, 
   3.8874370789522543`*^9, 3.8874372204501667`*^9, 3.8874392183274717`*^9, 
   3.887977553478746*^9, 3.888064921266267*^9, 3.888310947009956*^9, 
   3.888384915379505*^9, 3.888385827648429*^9, 3.888386703120358*^9, 
   3.888386763050202*^9, 3.8883879486553*^9, 3.8883933143100967`*^9, 
   3.888399223590488*^9, 3.888401642021921*^9, 3.888402182920209*^9, 
   3.888480661362626*^9, 3.888481208128563*^9, 3.888487915781562*^9},
 CellLabel->
  "Out[11]//TableForm=",ExpressionUUID->"71d529e7-b9da-472a-a00e-\
d6fbb80a716f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Find", " ", "condition", " ", "for", " ", "first", " ", "fixed", " ", 
    "point", " ", "to", " ", "be", " ", "complex"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"wxCond", "=", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"4", " ", 
        SuperscriptBox["q", "2"]}], "+", 
       RowBox[{"4", " ", 
        SuperscriptBox["q", "2"], " ", "wx"}], "+", 
       RowBox[{"12", " ", "q", " ", "\[Epsilon]"}], "+", 
       RowBox[{"9", " ", 
        SuperscriptBox["\[Epsilon]", "2"]}]}], "==", "0"}], ",", 
     RowBox[{"{", 
      RowBox[{"q", ",", "\[Epsilon]", ",", "wx"}], "}"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.888394762343412*^9, 3.888394773774496*^9}, {
  3.888396078984737*^9, 3.8883961420811*^9}, {3.888396504286385*^9, 
  3.888396504430975*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"884bd2e3-9eea-4b8f-ab3a-3ff3e667d6ef"],

Cell[BoxData[
 TemplateBox[{
  "Solve", "svars", 
   "\"Equations may not give solutions for all \\\"solve\\\" variables.\"", 2,
    12, 1, 18333207024845038574, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.888394774155014*^9, 3.888396143399876*^9, 
  3.8883992249362507`*^9, 3.8884016427625504`*^9, 3.888402184711317*^9, 
  3.888480661404483*^9, 3.888481208175156*^9, 3.8884879165977716`*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"2fc22cdb-89a9-480e-992d-23c60b63e440"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"wx", "\[Rule]", 
     RowBox[{"-", 
      FractionBox[
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "q"}], "+", 
          RowBox[{"3", " ", "\[Epsilon]"}]}], ")"}], "2"], 
       RowBox[{"4", " ", 
        SuperscriptBox["q", "2"]}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"q", "\[Rule]", "0"}], ",", 
     RowBox[{"\[Epsilon]", "\[Rule]", "0"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.888394756050598*^9, 3.888394774163561*^9}, 
   3.888396143408059*^9, 3.888399224945829*^9, 3.888401642767928*^9, 
   3.888402184718754*^9, 3.888480661410144*^9, 3.888481208188833*^9, 
   3.888487916607224*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"ff0fec5c-8470-4f6d-87ac-56a14252db27"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"wxCondition", "=", 
  RowBox[{"wx", "/.", 
   RowBox[{"wxCond", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.888396130198745*^9, 3.8883961823042192`*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"3dc31020-6606-434d-8a47-10029c332d3c"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", " ", "q"}], "+", 
      RowBox[{"3", " ", "\[Epsilon]"}]}], ")"}], "2"], 
   RowBox[{"4", " ", 
    SuperscriptBox["q", "2"]}]]}]], "Output",
 CellChangeTimes->{3.888396156964006*^9, 3.8883992256993856`*^9, 
  3.888401643171076*^9, 3.888402188185144*^9, 3.888480661422019*^9, 
  3.8884812082127867`*^9, 3.8884879173151503`*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"cccd4140-c78d-4487-a1dc-2061b60e3eeb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Maximum", " ", "value", " ", "wx", " ", "can", " ", "be", " ", "for", 
     " ", "the", " ", "first", " ", "fixed", " ", "point", " ", "to", " ", 
     "be", " ", "complex", " ", "for", " ", "positive", " ", "values", " ", 
     "of", " ", "\[Epsilon]", " ", "and", " ", "q"}], " ", "->", " ", 
    RowBox[{
     RowBox[{"Fig", ".", " ", "9"}], "a"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "For", " ", "this", " ", "wx", " ", "the", " ", "two", " ", "eigenvalues", 
    " ", "are", " ", "the", " ", "same"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"wxMax1", "=", 
   RowBox[{"wxCondition", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Epsilon]", "->", "0.01"}], ",", 
      RowBox[{"q", "->", ".1"}]}], "}"}]}]}]}]], "Input",
 CellChangeTimes->{{3.888396188889471*^9, 3.888396250405672*^9}, {
   3.88839643679565*^9, 3.888396450454376*^9}, {3.888396727271161*^9, 
   3.8883967415997477`*^9}, {3.888399256797667*^9, 3.888399256939949*^9}, {
   3.888399289589098*^9, 3.888399289763579*^9}, {3.888399577693181*^9, 
   3.8883995786429*^9}, {3.888401648075615*^9, 3.888401649793898*^9}, {
   3.888402031568365*^9, 3.8884020345601187`*^9}, 3.888402134705879*^9, {
   3.888488049213228*^9, 3.8884880522563353`*^9}, {3.888490094851652*^9, 
   3.888490136190117*^9}},ExpressionUUID->"7e6aa430-e5f6-463e-803b-\
65f511f27630"],

Cell[BoxData[
 RowBox[{"-", "1.3224999999999998`"}]], "Output",
 CellChangeTimes->{{3.888396190207408*^9, 3.888396209127961*^9}, 
   3.888396239726666*^9, {3.8883964375626917`*^9, 3.888396450864183*^9}, {
   3.888396728048736*^9, 3.8883967418597927`*^9}, {3.8883992274665537`*^9, 
   3.888399257225938*^9}, 3.888399290221753*^9, 3.88839957935618*^9, {
   3.888401643580565*^9, 3.8884016502292147`*^9}, 3.888402189258237*^9, 
   3.888480661427802*^9, 3.888481208234194*^9, 3.888487919397531*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"6e0e97d1-6e57-4b6c-a0fa-3ae5aaa7142e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Maximum", " ", "value", " ", "wx", " ", "can", " ", "be", " ", "for", 
     " ", "the", " ", "first", " ", "fixed", " ", "point", " ", "to", " ", 
     "be", " ", "complex", " ", "for", " ", "positive", " ", "q", " ", "and", 
     " ", "negative", " ", "\[Epsilon]"}], " ", "->", " ", 
    RowBox[{
     RowBox[{"Fig", ".", " ", "9"}], "b"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "For", " ", "this", " ", "wx", " ", "the", " ", "two", " ", "eigenvalues", 
    " ", "are", " ", "the", " ", "same"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"wxMax2", "=", 
   RowBox[{"wxCondition", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Epsilon]", "->", 
       RowBox[{"-", "0.25"}]}], ",", 
      RowBox[{"q", "->", "1"}]}], "}"}]}]}]}]], "Input",
 CellChangeTimes->{
  3.888402050823923*^9, {3.888402122087219*^9, 3.888402154303185*^9}, {
   3.888402254186022*^9, 3.888402299126996*^9}, {3.888402340136343*^9, 
   3.888402363294355*^9}, {3.888488035124095*^9, 3.8884880450840397`*^9}, {
   3.888490110590488*^9, 
   3.888490145174305*^9}},ExpressionUUID->"3c5a6619-e270-47c9-97b7-\
8deb3012b6f3"],

Cell[BoxData[
 RowBox[{"-", "0.390625`"}]], "Output",
 CellChangeTimes->{
  3.888402190613138*^9, {3.888402270289102*^9, 3.888402300441293*^9}, 
   3.888402342455991*^9, 3.8884806614414988`*^9, 3.888481208262619*^9, 
   3.888487920390338*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"0475152e-ebe3-40a3-a946-bda42399ebe7"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Define", " ", "the", " ", "differential", " ", "equations", " ", "in", 
    " ", "terms", " ", "of", " ", "their", " ", "variables"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"DE", "[", 
      RowBox[{"wx_", ",", "q_", ",", "\[Epsilon]_"}], "]"}], "=", "dex"}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"DM", "[", "q_", "]"}], "=", "dez"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.887783657511712*^9, 3.887783686624045*^9}, {
  3.887783776422574*^9, 3.887783778430128*^9}, {3.887794618325459*^9, 
  3.887794623663451*^9}, {3.887795001836006*^9, 3.8877950042740183`*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"34729365-4981-40bb-8a41-4786488d412d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"StreamPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"DE", "[", 
        RowBox[{"wx", ",", "q", ",", "\[Epsilon]"}], "]"}], ",", 
       RowBox[{"DM", "[", "q", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"z", ",", "0", ",", "3"}], "}"}], ",", 
     RowBox[{"FrameLabel", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<x\>\"", ",", "\"\<z\>\""}], "}"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"q", ",", "0", ",", "20", ",", 
     RowBox[{"Appearance", "->", "\"\<Open\>\""}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"wx", ",", 
     RowBox[{"-", "10"}], ",", "10", ",", 
     RowBox[{"Appearance", "->", "\"\<Open\>\""}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", ",", 
     RowBox[{"-", "2"}], ",", "2", ",", 
     RowBox[{"Appearance", "->", "\"\<Open\>\""}]}], "}"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.887805603837902*^9, 3.887805618135332*^9}, {
   3.888393765223463*^9, 3.888393765445427*^9}, {3.888393814103344*^9, 
   3.8883938142928047`*^9}, 3.8883940451420193`*^9, {3.888395081831902*^9, 
   3.8883950835654793`*^9}, {3.888395832251377*^9, 3.888395833249305*^9}, {
   3.8884016724295807`*^9, 3.888401692459043*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"16ecb7b2-b31a-40df-9768-3b60ff08bc26"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`q$$ = 
    1, $CellContext`wx$$ = -0.390625, $CellContext`\[Epsilon]$$ = -0.25, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`q$$], 0, 20}, {
      Hold[$CellContext`wx$$], -10, 10}, {
      Hold[$CellContext`\[Epsilon]$$], -2, 2}}, Typeset`size$$ = {
    360., {176., 181.2578125}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`q$$ = 
        0, $CellContext`wx$$ = -10, $CellContext`\[Epsilon]$$ = -2}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> StreamPlot[{
         $CellContext`DE[$CellContext`wx$$, $CellContext`q$$, $CellContext`\
\[Epsilon]$$], 
         $CellContext`DM[$CellContext`q$$]}, {$CellContext`x, 0, 
         5}, {$CellContext`z, 0, 3}, FrameLabel -> {"x", "z"}], 
      "Specifications" :> {{$CellContext`q$$, 0, 20, Appearance -> 
         "Open"}, {$CellContext`wx$$, -10, 10, Appearance -> 
         "Open"}, {$CellContext`\[Epsilon]$$, -2, 2, Appearance -> "Open"}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{406., {276.6875, 282.3125}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.8884022048771677`*^9, 3.888480661467361*^9, 
  3.888481208348138*^9, 3.888487922237997*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"73135a20-09a1-48d4-83e9-c5a145722d1a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Non-Compact x - y - z Phase Space", "Subsection",
 CellChangeTimes->{{3.888396757108968*^9, 3.888396789868569*^9}, {
  3.888481985157799*^9, 
  3.888481986677782*^9}},ExpressionUUID->"8e3ce21e-65db-4c6c-93a7-\
5dc1a0db2e64"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Define", " ", "the", " ", "dynamical", " ", "system", " ", "for", " ", 
    "coupled", " ", "dark", " ", "matter", " ", 
    RowBox[{"(", "z", ")"}], " ", "and", " ", "dark", " ", "energy", " ", 
    RowBox[{"(", "x", ")"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"de1", ":=", 
    RowBox[{
     RowBox[{"x", "'"}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "3"}], "*", "y", "*", "x", "*", 
       RowBox[{"(", 
        RowBox[{"1", "+", "wx", "+", 
         RowBox[{"\[Epsilon]", "*", "x"}]}], ")"}]}], "-", 
      RowBox[{"q", "*", "x", "*", "y", "*", "z"}]}]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"de2", ":=", 
    RowBox[{
     RowBox[{"y", "'"}], "=", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"y", "^", "2"}]}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "/", "6"}], ")"}], "*", 
       RowBox[{"(", 
        RowBox[{"x", "+", "z", "+", 
         RowBox[{"3", "*", "wx", "*", "x"}], "+", 
         RowBox[{"3", "*", "\[Epsilon]", "*", 
          RowBox[{"x", "^", "2"}]}]}], ")"}]}]}]}]}], "\[IndentingNewLine]", 
   RowBox[{"de3", ":=", 
    RowBox[{
     RowBox[{"z", "'"}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "3"}], "*", "y", "*", "z"}], " ", "+", " ", 
      RowBox[{"q", "*", "x", "*", "y", "*", "z"}]}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.88778352760754*^9, 3.887783529359799*^9}, {
   3.8877836089673634`*^9, 3.887783636614414*^9}, {3.8877945671764097`*^9, 
   3.887794595132979*^9}, {3.888396808293858*^9, 3.888396825550391*^9}, 
   3.8883968634213047`*^9, {3.888398235465941*^9, 3.888398279401182*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"d0766ccf-708a-4528-8ab9-182d61e51ef3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Find", " ", "the", " ", "fixed", " ", "points", " ", "of", " ", "the", 
    " ", "system"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"FPs", "=", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"de1", "==", "0"}], ",", 
       RowBox[{"de2", "==", "0"}], ",", 
       RowBox[{"de3", "==", "0"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.867924266311984*^9, 3.867924270493926*^9}, 
   3.868943807877423*^9, {3.878639758179953*^9, 3.878639761499497*^9}, 
   3.878651528972577*^9, {3.8786516021307096`*^9, 3.878651604117207*^9}, 
   3.87871921821413*^9, {3.878816579965701*^9, 3.878816656202022*^9}, {
   3.878816724091421*^9, 3.8788167242418823`*^9}, {3.886593925365925*^9, 
   3.886593929997612*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"73ac217e-fd2f-4419-8e84-b3864ed42f7b"],

Cell[BoxData[
 TemplateBox[{
  "Solve", "svars", 
   "\"Equations may not give solutions for all \\\"solve\\\" variables.\"", 2,
    4, 1, 18333245894663342406, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.888398965062175*^9, 3.8883993915508966`*^9, 
  3.888402418574647*^9, 3.888486602243947*^9, 3.888493862096923*^9},
 CellLabel->
  "During evaluation of \
In[4]:=",ExpressionUUID->"d8dbda3c-baba-40f5-8bbf-8eea62a86699"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"y", "\[Rule]", "0"}], ",", 
     RowBox[{"z", "\[Rule]", 
      RowBox[{
       RowBox[{"-", "x"}], "-", 
       RowBox[{"3", " ", "wx", " ", "x"}], "-", 
       RowBox[{"3", " ", 
        SuperscriptBox["x", "2"], " ", "\[Epsilon]"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "0"}], ",", 
     RowBox[{"y", "\[Rule]", "0"}], ",", 
     RowBox[{"z", "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", 
      FractionBox["3", "q"]}], ",", 
     RowBox[{"y", "\[Rule]", 
      RowBox[{"-", 
       FractionBox[
        SqrtBox[
         RowBox[{
          RowBox[{
           RowBox[{"-", "q"}], " ", "wx"}], "-", 
          RowBox[{"3", " ", "\[Epsilon]"}]}]], "q"]}]}], ",", 
     RowBox[{"z", "\[Rule]", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"3", " ", 
         RowBox[{"(", 
          RowBox[{"q", "+", 
           RowBox[{"q", " ", "wx"}], "+", 
           RowBox[{"3", " ", "\[Epsilon]"}]}], ")"}]}], 
        SuperscriptBox["q", "2"]]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", 
      FractionBox["3", "q"]}], ",", 
     RowBox[{"y", "\[Rule]", 
      FractionBox[
       SqrtBox[
        RowBox[{
         RowBox[{
          RowBox[{"-", "q"}], " ", "wx"}], "-", 
         RowBox[{"3", " ", "\[Epsilon]"}]}]], "q"]}], ",", 
     RowBox[{"z", "\[Rule]", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"3", " ", 
         RowBox[{"(", 
          RowBox[{"q", "+", 
           RowBox[{"q", " ", "wx"}], "+", 
           RowBox[{"3", " ", "\[Epsilon]"}]}], ")"}]}], 
        SuperscriptBox["q", "2"]]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", 
      FractionBox[
       RowBox[{
        RowBox[{"-", "1"}], "-", "wx"}], "\[Epsilon]"]}], ",", 
     RowBox[{"y", "\[Rule]", 
      RowBox[{"-", 
       FractionBox[
        SqrtBox[
         RowBox[{
          RowBox[{"-", "1"}], "-", "wx"}]], 
        RowBox[{
         SqrtBox["3"], " ", 
         SqrtBox["\[Epsilon]"]}]]}]}], ",", 
     RowBox[{"z", "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", 
      FractionBox[
       RowBox[{
        RowBox[{"-", "1"}], "-", "wx"}], "\[Epsilon]"]}], ",", 
     RowBox[{"y", "\[Rule]", 
      FractionBox[
       SqrtBox[
        RowBox[{
         RowBox[{"-", "1"}], "-", "wx"}]], 
       RowBox[{
        SqrtBox["3"], " ", 
        SqrtBox["\[Epsilon]"]}]]}], ",", 
     RowBox[{"z", "\[Rule]", "0"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.888398965071862*^9, 3.888399391560218*^9, 
  3.888402418582501*^9, 3.888486602252706*^9, 3.888493862106282*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"d320ff44-4e46-484e-a4b0-552523fae01e"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Remove", " ", "arrows", " ", "from", " ", "fixed", " ", "points", " ", 
    "and", " ", "put", " ", "them", " ", "into", " ", "a", " ", "common", " ",
     "variable", " ", "name"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"FP", "[", "1", "]"}], "=", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"y", "/.", 
        RowBox[{"FPs", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ",", 
       RowBox[{"z", "/.", 
        RowBox[{"FPs", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "2"}], "]"}], "]"}]}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"FP", "[", "2", "]"}], "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"x", "/.", 
        RowBox[{"FPs", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ",", 
       RowBox[{"y", "/.", 
        RowBox[{"FPs", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "2"}], "]"}], "]"}]}], ",", 
       RowBox[{"z", "/.", 
        RowBox[{"FPs", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "3"}], "]"}], "]"}]}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"FP", "[", "3", "]"}], "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"x", "/.", 
        RowBox[{"FPs", "[", 
         RowBox[{"[", 
          RowBox[{"3", ",", "1"}], "]"}], "]"}]}], ",", 
       RowBox[{"y", "/.", 
        RowBox[{"FPs", "[", 
         RowBox[{"[", 
          RowBox[{"3", ",", "2"}], "]"}], "]"}]}], ",", 
       RowBox[{"z", "/.", 
        RowBox[{"FPs", "[", 
         RowBox[{"[", 
          RowBox[{"3", ",", "3"}], "]"}], "]"}]}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"FP", "[", "4", "]"}], "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"x", "/.", 
        RowBox[{"FPs", "[", 
         RowBox[{"[", 
          RowBox[{"4", ",", "1"}], "]"}], "]"}]}], ",", 
       RowBox[{"y", "/.", 
        RowBox[{"FPs", "[", 
         RowBox[{"[", 
          RowBox[{"4", ",", "2"}], "]"}], "]"}]}], ",", 
       RowBox[{"z", "/.", 
        RowBox[{"FPs", "[", 
         RowBox[{"[", 
          RowBox[{"4", ",", "3"}], "]"}], "]"}]}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"FP", "[", "5", "]"}], "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"x", "/.", 
        RowBox[{"FPs", "[", 
         RowBox[{"[", 
          RowBox[{"5", ",", "1"}], "]"}], "]"}]}], ",", 
       RowBox[{"y", "/.", 
        RowBox[{"FPs", "[", 
         RowBox[{"[", 
          RowBox[{"5", ",", "2"}], "]"}], "]"}]}], ",", 
       RowBox[{"z", "/.", 
        RowBox[{"FPs", "[", 
         RowBox[{"[", 
          RowBox[{"5", ",", "3"}], "]"}], "]"}]}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"FP", "[", "6", "]"}], "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"x", "/.", 
        RowBox[{"FPs", "[", 
         RowBox[{"[", 
          RowBox[{"6", ",", "1"}], "]"}], "]"}]}], ",", 
       RowBox[{"y", "/.", 
        RowBox[{"FPs", "[", 
         RowBox[{"[", 
          RowBox[{"6", ",", "2"}], "]"}], "]"}]}], ",", 
       RowBox[{"z", "/.", 
        RowBox[{"FPs", "[", 
         RowBox[{"[", 
          RowBox[{"6", ",", "3"}], "]"}], "]"}]}]}], "}"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBWIQfUF/D7/8hTeOarc4xEG0k3GlNIheMn+hHIiewdKs
D6KNL602A9GpOydWguiW3QrVIPrIp4p6EH1J6kw/iA7jt5kKooU/bgPTE9Ie
zQfRbpXVC0F0TYP3ZhCddPI3mL7o+u0ciD7nd+Mu2B0+Vx7kXH7jKGZ4FUw/
u3FFsgRI/zSYqwCiQ+032F1/88axvMzPBURvuLbCA0Qn+Aong+gHslcLQbTB
J91SEO3vk9l/5P0bx77rbyeD6F13NnCpfHjjyHZWkRtEsxt384PoiiU/wfS3
rhNP33984zhPTILpA5B+OfsnH4gOmS3FD6Ivrd7esOv7G8flUVZtINpd4GJg
x483jlKie4NANADbx7p8
  "],
 CellLabel->"In[5]:=",ExpressionUUID->"32a02369-c4ba-4ff0-b16a-9768bfe6f69d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Put", " ", "fixed", " ", "points", " ", "into", " ", "a", " ", "table"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"FPs", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"FP", "[", "i", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "6"}], "}"}]}], "]"}]}], ";"}]}]], "Input",\

 CellChangeTimes->{{3.8672143768787384`*^9, 3.8672144154966393`*^9}, {
   3.867224467122445*^9, 3.8672244725038586`*^9}, {3.868024836545911*^9, 
   3.868024837240116*^9}, 3.868958478845225*^9, 3.869126991902952*^9, 
   3.882269611642425*^9, {3.884941331752728*^9, 3.884941333151639*^9}, 
   3.887977524370623*^9, 3.888399011757017*^9},
 CellLabel->"In[11]:=",ExpressionUUID->"5c57a213-ead3-45f6-ac32-19c522d26674"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Find", " ", "the", " ", "4", "D", " ", "Jacobian", " ", "matrix", " ", 
    "for", " ", "general", " ", "system", " ", "of", " ", 
    RowBox[{"equations", ".", " ", 
     RowBox[{"D", "[", "]"}]}], " ", "differentiates", " ", "each", " ", 
    "expression"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"J", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{"de1", ",", "x"}], "]"}], ",", 
          RowBox[{"D", "[", 
           RowBox[{"de1", ",", "y"}], "]"}], ",", 
          RowBox[{"D", "[", 
           RowBox[{"de1", ",", "z"}], "]"}]}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{"de2", ",", "x"}], "]"}], ",", 
          RowBox[{"D", "[", 
           RowBox[{"de2", ",", "y"}], "]"}], ",", 
          RowBox[{"D", "[", 
           RowBox[{"de2", ",", "z"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{"de3", ",", "x"}], "]"}], ",", 
          RowBox[{"D", "[", 
           RowBox[{"de3", ",", "y"}], "]"}], ",", 
          RowBox[{"D", "[", 
           RowBox[{"de3", ",", "z"}], "]"}]}], "}"}]}], "}"}], "]"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{"J", "//", "MatrixForm"}]}]}]], "Input",
 CellChangeTimes->{{3.8672146504912844`*^9, 3.867214712242198*^9}, {
  3.868944173552453*^9, 3.8689441811471653`*^9}, {3.883803822024252*^9, 
  3.88380382370331*^9}, {3.8849413374850473`*^9, 3.884941360072496*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"85982ac0-3f65-475b-a652-21f957fdb221"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"-", "y"}], " ", 
       RowBox[{"(", 
        RowBox[{"3", "+", 
         RowBox[{"3", " ", "wx"}], "+", 
         RowBox[{"q", " ", "z"}], "+", 
         RowBox[{"6", " ", "x", " ", "\[Epsilon]"}]}], ")"}]}], 
      RowBox[{
       RowBox[{"-", "x"}], " ", 
       RowBox[{"(", 
        RowBox[{"3", "+", 
         RowBox[{"3", " ", "wx"}], "+", 
         RowBox[{"q", " ", "z"}], "+", 
         RowBox[{"3", " ", "x", " ", "\[Epsilon]"}]}], ")"}]}], 
      RowBox[{
       RowBox[{"-", "q"}], " ", "x", " ", "y"}]},
     {
      RowBox[{
       FractionBox["1", "6"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "-", 
         RowBox[{"3", " ", "wx"}], "-", 
         RowBox[{"6", " ", "x", " ", "\[Epsilon]"}]}], ")"}]}], 
      RowBox[{
       RowBox[{"-", "2"}], " ", "y"}], 
      RowBox[{"-", 
       FractionBox["1", "6"]}]},
     {
      RowBox[{"q", " ", "y", " ", "z"}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "3"}], "+", 
         RowBox[{"q", " ", "x"}]}], ")"}], " ", "z"}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "3"}], "+", 
         RowBox[{"q", " ", "x"}]}], ")"}], " ", "y"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.884941390016919*^9, 3.884941450774749*^9, 
  3.884951190746726*^9, 3.8849512243211927`*^9, 3.8849512959086*^9, 
  3.8849513770966473`*^9, 3.884951420088645*^9, 3.884951801152663*^9, 
  3.8856222380041313`*^9, 3.885622503437155*^9, 3.885622645722885*^9, 
  3.8856396859627447`*^9, 3.885641687124854*^9, 3.885641923813918*^9, 
  3.88587511869125*^9, 3.885876467769642*^9, 3.885876603385765*^9, 
  3.885877104064621*^9, 3.8858771736928043`*^9, 3.88587958359562*^9, 
  3.885881073673758*^9, 3.885983970789137*^9, 3.8873508071776*^9, 
  3.887360789290834*^9, 3.8874370788470163`*^9, 3.887437220357789*^9, 
  3.887439218237136*^9, 3.8879775365170116`*^9, 3.888066039572747*^9, 
  3.888310946021986*^9, 3.8883858290574636`*^9, 3.888386214138685*^9, 
  3.888399168314846*^9, 3.8883993944940453`*^9, 3.888402421435525*^9, 
  3.888486605312797*^9, 3.888493864031053*^9},
 CellLabel->
  "Out[13]//MatrixForm=",ExpressionUUID->"e295ffb8-1a21-49ce-bdf4-\
6f6fe1a45560"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Find", " ", "the", " ", "Jacobian", " ", "and", " ", "eigenvalues", " ", 
    "for", " ", "each", " ", "fixed", " ", "point"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"FPTable", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"FPs", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "//", "MatrixForm"}], ",", 
        RowBox[{
         RowBox[{"Simplify", "[", 
          RowBox[{"J", "/.", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"x", "->", 
              RowBox[{"FPs", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "1"}], "]"}], "]"}]}], ",", 
             RowBox[{"y", "->", 
              RowBox[{"FPs", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "2"}], "]"}], "]"}]}], ",", 
             RowBox[{"z", "->", 
              RowBox[{"FPs", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "3"}], "]"}], "]"}]}]}], "}"}]}], "]"}], "//",
          "MatrixForm"}], ",", 
        RowBox[{
         RowBox[{"Eigenvalues", "[", 
          RowBox[{"J", "/.", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"x", "->", 
              RowBox[{"FPs", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "1"}], "]"}], "]"}]}], ",", 
             RowBox[{"y", "->", 
              RowBox[{"FPs", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "2"}], "]"}], "]"}]}], ",", 
             RowBox[{"z", "->", 
              RowBox[{"FPs", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "3"}], "]"}], "]"}]}]}], "}"}]}], "]"}], "//",
          "MatrixForm"}], ",", 
        RowBox[{
         RowBox[{"Eigenvectors", "[", 
          RowBox[{"J", "/.", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"x", "->", 
              RowBox[{"FPs", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "1"}], "]"}], "]"}]}], ",", 
             RowBox[{"y", "->", 
              RowBox[{"FPs", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "2"}], "]"}], "]"}]}], ",", 
             RowBox[{"z", "->", 
              RowBox[{"FPs", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "3"}], "]"}], "]"}]}]}], "}"}]}], "]"}], "//",
          "MatrixForm"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "6"}], "}"}]}], "]"}]}], ";"}]}]], "Input",\

 CellChangeTimes->{{3.867225318077546*^9, 3.8672254169870214`*^9}, {
   3.867225448024709*^9, 3.8672254542249594`*^9}, {3.8672255001121364`*^9, 
   3.8672255191902294`*^9}, {3.8672255581112022`*^9, 
   3.8672255642188787`*^9}, {3.8672255973534174`*^9, 
   3.8672256274971313`*^9}, {3.8672256839287667`*^9, 
   3.8672256945159383`*^9}, {3.867225730109685*^9, 3.867225738455241*^9}, {
   3.8672257699330273`*^9, 3.867225778278576*^9}, {3.867225811278432*^9, 
   3.86722581683035*^9}, {3.867225903530884*^9, 3.8672259267803965`*^9}, {
   3.867225979984497*^9, 3.867225987304329*^9}, 3.867226143110686*^9, {
   3.867227332365857*^9, 3.867227342142587*^9}, {3.867407053817068*^9, 
   3.8674070581695633`*^9}, {3.8680242099370823`*^9, 3.868024213440816*^9}, {
   3.868024365757309*^9, 3.8680243705990753`*^9}, {3.8680245930712137`*^9, 
   3.8680246064401407`*^9}, {3.8680247507314663`*^9, 3.868024752328637*^9}, {
   3.8689441880925694`*^9, 3.8689441917923965`*^9}, 3.868956001836708*^9, 
   3.8689590190222435`*^9, {3.869126738407119*^9, 3.8691267437236*^9}, 
   3.869126782049677*^9, {3.869127818860439*^9, 3.869127857050398*^9}, 
   3.8691279323005037`*^9, 3.869128019515766*^9, {3.8691294821423035`*^9, 
   3.869129491277402*^9}, {3.869197845521573*^9, 3.869197845678837*^9}, {
   3.87163244715317*^9, 3.8716324493928595`*^9}, {3.8716327635423284`*^9, 
   3.8716327651125145`*^9}, 3.8777566945081463`*^9, {3.8777569014323*^9, 
   3.877756902992178*^9}, 3.882269477299637*^9, 3.8822696146808777`*^9, {
   3.884941367280037*^9, 3.884941402363988*^9}, {3.884941530288258*^9, 
   3.884941535802528*^9}, {3.8849416037112207`*^9, 3.88494162633784*^9}, 
   3.88797755141038*^9, 3.888399019710622*^9, 3.888399761978408*^9},
 CellLabel->"In[14]:=",ExpressionUUID->"710bc041-6d6d-4ed4-ac54-4be349df37cb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Use", " ", "TableForm", " ", "to", " ", "display", " ", "the", " ", 
    "fixed", " ", "points", " ", "with", " ", "their", " ", "Jacobian", " ", 
    "matrix", " ", "and", " ", "eigenvalues"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"FPTable", "=", 
   RowBox[{"TableForm", "[", 
    RowBox[{"FPTable", ",", 
     RowBox[{"TableHeadings", "->", 
      RowBox[{"{", 
       RowBox[{"None", ",", 
        RowBox[{"{", 
         RowBox[{
         "\"\<Fixed Point\>\"", ",", "\"\<Jacobian\>\"", ",", 
          "\"\<Eigenvalues\>\"", ",", "\"\<Eigenvectors\>\""}], "}"}]}], 
       "}"}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8674732571734056`*^9, 3.8674733087235513`*^9}, {
   3.8680240454027176`*^9, 3.8680240517453375`*^9}, {3.868944198427647*^9, 
   3.8689442010925846`*^9}, {3.8691296342126307`*^9, 3.869129635352618*^9}, {
   3.8691296836226945`*^9, 3.8691297054374857`*^9}, 3.8691297421488905`*^9, {
   3.8691297832126884`*^9, 3.869129802932803*^9}, {3.8777567702425528`*^9, 
   3.8777567889867887`*^9}, {3.877756859522192*^9, 3.8777568704743633`*^9}, {
   3.877756944239081*^9, 3.8777569721182117`*^9}, {3.883803874115755*^9, 
   3.8838039117033367`*^9}, {3.884941538839074*^9, 3.884941542102433*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"9cb904e4-b4b9-44d8-989d-63a1e02c3035"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      TagBox["\<\"Fixed Point\"\>",
       HoldForm], 
      TagBox["\<\"Jacobian\"\>",
       HoldForm], 
      TagBox["\<\"Eigenvalues\"\>",
       HoldForm], 
      TagBox["\<\"Eigenvectors\"\>",
       HoldForm]},
     {
      TagBox[
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"x"},
           {"0"},
           {
            RowBox[{
             RowBox[{"-", "x"}], "-", 
             RowBox[{"3", " ", "wx", " ", "x"}], "-", 
             RowBox[{"3", " ", 
              SuperscriptBox["x", "2"], " ", "\[Epsilon]"}]}]}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", 
           RowBox[{"x", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"3", " ", "wx", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 RowBox[{"q", " ", "x"}]}], ")"}]}], "-", 
              RowBox[{"3", " ", 
               RowBox[{"(", 
                RowBox[{"1", "+", 
                 RowBox[{"x", " ", "\[Epsilon]"}]}], ")"}]}], "+", 
              RowBox[{"q", " ", "x", " ", 
               RowBox[{"(", 
                RowBox[{"1", "+", 
                 RowBox[{"3", " ", "x", " ", "\[Epsilon]"}]}], ")"}]}]}], 
             ")"}]}], "0"},
          {
           RowBox[{
            FractionBox["1", "6"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "-", 
              RowBox[{"3", " ", "wx"}], "-", 
              RowBox[{"6", " ", "x", " ", "\[Epsilon]"}]}], ")"}]}], "0", 
           RowBox[{"-", 
            FractionBox["1", "6"]}]},
          {"0", 
           RowBox[{
            RowBox[{"-", "x"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "3"}], "+", 
              RowBox[{"q", " ", "x"}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"3", " ", "wx"}], "+", 
              RowBox[{"3", " ", "x", " ", "\[Epsilon]"}]}], ")"}]}], "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {
            RowBox[{"-", 
             FractionBox[
              RowBox[{"\[ImaginaryI]", " ", 
               SqrtBox["x"], " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{"-", "wx"}], "-", 
                 RowBox[{"3", " ", 
                  SuperscriptBox["wx", "2"]}], "+", 
                 RowBox[{"q", " ", "wx", " ", "x"}], "+", 
                 RowBox[{"3", " ", "q", " ", 
                  SuperscriptBox["wx", "2"], " ", "x"}], "-", 
                 RowBox[{"4", " ", "x", " ", "\[Epsilon]"}], "-", 
                 RowBox[{"9", " ", "wx", " ", "x", " ", "\[Epsilon]"}], "+", 
                 RowBox[{"2", " ", "q", " ", 
                  SuperscriptBox["x", "2"], " ", "\[Epsilon]"}], "+", 
                 RowBox[{"9", " ", "q", " ", "wx", " ", 
                  SuperscriptBox["x", "2"], " ", "\[Epsilon]"}], "-", 
                 RowBox[{"6", " ", 
                  SuperscriptBox["x", "2"], " ", 
                  SuperscriptBox["\[Epsilon]", "2"]}], "+", 
                 RowBox[{"6", " ", "q", " ", 
                  SuperscriptBox["x", "3"], " ", 
                  SuperscriptBox["\[Epsilon]", "2"]}]}]]}], 
              SqrtBox["2"]]}]},
           {
            FractionBox[
             RowBox[{"\[ImaginaryI]", " ", 
              SqrtBox["x"], " ", 
              SqrtBox[
               RowBox[{
                RowBox[{"-", "wx"}], "-", 
                RowBox[{"3", " ", 
                 SuperscriptBox["wx", "2"]}], "+", 
                RowBox[{"q", " ", "wx", " ", "x"}], "+", 
                RowBox[{"3", " ", "q", " ", 
                 SuperscriptBox["wx", "2"], " ", "x"}], "-", 
                RowBox[{"4", " ", "x", " ", "\[Epsilon]"}], "-", 
                RowBox[{"9", " ", "wx", " ", "x", " ", "\[Epsilon]"}], "+", 
                RowBox[{"2", " ", "q", " ", 
                 SuperscriptBox["x", "2"], " ", "\[Epsilon]"}], "+", 
                RowBox[{"9", " ", "q", " ", "wx", " ", 
                 SuperscriptBox["x", "2"], " ", "\[Epsilon]"}], "-", 
                RowBox[{"6", " ", 
                 SuperscriptBox["x", "2"], " ", 
                 SuperscriptBox["\[Epsilon]", "2"]}], "+", 
                RowBox[{"6", " ", "q", " ", 
                 SuperscriptBox["x", "3"], " ", 
                 SuperscriptBox["\[Epsilon]", "2"]}]}]]}], 
             SqrtBox["2"]]}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {
           RowBox[{"-", 
            FractionBox["1", 
             RowBox[{"1", "+", 
              RowBox[{"3", " ", "wx"}], "+", 
              RowBox[{"6", " ", "x", " ", "\[Epsilon]"}]}]]}], "0", "1"},
          {
           RowBox[{"-", 
            FractionBox[
             RowBox[{
              RowBox[{"-", "3"}], "-", 
              RowBox[{"3", " ", "wx"}], "+", 
              RowBox[{"q", " ", "x"}], "+", 
              RowBox[{"3", " ", "q", " ", "wx", " ", "x"}], "-", 
              RowBox[{"3", " ", "x", " ", "\[Epsilon]"}], "+", 
              RowBox[{"3", " ", "q", " ", 
               SuperscriptBox["x", "2"], " ", "\[Epsilon]"}]}], 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", 
                RowBox[{"q", " ", "x"}]}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"3", " ", "wx"}], "+", 
                RowBox[{"3", " ", "x", " ", "\[Epsilon]"}]}], ")"}]}]]}], 
           FractionBox[
            RowBox[{"\[ImaginaryI]", " ", 
             SqrtBox[
              RowBox[{
               RowBox[{"-", "wx"}], "-", 
               RowBox[{"3", " ", 
                SuperscriptBox["wx", "2"]}], "+", 
               RowBox[{"q", " ", "wx", " ", "x"}], "+", 
               RowBox[{"3", " ", "q", " ", 
                SuperscriptBox["wx", "2"], " ", "x"}], "-", 
               RowBox[{"4", " ", "x", " ", "\[Epsilon]"}], "-", 
               RowBox[{"9", " ", "wx", " ", "x", " ", "\[Epsilon]"}], "+", 
               RowBox[{"2", " ", "q", " ", 
                SuperscriptBox["x", "2"], " ", "\[Epsilon]"}], "+", 
               RowBox[{"9", " ", "q", " ", "wx", " ", 
                SuperscriptBox["x", "2"], " ", "\[Epsilon]"}], "-", 
               RowBox[{"6", " ", 
                SuperscriptBox["x", "2"], " ", 
                SuperscriptBox["\[Epsilon]", "2"]}], "+", 
               RowBox[{"6", " ", "q", " ", 
                SuperscriptBox["x", "3"], " ", 
                SuperscriptBox["\[Epsilon]", "2"]}]}]]}], 
            RowBox[{
             SqrtBox["2"], " ", 
             SqrtBox["x"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "3"}], "+", 
               RowBox[{"q", " ", "x"}]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"3", " ", "wx"}], "+", 
               RowBox[{"3", " ", "x", " ", "\[Epsilon]"}]}], ")"}]}]], "1"},
          {
           RowBox[{"-", 
            FractionBox[
             RowBox[{
              RowBox[{"-", "3"}], "-", 
              RowBox[{"3", " ", "wx"}], "+", 
              RowBox[{"q", " ", "x"}], "+", 
              RowBox[{"3", " ", "q", " ", "wx", " ", "x"}], "-", 
              RowBox[{"3", " ", "x", " ", "\[Epsilon]"}], "+", 
              RowBox[{"3", " ", "q", " ", 
               SuperscriptBox["x", "2"], " ", "\[Epsilon]"}]}], 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", 
                RowBox[{"q", " ", "x"}]}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"3", " ", "wx"}], "+", 
                RowBox[{"3", " ", "x", " ", "\[Epsilon]"}]}], ")"}]}]]}], 
           RowBox[{"-", 
            FractionBox[
             RowBox[{"\[ImaginaryI]", " ", 
              SqrtBox[
               RowBox[{
                RowBox[{"-", "wx"}], "-", 
                RowBox[{"3", " ", 
                 SuperscriptBox["wx", "2"]}], "+", 
                RowBox[{"q", " ", "wx", " ", "x"}], "+", 
                RowBox[{"3", " ", "q", " ", 
                 SuperscriptBox["wx", "2"], " ", "x"}], "-", 
                RowBox[{"4", " ", "x", " ", "\[Epsilon]"}], "-", 
                RowBox[{"9", " ", "wx", " ", "x", " ", "\[Epsilon]"}], "+", 
                RowBox[{"2", " ", "q", " ", 
                 SuperscriptBox["x", "2"], " ", "\[Epsilon]"}], "+", 
                RowBox[{"9", " ", "q", " ", "wx", " ", 
                 SuperscriptBox["x", "2"], " ", "\[Epsilon]"}], "-", 
                RowBox[{"6", " ", 
                 SuperscriptBox["x", "2"], " ", 
                 SuperscriptBox["\[Epsilon]", "2"]}], "+", 
                RowBox[{"6", " ", "q", " ", 
                 SuperscriptBox["x", "3"], " ", 
                 SuperscriptBox["\[Epsilon]", "2"]}]}]]}], 
             RowBox[{
              SqrtBox["2"], " ", 
              SqrtBox["x"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", 
                RowBox[{"q", " ", "x"}]}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"3", " ", "wx"}], "+", 
                RowBox[{"3", " ", "x", " ", "\[Epsilon]"}]}], ")"}]}]]}], 
           "1"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]]},
     {
      TagBox[
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0"},
          {
           RowBox[{
            FractionBox["1", "6"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "-", 
              RowBox[{"3", " ", "wx"}]}], ")"}]}], "0", 
           RowBox[{"-", 
            FractionBox["1", "6"]}]},
          {"0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {
           RowBox[{"-", 
            FractionBox["1", 
             RowBox[{"1", "+", 
              RowBox[{"3", " ", "wx"}]}]]}], "0", "1"},
          {"0", "1", "0"},
          {"0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]]},
     {
      TagBox[
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            FractionBox["3", "q"]},
           {
            RowBox[{"-", 
             FractionBox[
              SqrtBox[
               RowBox[{
                RowBox[{
                 RowBox[{"-", "q"}], " ", "wx"}], "-", 
                RowBox[{"3", " ", "\[Epsilon]"}]}]], "q"]}]},
           {
            RowBox[{"-", 
             FractionBox[
              RowBox[{"3", " ", 
               RowBox[{"(", 
                RowBox[{"q", "+", 
                 RowBox[{"q", " ", "wx"}], "+", 
                 RowBox[{"3", " ", "\[Epsilon]"}]}], ")"}]}], 
              SuperscriptBox["q", "2"]]}]}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {
           FractionBox[
            RowBox[{"9", " ", 
             SqrtBox[
              RowBox[{
               RowBox[{
                RowBox[{"-", "q"}], " ", "wx"}], "-", 
               RowBox[{"3", " ", "\[Epsilon]"}]}]], " ", "\[Epsilon]"}], 
            SuperscriptBox["q", "2"]], "0", 
           FractionBox[
            RowBox[{"3", " ", 
             SqrtBox[
              RowBox[{
               RowBox[{
                RowBox[{"-", "q"}], " ", "wx"}], "-", 
               RowBox[{"3", " ", "\[Epsilon]"}]}]]}], "q"]},
          {
           RowBox[{"-", 
            FractionBox[
             RowBox[{"q", "+", 
              RowBox[{"3", " ", "q", " ", "wx"}], "+", 
              RowBox[{"18", " ", "\[Epsilon]"}]}], 
             RowBox[{"6", " ", "q"}]]}], 
           FractionBox[
            RowBox[{"2", " ", 
             SqrtBox[
              RowBox[{
               RowBox[{
                RowBox[{"-", "q"}], " ", "wx"}], "-", 
               RowBox[{"3", " ", "\[Epsilon]"}]}]]}], "q"], 
           RowBox[{"-", 
            FractionBox["1", "6"]}]},
          {
           FractionBox[
            RowBox[{"3", " ", 
             SqrtBox[
              RowBox[{
               RowBox[{
                RowBox[{"-", "q"}], " ", "wx"}], "-", 
               RowBox[{"3", " ", "\[Epsilon]"}]}]], " ", 
             RowBox[{"(", 
              RowBox[{"q", "+", 
               RowBox[{"q", " ", "wx"}], "+", 
               RowBox[{"3", " ", "\[Epsilon]"}]}], ")"}]}], 
            SuperscriptBox["q", "2"]], "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            FractionBox[
             RowBox[{"2", " ", 
              SqrtBox[
               RowBox[{
                RowBox[{
                 RowBox[{"-", "q"}], " ", "wx"}], "-", 
                RowBox[{"3", " ", "\[Epsilon]"}]}]]}], "q"]},
           {
            FractionBox[
             RowBox[{"3", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"3", " ", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "q"}], " ", "wx"}], "-", 
                   RowBox[{"3", " ", "\[Epsilon]"}]}]], " ", "\[Epsilon]"}], 
                "-", 
                SqrtBox[
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "4"}], " ", 
                   SuperscriptBox["q", "3"], " ", "wx"}], "-", 
                  RowBox[{"4", " ", 
                   SuperscriptBox["q", "3"], " ", 
                   SuperscriptBox["wx", "2"]}], "-", 
                  RowBox[{"12", " ", 
                   SuperscriptBox["q", "2"], " ", "\[Epsilon]"}], "-", 
                  RowBox[{"24", " ", 
                   SuperscriptBox["q", "2"], " ", "wx", " ", "\[Epsilon]"}], 
                  "-", 
                  RowBox[{"36", " ", "q", " ", 
                   SuperscriptBox["\[Epsilon]", "2"]}], "-", 
                  RowBox[{"9", " ", "q", " ", "wx", " ", 
                   SuperscriptBox["\[Epsilon]", "2"]}], "-", 
                  RowBox[{"27", " ", 
                   SuperscriptBox["\[Epsilon]", "3"]}]}]]}], ")"}]}], 
             RowBox[{"2", " ", 
              SuperscriptBox["q", "2"]}]]},
           {
            FractionBox[
             RowBox[{"3", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"3", " ", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "q"}], " ", "wx"}], "-", 
                   RowBox[{"3", " ", "\[Epsilon]"}]}]], " ", "\[Epsilon]"}], 
                "+", 
                SqrtBox[
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "4"}], " ", 
                   SuperscriptBox["q", "3"], " ", "wx"}], "-", 
                  RowBox[{"4", " ", 
                   SuperscriptBox["q", "3"], " ", 
                   SuperscriptBox["wx", "2"]}], "-", 
                  RowBox[{"12", " ", 
                   SuperscriptBox["q", "2"], " ", "\[Epsilon]"}], "-", 
                  RowBox[{"24", " ", 
                   SuperscriptBox["q", "2"], " ", "wx", " ", "\[Epsilon]"}], 
                  "-", 
                  RowBox[{"36", " ", "q", " ", 
                   SuperscriptBox["\[Epsilon]", "2"]}], "-", 
                  RowBox[{"9", " ", "q", " ", "wx", " ", 
                   SuperscriptBox["\[Epsilon]", "2"]}], "-", 
                  RowBox[{"27", " ", 
                   SuperscriptBox["\[Epsilon]", "3"]}]}]]}], ")"}]}], 
             RowBox[{"2", " ", 
              SuperscriptBox["q", "2"]}]]}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "1", "0"},
          {
           FractionBox[
            RowBox[{
             RowBox[{"4", " ", 
              SuperscriptBox["q", "2"], " ", "wx"}], "+", 
             RowBox[{"12", " ", "q", " ", "\[Epsilon]"}], "-", 
             RowBox[{"9", " ", "q", " ", "wx", " ", "\[Epsilon]"}], "-", 
             RowBox[{"27", " ", 
              SuperscriptBox["\[Epsilon]", "2"]}], "-", 
             RowBox[{"3", " ", 
              SqrtBox[
               RowBox[{
                RowBox[{
                 RowBox[{"-", "q"}], " ", "wx"}], "-", 
                RowBox[{"3", " ", "\[Epsilon]"}]}]], " ", 
              SqrtBox[
               RowBox[{
                RowBox[{
                 RowBox[{"-", "4"}], " ", 
                 SuperscriptBox["q", "3"], " ", "wx"}], "-", 
                RowBox[{"4", " ", 
                 SuperscriptBox["q", "3"], " ", 
                 SuperscriptBox["wx", "2"]}], "-", 
                RowBox[{"12", " ", 
                 SuperscriptBox["q", "2"], " ", "\[Epsilon]"}], "-", 
                RowBox[{"24", " ", 
                 SuperscriptBox["q", "2"], " ", "wx", " ", "\[Epsilon]"}], 
                "-", 
                RowBox[{"36", " ", "q", " ", 
                 SuperscriptBox["\[Epsilon]", "2"]}], "-", 
                RowBox[{"9", " ", "q", " ", "wx", " ", 
                 SuperscriptBox["\[Epsilon]", "2"]}], "-", 
                RowBox[{"27", " ", 
                 SuperscriptBox["\[Epsilon]", "3"]}]}]]}]}], 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "3"}], " ", 
                SuperscriptBox["q", "2"], " ", "wx"}], "-", 
               RowBox[{"3", " ", 
                SuperscriptBox["q", "2"], " ", 
                SuperscriptBox["wx", "2"]}], "-", 
               RowBox[{"9", " ", "q", " ", "\[Epsilon]"}], "-", 
               RowBox[{"21", " ", "q", " ", "wx", " ", "\[Epsilon]"}], "-", 
               RowBox[{"36", " ", 
                SuperscriptBox["\[Epsilon]", "2"]}], "+", 
               RowBox[{
                SqrtBox[
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "q"}], " ", "wx"}], "-", 
                  RowBox[{"3", " ", "\[Epsilon]"}]}]], " ", 
                SqrtBox[
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "4"}], " ", 
                   SuperscriptBox["q", "3"], " ", "wx"}], "-", 
                  RowBox[{"4", " ", 
                   SuperscriptBox["q", "3"], " ", 
                   SuperscriptBox["wx", "2"]}], "-", 
                  RowBox[{"12", " ", 
                   SuperscriptBox["q", "2"], " ", "\[Epsilon]"}], "-", 
                  RowBox[{"24", " ", 
                   SuperscriptBox["q", "2"], " ", "wx", " ", "\[Epsilon]"}], 
                  "-", 
                  RowBox[{"36", " ", "q", " ", 
                   SuperscriptBox["\[Epsilon]", "2"]}], "-", 
                  RowBox[{"9", " ", "q", " ", "wx", " ", 
                   SuperscriptBox["\[Epsilon]", "2"]}], "-", 
                  RowBox[{"27", " ", 
                   SuperscriptBox["\[Epsilon]", "3"]}]}]]}]}], ")"}]}]], 
           FractionBox[
            RowBox[{"q", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "2"}], " ", "q", " ", 
                SqrtBox[
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "q"}], " ", "wx"}], "-", 
                  RowBox[{"3", " ", "\[Epsilon]"}]}]]}], "-", 
               RowBox[{"6", " ", "q", " ", "wx", " ", 
                SqrtBox[
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "q"}], " ", "wx"}], "-", 
                  RowBox[{"3", " ", "\[Epsilon]"}]}]]}], "-", 
               RowBox[{"33", " ", 
                SqrtBox[
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "q"}], " ", "wx"}], "-", 
                  RowBox[{"3", " ", "\[Epsilon]"}]}]], " ", "\[Epsilon]"}], 
               "+", 
               SqrtBox[
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "4"}], " ", 
                  SuperscriptBox["q", "3"], " ", "wx"}], "-", 
                 RowBox[{"4", " ", 
                  SuperscriptBox["q", "3"], " ", 
                  SuperscriptBox["wx", "2"]}], "-", 
                 RowBox[{"12", " ", 
                  SuperscriptBox["q", "2"], " ", "\[Epsilon]"}], "-", 
                 RowBox[{"24", " ", 
                  SuperscriptBox["q", "2"], " ", "wx", " ", "\[Epsilon]"}], 
                 "-", 
                 RowBox[{"36", " ", "q", " ", 
                  SuperscriptBox["\[Epsilon]", "2"]}], "-", 
                 RowBox[{"9", " ", "q", " ", "wx", " ", 
                  SuperscriptBox["\[Epsilon]", "2"]}], "-", 
                 RowBox[{"27", " ", 
                  SuperscriptBox["\[Epsilon]", "3"]}]}]]}], ")"}]}], 
            RowBox[{"12", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "3"}], " ", 
                SuperscriptBox["q", "2"], " ", "wx"}], "-", 
               RowBox[{"3", " ", 
                SuperscriptBox["q", "2"], " ", 
                SuperscriptBox["wx", "2"]}], "-", 
               RowBox[{"9", " ", "q", " ", "\[Epsilon]"}], "-", 
               RowBox[{"21", " ", "q", " ", "wx", " ", "\[Epsilon]"}], "-", 
               RowBox[{"36", " ", 
                SuperscriptBox["\[Epsilon]", "2"]}], "+", 
               RowBox[{
                SqrtBox[
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "q"}], " ", "wx"}], "-", 
                  RowBox[{"3", " ", "\[Epsilon]"}]}]], " ", 
                SqrtBox[
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "4"}], " ", 
                   SuperscriptBox["q", "3"], " ", "wx"}], "-", 
                  RowBox[{"4", " ", 
                   SuperscriptBox["q", "3"], " ", 
                   SuperscriptBox["wx", "2"]}], "-", 
                  RowBox[{"12", " ", 
                   SuperscriptBox["q", "2"], " ", "\[Epsilon]"}], "-", 
                  RowBox[{"24", " ", 
                   SuperscriptBox["q", "2"], " ", "wx", " ", "\[Epsilon]"}], 
                  "-", 
                  RowBox[{"36", " ", "q", " ", 
                   SuperscriptBox["\[Epsilon]", "2"]}], "-", 
                  RowBox[{"9", " ", "q", " ", "wx", " ", 
                   SuperscriptBox["\[Epsilon]", "2"]}], "-", 
                  RowBox[{"27", " ", 
                   SuperscriptBox["\[Epsilon]", "3"]}]}]]}]}], ")"}]}]], 
           "1"},
          {
           RowBox[{"-", 
            FractionBox[
             RowBox[{
              RowBox[{"4", " ", 
               SuperscriptBox["q", "2"], " ", "wx"}], "+", 
              RowBox[{"12", " ", "q", " ", "\[Epsilon]"}], "-", 
              RowBox[{"9", " ", "q", " ", "wx", " ", "\[Epsilon]"}], "-", 
              RowBox[{"27", " ", 
               SuperscriptBox["\[Epsilon]", "2"]}], "+", 
              RowBox[{"3", " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "q"}], " ", "wx"}], "-", 
                 RowBox[{"3", " ", "\[Epsilon]"}]}]], " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "4"}], " ", 
                  SuperscriptBox["q", "3"], " ", "wx"}], "-", 
                 RowBox[{"4", " ", 
                  SuperscriptBox["q", "3"], " ", 
                  SuperscriptBox["wx", "2"]}], "-", 
                 RowBox[{"12", " ", 
                  SuperscriptBox["q", "2"], " ", "\[Epsilon]"}], "-", 
                 RowBox[{"24", " ", 
                  SuperscriptBox["q", "2"], " ", "wx", " ", "\[Epsilon]"}], 
                 "-", 
                 RowBox[{"36", " ", "q", " ", 
                  SuperscriptBox["\[Epsilon]", "2"]}], "-", 
                 RowBox[{"9", " ", "q", " ", "wx", " ", 
                  SuperscriptBox["\[Epsilon]", "2"]}], "-", 
                 RowBox[{"27", " ", 
                  SuperscriptBox["\[Epsilon]", "3"]}]}]]}]}], 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"3", " ", 
                 SuperscriptBox["q", "2"], " ", "wx"}], "+", 
                RowBox[{"3", " ", 
                 SuperscriptBox["q", "2"], " ", 
                 SuperscriptBox["wx", "2"]}], "+", 
                RowBox[{"9", " ", "q", " ", "\[Epsilon]"}], "+", 
                RowBox[{"21", " ", "q", " ", "wx", " ", "\[Epsilon]"}], "+", 
                RowBox[{"36", " ", 
                 SuperscriptBox["\[Epsilon]", "2"]}], "+", 
                RowBox[{
                 SqrtBox[
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "q"}], " ", "wx"}], "-", 
                   RowBox[{"3", " ", "\[Epsilon]"}]}]], " ", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "4"}], " ", 
                    SuperscriptBox["q", "3"], " ", "wx"}], "-", 
                   RowBox[{"4", " ", 
                    SuperscriptBox["q", "3"], " ", 
                    SuperscriptBox["wx", "2"]}], "-", 
                   RowBox[{"12", " ", 
                    SuperscriptBox["q", "2"], " ", "\[Epsilon]"}], "-", 
                   RowBox[{"24", " ", 
                    SuperscriptBox["q", "2"], " ", "wx", " ", "\[Epsilon]"}], 
                   "-", 
                   RowBox[{"36", " ", "q", " ", 
                    SuperscriptBox["\[Epsilon]", "2"]}], "-", 
                   RowBox[{"9", " ", "q", " ", "wx", " ", 
                    SuperscriptBox["\[Epsilon]", "2"]}], "-", 
                   RowBox[{"27", " ", 
                    SuperscriptBox["\[Epsilon]", "3"]}]}]]}]}], ")"}]}]]}], 
           FractionBox[
            RowBox[{"q", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "q", " ", 
                SqrtBox[
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "q"}], " ", "wx"}], "-", 
                  RowBox[{"3", " ", "\[Epsilon]"}]}]]}], "+", 
               RowBox[{"6", " ", "q", " ", "wx", " ", 
                SqrtBox[
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "q"}], " ", "wx"}], "-", 
                  RowBox[{"3", " ", "\[Epsilon]"}]}]]}], "+", 
               RowBox[{"33", " ", 
                SqrtBox[
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "q"}], " ", "wx"}], "-", 
                  RowBox[{"3", " ", "\[Epsilon]"}]}]], " ", "\[Epsilon]"}], 
               "+", 
               SqrtBox[
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "4"}], " ", 
                  SuperscriptBox["q", "3"], " ", "wx"}], "-", 
                 RowBox[{"4", " ", 
                  SuperscriptBox["q", "3"], " ", 
                  SuperscriptBox["wx", "2"]}], "-", 
                 RowBox[{"12", " ", 
                  SuperscriptBox["q", "2"], " ", "\[Epsilon]"}], "-", 
                 RowBox[{"24", " ", 
                  SuperscriptBox["q", "2"], " ", "wx", " ", "\[Epsilon]"}], 
                 "-", 
                 RowBox[{"36", " ", "q", " ", 
                  SuperscriptBox["\[Epsilon]", "2"]}], "-", 
                 RowBox[{"9", " ", "q", " ", "wx", " ", 
                  SuperscriptBox["\[Epsilon]", "2"]}], "-", 
                 RowBox[{"27", " ", 
                  SuperscriptBox["\[Epsilon]", "3"]}]}]]}], ")"}]}], 
            RowBox[{"12", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"3", " ", 
                SuperscriptBox["q", "2"], " ", "wx"}], "+", 
               RowBox[{"3", " ", 
                SuperscriptBox["q", "2"], " ", 
                SuperscriptBox["wx", "2"]}], "+", 
               RowBox[{"9", " ", "q", " ", "\[Epsilon]"}], "+", 
               RowBox[{"21", " ", "q", " ", "wx", " ", "\[Epsilon]"}], "+", 
               RowBox[{"36", " ", 
                SuperscriptBox["\[Epsilon]", "2"]}], "+", 
               RowBox[{
                SqrtBox[
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "q"}], " ", "wx"}], "-", 
                  RowBox[{"3", " ", "\[Epsilon]"}]}]], " ", 
                SqrtBox[
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "4"}], " ", 
                   SuperscriptBox["q", "3"], " ", "wx"}], "-", 
                  RowBox[{"4", " ", 
                   SuperscriptBox["q", "3"], " ", 
                   SuperscriptBox["wx", "2"]}], "-", 
                  RowBox[{"12", " ", 
                   SuperscriptBox["q", "2"], " ", "\[Epsilon]"}], "-", 
                  RowBox[{"24", " ", 
                   SuperscriptBox["q", "2"], " ", "wx", " ", "\[Epsilon]"}], 
                  "-", 
                  RowBox[{"36", " ", "q", " ", 
                   SuperscriptBox["\[Epsilon]", "2"]}], "-", 
                  RowBox[{"9", " ", "q", " ", "wx", " ", 
                   SuperscriptBox["\[Epsilon]", "2"]}], "-", 
                  RowBox[{"27", " ", 
                   SuperscriptBox["\[Epsilon]", "3"]}]}]]}]}], ")"}]}]], "1"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]]},
     {
      TagBox[
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            FractionBox["3", "q"]},
           {
            FractionBox[
             SqrtBox[
              RowBox[{
               RowBox[{
                RowBox[{"-", "q"}], " ", "wx"}], "-", 
               RowBox[{"3", " ", "\[Epsilon]"}]}]], "q"]},
           {
            RowBox[{"-", 
             FractionBox[
              RowBox[{"3", " ", 
               RowBox[{"(", 
                RowBox[{"q", "+", 
                 RowBox[{"q", " ", "wx"}], "+", 
                 RowBox[{"3", " ", "\[Epsilon]"}]}], ")"}]}], 
              SuperscriptBox["q", "2"]]}]}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {
           RowBox[{"-", 
            FractionBox[
             RowBox[{"9", " ", 
              SqrtBox[
               RowBox[{
                RowBox[{
                 RowBox[{"-", "q"}], " ", "wx"}], "-", 
                RowBox[{"3", " ", "\[Epsilon]"}]}]], " ", "\[Epsilon]"}], 
             SuperscriptBox["q", "2"]]}], "0", 
           RowBox[{"-", 
            FractionBox[
             RowBox[{"3", " ", 
              SqrtBox[
               RowBox[{
                RowBox[{
                 RowBox[{"-", "q"}], " ", "wx"}], "-", 
                RowBox[{"3", " ", "\[Epsilon]"}]}]]}], "q"]}]},
          {
           RowBox[{"-", 
            FractionBox[
             RowBox[{"q", "+", 
              RowBox[{"3", " ", "q", " ", "wx"}], "+", 
              RowBox[{"18", " ", "\[Epsilon]"}]}], 
             RowBox[{"6", " ", "q"}]]}], 
           RowBox[{"-", 
            FractionBox[
             RowBox[{"2", " ", 
              SqrtBox[
               RowBox[{
                RowBox[{
                 RowBox[{"-", "q"}], " ", "wx"}], "-", 
                RowBox[{"3", " ", "\[Epsilon]"}]}]]}], "q"]}], 
           RowBox[{"-", 
            FractionBox["1", "6"]}]},
          {
           RowBox[{"-", 
            FractionBox[
             RowBox[{"3", " ", 
              SqrtBox[
               RowBox[{
                RowBox[{
                 RowBox[{"-", "q"}], " ", "wx"}], "-", 
                RowBox[{"3", " ", "\[Epsilon]"}]}]], " ", 
              RowBox[{"(", 
               RowBox[{"q", "+", 
                RowBox[{"q", " ", "wx"}], "+", 
                RowBox[{"3", " ", "\[Epsilon]"}]}], ")"}]}], 
             SuperscriptBox["q", "2"]]}], "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            RowBox[{"-", 
             FractionBox[
              RowBox[{"2", " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "q"}], " ", "wx"}], "-", 
                 RowBox[{"3", " ", "\[Epsilon]"}]}]]}], "q"]}]},
           {
            FractionBox[
             RowBox[{"3", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "3"}], " ", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "q"}], " ", "wx"}], "-", 
                   RowBox[{"3", " ", "\[Epsilon]"}]}]], " ", "\[Epsilon]"}], 
                "-", 
                SqrtBox[
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "4"}], " ", 
                   SuperscriptBox["q", "3"], " ", "wx"}], "-", 
                  RowBox[{"4", " ", 
                   SuperscriptBox["q", "3"], " ", 
                   SuperscriptBox["wx", "2"]}], "-", 
                  RowBox[{"12", " ", 
                   SuperscriptBox["q", "2"], " ", "\[Epsilon]"}], "-", 
                  RowBox[{"24", " ", 
                   SuperscriptBox["q", "2"], " ", "wx", " ", "\[Epsilon]"}], 
                  "-", 
                  RowBox[{"36", " ", "q", " ", 
                   SuperscriptBox["\[Epsilon]", "2"]}], "-", 
                  RowBox[{"9", " ", "q", " ", "wx", " ", 
                   SuperscriptBox["\[Epsilon]", "2"]}], "-", 
                  RowBox[{"27", " ", 
                   SuperscriptBox["\[Epsilon]", "3"]}]}]]}], ")"}]}], 
             RowBox[{"2", " ", 
              SuperscriptBox["q", "2"]}]]},
           {
            FractionBox[
             RowBox[{"3", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "3"}], " ", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "q"}], " ", "wx"}], "-", 
                   RowBox[{"3", " ", "\[Epsilon]"}]}]], " ", "\[Epsilon]"}], 
                "+", 
                SqrtBox[
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "4"}], " ", 
                   SuperscriptBox["q", "3"], " ", "wx"}], "-", 
                  RowBox[{"4", " ", 
                   SuperscriptBox["q", "3"], " ", 
                   SuperscriptBox["wx", "2"]}], "-", 
                  RowBox[{"12", " ", 
                   SuperscriptBox["q", "2"], " ", "\[Epsilon]"}], "-", 
                  RowBox[{"24", " ", 
                   SuperscriptBox["q", "2"], " ", "wx", " ", "\[Epsilon]"}], 
                  "-", 
                  RowBox[{"36", " ", "q", " ", 
                   SuperscriptBox["\[Epsilon]", "2"]}], "-", 
                  RowBox[{"9", " ", "q", " ", "wx", " ", 
                   SuperscriptBox["\[Epsilon]", "2"]}], "-", 
                  RowBox[{"27", " ", 
                   SuperscriptBox["\[Epsilon]", "3"]}]}]]}], ")"}]}], 
             RowBox[{"2", " ", 
              SuperscriptBox["q", "2"]}]]}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "1", "0"},
          {
           FractionBox[
            RowBox[{
             RowBox[{"4", " ", 
              SuperscriptBox["q", "2"], " ", "wx"}], "+", 
             RowBox[{"12", " ", "q", " ", "\[Epsilon]"}], "-", 
             RowBox[{"9", " ", "q", " ", "wx", " ", "\[Epsilon]"}], "-", 
             RowBox[{"27", " ", 
              SuperscriptBox["\[Epsilon]", "2"]}], "-", 
             RowBox[{"3", " ", 
              SqrtBox[
               RowBox[{
                RowBox[{
                 RowBox[{"-", "q"}], " ", "wx"}], "-", 
                RowBox[{"3", " ", "\[Epsilon]"}]}]], " ", 
              SqrtBox[
               RowBox[{
                RowBox[{
                 RowBox[{"-", "4"}], " ", 
                 SuperscriptBox["q", "3"], " ", "wx"}], "-", 
                RowBox[{"4", " ", 
                 SuperscriptBox["q", "3"], " ", 
                 SuperscriptBox["wx", "2"]}], "-", 
                RowBox[{"12", " ", 
                 SuperscriptBox["q", "2"], " ", "\[Epsilon]"}], "-", 
                RowBox[{"24", " ", 
                 SuperscriptBox["q", "2"], " ", "wx", " ", "\[Epsilon]"}], 
                "-", 
                RowBox[{"36", " ", "q", " ", 
                 SuperscriptBox["\[Epsilon]", "2"]}], "-", 
                RowBox[{"9", " ", "q", " ", "wx", " ", 
                 SuperscriptBox["\[Epsilon]", "2"]}], "-", 
                RowBox[{"27", " ", 
                 SuperscriptBox["\[Epsilon]", "3"]}]}]]}]}], 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "3"}], " ", 
                SuperscriptBox["q", "2"], " ", "wx"}], "-", 
               RowBox[{"3", " ", 
                SuperscriptBox["q", "2"], " ", 
                SuperscriptBox["wx", "2"]}], "-", 
               RowBox[{"9", " ", "q", " ", "\[Epsilon]"}], "-", 
               RowBox[{"21", " ", "q", " ", "wx", " ", "\[Epsilon]"}], "-", 
               RowBox[{"36", " ", 
                SuperscriptBox["\[Epsilon]", "2"]}], "+", 
               RowBox[{
                SqrtBox[
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "q"}], " ", "wx"}], "-", 
                  RowBox[{"3", " ", "\[Epsilon]"}]}]], " ", 
                SqrtBox[
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "4"}], " ", 
                   SuperscriptBox["q", "3"], " ", "wx"}], "-", 
                  RowBox[{"4", " ", 
                   SuperscriptBox["q", "3"], " ", 
                   SuperscriptBox["wx", "2"]}], "-", 
                  RowBox[{"12", " ", 
                   SuperscriptBox["q", "2"], " ", "\[Epsilon]"}], "-", 
                  RowBox[{"24", " ", 
                   SuperscriptBox["q", "2"], " ", "wx", " ", "\[Epsilon]"}], 
                  "-", 
                  RowBox[{"36", " ", "q", " ", 
                   SuperscriptBox["\[Epsilon]", "2"]}], "-", 
                  RowBox[{"9", " ", "q", " ", "wx", " ", 
                   SuperscriptBox["\[Epsilon]", "2"]}], "-", 
                  RowBox[{"27", " ", 
                   SuperscriptBox["\[Epsilon]", "3"]}]}]]}]}], ")"}]}]], 
           RowBox[{"-", 
            FractionBox[
             RowBox[{"q", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "2"}], " ", "q", " ", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "q"}], " ", "wx"}], "-", 
                   RowBox[{"3", " ", "\[Epsilon]"}]}]]}], "-", 
                RowBox[{"6", " ", "q", " ", "wx", " ", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "q"}], " ", "wx"}], "-", 
                   RowBox[{"3", " ", "\[Epsilon]"}]}]]}], "-", 
                RowBox[{"33", " ", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "q"}], " ", "wx"}], "-", 
                   RowBox[{"3", " ", "\[Epsilon]"}]}]], " ", "\[Epsilon]"}], 
                "+", 
                SqrtBox[
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "4"}], " ", 
                   SuperscriptBox["q", "3"], " ", "wx"}], "-", 
                  RowBox[{"4", " ", 
                   SuperscriptBox["q", "3"], " ", 
                   SuperscriptBox["wx", "2"]}], "-", 
                  RowBox[{"12", " ", 
                   SuperscriptBox["q", "2"], " ", "\[Epsilon]"}], "-", 
                  RowBox[{"24", " ", 
                   SuperscriptBox["q", "2"], " ", "wx", " ", "\[Epsilon]"}], 
                  "-", 
                  RowBox[{"36", " ", "q", " ", 
                   SuperscriptBox["\[Epsilon]", "2"]}], "-", 
                  RowBox[{"9", " ", "q", " ", "wx", " ", 
                   SuperscriptBox["\[Epsilon]", "2"]}], "-", 
                  RowBox[{"27", " ", 
                   SuperscriptBox["\[Epsilon]", "3"]}]}]]}], ")"}]}], 
             RowBox[{"12", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "3"}], " ", 
                 SuperscriptBox["q", "2"], " ", "wx"}], "-", 
                RowBox[{"3", " ", 
                 SuperscriptBox["q", "2"], " ", 
                 SuperscriptBox["wx", "2"]}], "-", 
                RowBox[{"9", " ", "q", " ", "\[Epsilon]"}], "-", 
                RowBox[{"21", " ", "q", " ", "wx", " ", "\[Epsilon]"}], "-", 
                RowBox[{"36", " ", 
                 SuperscriptBox["\[Epsilon]", "2"]}], "+", 
                RowBox[{
                 SqrtBox[
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "q"}], " ", "wx"}], "-", 
                   RowBox[{"3", " ", "\[Epsilon]"}]}]], " ", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "4"}], " ", 
                    SuperscriptBox["q", "3"], " ", "wx"}], "-", 
                   RowBox[{"4", " ", 
                    SuperscriptBox["q", "3"], " ", 
                    SuperscriptBox["wx", "2"]}], "-", 
                   RowBox[{"12", " ", 
                    SuperscriptBox["q", "2"], " ", "\[Epsilon]"}], "-", 
                   RowBox[{"24", " ", 
                    SuperscriptBox["q", "2"], " ", "wx", " ", "\[Epsilon]"}], 
                   "-", 
                   RowBox[{"36", " ", "q", " ", 
                    SuperscriptBox["\[Epsilon]", "2"]}], "-", 
                   RowBox[{"9", " ", "q", " ", "wx", " ", 
                    SuperscriptBox["\[Epsilon]", "2"]}], "-", 
                   RowBox[{"27", " ", 
                    SuperscriptBox["\[Epsilon]", "3"]}]}]]}]}], ")"}]}]]}], 
           "1"},
          {
           RowBox[{"-", 
            FractionBox[
             RowBox[{
              RowBox[{"4", " ", 
               SuperscriptBox["q", "2"], " ", "wx"}], "+", 
              RowBox[{"12", " ", "q", " ", "\[Epsilon]"}], "-", 
              RowBox[{"9", " ", "q", " ", "wx", " ", "\[Epsilon]"}], "-", 
              RowBox[{"27", " ", 
               SuperscriptBox["\[Epsilon]", "2"]}], "+", 
              RowBox[{"3", " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "q"}], " ", "wx"}], "-", 
                 RowBox[{"3", " ", "\[Epsilon]"}]}]], " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "4"}], " ", 
                  SuperscriptBox["q", "3"], " ", "wx"}], "-", 
                 RowBox[{"4", " ", 
                  SuperscriptBox["q", "3"], " ", 
                  SuperscriptBox["wx", "2"]}], "-", 
                 RowBox[{"12", " ", 
                  SuperscriptBox["q", "2"], " ", "\[Epsilon]"}], "-", 
                 RowBox[{"24", " ", 
                  SuperscriptBox["q", "2"], " ", "wx", " ", "\[Epsilon]"}], 
                 "-", 
                 RowBox[{"36", " ", "q", " ", 
                  SuperscriptBox["\[Epsilon]", "2"]}], "-", 
                 RowBox[{"9", " ", "q", " ", "wx", " ", 
                  SuperscriptBox["\[Epsilon]", "2"]}], "-", 
                 RowBox[{"27", " ", 
                  SuperscriptBox["\[Epsilon]", "3"]}]}]]}]}], 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"3", " ", 
                 SuperscriptBox["q", "2"], " ", "wx"}], "+", 
                RowBox[{"3", " ", 
                 SuperscriptBox["q", "2"], " ", 
                 SuperscriptBox["wx", "2"]}], "+", 
                RowBox[{"9", " ", "q", " ", "\[Epsilon]"}], "+", 
                RowBox[{"21", " ", "q", " ", "wx", " ", "\[Epsilon]"}], "+", 
                RowBox[{"36", " ", 
                 SuperscriptBox["\[Epsilon]", "2"]}], "+", 
                RowBox[{
                 SqrtBox[
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "q"}], " ", "wx"}], "-", 
                   RowBox[{"3", " ", "\[Epsilon]"}]}]], " ", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "4"}], " ", 
                    SuperscriptBox["q", "3"], " ", "wx"}], "-", 
                   RowBox[{"4", " ", 
                    SuperscriptBox["q", "3"], " ", 
                    SuperscriptBox["wx", "2"]}], "-", 
                   RowBox[{"12", " ", 
                    SuperscriptBox["q", "2"], " ", "\[Epsilon]"}], "-", 
                   RowBox[{"24", " ", 
                    SuperscriptBox["q", "2"], " ", "wx", " ", "\[Epsilon]"}], 
                   "-", 
                   RowBox[{"36", " ", "q", " ", 
                    SuperscriptBox["\[Epsilon]", "2"]}], "-", 
                   RowBox[{"9", " ", "q", " ", "wx", " ", 
                    SuperscriptBox["\[Epsilon]", "2"]}], "-", 
                   RowBox[{"27", " ", 
                    SuperscriptBox["\[Epsilon]", "3"]}]}]]}]}], ")"}]}]]}], 
           RowBox[{"-", 
            FractionBox[
             RowBox[{"q", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", "q", " ", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "q"}], " ", "wx"}], "-", 
                   RowBox[{"3", " ", "\[Epsilon]"}]}]]}], "+", 
                RowBox[{"6", " ", "q", " ", "wx", " ", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "q"}], " ", "wx"}], "-", 
                   RowBox[{"3", " ", "\[Epsilon]"}]}]]}], "+", 
                RowBox[{"33", " ", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "q"}], " ", "wx"}], "-", 
                   RowBox[{"3", " ", "\[Epsilon]"}]}]], " ", "\[Epsilon]"}], 
                "+", 
                SqrtBox[
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "4"}], " ", 
                   SuperscriptBox["q", "3"], " ", "wx"}], "-", 
                  RowBox[{"4", " ", 
                   SuperscriptBox["q", "3"], " ", 
                   SuperscriptBox["wx", "2"]}], "-", 
                  RowBox[{"12", " ", 
                   SuperscriptBox["q", "2"], " ", "\[Epsilon]"}], "-", 
                  RowBox[{"24", " ", 
                   SuperscriptBox["q", "2"], " ", "wx", " ", "\[Epsilon]"}], 
                  "-", 
                  RowBox[{"36", " ", "q", " ", 
                   SuperscriptBox["\[Epsilon]", "2"]}], "-", 
                  RowBox[{"9", " ", "q", " ", "wx", " ", 
                   SuperscriptBox["\[Epsilon]", "2"]}], "-", 
                  RowBox[{"27", " ", 
                   SuperscriptBox["\[Epsilon]", "3"]}]}]]}], ")"}]}], 
             RowBox[{"12", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"3", " ", 
                 SuperscriptBox["q", "2"], " ", "wx"}], "+", 
                RowBox[{"3", " ", 
                 SuperscriptBox["q", "2"], " ", 
                 SuperscriptBox["wx", "2"]}], "+", 
                RowBox[{"9", " ", "q", " ", "\[Epsilon]"}], "+", 
                RowBox[{"21", " ", "q", " ", "wx", " ", "\[Epsilon]"}], "+", 
                RowBox[{"36", " ", 
                 SuperscriptBox["\[Epsilon]", "2"]}], "+", 
                RowBox[{
                 SqrtBox[
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "q"}], " ", "wx"}], "-", 
                   RowBox[{"3", " ", "\[Epsilon]"}]}]], " ", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "4"}], " ", 
                    SuperscriptBox["q", "3"], " ", "wx"}], "-", 
                   RowBox[{"4", " ", 
                    SuperscriptBox["q", "3"], " ", 
                    SuperscriptBox["wx", "2"]}], "-", 
                   RowBox[{"12", " ", 
                    SuperscriptBox["q", "2"], " ", "\[Epsilon]"}], "-", 
                   RowBox[{"24", " ", 
                    SuperscriptBox["q", "2"], " ", "wx", " ", "\[Epsilon]"}], 
                   "-", 
                   RowBox[{"36", " ", "q", " ", 
                    SuperscriptBox["\[Epsilon]", "2"]}], "-", 
                   RowBox[{"9", " ", "q", " ", "wx", " ", 
                    SuperscriptBox["\[Epsilon]", "2"]}], "-", 
                   RowBox[{"27", " ", 
                    SuperscriptBox["\[Epsilon]", "3"]}]}]]}]}], ")"}]}]]}], 
           "1"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]]},
     {
      TagBox[
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            FractionBox[
             RowBox[{
              RowBox[{"-", "1"}], "-", "wx"}], "\[Epsilon]"]},
           {
            RowBox[{"-", 
             FractionBox[
              SqrtBox[
               RowBox[{
                RowBox[{"-", "1"}], "-", "wx"}]], 
              RowBox[{
               SqrtBox["3"], " ", 
               SqrtBox["\[Epsilon]"]}]]}]},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {
           FractionBox[
            RowBox[{
             SqrtBox["3"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "-", "wx"}], ")"}], 
              RowBox[{"3", "/", "2"}]]}], 
            SqrtBox["\[Epsilon]"]], "0", 
           FractionBox[
            RowBox[{"q", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "-", "wx"}], ")"}], 
              RowBox[{"3", "/", "2"}]]}], 
            RowBox[{
             SqrtBox["3"], " ", 
             SuperscriptBox["\[Epsilon]", 
              RowBox[{"3", "/", "2"}]]}]]},
          {
           RowBox[{
            FractionBox["1", "6"], " ", 
            RowBox[{"(", 
             RowBox[{"5", "+", 
              RowBox[{"3", " ", "wx"}]}], ")"}]}], 
           FractionBox[
            RowBox[{"2", " ", 
             SqrtBox[
              RowBox[{
               RowBox[{"-", "1"}], "-", "wx"}]]}], 
            RowBox[{
             SqrtBox["3"], " ", 
             SqrtBox["\[Epsilon]"]}]], 
           RowBox[{"-", 
            FractionBox["1", "6"]}]},
          {"0", "0", 
           FractionBox[
            RowBox[{
             SqrtBox[
              RowBox[{
               RowBox[{"-", "1"}], "-", "wx"}]], " ", 
             RowBox[{"(", 
              RowBox[{"q", "+", 
               RowBox[{"q", " ", "wx"}], "+", 
               RowBox[{"3", " ", "\[Epsilon]"}]}], ")"}]}], 
            RowBox[{
             SqrtBox["3"], " ", 
             SuperscriptBox["\[Epsilon]", 
              RowBox[{"3", "/", "2"}]]}]]}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            FractionBox[
             RowBox[{"2", " ", 
              SqrtBox[
               RowBox[{
                RowBox[{"-", "1"}], "-", "wx"}]]}], 
             RowBox[{
              SqrtBox["3"], " ", 
              SqrtBox["\[Epsilon]"]}]]},
           {
            RowBox[{"-", 
             FractionBox[
              RowBox[{
               SqrtBox["3"], " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{"-", "1"}], "-", "wx"}]], " ", 
               RowBox[{"(", 
                RowBox[{"1", "+", "wx"}], ")"}]}], 
              SqrtBox["\[Epsilon]"]]}]},
           {
            FractionBox[
             RowBox[{
              SqrtBox[
               RowBox[{
                RowBox[{"-", "1"}], "-", "wx"}]], " ", 
              RowBox[{"(", 
               RowBox[{"q", "+", 
                RowBox[{"q", " ", "wx"}], "+", 
                RowBox[{"3", " ", "\[Epsilon]"}]}], ")"}]}], 
             RowBox[{
              SqrtBox["3"], " ", 
              SuperscriptBox["\[Epsilon]", 
               RowBox[{"3", "/", "2"}]]}]]}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "1", "0"},
          {
           RowBox[{"-", 
            FractionBox[
             RowBox[{"2", " ", 
              SqrtBox["3"], " ", 
              SqrtBox[
               RowBox[{
                RowBox[{"-", "1"}], "-", "wx"}]]}], 
             SqrtBox["\[Epsilon]"]]}], "1", "0"},
          {
           RowBox[{"-", 
            FractionBox[
             RowBox[{"q", "+", 
              RowBox[{"q", " ", "wx"}]}], 
             RowBox[{"q", "+", 
              RowBox[{"q", " ", "wx"}], "+", 
              RowBox[{"6", " ", "\[Epsilon]"}], "+", 
              RowBox[{"3", " ", "wx", " ", "\[Epsilon]"}]}]]}], 
           RowBox[{"-", 
            FractionBox[
             RowBox[{
              SqrtBox["3"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", 
                 SuperscriptBox["\[Epsilon]", 
                  RowBox[{"3", "/", "2"}]]}], "+", 
                RowBox[{"wx", " ", 
                 SuperscriptBox["\[Epsilon]", 
                  RowBox[{"3", "/", "2"}]]}]}], ")"}]}], 
             RowBox[{"2", " ", 
              SqrtBox[
               RowBox[{
                RowBox[{"-", "1"}], "-", "wx"}]], " ", 
              RowBox[{"(", 
               RowBox[{"q", "+", 
                RowBox[{"q", " ", "wx"}], "+", 
                RowBox[{"6", " ", "\[Epsilon]"}], "+", 
                RowBox[{"3", " ", "wx", " ", "\[Epsilon]"}]}], ")"}]}]]}], "1"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]]},
     {
      TagBox[
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            FractionBox[
             RowBox[{
              RowBox[{"-", "1"}], "-", "wx"}], "\[Epsilon]"]},
           {
            FractionBox[
             SqrtBox[
              RowBox[{
               RowBox[{"-", "1"}], "-", "wx"}]], 
             RowBox[{
              SqrtBox["3"], " ", 
              SqrtBox["\[Epsilon]"]}]]},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {
           RowBox[{"-", 
            FractionBox[
             RowBox[{
              SqrtBox["3"], " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "-", "wx"}], ")"}], 
               RowBox[{"3", "/", "2"}]]}], 
             SqrtBox["\[Epsilon]"]]}], "0", 
           RowBox[{"-", 
            FractionBox[
             RowBox[{"q", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "-", "wx"}], ")"}], 
               RowBox[{"3", "/", "2"}]]}], 
             RowBox[{
              SqrtBox["3"], " ", 
              SuperscriptBox["\[Epsilon]", 
               RowBox[{"3", "/", "2"}]]}]]}]},
          {
           RowBox[{
            FractionBox["1", "6"], " ", 
            RowBox[{"(", 
             RowBox[{"5", "+", 
              RowBox[{"3", " ", "wx"}]}], ")"}]}], 
           RowBox[{"-", 
            FractionBox[
             RowBox[{"2", " ", 
              SqrtBox[
               RowBox[{
                RowBox[{"-", "1"}], "-", "wx"}]]}], 
             RowBox[{
              SqrtBox["3"], " ", 
              SqrtBox["\[Epsilon]"]}]]}], 
           RowBox[{"-", 
            FractionBox["1", "6"]}]},
          {"0", "0", 
           RowBox[{"-", 
            FractionBox[
             RowBox[{
              SqrtBox[
               RowBox[{
                RowBox[{"-", "1"}], "-", "wx"}]], " ", 
              RowBox[{"(", 
               RowBox[{"q", "+", 
                RowBox[{"q", " ", "wx"}], "+", 
                RowBox[{"3", " ", "\[Epsilon]"}]}], ")"}]}], 
             RowBox[{
              SqrtBox["3"], " ", 
              SuperscriptBox["\[Epsilon]", 
               RowBox[{"3", "/", "2"}]]}]]}]}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            RowBox[{"-", 
             FractionBox[
              RowBox[{"2", " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{"-", "1"}], "-", "wx"}]]}], 
              RowBox[{
               SqrtBox["3"], " ", 
               SqrtBox["\[Epsilon]"]}]]}]},
           {
            FractionBox[
             RowBox[{
              SqrtBox["3"], " ", 
              SqrtBox[
               RowBox[{
                RowBox[{"-", "1"}], "-", "wx"}]], " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", "wx"}], ")"}]}], 
             SqrtBox["\[Epsilon]"]]},
           {
            RowBox[{"-", 
             FractionBox[
              RowBox[{
               SqrtBox[
                RowBox[{
                 RowBox[{"-", "1"}], "-", "wx"}]], " ", 
               RowBox[{"(", 
                RowBox[{"q", "+", 
                 RowBox[{"q", " ", "wx"}], "+", 
                 RowBox[{"3", " ", "\[Epsilon]"}]}], ")"}]}], 
              RowBox[{
               SqrtBox["3"], " ", 
               SuperscriptBox["\[Epsilon]", 
                RowBox[{"3", "/", "2"}]]}]]}]}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "1", "0"},
          {
           FractionBox[
            RowBox[{"2", " ", 
             SqrtBox["3"], " ", 
             SqrtBox[
              RowBox[{
               RowBox[{"-", "1"}], "-", "wx"}]]}], 
            SqrtBox["\[Epsilon]"]], "1", "0"},
          {
           RowBox[{"-", 
            FractionBox[
             RowBox[{"q", "+", 
              RowBox[{"q", " ", "wx"}]}], 
             RowBox[{"q", "+", 
              RowBox[{"q", " ", "wx"}], "+", 
              RowBox[{"6", " ", "\[Epsilon]"}], "+", 
              RowBox[{"3", " ", "wx", " ", "\[Epsilon]"}]}]]}], 
           FractionBox[
            RowBox[{
             SqrtBox["3"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", 
                SuperscriptBox["\[Epsilon]", 
                 RowBox[{"3", "/", "2"}]]}], "+", 
               RowBox[{"wx", " ", 
                SuperscriptBox["\[Epsilon]", 
                 RowBox[{"3", "/", "2"}]]}]}], ")"}]}], 
            RowBox[{"2", " ", 
             SqrtBox[
              RowBox[{
               RowBox[{"-", "1"}], "-", "wx"}]], " ", 
             RowBox[{"(", 
              RowBox[{"q", "+", 
               RowBox[{"q", " ", "wx"}], "+", 
               RowBox[{"6", " ", "\[Epsilon]"}], "+", 
               RowBox[{"3", " ", "wx", " ", "\[Epsilon]"}]}], ")"}]}]], "1"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{
     "Columns" -> {{False}}, "Rows" -> {False, True, {False}, False}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   {None, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {
     None, {"Fixed Point", "Jacobian", "Eigenvalues", 
       "Eigenvectors"}}]]]], "Output",
 CellChangeTimes->{3.888482033057331*^9, 3.888486608238544*^9, 
  3.888493867447448*^9},
 CellLabel->
  "Out[15]//TableForm=",ExpressionUUID->"7f2ee0e9-9b20-42b2-93c1-\
bcb6b06e09c1"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Eq1", "[", 
    RowBox[{"q_", ",", "wx_", ",", "\[Epsilon]_"}], "]"}], "=", "de1"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Eq2", "[", 
    RowBox[{"wx_", ",", "\[Epsilon]_"}], "]"}], "=", "de2"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Eq3", "[", "q_", "]"}], "=", "de3"}], ";"}]}], "Input",
 CellChangeTimes->{{3.878636626661203*^9, 3.878636636042757*^9}, {
   3.8786400729113073`*^9, 3.878640099369973*^9}, {3.878640199884038*^9, 
   3.878640211434988*^9}, 3.878720216431931*^9, {3.878881437960136*^9, 
   3.878881453370654*^9}, {3.8865940267335377`*^9, 3.8865940274907312`*^9}, {
   3.888308047863652*^9, 3.888308049070133*^9}, {3.888399036557212*^9, 
   3.888399079836182*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"98cc73a0-c2ab-4a12-9694-9eeb54f24e4c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"StreamPlot3D", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Eq1", "[", 
        RowBox[{"q", ",", "wx", ",", "\[Epsilon]"}], "]"}], ",", 
       RowBox[{"Eq2", "[", 
        RowBox[{"wx", ",", "\[Epsilon]"}], "]"}], ",", 
       RowBox[{"Eq3", "[", "q", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"z", ",", "0", ",", "5"}], "}"}], ",", 
     RowBox[{"AxesLabel", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}]}], 
    "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"q", ",", "0", ",", "1", ",", 
     RowBox[{"Appearance", "->", "\"\<Open\>\""}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"wx", ",", 
     RowBox[{"-", "5"}], ",", "1", ",", 
     RowBox[{"Appearance", "->", "\"\<Open\>\""}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", ",", 
     RowBox[{"-", "1"}], ",", "1", ",", 
     RowBox[{"Appearance", "->", "\"\<Open\>\""}]}], "}"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.878639778339827*^9, 3.8786398085073023`*^9}, {
   3.878639979197041*^9, 3.878639982821209*^9}, {3.878640026324665*^9, 
   3.878640045259263*^9}, {3.87864010346107*^9, 3.878640117483438*^9}, {
   3.8786401881407013`*^9, 3.878640222468185*^9}, {3.8786403968945436`*^9, 
   3.878640398155799*^9}, {3.8786404492447853`*^9, 3.878640474115641*^9}, 
   3.878640504316465*^9, {3.878720213961834*^9, 3.8787202253307457`*^9}, {
   3.878881441265929*^9, 3.878881488261342*^9}, {3.878882049904756*^9, 
   3.878882050665854*^9}, 3.886593945750594*^9, {3.886594024078988*^9, 
   3.886594032638586*^9}, {3.888399106173613*^9, 3.8883991603772507`*^9}, {
   3.888402444529725*^9, 3.8884024446391277`*^9}, {3.888493997124539*^9, 
   3.8884939987136908`*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"178e33f8-ea4e-4708-afa2-4876b8dc892a"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`q$$ = 
    1, $CellContext`wx$$ = -0.5, $CellContext`\[Epsilon]$$ = -0.25, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`q$$], 0, 1}, {
      Hold[$CellContext`wx$$], -5, 1}, {
      Hold[$CellContext`\[Epsilon]$$], -1, 1}}, Typeset`size$$ = {
    360., {182., 187.40710822913059`}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`q$$ = 
        0, $CellContext`wx$$ = -5, $CellContext`\[Epsilon]$$ = -1}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> StreamPlot3D[{
         $CellContext`Eq1[$CellContext`q$$, $CellContext`wx$$, $CellContext`\
\[Epsilon]$$], 
         $CellContext`Eq2[$CellContext`wx$$, $CellContext`\[Epsilon]$$], 
         $CellContext`Eq3[$CellContext`q$$]}, {$CellContext`x, 0, 
         10}, {$CellContext`y, -2, 2}, {$CellContext`z, 0, 5}, 
        AxesLabel -> {"x", "y", "z"}], 
      "Specifications" :> {{$CellContext`q$$, 0, 1, Appearance -> 
         "Open"}, {$CellContext`wx$$, -5, 1, Appearance -> 
         "Open"}, {$CellContext`\[Epsilon]$$, -1, 1, Appearance -> "Open"}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{406., {282.6875, 288.3125}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.8883991743648663`*^9, 3.888399400224999*^9, {3.888402427243051*^9, 
   3.888402445012536*^9}, 3.8884938702559633`*^9, 3.888493925233059*^9, 
   3.888493999233477*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"b0f4a9bb-6717-40bd-94ad-01f865fcdf78"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["x - y Numeric Phase Space", "Subsection",
 CellChangeTimes->{{3.888396757108968*^9, 3.888396789868569*^9}, {
  3.88839979994514*^9, 3.888399802657398*^9}, {3.888402516101452*^9, 
  3.888402519021077*^9}},ExpressionUUID->"fd2fd6be-667a-40f0-bbfc-\
6481b4edbcb9"],

Cell[CellGroupData[{

Cell["Fig 9 a", "Subsubsection",
 CellChangeTimes->{{3.888402521166562*^9, 
  3.888402552229291*^9}},ExpressionUUID->"a6ec4fb6-a982-48fa-8f9b-\
58907ff08a76"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Clear", " ", "all", " ", "variables"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], ";"}]}]], "Input",
 CellLabel->"In[19]:=",ExpressionUUID->"78c7d805-f295-4d90-8b0a-3fd9f64510ae"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Define", " ", "the", " ", "dynamical", " ", "system", " ", "for", " ", 
    "coupled", " ", "dark", " ", "matter", " ", 
    RowBox[{"(", "z", ")"}], " ", "and", " ", "dark", " ", "energy", " ", 
    RowBox[{"(", "x", ")"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"de1t", ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"x1", "'"}], "[", "t", "]"}], "==", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "3"}], "*", 
       RowBox[{"y1", "[", "t", "]"}], "*", 
       RowBox[{"x1", "[", "t", "]"}], "*", 
       RowBox[{"(", 
        RowBox[{"1", "+", "wx", "+", 
         RowBox[{"\[Epsilon]", "*", 
          RowBox[{"x1", "[", "t", "]"}]}]}], ")"}]}], "-", 
      RowBox[{"q", "*", 
       RowBox[{"x1", "[", "t", "]"}], "*", 
       RowBox[{"y1", "[", "t", "]"}], "*", 
       RowBox[{"z1", "[", "t", "]"}]}]}]}]}], "\[IndentingNewLine]", 
   RowBox[{"de2t", ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"y1", "'"}], "[", "t", "]"}], "==", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"y1", "[", "t", "]"}], "^", "2"}]}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "/", "6"}], ")"}], "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"x1", "[", "t", "]"}], "+", 
         RowBox[{"z1", "[", "t", "]"}], "+", 
         RowBox[{"3", "*", "wx", "*", 
          RowBox[{"x1", "[", "t", "]"}]}], "+", 
         RowBox[{"3", "*", "\[Epsilon]", "*", 
          RowBox[{
           RowBox[{"x1", "[", "t", "]"}], "^", "2"}]}]}], ")"}]}]}]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"de3t", ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"z1", "'"}], "[", "t", "]"}], "==", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "3"}], "*", 
       RowBox[{"y1", "[", "t", "]"}], "*", 
       RowBox[{"z1", "[", "t", "]"}]}], "+", " ", 
      RowBox[{"q", "*", 
       RowBox[{"x1", "[", "t", "]"}], "*", 
       RowBox[{"y1", "[", "t", "]"}], "*", 
       RowBox[{"z1", "[", "t", "]"}]}]}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.888401218788467*^9, 3.888401273947598*^9}, {
  3.888401348229657*^9, 3.888401349531745*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"9dad91ad-8503-47ce-ae6e-ff5e69544d47"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"q", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wx", "=", 
   RowBox[{"-", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Epsilon]", "=", "0.1"}], ";"}]}], "Input",
 CellChangeTimes->{{3.887977889055066*^9, 3.8879778890554047`*^9}, {
   3.8879783492505503`*^9, 3.8879783568319263`*^9}, {3.8884013253873777`*^9, 
   3.888401334714533*^9}, 3.888401731282817*^9},
 CellLabel->"In[23]:=",ExpressionUUID->"65d3313b-888a-4a5c-85e7-9daed3c85483"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"traj", "[", 
     RowBox[{"x0_", ",", "y0_", ",", "z0_"}], "]"}], "=", 
    RowBox[{"NDSolve", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"de1t", ",", "de2t", ",", "de3t", ",", " ", 
        RowBox[{
         RowBox[{"x1", "[", "0", "]"}], "==", "x0"}], ",", 
        RowBox[{
         RowBox[{"y1", "[", "0", "]"}], "==", "y0"}], ",", 
        RowBox[{
         RowBox[{"z1", "[", "0", "]"}], "==", "z0"}]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"x1", ",", "y1", ",", "z1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", 
        RowBox[{"-", "50"}], ",", "50"}], "}"}]}], "]"}]}], ";"}], 
  " "}]], "Input",
 CellChangeTimes->{{3.8438885804511986`*^9, 3.843888581311265*^9}, {
  3.8438938592742786`*^9, 3.843893939219122*^9}, {3.8438941114297333`*^9, 
  3.8438942191846347`*^9}, {3.843894249969864*^9, 3.843894346269736*^9}, {
  3.8438944055744495`*^9, 3.843894799140247*^9}, {3.8438948607399817`*^9, 
  3.8438948847105308`*^9}, {3.844144226711842*^9, 3.844144269018071*^9}, {
  3.887979872791584*^9, 3.887979910367338*^9}, {3.887980029651232*^9, 
  3.887980031254677*^9}, {3.888055637414365*^9, 3.8880556536066236`*^9}, {
  3.8880559265002527`*^9, 3.888055942599481*^9}, {3.888385806342004*^9, 
  3.888385807953027*^9}, {3.888401283220417*^9, 3.8884012975687943`*^9}, {
  3.8884013397587967`*^9, 3.888401343483832*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"6c528d2a-2ad6-4a99-8f60-0644a705f277"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve", "ndinnt", 
   "\"Initial condition \\!\\(\\*RowBox[{\\\"x0\\\"}]\\) is not a number or a \
rectangular array of numbers.\"", 2, 26, 26, 18333159307729954598, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.888310947399899*^9, 3.888385574514182*^9, 3.8883856324712677`*^9, 
   3.888385739330179*^9, 3.888385830216976*^9, {3.8884013373018436`*^9, 
   3.888401352004178*^9}, 3.888401735657505*^9, 3.888403184623478*^9, 
   3.888403448110656*^9, 3.888480730198474*^9},
 CellLabel->
  "During evaluation of \
In[26]:=",ExpressionUUID->"eab4775f-7294-4647-b328-c721756ca3e8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"sol", "[", "1", "]"}], "=", 
   RowBox[{"traj", "[", 
    RowBox[{"0.02", ",", "0.01", ",", "0.009"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sol", "[", "2", "]"}], "=", 
   RowBox[{"traj", "[", 
    RowBox[{"0.02", ",", "0.05", ",", "0.009"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sol", "[", "3", "]"}], "=", 
   RowBox[{"traj", "[", 
    RowBox[{"0.8", ",", "0.055", ",", "0.009"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sol", "[", "4", "]"}], "=", 
   RowBox[{"traj", "[", 
    RowBox[{"0.99", ",", "0.06", ",", "0.009"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sol", "[", "5", "]"}], "=", 
   RowBox[{"traj", "[", 
    RowBox[{"2.991", ",", "1", ",", "0.009"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sol", "[", "6", "]"}], "=", 
   RowBox[{"traj", "[", 
    RowBox[{"0.02", ",", "0.09", ",", "0.009"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.887978731059854*^9, 3.887978757612252*^9}, {
   3.887978845812172*^9, 3.887978859965249*^9}, {3.88797894002472*^9, 
   3.8879789403355103`*^9}, {3.88797897759439*^9, 3.88797901355768*^9}, 
   3.887979128052725*^9, {3.88797923767091*^9, 3.887979237845546*^9}, {
   3.887979375257626*^9, 3.88797939675972*^9}, {3.887979429202385*^9, 
   3.887979516979513*^9}, {3.887979558765677*^9, 3.887979566700461*^9}, {
   3.887979612678831*^9, 3.887979664270924*^9}, {3.887979922277718*^9, 
   3.887979997391836*^9}, 3.887980080905983*^9, {3.8879801208038273`*^9, 
   3.88798015412414*^9}, {3.888054939843245*^9, 3.888054943018937*^9}, {
   3.888055844364393*^9, 3.8880558605745296`*^9}, {3.888055913193152*^9, 
   3.888055918216709*^9}, 3.8880559966976633`*^9, {3.888056036287993*^9, 
   3.888056085299884*^9}, {3.88805612209927*^9, 3.8880561244131937`*^9}, {
   3.88805618652389*^9, 3.888056190803598*^9}, {3.8883009702722473`*^9, 
   3.888301001671629*^9}, {3.8883010401298227`*^9, 3.888301112638144*^9}, 
   3.888301171388793*^9, {3.888301202257996*^9, 3.8883012287725487`*^9}, {
   3.888401380694333*^9, 3.8884013833951883`*^9}, {3.888401462909256*^9, 
   3.888401475754928*^9}, {3.888403425705557*^9, 3.888403440122449*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"b8fdb4d0-0082-45c8-aa67-03c0ff53d9e6"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve", "ndsz", 
   "\"At \\!\\(\\*RowBox[{\\\"t\\\"}]\\) == \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"5.83120554090352`\\\"}]\\), step size is effectively zero; singularity or \
stiff system suspected.\"", 2, 31, 27, 18333159307729954598, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.8883010563175793`*^9, 3.88830111310071*^9}, 
   3.888301171886917*^9, {3.888301203169413*^9, 3.888301232801238*^9}, 
   3.8883109474272747`*^9, 3.888385574536441*^9, 3.8883856330240717`*^9, 
   3.888385739890205*^9, 3.888385830769507*^9, 3.888401353398034*^9, 
   3.888401384607732*^9, 3.888401477169449*^9, 3.888401736653503*^9, 
   3.8884031850720654`*^9, 3.888403448648273*^9, 3.888480730236796*^9},
 CellLabel->
  "During evaluation of \
In[27]:=",ExpressionUUID->"7d64269d-b0f4-4150-a567-055c769b5aa3"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve", "ndsz", 
   "\"At \\!\\(\\*RowBox[{\\\"t\\\"}]\\) == \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"11.916022069361208`\\\"}]\\), step size is effectively zero; singularity \
or stiff system suspected.\"", 2, 32, 28, 18333159307729954598, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.8883010563175793`*^9, 3.88830111310071*^9}, 
   3.888301171886917*^9, {3.888301203169413*^9, 3.888301232801238*^9}, 
   3.8883109474272747`*^9, 3.888385574536441*^9, 3.8883856330240717`*^9, 
   3.888385739890205*^9, 3.888385830769507*^9, 3.888401353398034*^9, 
   3.888401384607732*^9, 3.888401477169449*^9, 3.888401736653503*^9, 
   3.8884031850720654`*^9, 3.888403448648273*^9, 3.888480730243001*^9},
 CellLabel->
  "During evaluation of \
In[27]:=",ExpressionUUID->"07864df8-de60-493e-b3af-415ab7e6a3d9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\n", 
  RowBox[{"ParametricPlot", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"x1", "[", "t", "]"}], ",", 
           RowBox[{"y1", "[", "t", "]"}]}], "}"}], "/.", 
         RowBox[{"sol", "[", "i", "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "6"}], "}"}]}], "]"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"t", ",", 
        RowBox[{"-", "50"}], ",", "50"}], "}"}], ",", 
      RowBox[{"PlotStyle", " ", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"Gray", ",", " ", 
          RowBox[{"Opacity", "[", "0.75", "]"}]}], "}"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "10.5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "}"}]}]}], "]"}], ",", 
    RowBox[{"AxesLabel", "->", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.887979052254037*^9, 3.887979188623329*^9}, {
   3.887979228021886*^9, 3.887979401632031*^9}, {3.8879794459550867`*^9, 
   3.887979470345598*^9}, {3.887979600112005*^9, 3.88797960112506*^9}, {
   3.887979692930244*^9, 3.88797971039893*^9}, {3.887979803249867*^9, 
   3.887979842918675*^9}, {3.8879800704105587`*^9, 3.8879801035747423`*^9}, {
   3.8880557121793327`*^9, 3.888055759237444*^9}, {3.888055829243101*^9, 
   3.8880558350643997`*^9}, {3.8880558766966743`*^9, 3.888055894503551*^9}, {
   3.888055934499653*^9, 3.8880559569798098`*^9}, 3.888056008344767*^9, 
   3.8880560546239023`*^9, {3.8880560971933813`*^9, 3.888056164628825*^9}, 
   3.888057209628414*^9, {3.8883010969077797`*^9, 3.888301106866012*^9}, 
   3.88838581273239*^9, {3.888401301027873*^9, 3.888401314603023*^9}, {
   3.888401394687004*^9, 3.888401408667405*^9}, {3.8884017594302588`*^9, 
   3.888401789202386*^9}, {3.888403159353446*^9, 3.888403173188019*^9}, {
   3.888403456831375*^9, 3.8884034923388157`*^9}, {3.8884807425060253`*^9, 
   3.8884807525816708`*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"ec24f521-d53e-4f26-859c-99cc64d6c35e"],

Cell[BoxData[
 TemplateBox[{
  "InterpolatingFunction", "dmval", 
   "\"Input value \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"-\\\", \
\\\"49.99795918367347`\\\"}], \\\"}\\\"}]\\) lies outside the range of data \
in the interpolating function. Extrapolation will be used.\"", 2, 35, 37, 
   18333159307729954598, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.88840140918043*^9, 3.8884014786355047`*^9, {3.888401738346781*^9, 
   3.888401789765861*^9}, {3.888403159764903*^9, 3.888403186132861*^9}, {
   3.88840344970714*^9, 3.888403492959365*^9}, {3.88848073031383*^9, 
   3.888480753256072*^9}},
 CellLabel->
  "During evaluation of \
In[35]:=",ExpressionUUID->"d2ffeab1-44a8-46e1-938c-e306c84434f1"],

Cell[BoxData[
 TemplateBox[{
  "InterpolatingFunction", "dmval", 
   "\"Input value \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"-\\\", \
\\\"49.99795918367347`\\\"}], \\\"}\\\"}]\\) lies outside the range of data \
in the interpolating function. Extrapolation will be used.\"", 2, 35, 38, 
   18333159307729954598, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.88840140918043*^9, 3.8884014786355047`*^9, {3.888401738346781*^9, 
   3.888401789765861*^9}, {3.888403159764903*^9, 3.888403186132861*^9}, {
   3.88840344970714*^9, 3.888403492959365*^9}, {3.88848073031383*^9, 
   3.888480753265435*^9}},
 CellLabel->
  "During evaluation of \
In[35]:=",ExpressionUUID->"108cc906-4d8e-4e07-830a-96f142c7bd57"],

Cell[BoxData[
 TemplateBox[{
  "InterpolatingFunction", "dmval", 
   "\"Input value \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"-\\\", \
\\\"49.99795918367347`\\\"}], \\\"}\\\"}]\\) lies outside the range of data \
in the interpolating function. Extrapolation will be used.\"", 2, 35, 39, 
   18333159307729954598, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.88840140918043*^9, 3.8884014786355047`*^9, {3.888401738346781*^9, 
   3.888401789765861*^9}, {3.888403159764903*^9, 3.888403186132861*^9}, {
   3.88840344970714*^9, 3.888403492959365*^9}, {3.88848073031383*^9, 
   3.888480753272563*^9}},
 CellLabel->
  "During evaluation of \
In[35]:=",ExpressionUUID->"98e63814-0e8f-49a4-8674-42549ad05e27"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"InterpolatingFunction\\\
\", \\\"::\\\", \\\"dmval\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"", 2, 35, 40, 18333159307729954598, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.88840140918043*^9, 3.8884014786355047`*^9, {3.888401738346781*^9, 
   3.888401789765861*^9}, {3.888403159764903*^9, 3.888403186132861*^9}, {
   3.88840344970714*^9, 3.888403492959365*^9}, {3.88848073031383*^9, 
   3.888480753279306*^9}},
 CellLabel->
  "During evaluation of \
In[35]:=",ExpressionUUID->"951c974a-491b-4a72-b18f-6d18dd4686fd"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[0.75], 
      LineBox[CompressedData["
1:eJwk2Hc8ld8fAHD7XqsQGUlCqFAqQnSOQnbfijSMhkKlSEaSzMyMukZSRshK
yMjqyUhIQ4gysjLKvvfa8jvn/v7q9e557nnO+ZzP5wxbL9w4fomFiYkpisTE
hP+9cj1/bW2NBK1oAt+DumnEw+vN6H/J8PLTEwz/u7Wb4T65qXbsDyl9jPf5
/15kPC890MzwPZ4bjOc2SzyM9+PuS3ZgG/ufYXhowKYNO6czdRG/H/JVvhVb
+eU/Gvb1SjeGF5fSGRa8Zcp4v/wSaQ778KNwRvvem7Yzfv/CgYfRfstkwyp2
S+PjTuxKfX1O/L1M4bmf2JtzLglgK3SPMZyS2L4BO74t/wf2qxY7xvMx9UpG
e7xewXzY57uDGeMTzJ3mxW7I1mZ8fy43jYsRH49xRn/tml5yYHsXPPiG7WrQ
x4x9SmxbC/bot7gV3L/9Dt+/YB+MIc9jZ8cUfMauuhk6gz3l3/IJW5LLcAQ7
oHuxGdvgBFMfduyvV4znAY8DerDTrPi/YjeG0hjPkw/+ZvTHbbZuANs/no3R
3x/kuSFsJdVdjPHMfApitJ8ifIkxXkLb8w92j2YGI37RJ5omsI2mphnx2bnj
HKN/D37u78KWK1OlY+sreHRjBzGZMubjzlBBD7bLnYMsePzPXPj7sLNiirix
9TcrDGBL+B8Rwj56oncQO5NnUAKb57P0b2yNVbdd2F5qbQwft/+pjk0+V8Z4
/4tq7wHshNDYfmxSvhHD2cZferHvHSFrYKuZKTH68/CauBr27u1XGf0vCgxU
wT60LYoxPvuww3uwVS8/ZcQj7+5JJWyu8YeM+AVbvt2O/a7EiRHffX73ZLAT
g9QZ86vqXsXov2k3K2N+l9f7iGCHZ7Ux5s/X+AM/9smpnCbs1vxBRnzChhzr
sdOmry/j+O3lDq1j5Afsp2LfbG2swd6QrTGOLaCtWI0trXSHMZ9CZkUEdqBF
YRs27bFiFfZz+7vvsWXuO1Zgw/6zOdiKXp/Ksa9D2SfYVN87bxn1PT0Vx8gn
sQlG+9kqj+Kx1ZetGP0T4bBIYFiZ3sCofwHxp9iWUeUfsXlEhpOxa1kyGfk8
IlSczqjn4CpGfCx4Qhjft9m6zKhn6+XzhdiPPp1j5NuDsgPljHpP/suYn6vU
kRrGeEh3fmH//nC6mdHePDtj/pdVo79jB14PH8ZeHfqPka8B1LAJbLMvHxn5
uHVkbZpR/w/jGfVZJnCYxohHWQqj/leByTxjvdAZkcSeuC6xhP1onwNj/kOT
Slawa4PlNLG/tQitYa/dIhti3xpVYQ7G69ttLwtsxz4aC/YpfoFgbKGHE+zY
TMx5Wdg1chmM97+rcr1i9OfPOUZ77d8/FWIPq+YwvicxNl2EXTIauIj92tGl
GHs70wyd0T9bc8ZzcHd8BrtvLaIA+zXwZYz/yQrpJfZ4T9MotuOztxmM3x/7
yIif+e/CZ9hXH/sx6sWsZYiCXVAyzZiPKxfMQrBXMoUY+R6xwuPFqK+O/69H
30nWjtjRnR2M/MhvOGmFbTRV/g5b6Cpg1Os+66giRn3lOktjD+5lzmO05yvD
g318i88L7McGOxjrvUS2dQr2hZtlXdi/xgueMNbP5RZGPsSM3I5lrEfDLlnY
MKEkmmHlpEjG+2z2Dxjx6c5yxZaUTw3BFjciLLF9MrLvY68TX9Rh5LtrUACj
f0ctlLDDY9T8Ge39/iHCWK853vphy35dZcMe4pFjPLfWyKf+Q85Pj2L8Xrdl
bghby2+Z0X4XpaUTOyzVLhRbLRB+wY7jaI/A5g+ob8DecECdwtgPH/5+j53Q
G5KAzVbwtB5bYaaeEY/NvyabsBtvTmcx6uVH1zdsW0GO14z+dTf0YqfVUyux
tS0aJrGNp2I+YMvr5bHg/jvUfGTsT5JppmLY3LduMeb/YkWqCnbVE5c/2Fo/
EsywL9TkzGFvTO9wwz4vMMfI767RBcb6IZC4cz22wY6cWmyFHplN2OaGpYx6
/M5TJou9Z/ipKJ7va6k1ytjZbh162Nwu4prY7c49txj7gUuyLrbdxf3PGeux
uLgpthbpdAt2v+t1c8bz6Zf/GPVTe/cs9lxByg5mZDmD3eewNx8NM8PW2XPm
Ivau2s93sI8Kdtli59yZSsI+vivv//7r9A77cMPnC9jn5T93M0zZZ4Ot/0yT
hl2fXHYa2zDckoMFmc/10nGGByYEsFU2mhhgK0bli2IbhgQexDZR3CPGeN4j
tAdbya5vA7bmkRVp7Cr5T4z27gTbCjK+94ifir/Hf8GLFTuF/30ntoWBM6Pe
ZbdElmK3nbFizF/ikZBIxvtXrjP2F4kOxfPYYayDxYzzgei8AjbxejEZ+w6X
ARXHr/zHVBhj//c+wFhP+L7+c2Ocp4x8nbB/SNhfwJ5U/S2P7Rt93RSbSX53
L55fiqf5AWza1HIU9kFfx+2M88+FzYcY62/8nAjje39WGfXCZWfPxTgP/BXJ
wLY3yFi9jzwRZ34au+AndRZ77b8n67BbfR7+wW71bqtfxe19TxrC3kr564ft
TFfrx+b6+O0wtkeXbx/2AcFELuy8R+UD2INsmzpX8H757+8ItrCQyEvsgG1C
09gq7WdDsY+pqyxjX/bJd8J+bXOGk1HPKa/PYZ+4dlsMe+Dc9BnsUN1bStif
hmZssItaFHQZ65eAJuP34Xr3rbGluP6FYXOuM/PENv67+zW27qJxPHYk6dNv
bDU92TfYCwtN0rj/l9xiGOcTMj+vI3YX2YKxP5TYrb7DJnlxSeL8iJEelcDx
Wh9zSAdb86rofWwh0Yf2jPp7NEzH3ij8MBxbt+6aI2O/NR14hf1F0/Ivtr0s
5zfs7TfOXWecX2zDZrE552Tp2KM3J/lCkN//9fPG+RSw87MCtlLlLzLO3yHp
97rYp4TvPcSeUrx8FvvEy1RRVuQHm3QcGc8lcxKxOwWWPLEf6kqKsSFL0XUD
sKWC9kdhe78cDsZmNZRaxS5KTGB4Z5eQDTuu33uS/tjhdzOLsCtnj3pg77jh
s4ItrC1vjw1/71LhwOdPudzj2NxCBlbY+y707scWeerrgr3woFYYO2xRyh37
/bMHjPFrmYfbMZ7viWzAFmES1+FgnC83JWAXyyrzYO8O9bfD7iaFEvj7ovKb
GeudGhFtje3X58k4bzwzfT+Gx+Ole4BxPvtVmnIeW2hsxQs75UtqPY4Pv/Yx
LcZ5T4fGiF/02Z4VnJ/EFR0rHN/EXKdK7JpXlHI8P78/jB7ELjX51YHns/mt
Div2ndWscUa9xVQ0BSK7+z5fxvmzn1cmFps/0ZOEXTJidhnbciRTAOfjf77c
moGM/ax7yzLy/ccDwthp4mp7lpB3SgQtBeD6v9lrvIjzcWvGEHb0+nGfBVwf
6+91YE/yzr2bR76ilNOCvavm7nrsY6G3W7HdfNhuzCGP7lLvwZ7Y86OfjvO/
WmkKe+X0TwfsfcKXOfH31djYObFnFDp3YrtZWVTT8H62dvck9nqfIgo2xck0
BDvq7H8B2HUNvHUMtylFY8u7nuDA8Qn8YV6JHf6k+Ch249laDtz+sEJzEvZX
5i9O2KfIQnPYAOxbwvbT+nSMMV+Rmam4/0IjOwuxmW0HHPD42jiubGTkg+3+
ozgeT1vq7mILP2A9huP1JV1tBFu0xscRx/MLfH2MUU9zY6k43lcGpCqx9Vic
pvB8RDRHbAtFrvBVYJyHPA+3TmOzXOE/hOvxIYfOf2HInakzzTg/+ncLZWMv
2ivb4PxqVQar2PvqU2k4H2Mqk/XDkcVShENIyCyeImHYTCIUEU7k9FOPa7Gv
aMomceH89DGbwaZ8PiLCg8+T/c4bHiB/IF2/x4v3DxeR7djX7Wy+rkNWPBes
jK0uLUviw+uH5lEF7B//+WzhR45sYhPFHtBTEBJAPtgA53H74kHXh7DPG1bW
Y8veEQ/dgMdXFxmE/dRvlkUQmRQ8pI59ISjfCPtn6WAPHh/99bfz2JKtXS7Y
6S9KD2MXcd9fwfFqbaydwu1xNOV6YIfaXbDFjvkmMobj3SM2noy/L2BXYoot
tKcrHfd3h1VXNp4vpysVLng8ee/+/MPzXcwpwb0e+YOLtjHjfngx2RHH4+4G
MwrOl5zEbc+48fkjb64T59+IQmoSjm95Kbs4NlmC1RXHn3nhqA3Od447KlJ4
frgqU9L8kZ/o0xj3yTT2Ui0/ZIcz/ddwvTI5x8T4Iisoiufh/An9dX/eB+fP
8VeDOP/e8cdewr7enyOI8/Vx+pf+e8i/Xb8emUWO3S1yHTt3RitgCp+/7dl4
sBV5f7eMI/uvqld5I+e3lqr9wfU2Ze2PnWYQFD6C91eWMStsnTMsfL+RF1Sm
TmAPp/Q2DyC/Zc65jH1Gq7a5Dz+vNI7D7jioL/IL2TrxzDC2c/ru0h5k0bj2
E/j7CjTNgm5835Ov+oX968InXmy+379C8HheyUp868L1biJ1DI9f5XAuC35u
e3D7Phwf49DJ59gnbeOUcfz6fhW+we2rFPgdwfF1DN+njb9f8uKwC47/M3NP
rX4czzz5Qjxf5MMKLweRUw3tGPe1d/kl4cO4/10eVjgf2nYvfB9DXoqOrMH5
0/zh8/0JfN5906uA87GJOStmBu/n5ZbxOL8nwvMWcfxbh2OYIpFVRzMz8XzV
pQuej0K+WqbGuG+TDG2Ko3F7ceEVuF6N/vQtPERmM1dmw/Wn8kdQjoK8ta3o
Is63sjN3DsQgn1wQ/IjzO94gVTkW77cCAdvFcL2tBLLHId+3XXd9C65HdbPX
2G7UiiAZvP+809wfjxzzVPHSduTGzKkH2L3JW+mKyIUPJ4qwv326JbsHmc7b
lIUdYCc6qoK/v/XgFWy2Ww471PF5dL02HbcvS27vPYDrjeuSIbbA8rc5LeRX
ploOuH9eg5svAWT1KvJx3P/Yjp9bIPKVTcEceHx9rsRmbPK+nGA8fia5t+b4
ffbh2z9xvF4mt9bg9t6Cs2sRyHWO8CL+Hvu/jGUc/7+7z6ioISd0lLTi+Uk+
zKK+D8eDxZRx/olZ3XtrF+7P36c78Xz/Zjsyicf/JE7wDc4XelNpnjTyc245
NZxfTjSranFcf/Ok1zhfie2TKkK4f27Xd3shv6eai+N61/zH9+Y2Xj/+CAfj
+YutnD3mjvPH+UAkXs+1KpU4XPH4TWz1cf09WO3rvon8Myb60yhyVhdTrxOu
N78+dZyfx/3O8N/A9WV5IKsdn+/YY7wdkWUoD9WbkckfkxSuIX/xW89Zi1zR
rix1Fbmw4KxqOW5Px+PSFeSjxof6CpAnfT2XHZBdT9/clo08R14/hq3f9UX6
OfJy2KAyft9Usn0+ETky0a4TG25LrYpD1jjzsRe3Pyuiq5/7jwQTD2S834v3
z4OmTM+RPwS7vVFDtvP06UtEth9Men4Q7x8WLSIJyK0t0n66yPb6r75gC91T
NzLB68UvFskkZBUX+VlzZJOIUukXyJefjjnYINtKnxsrRBbr6knB/X15/J9T
DfL14dDAW3i9vKBT1o4s9W87E14f4m/6FY0j967vWcTrf+ufWl0S6r+yeaIF
zte0r5qm25Dn9Tj/pSFv796erIfXqweiXwpwPmZ5MF/F5+V4Us5bPN/0f1MV
eD3qNWLuRF6qF+nC619llvv+Idyf7/7PcD6M73g1M4V8UC3tmw7y7eyTvMt4
Pfsvn9sVn/9W99qz96D80wv7kY7/ntKk17cOOZC/rPo7ctXLR+bCyLvCjPVJ
zGR4wKsxUwL5z6NHE6rIgqYLFTLI5GeblS4hlyqwu25HTt984X408qDS3XIF
5FXTYzcrkE+T5N2UkBfvpDgNIE+k58Ziv+eNZOJgQfnda8mtiOy6ne3FNmRb
MZZG3N4BtfPTEHmfjlkj/t6zJZcrFsjeCWwk3B85j3UF9sis50wDhJB9Wk47
3EJ+php+hBuZmUdN0xN5bLLt1Boav88msbHbyIMVbI0zyHmJs/tdkEnDzTkD
yAvZywuXkL1C6oW/4f3oGYvocWR3s60K7/B+UcAVth/Z9Gsu50ucPzksxzYi
67Ueasfzuednc+gkGt+VjSXluH6jBvwt3yGrmJYM43qxdhFjCke2jHAItcDr
5zuxpmPI/yhOXRCZb3OIgAAys/r8+h3ISdo2q/7471WGCTyrXTTi0EfRAlV8
nrp303gE+bvVfl68H5y1qbf+hnxWL6L2ITLwbPZ5i7z45EmYFvLnAzVTOch3
LvftGcH5fKN9OAF55TY9LApZW+FXUhgy66VXNzSQRfcGn/BGfr8/qub3KglW
PSrY54Kc8UHoyiPkc/llt64gi7SLHtVBphLHtG2RFap/nl5cIcHZyRjiHHKy
5Ufn18i7+002YAvr/bjtgjzVwn76AnLofJyBBrJ3VchzO+RA89oSMrKlwCE2
J+S+lb+Bv5ZJMLPnlu8d5IG5bskq5EPimZ64v8ua5oYZyH9zRDYkIT9aWC58
gtyur7u7BLlOxmj5KfK2soiCr8hWnv+lvERuVe92mETmVxagNiGrfU8XX4/P
V8VOu+eQA7/whezB+9ecl8Uu1B+fwwqWp/D5zj/A2A35dud7TVzfqTrxTU3I
Ox9xN2QhUxwmTBRW8d/D3CLakPlvKR1OQFacitvMhPKRQ0f96wYUXyWHrPmd
uP4aHqzEIefaCDyxQD4lI5mD14OeHZx+fsgdZ5X9cL3P11lK5SLvuLAkdgrN
vw/Un2lFjvNt6lhEbjjfenERuTpFliUJ5U+WETG9qZdG2Djf/aSL8jPr/Rjf
AWR1g2n9cWQdrtu6J5GFow3uRrGi/WT9NL8jfm4+ar2bjQxBsyTHPeQ//Ynd
jchL7yMqwpDZC/wGzrCT4TaJP98eIqdfXLnUj2ygmMtKQWatKT13loMMb2wJ
5IpE3rOk3l+P/I8z/I0//p57xkYpEhl+vfqD5ozsIz6jfhW5Xe5T7mnks9Ti
2mTkLV6lkxrIsdwUw2rk6u2t7ULI65/KhX1E9miMf/AHrxepjU/fIvPniF4s
Q+6vkn75GDlYLSALx++TfsxBS+TRiayveshart+2cSC/4JGz5kAOr+I0i0P9
W+jL+FWNz8vF7Af5kMklR1k8kS8fe+HrjManF1F+Zxcya+pv9koUj3WaJ/gG
Uf6ohHHvmEHxs9/XGB+DbEroXhRA5v28fuYI8kZ6/OOtKN5cvJmsyz9Rvd5s
W5JE82OnO/PuFXLI1Wud+Hw/+0pZ3A550puftojywYD/PLcU8vGsCrkfKH8+
TJz17/+B9g+e6iBcT7VeEa4ZyFnMW+zCUb5GWZ5vcEZ2fyEoY7eEztMp3jY6
yMOeqUZHFtF+X0bm2oJ8q3u3++4FtH9xJQazIHufeKUvO4/q+fjh6KlOGkHi
em+lMIf203Ubi4aRA6ZETfXoJMjOMeY+inzRcUe8Ow3Vx8WWw3Rk3d8cIbVU
EiwnNVjwovaOex63UkR2P5k1uht5l+HWxdJZEtw7tWHeBhl0cQpeRtYfHHBM
QJ7q+8ihgfz5SChvH7JFueZ3FeQ349dv7UbjT1EXVDyLnPW0YUsY8kVuBa80
ZBOBnvOjyP8lvHq5AX1Psdvb0gTFm3b3y1gmsvQx0pEyZBe5VEVb1F+6T4DJ
Tnx+vEcZ1UHjKXVqvJ2K7NFxea8hGu9+m46azSgfNpw0/HgTxcOI1YI3EVk9
LrirEsWrdM91GXGUfwpkPxtZFN8hp/cfE3G9iE/n5aL4O51/VyD+C+3HXrv+
GKP5OnBO6V4CstiPjnJWfF7aU9Iq2Ifyc+2h/Sd83zonYhSKPK/Bx5yB8oNT
1tVnEVngppJYCMovprU9guf70Xq47t3Omygfh58UZhHIdq6fjluSUf4uedE2
DKD1h7oYfIgL7Tf5Tq8tkZ85Bidv4SHDlHmmN/HIA3vvGU/ykuG8Lt9kPbKN
fdT+rPWo/YDL5sPIMk7n1xnxo3pNOyQ0h7xTrC7oswDKX3qvAx35UXPnfSVB
MsyNPFg7iKwhsJ3zshAZPraffvEOOYFyz9ZpIxn+R8r8GYb8SfCvuIEwOh+8
b1fTRa6QZt47jrzN4W7vOOp/PTVt1lyEDM9mPOb0R+ZTnFL3R16q3LeXjJyY
f+SMM3KZpcGaF4qHzJKQpgTyvQ+dOgMonmVveq8Eo/ZWBXXWqSOXmBWu5aHv
q8anRfih+TBtHByJRv1rCaAqv0PzN1FwI0wZ9d/e19CPiuZ7vrHQNBKNTzWu
65AE8uZ/h5lf8pFhrxrd+BDKl2+T6+89WEeGjl/rcs6j/Hpo6sa7D8Xzn+Lf
O94oP53e2UylcaJ4HNH9l9CJ68+iZwjNz7Rzn29ZB7oPZ2y+tIjqP67ExaH7
OzofsbxIGEXzXRoWIsmBnNz6WrkM5UfawsBG9XZUj1trrt1E+aRQ1lzu3oby
iTliYRPKvyRlGZe6VnS/y/PleIvy+YntzpityGE8wRznp1G+x8nZRX9D+1v3
nSbeCXQeNEvm2ogstKKh+2mMBCdU+MIKWtB5YUtNTOYwut8uWVZeQlbIuduf
OYjuoxs/me9DPsXtqtXRR4IdrSbvJZBVLw5kafaSoFe7rLkscqSrZEd/Fwlu
MPw6b4T89vDuQ19+kGDO9laXKOTQrUldPJ0kqNcnq0RD1rzbdCD1Own2JUud
dEf9WRQU1IhtR/s58V+xKOo/eBwkP9VGgubPWdt/Iof/JW4UIn9olvlZhsY/
/iv47RCyH0UjqRjF5/zN0bch6PdazqnJzSh+OyVNNKtR+8FFwznCKP51v1Zy
AtD3OeJ96u+i+RHiGrzW9hONT+N5AV5vz6WInXzVQ4K3Vn834fvvaPs1W4F+
EkzwqWTajfKlZYsefWGIBOtfHRvvQfkUYdfhbIni969FsOkhyscjb6uf7ptE
64E8S4zBIFpPnzXouKP58LMsZVsdQut34ZYnImh9HX6rmfliGK2X5Z5ULlTv
i6y0P4dH0fnVrUYRoP1jpL5BoXkMxb8u2iuNmwyPXDn6ReMvWm9l/uuWR/lY
v3NIP3ScRmRKudPeoHy/ZHFavXiCRmyqtfGBW8jQl8vfs2QS7TezfRezt6H9
77qQSsgUqk8fo7W+nWh/UV2hyU/TCIO+Xbaflcmw6TtzSTTy8xW/XMv9ZHhT
9h/zO+SIK2673TTJ8KjrzHg+fv/U7CK7NhmmvvA+dGEa/z2N2jmvQ4Yb4kWv
fkPtSxRu5FHXJ8O8tjM5TMjTTQv8bwzJUIrz9eQ46p9jpE7CJWN0n1/oFIlH
/b88Ijm714QMT3wYf82KxlfTI3pZBHndyIvTe9D4n94N2MqF3qdo90C5EXSf
eRRazorak7btfT6M4nnb96gGyxF03u9rdHBF60fh/RY2jsNk+Icd/PcDzY/i
jf4wgYPo/BzG9FEE1fcdJxN9JTV0/vDPmNJA8715e4zWRTT+idcxfkdQPfZf
MV2q2k6GNAlqsR7Kr5m6ju+mW8nQ/8sDE22c71TnPfIo3irWbibwM41oUM42
XYfW3yN3Pu1wbqARnEkbXpig+ZWV5hEveY/u59y0sxooH07vVLyzrZZG+Kd0
8lIH0Hk6YGtWwzsU30i6Z1wHCZr+K2zLfEsj3CIyhvSbSfCVxb6Kz5Vov2QZ
gturSXAdNbTkUAWNmFvV1TpbQoJx/IOuPOXovnQxsoQ5lwQPX/Qi7y2jEXd9
7H1BKgmeUJrIqnyD9r//HiypPkb36+zjeXnIw4ZRbZzRJHjxEPUuL3r/0pkq
r84QEmw82W/cjXzuQq1yjT8JPtNnt9iMvnfwuTvrkDeq9++KVi2oP4HKkkan
76DzxMbkjQuov1Vb4kM1bpOgHHl7XmQ1jai9We391IMEPReD5il1KL8nChsp
t/Hf8y5fYEXxYQnXObLLiwQjSpfb2z7SiF9LpHF3HxJkWixoYv5KI16fl3jg
ep8EX0s+O+GL4h+dJSi1I4IEX378wmGA6nXa/EfOwzgS3HqFT9IE1aPXZQ+J
F2i893dMPvFB9fbAWPyx2CsSvLoiwl2J6omrfzSRq4oEk+v+9pBRPZwesLKx
QfFdeldSbEFF95MUD4nlbhLkPrHbIX6BRuy+ln2rHM0Xl8B57fJVtB4rmxfe
QuevWV6DbbksdCJ6zzvFZbQ/9M9e/WBJohOS0ROnxFC+KK5pjpRz04k6k5et
j7XIsHGB26d4PZ14KSUcr3mcDEUOWm/S3EAnZlSVNWouk6HZhaf0gxvphIC8
jdSIJxk+yeU5+kqETqjIjyRfikDn0RcKpffE6ESy27PJuWQyLM7REUnbRCdY
DodImRWSYcaZImUBcTpxr/ev1/4aMnznIP+iGj2Pi4/UtfqK9g8DIeFc9HvW
XC/fwG4yvHU0NfoTap+yL77g1jAZniyIvSKDvl/eavmbNkGGgSPaFwoE6ISb
zqXgjll0ntcInXZfRyf8SUM6dBoZDtyq/XuXk07Incy+uQv5zeH26o+sdKKV
aeNG52kyFBNW8LiG4rVvtkEqbwz1X1DdyHEO7Yfnc7l//yLDb8Hr+3tQ/I+z
ZjhItJLh1XuNzF/R+ld4RIR8rZYMjZYP6lmg+Zx4+F/Gn3wy1L32TDsEreet
1fVcxBMyfN1d1enVjO7Hny/4CweQoX4o/bwhqqfwopsqO66QYU+1rwo3qgfK
u7Oa+0zJ8Li1kduPfBoh69TSd3s3Ws+YZXu+vED5/YO0VQedXzrujFzkTEL9
PUNN7Ef7Y9/XAe6UWHSeVJIXTfuC7sdVp1ILItD9/q/ZUN9LEqxuZ79uHkQj
tOUfHJkKQ/nf7s+U4UMj5BI1FeSvkOA9l7HFCk+UP1u7jX7r4/y1zMxzpRFF
2/Yk+ciT4MwFf1GKM414GTtbf4KTBMdt7/r4XEf7W5N1QulfDtjHEW94/xre
byQqWb9yQE81xa/FV9H9sS+RL6KEA3KnzM2Jo+dZMCgmO4kDHi+7qv3BEZ3f
DjlMZIdxwMzePOcqJ5TvgXrdPZ4csLFDQJkdfT+0Ml810pEDvnv5eFcK6p9f
sd4Bki0HTE+Jy4/ypRHKpg5jIdYcMOuYPPgSgvaHCyd7TlpxwKNib7vMHqH1
kePyzsxzHPBzc9R1oWc0QnLp3qMCew64/mJTKVM2um/HeyQnuXJA9WuXDrKU
0oh/UslesUHoe4psSsxo/TPb6qyc/4wDFkaHbu5D+7fPUpj6cjkHvJjQKnsX
1euU6uCsRzcH7GH7wFSI6vFxIkvKJlYSTP1qtd6MjU4EXDv9uVaJBNea993b
J0QnPjk4pB60QfFe66iQlKUTkZoJW3QoJDj1intgQJVOfPynvuFOI7rPHzrA
p6BHJ9aMP4rOoPpNuiKRPGVGJ5aBzA1lVJ9G6x1HVi7QCaum7vzXqP5cafbt
Uk504tZp0yc/y8iwucq8dLcXnbAN6t80t4j2r2sa5Pn7dOLXvdNrOhqcMP9w
krh+FJ3o/CfBN3ebE5Kl26QW4+iE11fq6s43nPDRmMncwFM6YdaueIaZxgkV
djVkDqTQiUnm7T7hClyw1v2z68/ndCJKJvPI73Nc8HNR3v1C7CAH/h1RXFBe
XkPwNHqfJHuXHFjGBTdl86/WJNKJviitj3u6uSDLg8Dz4zF0Ql02R+n+PBeU
JDcd7gynE+tepumMc3FDDS7R+ChfOmE3mt0xI8QN+y8ahMreohOcNboJuiLc
0O9uJ3OhLZ14LPugrpifG2Y08uf9dwLV93rhGDUWbmj57H63LKQTjsqHmvrG
uCBftdFBq510Yu6Wv8BoAxecK9cWlkLzsV0+3iAliQvuf5rA8gLVfwHhz+F9
nQvGU2dvb/2NzoO3TOrZVVH/rJRuN6L13iclpKV1jhM2KdRI/CigEU1tZzZT
Cjhh8mLX+vA4GvFO5sDYymVO+MHwT4XEXRqxbkDuwydhTviZ3Dz16QK6H7oI
8pZcR+uLuFi9yy4aMcgbOmGOzvPH+aeM+zfSCKldRLZDJQl+qyp2O7VGJc4f
sf6Sc54Eczsz1vOPUYnG0+xqLRwkqGrDoaLdRiXIjUY77udywPIF83DxairB
tJ81xOkEBzzIZtfX9opKpFiL/lBYYYePuxelHydTCdttgsLHXrBD47+PZWIf
UYnjVVP+V83ZYYnP7wl6MJVY8tu0xkpih4YhzoO/fND3V47MJFayQfXArkyP
O1Tij/TyzSI3NuhmcnT9gAeV0AttD3yvwgbL15YXNW5TiaPh0tcNllihMp3Y
l+RFJT5dMd5XVscKr7+LOyDnTyXk/1zaHxnDCh397nGMhlOJGZJKmb4jK9xX
0Fs5+5hKLLK2XLUzZoW+PdVmZtlUQtU1TMZlLytMd5JhF3qL+l9GObksxQp5
V3XL97dTiaY8Ed/4TaywrmOrVdkUlWDrN748sZkVrmvdsRrJi+5rmnKzL3aw
wt2Uyu9ZSui8YvUsy/cQK6RkvVQdP47OIwtT18BlVmj18KrmHrS+nOhoO5If
ywrr/wl5G6XRCEPHzcvZbaxQV84peQnt7xrszA2cW9lgrl92A3UNrY/GJUvP
vdigThrvka7ddOKfmVahzigb3GrQ/p/ORVQ/iuePPLNlh+So7evyY+mE5obv
beqz7PC16EmZB0104qaW9OVMtB4+8W7gjGSZIzyjL/yXgeZ7WWt83lF9juhj
4pO+i86z+n0d+5WuzxEGRpSDmVs4oeSWjwbvk+YIW6VoiRxhLthR+sZn66c5
gtbBKzqziRtekauJ2kufI8hqUUer5Xjg32yDM4sb5wnvRckIIxVeOFXoLx6i
PE+kekgfaNdaB0Wys/aJ68wTThSSBZfGejiSvO+1sOk8Udnl6b6Pnw86F5G2
CxydJ/5qPnvV684Hr67e8PquN09oFi3+/fKJD/Y4jeldVJknMgLuH7nBxw+v
DnQeGhGbJxyuCu34rcUPTzYoSlTOzxGWvQ/MdpnzQw5ofuJc8xzhuE3RYctJ
fuhzarej0+M5Ynzd9mwDbX4YWpJfmWwzR2wU1r02KswPS644PS/dMkeIysrk
lXbxQfCUHwb/pBPdq2cnP0fwQZ/Ya+UTaD1Lqg3467WXD5r8Zl2qP0wnRht6
Q0zi18M/r7gos2h9Lt0r43KmZB1soMcHGqXSCP0hUmHBe144oPxeKuMojZDP
LZuMaOKBHzWZu5tXqIRlp6NgWy0XTEix4Llxmkp8Tt3hoVnHAb/kza1GK84S
S+wW/QPf2GF9hG2u6t8ZYo/ksN/AGBs86TasLflyhuCbKhhe5mSDkQHmV9Nc
ZogtswPuxSifvYGg43owQ0y+bg6/bMcCddpOlKevnyFOnjpOwHRm6Cgndz39
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
K4Q3q5IK2HcRJ4tmOKDd4oLJ8y9UUL4ayllvQoIb2j1lzg9RgVR0xcX+LBJ0
HZZeyl2iAiVF8b9G7GQo+EFrxRStp1k+zltYSsnwVPX/SrrveK7eLwDgyfh8
olBmkRYRqWhIxr1IEg1SSHZklFVJRiqjIhFFZI+iJV8yKlSS0SAro6ySkJXP
B0X1O+f5/fl+3fu59z7nOc9zr1evzgkUuL+dRe3WzOp4wjePTp88sXbEikXN
PX7+T+rheTTPb8vlN86wKO3WSzP92fNo34TuetvrLGp+3lLH6tF59HTX5gbh
XFi/0uyk8xt46W7B8Bm3GhbV+OGSpo0L7AdiUQLKX1iUYFSW7vNEXppnH6Wz
YpYFfxelVS6s4qV1R1b2cgizqa88eht3feelORolKxXl2dQXRwWlv3P46NVz
rn8Z0WRToouLZNmCfPSh/cvfiBmzqdbCqVRxcT567n+L+wLt2VShKFvHS5SP
XnZVJYzzBJu6oVVopzifj5b8lxUXfI5NHWNtPxX/i5eO0U72GApnU7qCmRXS
XfA800vvrIb3xI6lG19ZlMLzKAQHKCSyqTE+T8X+67z01MyWy5PwHfft17/6
YEdeusJ6Yigsg00VxToWcm3kpQWWcaX+BM8df9SkMzOP/iBYG6qZzqaKi5xu
yzyfR7seNDQKSWZTl3Z5jkVemEffDIz0/3KTTSl7C349ojOPThsNfON7jU3N
Dq5yC+ScR6+cLpfwvMSmfHVvLcitYNKr/HQFxgLYlMK86wP5wUz6QIuXgrQX
mzKyOKmtqcekOcblPqk5sKk9OpGWQ3xMevu9hh5HUzalNSLsv72RQRvsHXBp
3smmDJYYej5PYtBR4cfdilTZVEmA+o8Xrgw679vuueoQb9vRoPs3NRj0oQLr
gqglbCpdQrY7SIhB8/ab0j28sB9PuATnDfPQvvruIwdnWJQKtTCJfstDm9Yc
3Cn+g0WZXXa014HvhQ3yM0L6n1nU6y0LdpRDvsYYC7ybV8eidvZ3rcq9wENb
t/Y+OP0C1vvmTd+5TvDQ7y/urL9fwKKmu6Yqco7y0LeXRFaVZ7MoOZHCsUAb
HtrQYbi3IolFiRbkFNlbwvXXHLeoiYH8yzDKUbDioYuDX/B9DmNRpdHFTTl2
PPTxzKR6ZhCLaho75HLfhYf+/E+1bL8/i9oUW5f65xQP/cX8y7MX3iwqo7CA
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
e54Q/3OZIOf/D6l6taM=
       "]]},
     Annotation[#, "Charting`Private`Tag$10265#1"]& ], 
    TagBox[
     {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[0.75], 
      LineBox[CompressedData["
1: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
97Xm7baMl9+l2M+UTJq/sxhd2DCA/VqJelj6M/QcvYRwdMrZl8z9nAMMsH8q
MZYpbUC7Zn7D/qtESjvqO1ql8DzzfjBw3lYCnyd1VXUAemPvGPP8n7r+//k1
+V3Mfvdr6Blz/QOLWR7oTac/nGasFsb0n8xyScP+a0S/tyINnZv0B/uzEu7U
xhKmvyl/Qyz6S+zjj+ihBHqJWQ/ePkw/bcPdWtfQO6reMP3HP9on3UBHfG5S
RJuYazHnX9iMY0z/akOjrjy0mfNtc/RznSImvk0NPv+h63RysJ8zkb7x2hut
t+oR9mslAQ83hzDre0EeM1/2GtVMvz5jLzfsz0wqJpYno9WlepuY/WNZPNN/
OGuG9hcmvnO6mH7B0t9WdjPxt59ZiB6b/P4XutJZuQR9Y+Q3kz9HF4s/QU+7
FT3ExOdh7WPmeVQfjqLHT4Yy/eJ2Ctgx+VfeEPAQPe+oN/Y7Jg8vljH3+5XM
w37I5MOTrdlMP3b/b9g/mcy10EpFn2JTFpoUXE1g+jPzJrPRW78cDkBrnBZh
fNHSgenPHGrQyVyvZnJ4C9MP+oQC9l8mBoG7TNBzpo0w96/nk2H6g/eOeDD7
00Bltgpaavmpv0z8r6ycid5ReHiEOU9clzPzd+ORAfO8Mhm3x3B+pX41Y79l
8twy/Tc6e/2WPma/3C/L9Gd3rE9j9sO4kjlMfvSq1DHxNf7awfTDzhtd95mx
7q2H6OfJ0dhvnYg+criDXvfsK/ZfJrXTJDKZ6/noB+b9SOFFKtPPu7aslrm+
JYbp3y0tcLQGvWvN4Uvo+Pjdr9Ds3Z7xaOGzB7HfNzFVCLrA9PNtffACXZ+Y
E/v//qvj2K+ZPN5Swvz9Ci27x+g9nGTm+zkKDdi/mcjeOnwTndJ/CPvBkqx3
o/eYfsjPljBeNymKOZ/Ok3HGTa5GzO/DxYFF2J+crOz5zPRznmW1+wlapUeZ
6X++NqGHye91hzYw/YCXjV97hk4K2sz0T+8I9cX+5WS+tB7TX32L9iFm/KK/
Wpn5sTILecmsv39TmH7g360Tq9C/ImSYfuDxCm3M+mgTGWD6T+d+YWF/YzJa
vZXp/55sofOeiZ+vGtMf/nKhDbN+np7Yw/SPj6nbh/1TidqXv0z+hCXvZOYn
JmWCWb/+s42Y9cVX4sT0q3fbIM7M50whHUOmf7x7OfarJ3f8xAm6PLCcmf/A
HWeN0HzCi5nfO+ZSj5nrx+MnMfuze57sCmY9qSzCfsvkRg5vPvPvZTqXGJsn
DEqj047nMO/PTlvuiTHv63Nbsb86OWx+momXuW4ic7/UNTfHmX7ycXvb0YdM
Jo+gZbmzsf8v+b4+n8t8blPLjJ/fJpXZzyxKTmD/Z/LM+f0vtISKEvO8Aq5b
f6ADx14w8Thspt+FXvjAh3k/uL8+rAOt7buIid+T/3SZ+Y/T5zDxTYizYPq9
WwqX1aG3KlS3onvMkpn58Lue24I2qoth8j3zcEYz2oH9lHmfrN9ImM9fHjZj
8n9pqEkb099b2JiZb13VSOZ+Gy9lYz9jMstVtIfpP938lHG69s0h5nw4Yc1c
b2cZ9xf9mXue+f6cxAVM/JQkB5h8Gc/XYjHvW2MHmPGVlGRMRjueHWPGn9Zj
yryPjXw5wazXIhP2NLTd5R7m+Y8++Tod7XHQkImXa2QN0w/5zpTdzPlrdXWY
uT4jPI6Jt88ZbQFmvy2XZeI9wNnAzJ/Hw2TmeoGUAKZf+q/OP8z3n963g8e8
D+gfYO4vViLAzKdaigoT77yYSOZ5m//+YsZv/nsN8302ZxKY8cvJvxHG+929
xmLmz+XvTOb5xbyvMt4xw4L5fbhvjQLz/bfgCMfPBy9nMvc/4rCXeX+5fvcZ
8/kBAwHm8/D0rcznefMhXOCnv3UYS+4oYv5e8oAQ4xXunYw9LvAx1pf4x/jT
qCTj/wFUTfUp
       "]]},
     Annotation[#, "Charting`Private`Tag$10265#2"]& ], 
    TagBox[
     {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[0.75], 
      LineBox[CompressedData["
1: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
/1UD+S7ckkvr2uDF1vrIf+Ekc7tYPozzHLlAdj2LnARxPbO3lyEvg6ub0a0K
Owqy/Axu/waBdbBtlCPyabh+XyG2HqcXZyC/hktIuuUHt3+8w/Yzz7J+lg91
v8IkjF3/yfw7cN6iA2fZ+mmfng+bzxxm15PeV8vy0WxdKpCvw8Xf6uiFf/zt
YutPZIw1y28bVWPN9s+uKfJs/lMEJW7CxeZL57F8PEOJ+3Dum3oruCRwLvKs
OFFtvh0sD+TJTLYfn3x4fz9szTsR+V2cvmlPAMv/WteDvCFuVldOGMt3eZSD
PCJO44DoBVh7kiubfxnV6/Fw0trCRrafTz6VDE9ZV9HCjm+WewuOlTmG/vjc
qtCDLF/p8yW9LjYeMmosX+mnUHQv/FzpO8tXWn4giD0PaE7qYPlKVpU/kSfF
9dios+NNDv04BA90P2bPK5HXDJEfxa36cIzlK+VLzUD+Eyfl9InlKyUFebP7
U3uc6lGW13YxAvlRnO7kHyxf6qpqEPv72u9mLH9K75o5+/55f9OV8KzqZHZ8
iTcterDTyxjkV3GPWxQ14F+u09h+Nu/SxmnwRL/1yHPhDBbwSbI8NJUNyI/i
VvsqCMF9TcrsejcdzmD79f77+Ww8dqgWtrO8vXMLO2De9WtYvoN4s0cbrPXt
ewFs+P0zG++BRYtzYB3XmciD42qC/R7B8m1H2P5bUfOC5Yd12NWy+ftYOpLl
i5XEGyNfjNN54XIV/rO6EXlunHhT3yX4uHZaMbxmZmoM7GX3DHlunHDMMZaH
VpYlzNZ30s9brL4VjrK8Nm5CzBD7vIpjHFvvwUvM2fGf3pqFvDWuMPDLTZiL
+pHBxi9PkeW1jerrZhbXCS2EH6rKss9v6btQwfLMdo3OYv+eG/5Yw/LIeDl2
/JHrbT/Db1pTWX1f0Kxh+X/bnpsgr43r3TeerZ+LkjzIa+P6ikVY3uLSkirk
ZXFX9LL4MR8bvr54yT5fOnMUy8NzqUT+EidrsY7lK8aVDRSy/WSOMMs7K/8y
E/lt3HtFVbb+jHst2fjZLMqcDvP8PFDO1q99JsvTG2yLYOOdmqA6B+YqU9+w
+awWZPVj6ZSBPD7OWkOH5aU1fLiBvD6udmMBy/NrPO+NfDAuyyKV5f1Zxaoh
743jGfOZ5QEubc1m83/1shvLC4w/pIZ8Qm7v9yL299njPZFPyHVETl8EO2qo
suczN5lgtl+Ev9RHPiF3WsGD5QHqVWcyv7nwgP33u9iSz+zzcoalbHwapo9j
x4t8M4mNn3DQv98Td25j+Yl7d49l57Oij5/dj4bXdbL94pGTOcuXE67MZdcz
Rfwxq3frLjd2vYNvDFgenUrYTDYePVd6WJ6kUEpvFVtf79pZPuSqvm52v3n5
azHbL1/YabDx1j73kNXDqwvz2fz09EmxfEeP1Aul7P4VbczyLEMNLrL5Ws2v
zPI6I/dls/1uRkuWANtfFAXY8R+s/MLy0DzLbdj8Seu7sHykruyb7Hzii81G
s3y6YJYPyhkkHB4DX3ihyc5/peZXVj9zU8yr2fiklLJ6FP1sz77vo3iI5SMu
4DNkn/cSXcHqs+vGOna8XbLSLG/y4OLjbP2ey3vB8ii7+KvZ3zddLmfnPy1O
jf19Y4cVs1k3yyPlyuzusvy+v8bi//5uWMrMN6qPfX+5/ifmPyos75QLn/0v
D3V8xr/PdwaOYMfbPIblpXJaSYLMzff+2cKYl3mTyT8Hv/iXx7o09J9FLv+z
3ol/Xv31X75r16J/zln2z1nd45j/B4lpl8c=
       "]]},
     Annotation[#, "Charting`Private`Tag$10265#3"]& ], 
    TagBox[
     {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[0.75], 
      LineBox[CompressedData["
1:eJwk23c81d0fAHDz3mtkFKI0FCIrKeMpfQ+JbEolUTKK7FQkOySrMrJXJUJS
WVlfWS0le++ZPe61x++c+/vneV7v1733+z3ncz6fzznH63kEzBwuWNLR0NBc
IdLQoH9HssJ/0JCAwSWu1ifdZPz03f/7uuP/LcxHS3Xu6//b4fb/fSD//zYL
+//3cwz/70fUp5KA6a9dVL+sYqBaXuv/1ovf3N7eJoJek51U17Z1Uc2qRaCa
/U0O1aYGiy3I7fNlVC8wslA/V3yvTn3eaZ0zVHfsXqJarPkk1avSJOr3Z3yq
qL+fX2mhRZ+/pSRQPxf8lb2BPr/SLk79XFBmjRF9Xjcd04YsRVqnfn9s32gz
MsNziSX0fWt1jSZklauGFGRP70bq52J8lDVkbFcc9ffnbP2oz3NXON+J3Hix
mR25VpGnC/lyVtNO5BBtdernt7zbqC5/nNCO7MLwghP53El36vOedNyl/j5p
6v/za9/hx0qdf2sX9f0v5WpIyEGu9tTxRTZbMCDfKyM0Ipc89qHGI3NH/l/k
9yaC1PFKnnavR1aQzycjKwa4/0H+b1VnAvl8ocFvajzHLw0iv85KpbppdLAP
WUH4JvX7v4tTe5H16wOoz+syaaD6w11iA3LFRfd+avykB6jj4f2TMoS87yMD
Nf6iIqfGkZ1XL1Dnu9eLaxKZ0PyUGo+GxxozyJT8nx3I3yR/zCPvmGSixrPk
9RPqegyeU+5G/jDov4p8r9a5Bzl1smoTudI2qRc5vFyJDsXnj3xlHzXf+iYI
yD8t2vuRvx/U46DWw/HCQWQt3l981PWLlxhG/hLy/ShyffbtEeTOy36yyLt4
toeQ6ZeNFZAFzG9Qfz/7nus/ZPHPktTnG19OoH5e1N5PHY/tk5fyyAv6DtTx
TjfRySHLmXRR50en1XMC+fe9Y9R8mV4TPI583MyJGp+c/g5JZCuhJGp+qG6u
U8dnX15AzY/PesHCyCoSJdT4tytHCSBfyMqj5kOYnhQ/Nb9oP1HX0zmGizr/
73VFP6nxa7zBhJymVPkduY4JUOPH49RQizx2eJqaTz3Da9XIPgkui9R8yFKp
Qo5z7qOu573qnK/Ix98JDiOrHlOooK5HwYVuZMbC0XJqfpFym6n1Zfu9jFrv
DEFFyHxjriXIbR40b5DfhR6ifn5K8FEKcj6nHPX3ZXpdidT6zgzDkdPSDiUg
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
4gw63c9/jXECv+qgv2HrC3iz6tWliTYOEMcvzhVosIDHPbJb3KjaAUjuoRnn
Wedxi+5rr2tXWUBdQvmsmO0czvkXqxvUYgYdwwqtj5Nm8RrN0pLS80Tw/eAm
SzM2jffZtC14zjICy+RZguXeKbz2cZ1M3QcGwKt1hEtlawLfLj2wddGFDiwQ
CFuGHeN41Vde5uvetEB7tSRRpnUMP7vKOmqVQAOiRbK4pDtG8dTDPkUqkdsY
l5T7xY2BEZyOkZUzjGML6zgkkXhqbhifE6c4amZtYD5OPRvh9MO45NeRijNm
6xjvEOno271D+D3mqPoI/lVsY+ijRpThAK4nLt2oyL+CGV5yjKx078fjmtVS
M48tY0ZuKULJ5/vwa6fYTY0Ml7Ck1/sWuhN7cJaljbjJFxRM64ZEc+ZKF950
5WzUwW4yZkQT7edl2Im/eaFzvekkGeu5kHOgo7Qdf1haq/xp1yJWIX3dSvVF
C861W5Of9+UC5s6ve9OPphl/5Tb32k5wAVstmauKv9uIcx3tvkAon8cM3KKU
ZMf+4qYTzy3UzOYx4PSpgVT6B5d+/i85nWMeG6s4wvLo/S/c93U7Tc73Oczq
QuCxM6++4z4r+4bnns5hF/29Yttja/Ba7if1XAZz2Prcx4jOiEq8o1mk5pfw
HDYkMBFbfADHLaJ2pzbTzmGWL8QN6Pd+weUeiTFTfsxiL3YId/TwfsZJYH+N
SMosdiiLyVtVOhN3zIubJQXMYuUv0kYabiXge220oxwfzWJJt923vAqd8KWQ
alzPexYzam0ReB0Ugf0yfg9yI2exO+K2s08q07B7VnKM2UWz2ES3btl8fy6m
GujJ7jI1i4X3cLTrDBZgTK28fhK8c9igfxfD9kgpxrJXycNYeQ4TYNr79cqD
r9jdifkthvtzmCs2VhPyqBqzOdh01DF3DpOy97lJ9/gb1r4n1YVMnsNeuisO
C4b+xHS4BY8uKcN4pnTz3Yn7jYn0fnUbj5vHFOk7r7+79BezWdrtqrM5j+2+
1Jt/sr8Bu/w5/mjpnQXs87TnP2G7Jsz4VHx929AC9u/xrd6/G83YHZsinmvW
i9gH67alsGet2Jpg+QbXxiK2+ebFq2qhdmx98193txYF+z7w+LTu9S5scP/k
DtodS1joAwXCS9oeTLv0vvyz3iXMk53WVyGzF5teqVBqr1zG5s/sv2Yh3o8Z
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
p1tExo7VSPHYuBHA96xJ1lxY77Ozb8ab7xLAQiz/Q6EUMrZtPKE850AAjmvW
89VRZEzolbNjoBMBpJE+JyfB/LI8PSBn5kIAYX2NbuV+cH84rl992ocA6q++
8xX3JGO173evNYQRAHcSW8yUKxmbXrpNrY+mTA767XvwedxKcdufCaDUqqDQ
9C4Za81592wFzifgRsNOFpjPNEdkb9oPE4BRfHAx2RHm74G+W8w0RHDbMeMK
J/y+uVb/ivM+IkhTtFnSh89TNZFd0oPxm7nk7pLmQsZ4ex7TqBoTQWrkfyYr
j8iY2tsguWV3ImjznHU66UPG5PLZKu0SiQCwThQceULGxhi/x0/AeqwybXj2
B+5/6//JmvD2EkGSqukyJ5z/m0XtktebRODHSTPXnkDGtFb8v53iJwHfWu8V
pjQyJkGJJ0QokEB+oZJQ8Ht4fvrJL3HDgQT8KzZoeHAyRg7U99N/QgJ966KX
pr6RsddAaWUrgQRsc1YDsv+SsRKz+FdyuSRgQTf+4UwHGcNHOH81VpDAzo/s
s8EDZCz5hlhe7h8SsCbFfff8B99/+QpjSQcJ/O6Yv0U/D9ePZrtjaADm37c/
gURYv5yHpS6LjJGAeCVR+tEWGXMZVUkN/UcCp2v7jugxUDBFm/rbh6EbBO/k
uTFRMPODb1jpRkmA4c+W5fwOCrbWrsOt0U8Cws7PuN5zUrATUgYBgu0kQKf4
7sw7mJ++/OEzFb9J4JXSl9whHli/Me6zBl9JQKZUKNqYl4IZ1LJ77/1MApf3
nUzk4YP3dKeHEhdfk0C6J8UdOWZSzVMxnAQ+rJ7aYw6/7xFlnLDPG86/74Ah
424K5q+5/Z+cHQl8jtcqJHJTML5LRtG/r5LAwNuPNx7shPe6+v0Wh1RJYP32
qerr7BRM5p60wP3jJHDgp+etehYKdrcpmZXuAAkwl7rmthEp2B0j8IyWlQTe
umakPYH1FE4pWk5fJYLrw06ZszA+D3fHxwmOE0FPo5LewTUyVn/H+GNqGxGU
8NhxH6WQsUTPIUeV70Qgmbr83745Mmbgc+aOeDERHIlfDGaaJGO0+p9Lnd8T
QWAzj/TWCBnzM7Wyk3pFBBzmIJYJrl/B7WdMDjFEsJy6rqLQTcZMfvDMnn5O
BC4TmhmxbWRMpMGRkPyUCLSCf56UbSJj56a7Dr30I4IM3Y9cfPVkjKDnvL7f
B473yDdFzV9kzOz0Le3jXkSg47dq1wzz6VPH4epqT5ifS/tWi6th/p57Of0N
fr4Z4MDAUEnGRjXaSEd9iWCHX9rVzzAftUrbHrX6w/2n3/berzI4f0Ll9YIg
ImCk8cnWLoXjl+s3z4XjmyuuI/5XQsZYExu830UTgaDwrgfPismYVF/rYf9k
2J/0Szs0oTWe21wRyiACO9b+cRvo+VZNG5uPRPB2UDR5ErqD7DgqV0IEY9WM
fTXweX+07Lhsaohgi09nmQzfF4AxKIzUE8G6Ws+lu+VkbOFJf0NAJxGcSnhM
lq0gYy+rJZmlR4gglytY7BScD2vsqeqaWSJ4enBq+wGc72LzhpjIGhHsKrrO
PVgL45dxKuc0AwkUs+gOOP8gY5WhKnGqO0jgb91cBhnG73yVY8kgNwnMDRzw
CvxDxo7XSRzf3kcC3VUJJiINZExd7XxWsBAJsOz5aPgbrkdKLieLmzgJeDbr
fXGE5yV7NbJrGcw39iG7GRZYr2Ftyuxa8jD/tk82xHSRsc6Y10v8iiQQ0ed9
ixPur2rth92OKpGAwR9uFcd+MjZz/5eMowoJ6D8wUc4dJGMnhUwcpmA+rxG4
/tYNk7HI5FPXks+TwLyfxe+vo2Ss4eUDzmB1WC/DhjHB42SMdFiDJw/66C5e
hSMTsH+MEAUOQl8/IbMrHObjsIHpgzY1Esi9Y2nycwru5zVfxIfOkcANyo6Y
P9NkzFbC11fnLOwHZjd5k2bIWPsAja8QIIGzdb7B8rNkrNGYKeH+adh/XKo1
kqDHP7Hs0obzkytLP/QXWqfl73yxDNz/bgXcqoemsQ1r+CNJAoAlszcRmv/l
/dQYURLgWX9aqgidp5LlJyJIApJfXid/hO9rO+UXG7afBBQiU5w34HhOJ2n8
6OQlgSUF2scC0HsqVgr54X7aqFeuIQjHH/Ln9W1zuH6xdsXPSHB+pbNKd8qI
JPCOT/BEI+yHuuxkDXk6EqBtcjvnD+NzaSKCNLBBBMeTonqExmB/HNXQqFqG
+fLz4qEiWJ8ON49wTywQgUT1ghyA8abzKxu4PkMEbJXXj1XC9Sg6K+V0dIII
KM8E2ZVh/eJ9UiMXR4lA9LZHVlUfGbvDWx86MAjrf2qhQgOub1H6OdH2PiI6
b//qhPV930o88FQPzNf9VftcYD7sdElgZ+siAgVSePkheL+eFr23X78D1lOg
4aP+dthf6qp6GOB5AYTsb/4E+8FyVp2pCOw/Mh0mW/Ew3xwzmyq+tML6iXsx
kthCxljOx23nQ0ffjeQvhvu9Z+PadT74/flpo8V5mK/vz3zi7YNW+0/oiiq0
4KeGbvTf821FtW0UNpKxizL3zB/B+jIWtxRVg35uHc5/rpsISoevbi3C/H8k
Rsi+Ave/xPIE8XJoKd3fjln9MH42HfJp0PdkLczlh4igMr3sWga01nEO6SVY
nyaZIoG10K3n6626YT8tjcgP3oJ+mdR9b3CSCDwCVIZ14PucAs+Vb8N4cxxc
XMuHdlUNqhWD6+H3eN+6NBzvj10SR69TiIC29+hyBbTAz9HysBUiGIw5NmgK
55sbyJyXv04E9un54ewwHju1e23Q/6+kZdzT/BNa/0zy1HdauP/UN5g9h/Hb
OBrWPwT7AYutcIIDjC9TUCHeCPMn9rD21Usw/ufMrzuHMZPA/1q687Ccui4M
4BUlaVaSSIooYyVNcpqLSolSSERkLkQlmgcSaTBkqkgUEaKSBplLadSICE0k
9RZKvnVv35+/6/E855y9197nvO/VudcopW33cf/N6eDtEqd6W2ZU1DaD5svz
Y+6TFWKCBlXaqWoSNJ/6e2se2EsIGgwH+v7pI/csGsGJU71ywqOrK2j+C/ld
2gOlBA2mqhzak9Lcx8numTPmGu03JgF5+TuoXjrV02VDxwkaHHD+3DCD6kn1
8DbtcTKCBr/KqmRqyGk5thfw97mnZrwX86T94t5psSmw05m7kYPkmN0ZkTLk
UJnS5D1Un1K/+NWj6ffqDZTO1ZEfGm7QLKHjzagaEFGlera5Mzj1FZ1PVdF/
eZthK4s5Z+l8Cxrrck6QJx5YUqYrKWigzoUaXCUfM8zvyhQXNOi+GVyZTla7
Y54kQNc//aq/zHny0Sc/tTkanwzP8F4/8qaKOxKuYwQNVuns2GpFbk3NOuI1
WtDANLPvljA5+T7/gD+N96JmR6kCOj/b2jTfcH4ab5Eqfjdym+OzsTEjBA0m
WluM4iEXi4hsTqH5q9jTeusEXW/XngfNT/9SfVWdvyRHTv6q7DZIz2OzJTsj
LtJ4aYTOumBO6/30OZ8xk8mPBxbH3qT7gfc764qzNN55tpcHFtD9fr1Wmq8M
+aTjyNr3tB9UiSqfiqX52SQ6relmP9Xr0vg0CbJC/1GBK1R/V9/fnhRL8xm5
Oqn3cR/dPxtOWMiSV+skRIuQo1UKXVJo/u29onYF9I4y+HF1W7A2Wbgk3GcS
2SdVJq2K6uf81m9GrVTfmpPW3tlPdiy1eYq/tx/I3LtsGrm0u+c29qPgUlP5
Zqo/4+zpGtPp+3zTBEIvkusKbquFk82XOdZtJ29W9pktSMcfVJ2kb0pObrHb
k0qe89ytcAa5+TMvjyud/7OzwSYyZJ0pfBnz6foSvUadEidfa2qfPJGuv3HK
6FVSZIXu+Z1StL5Cr3grKZInvM2KlKPx2tE7bpMO7m91ld6zaDwtL8X5O5Ed
46Vn4u/vV9rVFgSS0+a2qLnQ+O/mH7smk7z4dsc0X5qfyNtmIV/IFt3Fr07Q
+nxkXr5Sia535baR0vj7z/Tx67s3kGe6ygil8wgaKFyzcrlKnqN1TDyV5n+n
UHh2N7kgIy05jvb3mV8NhXVofK9t6znnSfUy20nBI5ic42Qthfv9kuHK4Vfk
uW94nH6Qz7Q61cvQfMm4HVQ5TPUW1vrcYzWZV+6Ho7AA3Z//KkqcJ0s+/LLs
APmBZdi0JrKW/II7NWT1Z7pTx1M9BMYd05Wj+u2/r3HElhwdHCxgRa7f59YV
Qs5Sf7nEnWxdcvPTXXJKjMNeD/I2ZeMp78lS71Q03MiNSWUuAlR/On+6TfD3
6+/E8jZNJ/+dtfGaDLl8dOFYY7LvQIPvGzq+SGG6jRPZuDr+Rzi5g09DYivZ
9HDSLlVy+Z/Frl5k29Ob1hTS9Xn0rFp+gLy1bZ6RJdlS8fpoP7K0RkRmKY1H
WFbDrf3kjxGt5mZkvpbyoJ3kY9miV3NoPD9aGz5eR8451OE1g6xcY1y4lNxf
o2eL8bfo8S3TJstmnKscpvl5k+m7eDK5x0M7Ygt54pLcOD7yG6e27zV4f3aX
oMxHuv6VG7QO4P1l3fG3dYvIBz8n++B96zvF37efJw+oGWtokFNN4uS8yWMc
tj25Q/WSp+N2dxk5YvpYbiGZNzrosir5pZz24Vd4P0fd3mEEmadz3g53cnRn
7zzMX0nFr/Mi5JlW105nkXl41c4/pPps19DoOE52rHv61pu8LbbNfxvZpt0l
hSOfa/NPsyAntdVNlCRHZ1/Nmk7m99i+7DvVu8eyk58EyZf9LWY0kDvLTfd2
Ub2FLBfxLid/ir94qpL8YatLJ2wxU9L7AXnfnWyFRrKt/l+dVPLqKYKn8Hur
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
HLrHmwsiv5r/4wLyVdwcjRJCyN2mhSlzkL8gnI28PO7pW59e5DEdfuo+5TB5
ZI1jMOpz9tYiw0jyuiMf7XTI0Wa3jaPIwo1vXZD3JLtSUxHPe+PuZJxFHpSe
nMrDaPJb3Q0sLyp2WFMjhhy4/7UqLPmiPBD1Fj+qhOVH1Yjcu4L9gH/IwQa/
92tidWI8efnmcVE43lZdx10nyRYeeRZaPHifda8E6rcmOvDofDLPRaFweFXY
lI1q5KXO9a/hr9nujciTmpp4oxueKLVmGNd/Y4tHK6za9qkeeUDCP9/dgl39
Jx2YgvM/JrsSLvpPrhv5Up9n6tXj+Cb7Jhojv6vlTooO7HujPRj5Bb9LFx/A
+U6VmJoviv2jQDUJ16PU6DGMPDnlkGUZuN7jY+7YIo9qtLvAFYzH87qLLE+3
MD8r8gSeZ9Ib7JEf2PW1xBXj92v0m0lY3xLX8+dgfNPvT9/4HffzSy238Xx1
oTe9B3lVkiNLPTE/Ai/My7H+K0bxa2C9DuqZ8SIfreKQ/68IzE/JhUjU4x6Z
ychn54bC1XYjX+3n8ydJbP4df99D3orD7IGIUPKi0uWrcH85J13jj3oxPXR0
DfLbLL4fjMB6t3EOeIh8t6xH/ZdRX1NGvvWFl2tdqg0kx3XdPgHn2WbKw4an
Bf/CajlLD+F+0ej2Ox+/V+28sh/1+l5buxTH22MiHg5XZS+f0kIe6X5zHixs
WpSN8/X0W9d7iLxrNf9RXE+AfVkZ/OPJ3Djk3QXV2CDvjtO5bvOyDftToS7y
7jgts/XTkZf393X5Nzi1rP8S1uPv0JJp+H1981BtjO9+98cecGFZWPMP8tyd
dmXw0Ye8R5EXt+KeiD7OX7Z/cCHmpyF91gN44+DyduTHGa0rNcP1GvUOHUbe
2OFy0bfwu0IZ1h/gmMR8f4zXbS0plh845ski5AdyY76bduH5TTJd8Q18I+6m
Fuqn0C8L+ZncnMMOCsi/cQl93gvvbzrSiDzHymsaqZg/P83vbqg/K055JebX
sP/uQ+wXFa9UkJfOeR+42IJ8RKvjRVdgixV7X+P5YFvHDmOsd74zcw8jXzHS
urQWdlFfIIz6Nlb96IJ6mnAmcy08rv/lF1ZftZtYfmOr99L1qL8JeV+XwlcD
/Ergs5s29eD3VDSapqFe3123cIG33x3eBXOhPOdw/CL+g9fg+TsPpOP8Cg46
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
7Q==
       "]]},
     Annotation[#, "Charting`Private`Tag$10265#4"]& ], 
    TagBox[
     {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[0.75], 
      LineBox[CompressedData["
1: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

       "]]},
     Annotation[#, "Charting`Private`Tag$10265#5"]& ], 
    TagBox[
     {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[0.75], 
      LineBox[CompressedData["
1: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
2/QPOhSmvA04jPIdT4wqCUHx0mfVjaSg/d+7NKGw4zsdLg5yerrPE7BlPRe3
uHE6DBi4NgdPo/3jyFfPi+LvQ+eXnftFwKo+Var7jNDhvUJfft53AlYj7LMy
O0yHucorXgGjBMxsj6alBsqnb2St98AQAbtjSMBeoXwnSjWlfBggYEK/tnEQ
B+gw4v0hlf0LAdvX1j7khepDwG6ebaqHgM1UPI3kRt/rqzsqzhl0EzA/rUWP
PFRPK35CnzS7CNjhWyHv7nfT4WPDXHUNOr8UDIejrqB+MSmZ/bMcOdvpjr0u
qselZ28YlNH9pX+1up3QefOeqXNOEo2X+dZSoKCdDp/LEm/5offR/vs1sQuZ
S0BWV7MP9atv4UXvUL8Jeq7mfaefgK0mtljrIztpsjtMDhKwNnWxlweRc0Pa
izOGCVh/UsR/osj1zuq12Wj9l1TfJR5F3rL06NnEBAFjlVCrtkWuxvcPnEPf
Ux8y4zfLkJ9KgV/9FAHrJPSekUXvn1fluWk4Q8DGJz0UipBzHfbenUfnMaHw
4FVDNH89iVDRkCUCJldB/cOD1rdqv5tDZI2A+Ss7H+tBrgx+FxK6ifrXmS1Y
ForH1ufUe+NMREwwWnNrKIqXc/y54wKsRKyf1EtxRfEMEXdV5WMjYt+Uu6Rs
0ffznTw7m15UP/e27vA2RvH/ZeDXYcZNxN4J5w1dQvmZ8tWUyeAlYrv9dbzU
0Hlt1iD2Xxb6PmhabaUeQvmUvujEYLmViHX0VJzgRfk2+/RzsH0bEdsnnBX5
A5mHzOQ0u52INXaK5+Wj/m92Kv5eDarn0s+ytfdRvVTG8h4jCxExI60pQQlU
T3FPT8r5IGcOntaqRl7QCbzjiDywc7+iNuoPPISBTWHkvZrJf+qRB7/V2Xmi
8QLNY6mHUH1GB1lvT0Xvmzy8aeGBLE9MqIlA89mV6BBVhJzj+vLbeTTf3Pbu
u9+Qv1+9LdqJ1vPjdPy5eeQkSIs7ivZXxIHDyf8crF2ZeJeHiP3h7VQeRW42
rX0XxYXWe+jdahmyWQzfmdcofkY7S1afIb/NP72QiOJ7kMvTXQO5oDRKJYpA
xHruJ/XMovlKiX8yeor2Z3PC2aBI5PhPYk6PmImYllbigYPIYb+D1DwZiRhh
OP8yBa3fhR6n+S+/8UwX844jw17u8Nx1dF50uG8pRPFr/N5aP71KwM5ozKzI
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
C/ltZafPry1hpL/3fsxL/eQtA7UnrwD1/1JDJ0E=
       "]]},
     Annotation[#, "Charting`Private`Tag$10265#6"]& ]}, {}},
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox["\"x\"", HoldForm], TraditionalForm], 
    FormBox[
     TagBox["\"y\"", HoldForm], TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{755.25, 504.},
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "ScalingFunctions" -> 
    None},
  PlotRange->{{0, 10.5}, {-4, 4}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.888301030336822*^9, 3.888301114960032*^9}, 
   3.888301173925928*^9, {3.888301205127512*^9, 3.888301234454039*^9}, 
   3.8883109477529917`*^9, 3.888385574889071*^9, 3.888385742193818*^9, 
   3.888385831174666*^9, {3.888401369404501*^9, 3.888401409241605*^9}, 
   3.888401478708088*^9, {3.888401738446601*^9, 3.8884017898472633`*^9}, {
   3.88840315980135*^9, 3.888403186228149*^9}, {3.888403449792634*^9, 
   3.888403493045258*^9}, {3.8884807304374733`*^9, 3.8884807533538713`*^9}},
 CellLabel->"Out[35]=",ExpressionUUID->"601cbf5b-14e1-458f-9aed-afa7fef82588"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", 
  RowBox[{"Evaluate", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"z1", "[", "t", "]"}], ",", 
         RowBox[{"x1", "[", "t", "]"}]}], "}"}], "/.", 
       RowBox[{"sol", "[", "i", "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "6"}], "}"}]}], "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"t", ",", 
      RowBox[{"-", "50"}], ",", "50"}], "}"}], ",", 
    RowBox[{"PlotStyle", " ", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"Gray", ",", " ", 
        RowBox[{"Opacity", "[", "0.75", "]"}]}], "}"}], "}"}]}], ",", 
    RowBox[{"PlotRange", "->", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "10.5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "10.5"}], "}"}]}], "}"}]}]}], "]"}], "]"}]], "Input",\

 CellChangeTimes->{{3.888404475133993*^9, 3.888404481566263*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"2f93e765-2e8e-4eb3-abf9-3b2e57b52786"],

Cell[BoxData[
 TemplateBox[{
  "InterpolatingFunction", "dmval", 
   "\"Input value \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"-\\\", \
\\\"49.99795918367347`\\\"}], \\\"}\\\"}]\\) lies outside the range of data \
in the interpolating function. Extrapolation will be used.\"", 2, 34, 33, 
   18333159307729954598, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8884044820276747`*^9, 3.888480730490953*^9},
 CellLabel->
  "During evaluation of \
In[34]:=",ExpressionUUID->"c08842e9-3bf5-463b-b07b-11f59025fa87"],

Cell[BoxData[
 TemplateBox[{
  "InterpolatingFunction", "dmval", 
   "\"Input value \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"-\\\", \
\\\"49.99795918367347`\\\"}], \\\"}\\\"}]\\) lies outside the range of data \
in the interpolating function. Extrapolation will be used.\"", 2, 34, 34, 
   18333159307729954598, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8884044820276747`*^9, 3.888480730496605*^9},
 CellLabel->
  "During evaluation of \
In[34]:=",ExpressionUUID->"08444f42-9559-40e8-94c2-9a9b143cda55"],

Cell[BoxData[
 TemplateBox[{
  "InterpolatingFunction", "dmval", 
   "\"Input value \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"-\\\", \
\\\"49.99795918367347`\\\"}], \\\"}\\\"}]\\) lies outside the range of data \
in the interpolating function. Extrapolation will be used.\"", 2, 34, 35, 
   18333159307729954598, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8884044820276747`*^9, 3.888480730501912*^9},
 CellLabel->
  "During evaluation of \
In[34]:=",ExpressionUUID->"aaf0e7f1-574d-47e1-9a21-42e4a5ffa5bf"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"InterpolatingFunction\\\
\", \\\"::\\\", \\\"dmval\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"", 2, 34, 36, 18333159307729954598, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8884044820276747`*^9, 3.888480730508728*^9},
 CellLabel->
  "During evaluation of \
In[34]:=",ExpressionUUID->"6dbba715-5e93-4d1f-96ad-8f43acf0b9e3"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[0.75], 
      LineBox[CompressedData["
1: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
hfh61y40ZTz8SkF//yS4W/Hhz7dRSLXA9XW/9j9qDh6vlPLGF9+acb28nHeY
wfOhVT6arvED/r28tJYIJx3VdsmsOYHr88Hzk2br8fx9rWBZdG3F71dTPrgO
z+/A8/eSRvh8ua2SK8dLp6P+t0G/erAbbdp0VvHvqwjZJqGD+Hniu9ux8RG8
n6faGB3jsZXFzOz78Hoi2va8bOw33rd0RiA/9qhT4WNs2wqzJjrkgwR/OmOL
HT8mKGSwREPrHxzdPYQ/f0v34eO3FnC9ttvoHcQ2d4lKWsbnAfeJh46p+PoG
Y5Ll7uL64uKQ1WzE15+j/7hsF75/SCU+de/C48st2pakOU1D79nfjbZ+pyAl
MX7/bbg+Q1pYssvwfMQMHTgViM+Te/UX39/F88Vm83lsaIKG1PT+WB3G99ft
dez8gdhM1Y3mkpDfIR25zxR7Usim6Bee/wVH3axN2HEdCv6xn/F+uuFaYAGv
u9N2OOL1Mhx7HRKCrV8+nqaI93MO3+hv+HyP0ZC2Fcg7c5iTu4i/X670yXAX
5COFCZwXxdcncORCanM9BSXsuvyoE9tvf6jnT1wvQR8zUCkeT01uovcc3v+n
Xy61ZOLxUrkFHitjCxwUq8zD87HffZ+2J6632Sd6Rh/wfB0U2BH8s5qC/itr
vjs4j88z97K99tiWgjMr3Hg/eq/5TZ/F9SoU39YK+UU+D/f+fYkt6q9/4zg+
jynfkuJ9sRvfOySH4vXqTlL8dBL7thN7Zzpezxslyy/PYjvHblUqh7zZi+cU
wrAfjksU1kJ+lEQlRwV2Q5bD7wr8vBbxI7mODX//qQ//Tj7D9VJKP5J7CruO
adTgCt7v0164hLCvmts+08P1tfPUnJ89Hs9LQ5s93dgN+2e3DGGbuaTQIU8k
KLN5/gYef+1QvNwAtuSvV24qeL7suvylzfB5IV/Kt78Nu0ufqTMM20k+6dgt
PL+rrHvD87Gj74fuMcLz/+HehfD32DKyn0ZmsK9vu/aqGjuOasj3Aq/XtoYH
X9Oxhd3bcw9BfmqEiaYXduvNy6MseH3jKXqmm7Bpyqb/nsP5bTV2qxVfD7/I
ef5tuB64a/a3umHPum3ph3wJBv56plk8nlTeI6/24vrh4vTe7o3d82rBrRr7
ijvRMInnY6Na9GFlXG9W3iKEM3bU8o3eIGwX2/gjX/D8rZUsDG+EPKdfbONa
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
mtEghXz/xIdI8v2vdxaR/h836Dby
       "]]},
     Annotation[#, "Charting`Private`Tag$9707#1"]& ], 
    TagBox[
     {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[0.75], 
      LineBox[CompressedData["
1:eJwk2Xc81d8bAHDbtbIqq2REGSGVVPIcIytavtE2kuxIKMlIiYrKjuysIiMl
ZJTsyEoZZYVsyh75nXN/f/V6v+69n88Zz3me50jU/MqJS3Q0NDQbWGhoyL+/
nBKqPn+mQbReHYtra8xI8nNVNXH1G+0F4r0GO2qJxfSH5ogdRz7VEV+4WzdL
zBbqW0+cW0lP9fcJ2Sbi1vHkGeK5W5mtxEHGjNTfF3xWaCP21704T+zna/+N
uG6/FPX9ifn/fSeWaji2TLxpuY9q/ietq8S+jalUpwe40tPQUNC29ofU5yV8
Mmch3v/j3Vfiab96VmLNxQrq+4977WQnXpZ410Kc+NCXg3hfXHAzMWtc4Tri
VYuT1PH7v23jJNZ2o2kkFm75xkXc9S+kgZirqpib2LmJnzr/O+mePMSBtp8r
iZf/a+MlvnkrtIz4WAyift5vKFJKfED/AvX3R+oriok1E/Wpz9+1P+A9db3O
slPfHxxlU0Sd//UY6njtJqwLifvn19iIy/bcKyCe7NhFnW9xSuU74nX+BynU
9YjYTfWTfikm4iGDinxiGc+SFbKe2sp3qc8TdPb+Q6xE10F9X1dR8STxQ2t7
6vhM79ONE5uzKVPHb5bkMEKsWKf8gfhRA9Nv4tW0K+XEv9nqBojLn3dVENuf
Leonlue9Ro2vS3K/e4m3x2+nxtNTfYse6n4zLVD3MyLX5wexz7uUPmKW8MfU
z6/KaQ8QF/Yd7iM26M0bIo6btv5FzNM0OUyc/3FkkPjj6vwoMYNRwzBxq0n1
OHV9C7mo89nvpDFJHFAfNUX83sxiiti4xooav6d3ykwTL2S6U89D27YXVP+x
t6Yl67lZ/An1+61K/dT135p2gfo81dUs6v7Z3yumvu/ImXvriefLMv8/niPW
AsT+oruo453tUhEmVv373yDxKcFmMer+WfD2E8+3bdtG7H7NoZu4hUdVhlhW
6HInca0Srzxx6GM+6nn6zeOhSNzw9AE1vndpXtpD3KFUTo3XF7UNe4nfXS6h
7sfRlHf7iM95/FdCnc+57weIFZnmXhP3ep6lekPz51fEktqi+4kZs+vTqeeB
XkWZ+BqLUDJ1P76kUd9n9jMvnrgp4zJ1PPVy0c+I06KuyxHnL9VHEm992ilF
bOl9Oox446PIrdTf+zoHExvIN1PXJ9hI7DFxbNBDfuKlxUtBxJTMKup5irBX
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
rx75jf1OfDnpOK4XNHpLgoomtEgqy5N13yYK+mTi+DYMP09Pm+a/VAUK8t93
8wIrfp/C31fPTQ9RUHDrWuzDI7TIKeFggcQZnC92LAqKHqJFH+ay+F47UFA1
Y2R3M56fl9ne2Y+38f2wc2NeniwtWl3d5skRju+TWhWNPZtpkX+agJZeGgVl
KDmuuHHQIufwbM6dBRQ0s62qkeQnpZk/UTerKShhrm8p6DfeX2WbhoGvFCTu
fnibE87fuSr5cQq9FLTuRW+ND66/yjpljKIj+P5/l8/pXzrOz6Le3b5TFORz
0FB0WygN2hJ8eV5mhoKOCE9FqZLzkxX8Zxb7roZYpL8Vzl8VoWaVfygo74mz
lq4hDbr/+7rNw3F8nmyW+T6p0qBfO4v/oAEKSnqnK3ZAhgadE3JjH2qnIJHd
XuPj/DRIxbmq7mEdPr/p444CFHz/H1xV1S3E9+GPQ+Vj02swHdJRq5qC+6Me
UYtr39ZAVWC7bsQjCmqy/OIh9WENtrXcEbnnSkEl7atmFllrMLLZ8p3OWdz/
02uWOyauwWeZib1bVHF+E0/gCo5agySrl/4n8Pk/OinX/C9iDYSdj8wo4Hou
5lqw7xf+vLl6oxk7ri8Ze2g8Liatwd3y2bj97/F922HAKzhnDcTZsrjWRzGj
Xyfjejwq1sDh+aPuP264n18fJCbavQYumoMeikbMqMg6n/favzWQyYz6ILeH
GbE3bLB/xU2DeBrdr2hswPV6w5+KTkmcn+S1U+vmmNC3FJvkdLxeTX/+cxHt
YEKMWiJJC6dwfrCoVokpZUJeTdGaSS40iN8vPT8slQk9Se54dhPvT3Wyz98L
wUzoQlfqMQPc77jH0JTqeTMhtnTU34H7YzPrD9dTnZjQhwQr5m4cHyyvN0GZ
JRMa4LS4wyaKz8spzz1dJkyoEfKiKdq0yLw3p+zgeSbkdCUcudjToi95NTRi
+HN3Sur2oRBaFBmrJV12iQmZDb7QHCmgRca6zwV18PMTNgefo+3Gv38ardDr
g7//o5UllY4OlYdJm6RHMKGcT0pqR7bSISbTd/tf5zKh4SqR+osadEh/6EsR
fQsTWjWdCzlmQodkPBs2PVlgQgzqzqk33ehQi1pCLBLH9/PvulcNHtAhseux
D/pP4H49PPLorig6NBjdlL3nHjOycfS2SEqiQ05NG1w6S5lR9rOJTpFUOnTu
QNV6U9yfPZV2XEbP6VD/9ZGyXSr4vuoi8S4L/z7my98TLz0piLNFVcUPP3/6
1N3nF0soqKF1QAK54u+rh+syr1HQ/Mttu3rP0CHX8sS0BmBB/wwnw/z30aFY
BbW8Pi8WVL5r37gjDx1K/bLvnGkJC1q5KjA/NUCLIo7eXHduiQXxfjP/555H
i2yNXYoHFVnRhq9ix5960iIxnTIH3susSKbP7MGoJi166tSAVsJY0YFtw6ni
FFpkV+DQVV3Cihgv2mXT4PqcZ3xgU14PK2rZ5kWn50+DHh7ar861zIqcf6Vv
rtOiQYFmk4cOc7ChurfMvQaMuD+a+tMyt5ENxTivL5MPWIPQV4qnP/CxIZsM
5cFq1jVwrpMbu83JhkYmRdqrHv+DRr8tb3b9Y0Wak9kVVzb9A8Ucgd6pflZ0
KehXdd+rVUiVlslcLGNFH5p2skvorgJN6v4T6Xi8QzcfjvGOrQD/p0hNd3NW
ZFvA880pcgUMg031l7axIjrh/rCuIyvgc/mSVMMgC5IKVAhr51yBrVtfHE6N
Y0FnAxLmmzqXQapWI0fDkAV1Wj3r4H+9DAFJlSxWdCwoQEMzeSJsGRzOma12
ZVJQpOMGb587y6Ao3fHK1gjv5yexXTOe+Pu3mAo78X5LG+8JP3d3Ga6w/+6Y
xPWR578cz5oI/LmB49dLWsxofPT+JvW3y/Blavb53xEmZHTIX7imZxmmqpbp
dR4zoRQlC5HzfCuw/Xe/LcteJnRglDV88fQKuEvLC7R1M6L2zmdiEWkr8P3M
ezfNB4xocjuDnwz9KnRVBIz172NEJwJdeNOtV+FZlsODg2MMiHkpy221cxX0
Px/615rIgJSZHu3iOvMPHpSWLkpdYEBbpZ3Tyvr/gc0Bl8ACYQZk7r4Lx+oa
bNX29Fn7RY8Co+xexbLToOVVWbrrOfRo00P2f8gc9/s/deUS7tCjQ9eShyVw
fzaXfalm5QI9+qT4p5AN14uaB/Ld3Gr0SOGeInOsDy1auxpj6SBDj7g7Qp2c
RmhRt3leS5owPaqJLWv+Z0SHaKwmvM2E6FFxiW5XTCUdYjbo+qIhRo/ijL9L
eynTI8kAnyGm3fRI2u3Rj+SX9Mgu4n6f/XF69IVN/14vHnd6+sRG7Zv06J+a
+2LlYwb0ZqjcySaXHu1W6Fd5ucaAhpamVt/M0yMZkTnNOGtGFDbaf4+iz4Ce
5b085PCZEf1pbX22L5sBXb+zuTpOggll9ludWCfBiLhON855XmVC9x8lq0m/
xOvPuPRmezYTYo+oOrSizoTg/spqQicToh/O604Zw/mSY9BrfpoJ7RhZyPyV
yoyC4l1yLaeY0ELS3O4RZwqKOdzdG9TKhCYZ39zSPsqChiMseVLCmdCgGJdE
62FWpN802BmhxIQCZhSyJwzZUE+icHRYHiPSihvo9DNnR9JLCbIXeBiRIRNF
5poTB7omsPpCw5ABFTyr1c+8sQ65XNvuxORBjyLvOvMlOHOiIh29r7eD6dDB
PkvONhkuZMBWEKwaQ4syT8z7GzziQtMbNx4fSsT3M4kP/63v5ULtAsMiLw3X
YIrC999rYW58/k8/NLiyCrmtjC4+WtzoEEfjgz8Jy3Bj/QeOXGNuVKIRVx/1
ZxG0fm7QP3qCG72rTVvmtFyAJYrEpa17uVHw1w/lQmtzYGyQHfOMmRvxR/Bf
+FYyC+YxnpMxFVyI7vm3FN7kGai02Fxk4syFRC9fXcnM/gvSU6ZPtXm5UOhZ
+vjR7j8gX230NfgoJ7Is5GPPU/gDhvo7r0RarkOjTWueDfHT4MUd3ijnyIFk
zhYZ0spNw70dMWsPHdnRcZ/dnxTapmAdJcLP1ZYNTXdEfreLmIKs2pFTKhas
+H6xTWfxyhS0wu6WwvMsaFPc4zPGF6aAN8pmhyHul3QMYverm00Be5Zk8MpZ
ZhS68XhyptsU3IkoWNO3YEKCM8F91fFT4NFBee5xjRFNy2kILXROQZfrzojr
gQxooqdBtGn7NMwNoqXxLHrk+yPu2eZ707Dt/prAsS46ZBujot42Nw2e1baN
gziPT5Rs1BK5/geKQirffzPEfWdGOBxn+wspuo5zMrjvLpvZwTSK1yd6y8nN
ecNrcC9jaV2c9Qzw6GleCE//B5sFM0ePKM1CFbN60cdbq9B/WTFuHf8cNDP2
8y5eWoGYd3dMt3HNA/3j69f/mS2DpwnnmKDIApS3qk4nOy1Bft+4bqruItCk
TPC0hy6C0IBUV23QEkzQ9TfG1y2A1a5TgdXTyxAycV9KfuMCRO0Jo5VxWYWt
c2PFw9fmoWhJJrtKaA2ivYzN3X7PgYGB0WmTazTIz+rm6BenOdhpduN90RXc
bx85rXucZw6GxtgP1vnQIfFjv/w66mbhXHi0zrUMenRjcMlqMn4W9nMMM8RN
MyDdc+2mv0NnAVKc5zYYMiEDpTOauzNmYUBNhckQ32tobx67ljM2C5ed9aLl
HFmQ44qt+/YLc7DU/pLdXJYNzZzza59hnQezRufz1QwcKG+DodsYzQKYWdEa
q82sQ/70v6IjTyxCtyHPcsB1LnRFvUaohX8ZPNbKzpx24UavPqgzVl5bBcPf
0nn2F3mQ6E6n65y6+F7kX8uqKM+L+ubT4i7+R4deitFVXi7mRZN0klr7/zGg
qx8NuB6O8iJpQ99oW1sKGtItcxsL4UVRacX91UXsaKT8zYHcGB6UdfBBteYU
F/JOVgx0WeNCIfEJPmzDvMjv/ZmEFwkc6E7otthOMT6kLe4hBrgv15hhjzp+
URCVWHCq6FylR8c/Wxxzt9mMfrgk0stdXwWVZ+UayvQiqJ6xa2A6bQLiqv8l
Xe0QRbU3znl5mA5A+QPtKGE7MaT/ZDIo/9IP8Izo35j5RQylHdhyh4XSCiiE
7fQfTnGUf3GvP/e2Ohif2qUyukccLSiPstae+QiTNnnXTHTEUZYVh7d6/TvY
7W1+caO+OJKjl/0dVpkNnPuv0KhoiqMZOWe6zWUp8HSnrFelojii2ctS+ng+
FkR1DQxq+cURJ5eg7p0dYbDfqaKgcE4M+W5eOeMuHgiJ1TwHoj6LodvZfdLR
CnfgZSp97+YoMfTm1IKrm5IHOH09XVBzQQydESllHx10Bpddgq+ZBcVQ4Cmp
M7sv2sHrYcMilTpR5HBbM4vHywKKBh4NdjmJoiA97bls2gtgWi+h5cUhin4Y
hP8O1TeCW06U5akYEfT0VSXHw+/HoFn+/EUtcRH0/ZW8b86QLrz7se5o04Et
aI+effiiniYs926yPrBZGNG4G8le34NASLashXt8E6Ll0TYwstkPXK2+/Yde
CaHh7LdruXN7QDxH681JC0GkXGXrJZyoCHlPnpdu5hVA3NW1Jde3KMDnjrZt
z0v40NULvwT+c5SFr765Jb02G5FFzbWHPvelYLnRsfKR0AYULYmYHE5uA8Hc
0T1rLbzIdfJJgHmaBCw/1VlYCedBD30VzIIubQVnbiuZcktuxJNtz9DrKg7+
L9hi5jW5UBa3dcOvOjFwf7iga3lpHeJUya5TPCUG61WunBE1Y0fueoefnOcR
gyD942let1jRl2Lb9dJ/ReHxkLeYIr4f9VeHKtLMioIC/c335huZUf/kOvfb
vGJwwejaie+PGdEWD9NGtcNi4KR0/uOG7QzoF9orf/epGOwqzcx07qBDdyPu
6W9ZEQMz5zOSe1Jo0U+68cvHnMQh6chfi4gAGnyvbRbJnBcHx3/rgosY12D1
zOYu9qCtwHHIcO21yCpoFUQv39wlAVaJl3b2my6D61Y+9Z1DEnDe0JxTo3wR
7hyY0r6bJglDjwI5aA4tAEeK0tyY6zbY9Qnd9uifA+WltxJ/jm+HwtBOp8PP
ZkHEfvjBzn1SYGp4+pei/QzYr4SCsaw0KJ7/7CT9319w570+LSgjA8ey39ca
Hv0Dsyt/aWCPLKy0X6lZPjcNB+WlfIP0dkD8eAxLxM0pcK5U0O+0kYNbkXMy
boaTcFbV0WM1TB5mo8feq38eh+E7S18NzipA108vU063MXAQum+1d0oB2psE
hweURuHxww637ICdoKy4t1mRdQRY7af2ZG1ThIH+APM7k79hfRXzN+laRWB7
UtHjNzAEnHSZt4ScdsFrgaPJ9KOD4H9bBKHPu+GQGbsJt8gAPI09JGHlvQc4
pPV8Mgx+AQ9Dlu+YshLotpp9bPHrh6flr/yrZ5XA+QbTzfe1fdA1n185/3Yv
HO5/1PuSvw88O1LlXT2UoauldHHuSi8s6bUugdY+SLZm8f/3pQfEo31Z0wb3
w9v2eS/uY91gKuRIi4oPwLGoj02cqj/hZql//sZIFZjtiH/otu8HyK4V3JBy
Owg3uPjsndW6YIWro9DljCoY5U1+Uj3ZCSObOlkW1QDiLUbui17rgIzA8fvf
NyLY9F2BxTmmHU49bNfspKjBZkm7SzPs32FLRknn2h01yDreKcJy4hsw3UkK
3U+vDmcOf7E+GdcG/jovvCcYNYA/9GBX6bGvcKk7+POl+xpgzO/Cz5LXCikS
PNaTXJrw+Kbrhx+bW2Gdvv/Inq2H4HX1Lq1K+hYIiVGhmc4+BD/0UNZer2bY
zmtdWQhaoCwy0zG+1gTnDql9cb2oDW+PrXjwczUB2/scrcsL2rBi7zzGGdcI
BzaOfTN/pAPVCWdrjyo2wgI4J7uV64KKWoNgVk0D2MuYczwy1YNNBf9MbjA3
QA5TR3/mmh4Iamb4GujXQ49EuuA/DX2IeZ946+NwHQS9mn28Y1gfVCtoymrU
6mBL22KS6WMDKPFp5U+Kq4WNnnnJ9b+OwJHozPlK2xq4cNLhMWPwUch+MSga
1l4N81ed7saKHAPxvb0qSL8aCjwuqLY0H4MLGa9NT0IVLLBYStjuOA7v2S2P
ny+thJMsZzNpAo7DPcn/Rt01KiHqhLmJmMYJENcTD9UzrgBvDVqzzIQTYBJ6
zjpz8BNoLc682UVrCDVSasZ3bnyCPwuHh+XLDaFwwnUdU3o57BIXn2w9cRKC
Lmzz+SnzEWB1LaXrw0nwjzYrYfz8ATRLTg4xKhrBPo/0MLErH2DeyPp6wQZj
eMw9aPSxuAyMIzfNqgUYg62uPiOHdRmIrHtl+HvVGDgUruzv2lgG9RIVv++P
nAKzuG49rb8lkLGxaOtd89Mw83k2ouNcCTwJqPvvaedpEGtU6CiuLQani8/c
2JrOQMfvtZ11ue/hcPPV/IXqc2BY+tJsNasQIvdNlD/XPQ8sJ78+Gd5bCJt7
FZjN686DYEGcAmt5AZyJlLJna74AL7/nnLjR9w52Rv+3ZdbIBPpKNHxDXN/B
dM5hhdEuE7BTqDJw43gHx62ns5ZdTCHX1uWoikY+xCSxOd0tNAVNXpaO6d63
sHSqoC54zRRsLh3YzOf7FnR42xL2PDCDuy+OeV34/AZ+9i/p+aeZQ/b91Jae
63lQ/FPSW2jaHKZ+v5ZilMoDza6mZNn9F6HEP6OErfM1DPZsrKyovwi7nv+l
9dV8DQcipG4UL1lANr+FT5JMLkgJ5wdJa1+CqJWRSqPhHIjneafBGXoJUqTU
F3zTcuBj3PGtKvKWgNwTtMRkcuDa7VNFbLaX4d7jlXtHUTYkpPhnbC66DH2G
a3feUrIhO9NMOZ7NCu7nCFaEPs8CN3rW638zrUBLadk3s+kVMMYf686ftwa7
9H1iZocygaV0UmX3YRvgN9A+rzeUAfOTYvcE4mzAw3mrI9+DDDg2db5CUMcW
hq6yPdvx/SVcPPdHsDPWDioEh6f++b2AxDepjAWTdjifjT9hU3kB4TcfCIwi
e0juOnvL8U861O10l9X5ZQ92PfTN4hfTwUYzveez3BUosezQOW2YBpNRil2K
t6/AzGJwhSFPGgzEGWcOfL0CffPOtPbNqfAfny4DHzjCqFkYY9/JVODVlzTh
G3aEjoDlNBnrFBD/bHtwitcJ5DZ4cl9VSAHuk4fiRlWdgF+0hzN9IRm+d/yY
0A5zAh3lgyEtD5IhMeSvmb/GVbj++LBK6PvnEKb/zDI32RkKpf1S6TWTYGdm
Dq1LszO8emPprcifBDed/eKOrzlDoLTZq3XjiZBc+Tzd6PQ1kOLNhQ+RiXDU
eeCg9zoXYPAVkcydT4BgfyUZehUX+JR+NXiyMQFC+ZvuR1u7wKXHXzw/vEiA
fqn7h1krXED3YHAun2kCBD2Pcfji4QoTl7vzUVM8LNcX3Bp/4QoF6zP/a3sV
DymXN8KmdleYKmcYGn0YD2tJdjbpe9wgNtSxOVAvHqJjNS84TbqBetqSZUd4
HMh/VPCRvXQDtpa7QE55DKydmKuai7gBI39ULpz2j4FcobmB6tobcFDt+4F+
gxjg23bwjI+COyg9upz2sPMZnLNTHJZZcYeVaanRLzTPYOlRiWNmiAc89tmi
N30lCu7UTtk+qfQAv+1aBfRqUaD8oLbryqIHrGOYVfvAEwVx50UK+U1uQc6j
hIWd755C/dl9IXTSnrBEw1f7lPUp3NARueJa7AXCJbdvnaqLAFNlJcnoSS94
v6q71JMcAYyVEvptXN7A96L995h3BFDskzbVqHtDlNidjHvKEWD+Ll5ke4o3
dNw1rwzNDIcSBWdaWxsfoBu5a+GUGQZ51im2Wbd9wNN9WszoURgofVh3tD8K
f/688VmiUxiInY2t46vzgR3xAZN2e8MgWSI8MVX6NiweOaQbWxUKQRYDKfSD
t8FxcMj30GII7CzDJ2/lNvgeimO92hsCghJzP7bz+sIJ0+rXEzUhkPRu4sMf
8IUuhus8rdEh8F3bjcYq0heu7RKgKGqEwDclnbbbmndg2+SzjdfiguGhYbV/
l99dMD/KtHbR/wnIWo+0TD29C9fmox8MXH8CkXODfX0Zd2FfbB5DrPUT2Gcv
O3+h+S4ohzXcyzn8BG5e532eKeQH9oPqZoY8T8DILs3hbKofcLsK9bOmPwZ/
x69ybfH34KvkPgPdP4+gYWYlbP2re6BVlf7IrucR1LM9+S5bdA9+RacOtzU8
gvXpptwjrfcgYtIw2TPjEdBJbCp7wuQPoR+z0tltH0H+1YStdub+YLbu83Tp
TBDkrunG8iz7w0Swn0HW3iCgebPGqEgfAJrXuSt6dgRB8bHqbxJsAWBg+uGn
/tYgSMvN1LsvGAA76NT4W7mDYNuorK3G3gDgbV0fEjkZCIp+QrcvWAVA3NA7
sZo3gaCUz2IRkhYAH1VrvLxsA2E812JV42UAHHF1G7KxCoQVncY9JZkB0Lp7
aDn0UiBYZe6y58wNgDCOLzTJpoEgNYJOb30XAD751udfnw6EgsIMA9GCAOBe
Pc8acioQ+vejvCHsglxOnhzjQNjx0fSeW2EACLAdseHA3pzm/KERu1n5NyXN
KBD2af489xf7jkNmvzc2ywTjf93YTT/tpiKwuVePJoRin34/u3UcW3Jfihov
9uDl8Ove+HnCl+lVzuL3WY4xzB7H7y862PzUDo9vp/XrDDM8vuACh+TRNwGw
NTORT+VcIDi812Y49yoAWigPen5aBIKL7LTKurAAULPd6D/mEwgt31zXTz8O
gJ85Wwpf+AWC04MnfLEPA6D4O2Nq2oNAOJYbTGvsGwBnJdiuWoQHwp+gTeza
DgFQom/D3fsqEDLrqxv27A+AM5yyrwTGAmEr1+2zKi/9Qb/RiNnmaRDQDo2/
PZngDyHja+ZvkoPAxZKLohnhD+5nGI6j3CBYCBmXj7+N938tTn3j5yCI46uP
PGvsDwYRFW31dI+g9riJKvPiPaB3+Hmu2uMRhAw96QwVvgdyWarawoaPIbXz
1Y2XnPfgSsYOt4zzj6H4m2RIDM094EiXdzO3egxsmmekNvT5QaL8jIK252Oo
0hHJPZXkB4Vj/QMrLx8D//lrB223+MHlZ8anHTifgBuD5uaEtTvwbTa869zi
E/goazhCGb8Dr9VUL59iCYbc8DRao447EP7xZdU9gWCYkHDZnZB3B3xitdCd
/cGgnvskm97qDrhfL0ik9wqGsnoX6/21viCXz2iVxBMCV6ZKcgXe+sK3y6a/
xCRDYGaX/FJfgi8URuwX69kXAiYuV4p23/CFArNn5RvNQ2DbdMiTH5K+8Ek5
at7/TQjc/UhfFuB5GyiXHgkoWofCefrBjh3Wt+HDSReJEe9QULF6NlxmeBsK
at+Pj0WGwgdTva1vtt+Gmm1Zdm01oeDJvcLT3eQDK0tRRf/Jh8HIVwcjb1Ef
sK5oLB9iCQd+hieM+9l8gPXZVa5KyXBIqEirGZrxhvnQI4doNMNh7JlYp0i1
N7Qxn9of6BUOg/3rdvM4eMOhoT0BcsvhMG0U//2aoxc8K/EtrWSMhA91Jh5t
ql7AkqffwiIbietCjvF2Di84IZ4v23oiEnYmfqKNT/eEhmXZDObESBgXGNeY
670F3uUy3du1n0Lz47GkuWMecM8n8tvVV1GQkqLtXSLsAQWOf3l0fkaB56GT
Ob5jN+HY70zZ+nXRcKTxhAGL/024u9th01+naJDwjmXjL3UHO9exCHq1ZyDO
w7J1bscNMNZbM1BljAXLTuEzf5evwxh/cnu8Wiy0812NWKq5Dp5hwSFjnrFw
S55WVdryOnDqunAfX4mFqEvijeJxbjDHod9mQRsPFpFfav3s3eC9zTPTG+Lx
wKuTNrR4wA2S7jYYbtCKh+pcvru8uN5uCZVbN4Hr7Sn5dXuk1rsCz9+aEHvR
BOA7yykk1u8C5WHbJVl0EuANfyXLzlwXsAuUm1O/kgCvQqJ6Q465wGDOYYgt
TYAiyTPhPkHXwHN7Q9oRq0S42CHr+5TTGTrdXIrbu5LgovDzD1f6r8Ix7Zpn
yWzPwaR6qs48/ypo10Ye3HngOVxTN7uYYHIV/CffN0Y8ew686kKuj3KcwNNn
eo7HOhmWeHj6zvg5wc5vkV1HYpNBzaRTW/usE+w/Rltn15oM71r2MNxldAJR
KLhlrpECrxj5jySedYSlOwdLymRTITXa4r7vTke47shiFGWdCppA8zqA2RH8
Wb4/9E5NhfYr9y9yWF2BcbX69/cl08DrwNfDCZsdoE3dpFhdMR0i1L5Nf66z
h6Gl0wcUrqfDcc4tP3Td7WEv7Vldk9J0CF1/c/OB73ZQopGiFXf8BcSJyi/z
RtqCUES/0G2/lxAuedSzD/eXzfo7O42/vYTpiOdKLEs2UHteKyJHKgOGH2Wm
mJ+3gV6uWIkNLRnw4O7I3nPbrWHupc229/tewT4pzSP0XVbQIub/qCbiFfS7
pnOwPLaCSPqqh6/mX0GcN3fgrsXLMLXbTkKxOAv+SC9fF2i0BLtnRn+0s7Nh
7KFBda2fJUxfr46wGMqGH8f4k3sOWsJKg7Pg8y05wD/a16qSeQnOydc5vgzJ
gU0BAZdqH1vAzm5ILr+fC+z2PDav9SzgFtu6nN66XPj28aQFE6MF9MpH2Fuv
ew0uL15+GXO/CF5zC+t/RrwGSkJg5WdbczBnWZyPLs4Drd5PsXfEzUGvSeB2
C/cbEFQWKCrpNINYu9Elcas3UP9Y/tV7AzOIVtrJbyT0FnoP6cz7MJsBw6CO
8rnrb8FmxMv88wdTiPjVoFT57S1E74k7/3evKVyvY5sXiM0H1pDCsMQhEyjS
U7OSY3wHgolbBB1MTWB+X+XkP4d3YP1LGPadvABB79DDfYcLILj9n1D54XPw
55BnB51UEWiEMp/f8vksLFnSff+dVgS9t4S5wgzOArtJu6uT7HuQdv2i32R4
Bg7KWiwuqBaDbvoHzqjvp0FzxMpRraEYbEKUM70vnIaHDN98y81KYH3/tqyX
9qdg//WShM3hpfBf813xP3PGMC8oVpEqVAZHt28PPONjDAoz6i/eOZRBrfUt
+bCnRhAWde1j6qYPkCqnu1D37T+Q2mRyrS/qI94X6wgVm//gaOdTc0O6cjii
O+TXtmoIVg3xVTvty0H4+M9XAdsNge8798P/lXTf8VR/fxzAr3kvISpkZiZF
g0rmOTKSkIZEiVKSFEpLWZWMiETfEjKS0JIVkkSy96oQGYnslf0778/vz+fD
vZ9xzvucz+f2ePR6NxgXoZ+RUgHP8vejBZN4+7+FRahvS+XsgPl+RHs19UxI
6wvSdZFNZwnch9RvVYpcRcXIedVJ70a5fYhl6Sw339diVPtvWX9TkSl6FuAe
fP/AV2SyIdblLLMp+d034qF6owR5WssNLuntRaaN17f3ri5FsjKl1UH+JmgV
U9AKr9xSdFVIx7VN0BjRoj+Wpa8sR7lWw42xJ4zQlWEz8anSchQSIW5c82YP
Opkor3PJtwIdzKzwcd5niDSe5v7MFKpCEZIj+d0JuxEbzUvfdLgKXUz4zFwy
b4Bq30ywNFVWI6ONL893pO5CZc+RZX19DWITjJoW5N2FCndpyLLtr0UFFraG
hc76qMBExLqosRa1vNR50FWvhyy2H506aV2HYi86Ll5T1UPns1e81xquQ8F+
Fe99Y3XRb56M8VSfeuTxVHuEm0sXiaRxVEpLN6BJHZ5Iv76d6GVD//wX10YU
n+MUxme1E10ZnPbzX9uEhE3GqmgN2ugLv4xJV0cTyq/r8DQ31kZvnh4ftXnW
jNwSSzsESjEqar5i/Z9LC1J3q1bBuzDaEiJ/a8Pub8h3U0xCUjAi75VdBuUb
viOevbrpATGa6JmNgacqfyuSbLxnbfBWA92+piqdLtaGnszFGfQVqaNgz7aR
R1vb0an8tk/n2tXQ2g4TkUHLn2iWy+BQ67wqGlwpdP+3QQeSaf5WpyKhinw0
e0PUBjvQAfmX+rcNdqDzT2KWr37SiW40BaxifrEd3eycCTgl0IW0HySe0vy5
DfGY7g2+1tOFPnDk5LuLbEPCqCjqZEE36vcSOVl6dCtKnhisUUjpQRnKwppy
8cqo1C7XfjS+Fx14qzMTPaSELn1d6TP48jcauusuo4qUkGSkv6nb1z4kHaVn
uBS2BZn9tVm3YvIPWr2+Y/388GZ0sEH3ppnKAOr/qdynbroZuX69xskT8hcd
3CJ99dHZTYhl3ToLJaYh1Pxni/M17Y1ILdVWrz9wGHF+e3NfS0oRRQx8nC6P
GEG2l5+/4eVRQKpijmcGPEaR5NGQenG2Dei9m9Grna5jiNukteopfT26IXVz
xO7GONp5PLaxjl8eLegkPl7xeAINPnYpZNq8Du1x26+9oWISXX7Z2nXrkBwK
tDvNVCw4jR6+O6GU778WpVU5Bch6/ENJds3DCmWyKGJZVusnpllknVSebLVa
llzHxfadCXNIg6Hltugqg6LXiSQGnF1Am+Jfpv7skEaldRJxSeZLqO3BkN/C
UWnE/97pq1MmDY/TTYrv9kuh5day0bubmXDu7swK1rtSyNHvFZM0Lwu+8luw
TQ1LoTPRuVWfTrBiw4ssCxe4pJCs/smmnzVsmL+hy8JnTBKVHr7CJHOUjoU0
hFo5piRR4a28t8zsHHhscevoAxEpxPujuTaxmhNvzHPKYjkjhfbZzjxtzObC
Pd9vc0z2SKFJ35Xv84t48CVxo+eHI6XRuT/XfEev8OIdnirmex7LIBNd+7tD
kXy4QOukkdqQLCrMObBJpmYFPvpTbcz/nRzafWGGs2b5KrxgbiA2w7YeTWSl
TD6y4Mfxnlodv1Yqooc00eiwZAGcv21dpmDgZtQjJH/GfEkQ/2rL3CWlrIzE
xp2yVx4UwofXygs9yd6OdCv+8H15JozbRB7Ye1xQR/QPjdW2gyKYq67hIF8/
Rif8X3SKrhfDBx/GbrfR1UNJBa5n75iL49mZ1TbGOnvQgprU3bILa7CmlROb
fOU+9C5f2OaXhgROkZ051pNojiQSn5y/kyGBw8T5lO7tIc+PbC2DaRFJLGp9
uqLv30n0bsf7nISrkjhK3vcl/YIjMucPKPxULon3HXy0lOd5EdEGOMKf8kvh
Temqm54vuCGJ+FyW9ENSOPbLvWTcfBPdXiG+70awFNaRWtG42ysAeUbpdbh+
ksJ9rM5hqp9DkeW4og9HvxS+1R/QqpkegTaEJGEfLmnsEqqotnN1PDpxZPnE
kpw0Ptie3Blkn4KWucq162tI47V7b4leyU5Duj8usuYbSON9cRuMxJ0/oN7Z
n20aRtL45A49o7qbRWjpb254ja40dnA82nk0uBJJztZn3N4kjdtjA7awajUi
q54gg5UMaRw6LNffYt2O7vHza8SWSGGeIBu1Pv8etJ+lPCL+jBTece2D2t3i
CfQs8M7yDfKSeOfyF/c3jM+hnepnMnxVJDAfT2heKmLGVh1epY8FxXFvWWCX
8zw7Ts9MP7JkKYKNp65MB5Yvw5bJhkLFR1djhxLfb0xCvPjj3ryQVXv5cZJj
kkdZBx9OdImKCDu1Au99eeQaXXQlNnHZETUSvByP7SwXLy5aiTliNIbtBJbh
abc1G+P6V+ItKcX47Sk6rrZXDr75gvy9Lshp7Bwr7tAxlrorshKXyzMqU1cx
Y4GHrguvrFbgVUfzKq9o0rCqcoG8/y0+/PR0tkJ+5AKq238vZ3ckLy43DfW9
YzuHHBNMZydOLsd4s3F/xssZ5OLTfXJNBDfWq7RUtbP6h+xkfGbyOpZhA/45
6X6badRTPrOvWpMTF5abH7mQOIXsHRQm69IY+KxHimi/zBSyPOL8Kk6Hjg8c
LtHlq5lEpSzDHpyDbFhdS16gMnYSWb3j4tzyhhVv6bx+6lnYJCqYuCjS7seC
E0zN5o8+m0RJ1yTck64y40+cexXeVU4i713n7wi5M+Eg18AzYjxTyCnG6Xpm
GA33q8arvLKdQpoFrVsUbyyh44mSGr0VUyj+zlqNsuEFVMQQVkkxmEYT0tdX
VXjPo8j6kqT1TdMoxTNm6/CmOTSY6bS3xvUf8uytQrL/ZtBNuzXTqjIz6FHR
i7oHLf9QWuTwpo3dM+huKd0ltHoafeaVuh+WPouef9i4lPhjCm20E1vuFD6H
BHZaCvjNTaIgI725+jvzqL3RX5934yTSiTlt2ee3gA6deCmhf2ECVY0/dfz+
ZBHt/xuUc/DrONISdS/+kb+E9Hx+vw9QGEe23XdfBLnRMEt53/Dh2DHkcnTt
xZ9iTNh1C2/WPtkxpPf9Qd9gKRMuvPXeeN37UUT/+0s2y4MZG3Lbqry1GEVs
h3y112mw4PUs6HgbxyjaPPXTaDUzKz5XH/JgvHAE9b4Rsub4xYrbVgW5Pgse
QYZl91Mly9lwl8G0tsO5EfTHR2A+5gM7pvnK3Rm1GkEDp+663sqgY6/nRpdF
ToyglC1aD66kM3Co4PPdLNdHUFXPdFVlFge+1PDx1ULSCLpuUnPIJY8Ttzgc
CvxvZAThzFXLuj4vw8LdLeL/mY6S9+0D9xS/cOFoO5/4ifJRdJoWcb/3Ezfe
zOA6Wn1yDG1QvaSo9I4HR7MGp1qKjaNPXod2V4UtxyFRhiYF0+OoMcrs3Eol
Xhwp/ej33OQEyrNmwjlBvPhl1Jenj4Wm0HBh8L7x77zYN5j5kpvtNGrbnHrR
UZAPB764p3a1/h8Siqks4dTmw1vK+wOW2c+ihC4l1eWH+PDbETwyLDaP4ktd
BzTM+PD6fR5bW0j9tLY9TVnQ5MNBEQfndJuWkFB/8DlPXj7cr8+rUNJFw1LX
WlK+VPLi+x2XHcRbmfAKG27JZPL8OPGQ/3lxJTO2G0mOL+HlxZsTSzI2vGPB
y1q95tN2LMdH7e2qlm6y4oi4IfK7lQc/fCu65b0aGz56K8V1SIkb1z2aXjHV
wIYfZiZ7DMlw4eZ30fFVJuz4h8GtKzmrl2EZq8b6rufsmMm/20FuFScWUFB5
a9bGjn+1pMiOinBgu0PhxaHj7Pim8YF7KcoM7CjvbbD8Lzvenhuwrs6KjjNX
39WeKmXHgQKnp34/YcfF3U4SbSHseA+fXnLMEKmHN+GqXrrs+AHNZ4H7EBse
lMnsCepjw15d0z2ltaxYx7PuiJcXGzb7LnNV5DgrPtW6WcVnORvWfBAgwc/C
il9zvDzm/IgVx5dkib7MZMGzT1RfZomx4gCjVXWlbix4nL+4zDWWBd/P1Zgw
N2HBzEML4mdlWbDJSjtvg80s+PGfPTy8Kcz4AI+Vb8QaFjzy3VkyTJkZszcI
hB0VYcGtvzan/81nwmZDjhavpFjwv5Nq062mTLj4W5dC7lYWXJvas3+xl4b9
dwllfDZlwQLVHF1fb9IwVkzn475Mjm8hzhIuQ8Mv9WVTB+PJ8SSvtJg9Ju8p
AZoz+d9YsOrH4kW3qUXUaXD5R7cAK/YSal/qsVlEXzqSz36yZMV+4oI3q1sW
0GO5w1eznrHiZr9vaTbHFtDKhlOWihOs+FpNv2/W6DxiSS5/4W3Ahs1DZrj6
Q+fR60Nr9vPEsuG/y265M3bOoz7nb/OyC2x461humPjSHIoSinFbcZQdN59T
kN9aNodspQscVuax44s9UbLG8XPoE1tHttUaOkb/va60D5hDx86+dBK5ScdB
Sd3eXp5z6PbB1cNnu+n4YM9M9u2bc6jOwIzlpB4D22S9Fq25P4eOxm6RbY1i
YE1nUxf6qzkUtKdtWcA4AxuV9XTM18+hfQ1bvsfoceB9+0c+XGSfR3cC+y8e
eMCBmye2sArpzqPqRtm6lh8cOCqsdo1v4DxymFA9cE6cE4e6Lxir/pxHfiln
zC0tOXFMqnB9qPoCGj9nVj55jxPL6no8aIhZQCaF2TuScznxGTnvBjGeRdQt
yic0+5MTu0e4i5+7uYgyhYImvec4sZsFzTpqfhE9WJtkusi9DN/ofrbR/voS
4uZKOmsiuAxzepvkOCwsIZ1Jt3cXiau9NDseYBq+q86VHs6zDJ8KPGjnS+Zb
fdo3j2mBE3NEbtn6uZCGFe/q/F3bRY5P31jnysKEk/KHfR8WkOu/vC+0HjPh
NVGr5pceceJ7c26lwteZcEGK9qn1DpxYJXEXT1gqE957PfTY6DZO7FKZnvmk
iwn3TjBitRY4sKNR3kwcLzNmzh51ZCngwIe3/THfuoMZT3X/jFO+yYHfhov8
mrJgxrgo8mS+NgfW29M6+PISM37xQqLhHo2DvM8ljm27y4z9TCY/ueeT/XVj
4qt7EcxYVNhwu7knA/9aHJiriGfG6w/VP2rAxP5domsSmfFk0qLyE1YGFueu
PFv6jBmn3fmmqVZOxwrTB3dJRjFj7h1/khTC6bj7SHxXQAgzlv3td7/lBB33
948LXvZkxvrG15YHb6XjogYOGUsHZpxr+/tAMCcdj4t/t07bR84fE7WR3sOO
HyaomdG2M+Pg8aPlK4vYsajLLvV8QWbM03rza1EiO67ctkrfcZoJ70Y314iR
fUSdveWBZyMTlug+xLfKnR2HewftdnzHhPW9zgf/d54dn2z4+erpPSasdkVF
LOgkO171Lvy3pwMTVmpqcK87xo4/l4RtddRnwsNLAbbIih3v3/4u4YMUE/Z7
JcD33JodX11pfb1giYbfZ1cV159ix5JMXPmFbTT837nX+fedyPf5uRLY8mg4
MnzyfcINdsw4Z55VEEXDFZZ7p2sD2fHlozUNCl40XOsjaNn0lB0fq6m3cz1J
w8lXln44ZbDjSLkTaZ8MabhPczHOopIdy42MPVVWpmG2lfQso9/smJPZ/+Mf
MRre8J9YKI2FjvWrCyJmOWn40No+yw0SdPxHvlF7ZGIJHcnvXn5Ti+y3zfaG
HS1LaLhxYFk22X+7sdVwY8ESaoxw33bbnY4VrV//+fZmCTXVC3n+F0XH684t
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
9V6wVVHKH3Dabt8u8HCCPHV/H4/voOrRze8cdf8Pw0x+gjt6b3SCD0qUtYFL
Dt5oB1+Lf9kKNnpmTY3vi0uJP6j9wFi8jlqvexD1d80PbNTvXeMbQtT3Y+s4
K8Bb7ui2g2+FKJZS833mE3W+X5PnqPnesTaIup5mv+pC6nmh+Jy63ljj01R9
rN030gN+lL8jn6rX5af7wDntOtR6F3bgHABzpPjlgv2tvw+CJWyX5YBvsHyh
xs/IrvY9mOd52jh4S/Z3qh4TlJ9PUftfYAC1X6REylPzkeI4Sn3+w4fEZdR+
bMhMHe/PvTBusLiLCnW+uAED6v15riPkA/X+WFfES9X7Yx7q+ZSty1hBrY9I
K+p+rn78tRKs2ltH/XufQ1DVKnCvnj31vsI7Xkb5Bf8/qv69lw1Qn7/Ol0zt
f1cDlSjzmBpT413yaTd1/EyZTmp9hDlvoerv03ULan72P5mmri+vPZXqt6xw
LpaHen4Z91PrR6p3I3U/wSXM1H6rxB5D3W+k1wzlIZU5ar+59eUiNf+aQrHs
4C/TB76BXf2UWcC5FZcoj44bLsB4vtKpaKbqM8bjH7U/Wl+njqdVmk6Ntwdb
O3V+nxMWk+DzDAHq+g5YX5gA8y1Xq6XW8wcWyntOnaDuX/XRTcoxZn+oekq9
H0Qd7/x5N2r8hmMWp8Ft2wy/UvWekkytpyuFJ6h6CzjvQj0/k9aWUM8P4yE9
6nqHY50oBwx/pcH9vOXaQH0+vvs9dX+9x99Qx1Nh/8IGlj+aRZ1fRKySGg+h
pb/UfGlYFVI+z02j3kf+bS6jPv/XNoGaL20PSVbqfSb7NTVfZ+YFqXoTjyul
HGhkQv17iofjDPX9I/9U5qnnfZQ/tZ7uzJ2mbC9WVAa24P//5xXvnaZ8PP4+
df3mFvrU9dz8yk4dX6Uiifr+n2ubKX//VkON56sJxET1s1WSp/5+5ZQN9ftB
aOMXymc1WKi/v6Xvpj6fum4ZdXyJ9d+ov/NZZFOfF5aNoKxyroeyz8P/f199
+SLl/wHgu5D2
       "]]},
     Annotation[#, "Charting`Private`Tag$9707#2"]& ], 
    TagBox[
     {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[0.75], 
      LineBox[CompressedData["
1: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
bVhDfpBnz8W1kCMTk1+ST+/5lEXIOr0D5Ou7UbmE/EljS3VLkZfcPquI3Hrq
WC756c6KUP8aWyvJX3e5rFYS+X0DP/ntXPbNJv/d8sqd15F5Xy7gRxb+NJyA
HNT1jUX74fysePJPZuwk3xYnPpR8fFZbE8l3mf4zm9bHo3oh8jtOj/9L37dq
DP3nyxVRJN8eV9V88pWeWmZD9/tjok7+xv3lJum0XidKHyDXhHy+RX6robfk
GzwTuph8gwOzT5KP8FGFIvkIj5aXXUMuep5D/qPX026Tn1F4+dka5Nk/18Ui
Ow1fbkTe5HL/EvnDJt63Uv+21pCPkX/DZvJ1HjkcQ/V7WauVfJyr4y3Jvzhc
J0D+24orT4l/NMwnn6vCvWn0/Zm268m3Kl/wlXyMUgs55ONz4tUn/2OLogqt
73eRHHq/cVhaQP7My47WtL8lOxeQP/KSFz/5GLNSVRYifxlZSv3Taeajertv
l5SKbL94Ofn8JHsXZSK3bXpK/krxB33k2ymyzSK/Zda9JvJlsUQ+kv+ytevj
I9o/k7zJjym10I/8jPsGaulz5Vul5N/si55L/k0lAyPyc+p7T9VGLir4937u
LXOK9qfL7UXkS23QzVBH3q128Q1ypNxB8mPqpcqR7+9hUy/1b8JwJ/lS9W2F
yG/0J2A71Y+E1cAc5MmZfLS+X11+QP9eORZl0YvMe9+RxrPOUJ18gukXe8iX
efROPvlMi5c5kN922pwe8p3ONm6g+XHr0CM/avQrSW7kiw2KxMJe3eRPLX4Q
Rb5U62Fuej4vqn9Af5/raUP+Rd8D0XR9/5h3A8hLxfTo/rLCj2i9emckU/sS
61vIVzt7ST21f/yVEfkcLQrzyZ+qo/SLfLUSE/s7ab+7NkS+2ldB4jQeFokm
5I8N2neNxkvj9VfyzUq8lKDn5T2LbnqexKf60n5Y9UuXeFPTOK2361FvyFcr
pn+W5su06h593trRRfvpxbZwut5Ff2ua37f9d2h/sTj8mPzKxlozqD3P7bfR
81gvKofWw48ZCrRe7VadIH/tgzwRqpcY92Dq35QliuTrHXt9n/r/ZZE77ec/
zgnS+PzJaKX1vXHYh3y2jyefIB/wKGuQ/KUr7JzJ/9WcdZTG+0D4QfIJDw1L
kU/YU6yG/I+ruZX/+bWlV9DnD1Z+Jv9hWPsk+nv5g8X0PH0z3kk8Y8VO8qNl
effR/S7f/0Z+4186kuQfTq6zIv9xe6MztdfF3p/qZ619YQmyUao/+XHtrsiR
b3ZZvxWt777YKOr/Sq0eYvX0teQzdVH1Iv+ySWQt+YXD1xTT9e6X65Lf1C3x
Ft3vs2UE+YYHDP2E6fmo/JT8lwuWK1H7bpd30frqDHxI9Zvg007z+2ybNvXP
9cwj8kuvSs+i/rMm7ST/tOcGcXq+LG3+Q3wqdD/5qBckvqH1mT3CkD90/4ps
+vzFHC6q/+n/BdL1+lMnqP43+f2k+x9M30Xjn9StR+1j/3Igf/Z46Rbqj3Bm
A73PcNx9qb6s01Tp8zk7ftB4lPfp0/WmvDpJ9WXdUUb+Wo0lLuRzrHx7iO7v
uCSS6m3HTQvaX2+ECBMbCCmSX1yTPU4+0OaGc+Sb5sn8S58PxBjzkD9pXg1d
f7XkT+ov/+lf5H8OVDxC/tw3AjHUPj9Ba7q+0sdAeh7tmjmDfMl+itL0eVRF
Jd1PddiNPndMekH1Nmi2gT7f1Gf3zwdfw038bOtdGs8lPP/87ZuMG4jb2i8S
W67oIG4qLvvnc1f953tPtawi7g/hpevNT/rnh9dJ5yM+7FhLbGs6iTh54J9v
/lTlP9+8idA/H71A0j9mH/v3+eqef/56rin/uNTiH/8Ps/S/Yg==
       "]]},
     Annotation[#, "Charting`Private`Tag$9707#3"]& ], 
    TagBox[
     {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[0.75], 
      LineBox[CompressedData["
1:eJwk2nk4VVsbAPBzDs45hgyFKERRIqmEFK2lTJkSMkVEGlA0mMdkqpBCCoVE
g0jdRIbIXKbMkgxlHjLP07fW/u4/9/k9++y9117rXe/7LveKWDvq21JIJNJv
GomE/11fU43+IcEoNgQSHY7W/9+K1//vL9P/905+MuE3Q/+348X/W8j0/7YO
///v9b5UEvYknk6HrcylhB+VMBKuC6sgrBe3ur6+ToNOW3MJl7f+Iswr9JQw
x4sMwn3ew4TbJgsIc5vtqsFWSj9BPE+2wpS4/nPzHOEHt0IIL+6n///32huI
308uNJPx9aRHj4jrolVvV/D14y+L/2+ZJSZ83fJcyXdsmc0WVOyJ+JZKYvwK
jcR1d33ZCuxr/UaM2L3vZcqxpenLxPOFb3IR1oFk4v1JDFOEzy9lLGMr8X0j
7v+rsHEJ2zevm3h+VOH9BezwmH3E+28EHZvHVtb4VIXNGCE1h01m4a3DThxb
n8G+/vJOA7aKqcksNqvO7ibsHs+dxO/31SU3Y39RsyCe5wPaW7CT/OaJ97Er
VbdiS/LPEuMRYXvWhr1XoYkYv2pNDnFd1SGA+H4v82ji/kBXKzoxP15LxPtC
EnazYm9VYCLsv8uZDftr6xwxvkOVbzZg/zGpq8d+ees7O7ZvfvgP7AaDJg5s
pvIrxPcbpTVuxGbI7SjBvuDXStjYJ68I25XxARe2pO3vAuzgn9eJ+93tEvKx
3QN4iOdbufjnEfGzIYAYT09IUC52ivMXFuyY3W8/E+srX0Z8T0O/eg523u1b
xPdvtT5P/F7hUBYx36GfA4jnFQ6Sp7Cj+v4Q7+tpODWOHXDf/Qt2//H8UWK+
H6gS4z28qDuMfWtErRj71xTzIHbYU+9S7Kp9Y33YMbf6iHhJ3LP2F1vghf03
Ip4HT//B3pSxgYhXS6/5bmzvhKpa7Mb+P13YZm4pxPyeFucjbHDzDrEeNblJ
ndheRofbifdb1BMedqruwi4y8CKeF3jn1h/spe9dPdgggKkPm682kRhPO/X0
ALb3sUJivKe5nIawd4sfIb4nM9loBHurL/cI9v1i2hh2/W3Nf9hl6Zf/YVfs
/TaJvYt8bZyY7+RgIn6vdDtOEPE5UrKKzWa5Rlzn6Bom9uOXmd2EsyNjiXiz
mBsinl8prMeJPWxzdBT7eBArDzY1YNcwtjZfFT924cO3xPgfMdgIEfmq5Ecv
tkNf4XbszzxRPcR8FfTsxF66M/cb+3NopQS23+31n9hc5Zf2YputVRH7iyQY
vR97ZeQsMf//5jUOYl/WziHWq90oQA5brm0Psd9LSVKHsJVfBRLxzTBvrkCM
73g3ET+7wtcJm9QoEvE3ns59GJtVNS4L29wonrje9mY5kxh/8CPieQonbN5i
jzVS5LF3zVJeYVO0fxPjOXq3P5m4viR6gNh/dPZE7Izun8T3DDm6x2OrrS4T
3+tdJP4E+z+9e8R80F8eeETsp2PRItgDnnmR2OF60gLYnZ9LHmBfKTblxf5n
pRVB5LPH3MT61I+2h2NXM0MKMZ60ovvYt+Jdp/F6P9kuRtwfe6OLiB+2NxLE
8w+8Fu3FPvHmRzT2w0/6HdiR/puI8TXSM5uwH0dNEeO3TdKowTbpvpKEreEn
UI7daBuYiu2VIlmI3VUhTcyXEuPdHOyhFa0P2G/WvT8Q+3d7K5EPNhVsSMeO
P1RfSOQfRYVX2CrgMJHPW71JL7Br9y8S+/GIqGcithT5J5EvC/R+PcVOmWrt
JPJPyvZ4bFnqXD/2zPZTcdi/j8gQ8Z1WeYHwv++e89h3gi8Tv4+k3lrH3rHu
9IzYX1WHaTXIa4m+Sdh/+F+zYwteiU4h8tVkFQ+2t82HN0S+SHoigC36ojET
O/lv8XZs5rSebGweBTlx7HvqrcT8NCdN78FOc/9Yid0juLwP+5KyewM2/Yzm
Qezip9t/E++jv5XDTgq3J/JBXD/zIey7GvJE/pSbtSHsXRVI1OszB3Plsd03
GxP1wSOQlbh/djx5C7autboM9lN/sjh2uM4laWySgbYsEe/qVyWwRc4FHCP2
80lTUezVt69PEvs1aI8g9kjXO3NsDX46MR/bN/Bdxk70mWEl5q+u6CZ2yKdJ
Mrav+Btf7PWi9Tk836m8TXewA1N3E/nNVF06Evvi82JiPfO3acRhc24UIuod
3+7BJKIe5q0R+Z3r1pGXxPOfns/GfrXrWBr2+xXT18T+mJhNx86N1Y8j8qMC
1zvs1ImrYdhSnn4Z2DfXMnyxkz8ef4stWrrxOlG/+81eYd94n3CeuG5W/hw7
fW+9MRFvWaHE+GJvtmthP8/JfEjM3+08iP3E5kAI9j2zm3LYoZ+4vIh6q0eV
Iu7POHmVyF9CP0SxHV0OWGKnDbEKYe8U7tPF/vThMx/2t7SLSsT97j+5ifni
zyXySbiS/UbslksdRH6IvX6Ni8h/D/7fn6m83Ulc38WhTdRP29pk4n6HpKAW
7OW2QeL5deqBRUT8Vc8S79enaBDxfe/l953Ysz9qI7E/utruw5a9uMcb+2dY
xhGiPjw9fhFbaPKZBnbUEWN97NtJcsR8SRy7eBSbOcH5Ijbj+xuSRH0bOuOO
vT3Eix/7VUpLKPbB6kQ6dkioOZFvitWKF9dw/ybd8Al7/2b2MezGMHmiH/VT
CviDffRVKFF/Mj+LtmPbFX5ewZ6oIDVhh3eucON4FNib8gP7hIqkFPbpmX2E
4yZUVLFjt7xowA78e8ICezRxrRW766KwM7bQmePd2Ox3ft3DXjQJHcF+UKWc
hL002kWM97K0QRaxPzYfZSX6m48cldjXWlO3EfmD4+JPbAawVR57QP7FIPY+
6/BT2HbtHrPY5z/mXcUumP62jv38vVE4dqyfE60W17PmjUT+cfLQYcM2SUhu
JNanmJ0d22W1nehPVTL8iOuSa67bcHyQpt8Q91t3cKsT/Z16NPF8hkYtR+yP
59RnsBcEsmOwBXIy+7BX9CcKif78QHwj9in+iAGiPuXLf8F2erOfnYzrX1NO
CrbVDScZ7OtzhnexxXsGjLAD5ZUcsDevS7th71Gw1yLyj8KnR9jvBhjFsHOT
tD5iZy7uJtZTfqi9BtteSI/oD5ruMP8lnscx8oJY/1XXaWyFJh1Xoh5o31jD
FjaYIeJzZ10mAwX/XuPKFmzRMR7CmU7qo1XINRwhK/j3QcM8hdgfO9+PY8vK
20diJx1T68Duovy4jD3d7VmMvdJSfQw7VPrec2x/3mkhbDtSrBf2utbS2nfk
uApvPWzzUL2/2OYfU4WwjdSMqrEbs5KI+YxXdcjFtrBdJvJbkOORDGz5mlV7
7JPHJF5hq6vsI/J5m4YBYd+jVkS/ycBeT/y+QfrMY6KeBPflYVew/dEhzoca
63XY31+8pGDfeTIyjK09/CAbx++WCQc2PH4pcPcKtuZDnYPYs0ZeYtgaOz5b
Y4uWOHWv4npXcjIGeylbLQF79LRXPfbupBprbErRa04835eGmySxbR+7GxL9
Z8m55RXkuW43ot/4IGLbgD19uIboL7ecsXuP/d/rOFkcD56SK4+xTUJ5ArHv
b/p6B5uzM6IZO6D1fQD2CaWNO3F8n7rEeRd7cuihM3a/BFMstvoAWwl2xvPP
H7Gp95M31CGbNfu1Yy+X2Rhi97oYsOLxunnDR9jUlEU17IbUPQ3YPt5HwrAP
GRyi/cD1VO3Xb+zDCXEHsQV95Q/h+RIr8TLFhmqecdiPf5OdsUNe1FPx/Aev
WAZh73S66o7t2bolDHuw6iRxPvrXUBaCXVzJ70T8veDOtBv27WtXJrFreA9b
YD+5M3uT2B+sHrLY6sZ2i9jXuH6RsR+oi3rjeH/2JrgYj/9KnOMa9tV7r12x
37TEezIgN5qHi2ALax+extZbny/C8/V99aUNI3Lc7Vwj7DGfvVXYirmv/+L5
B594xZmQbYMeXsJ+vWXUDftE3XuiPxOVsMvH/nvmpiVRP0PlJrElptWacLxs
Gp7joSKP6NH1sE/qZItjy9Czv+P4lG7+K4n92axKFXvv1SUh7PkTX4q/IYdn
u5GxRcwZjmPTE3434OeL7WytqMT1Sm72ITaVnqaP3cdHOYZdG8zQV4F8YEKv
G39PgKStH/YV271Xsc/l7N+JPXp9eATPR49lUGs5sruJsRn2Mf9n0diJMsm5
eD43uXw6hz21vLIBu1uEpoT9+cz903g97mQ5iWNvvH6H6B/+WD4QxXb4UUT0
16v6LAew4z7vmcHxMljkdQr7ulOpALZQmvNt7Pm7FsdwvJXNzVVg+1ImLuD4
fbJUIYTHa8g5GrqM6+vPd8HYZZ6ln5aQixZdKPj79e/39S8iOwt+DMeOtTTf
hr2+bCiJ5y/mhK/1AnK/0J5W7IjEbx/mkd9zsD3A81+b/Wkjtsx0szFeL9el
iIA5ZHMqTYLo5wq3s2C334lhwvEQLW+VMovPz71eRL1LVIcm2I6a73/gePpz
4JModoutZT6OP5FZSTbsujNbX+P4jfwcyoFtM6MRVY/sNVoujf10XsuzAcfr
UuUV7M7W/8404uv7L3/H/lykLNOEzMf2TBWP51GP+jp2G0NfJzbvk00FzTg/
XMqNxt9z7vHc5Ra8vx3iL+PvP+VbytCK8799tSmeH+PISyHY6opXz+P5NPB+
N4t9MdghGM+3aL/tiTbkudn3RXg9lN/53sIeOXucHa/flenP8djdRxKv4PV2
T517gi0eaPILx0NlAo8b9pstMwY4fmxfLchib4lca8Txlmq7oRG/r7vjqAmO
X/OI2yexrezKO3D8W05HpuHxX/C3sqDj+KK6DeDvK/75t5kZn+81/jBgf83z
PsaK80WsBQXPxyfTkWdsyLOpd3rxfB7R+t6/AdkxmvIWz3d5XCMPB7La979m
eD1sk0zFOfH5+w3/DF4//yr/LVy4Hx946oHXlyv10iD2818mkzg+zrWbhG9E
zlFOPoPjR233HeZNeP/whBTg+AvXUTbGvkTrncfxDG8t3MR+PMV3oAzH820e
4rrKRMy1EuRfvDtW8PNuMBnmf0WWeTpgjX2WR4KvCMdzhcxd/H4Pdce7X5Ap
9jzX8Xg7Hk/wFSBHnWcRwN/j7vz4Wx7yK4GUO/h735b0JeXieHz9Mh/Pj/u/
sNTPON9J5eTg+dt/xrUjB88Xq60/DZ8PZr00sLc2HBTC69FvZ/MvG5n1p/gD
vH7XXonUYy8EyxJ/f7oZ/XEa21Y/lg/v35PcVSb4/o7qy0dwPKXF65Hx+xy3
3NXH8Xjo1aMx7MvtXBdnkK1KhgXxeCdrN/tPIr/N8XuQj+vdtbNv/+F+fuyv
Kv5eM/0T4yPI4gf8DuH52DjvaTiEnPjB+UIxjkff4L5+3I/f6v9eivPZPs+0
XlyPzqta4XyxN0D23R/kJaE1Ybxe/608XOxGTh3To+L1pQ8VPuzC+Wpcg47j
Yf9axa1O3H9uHhTC+4/VNr7mN+7nnb8o43gsSn7qha3+T/HiT2QbXvZIbDly
bmAH8vuQD9z4/rsVLpFduP5JcTPh5++MOhr0B+eLXhVb/P7XQe0GfcjKJb0H
8fh0cninBpDPHwy+gcdPKe4zGkYO+vhXaAD31xK1bqPIlkd5DwwjLxxx0v2H
zJS34dUY7i++f6wdRz7Y1+WB53PenWFqAvmGkU8Szh+7nJXfT+L8yS63Ea/P
sXAXpinkpv+2lhDniTcJQ/j69WNdL/H+JJ+WNsPeazPwAe+/7owXBvh5s7Ex
LTi+drGyN+H3Hz5/kBHH8z6uwx14fEcSkyT5kJt+HbmCx3+tKF9REPlyR3cI
/r43HqK7tuP6Yn3uYC9ygs7cz53IZt69zt3I61KuKpLIJTeLDPB8nj0+dloa
uf0QZyvOD74cYO0AsqrYHxa8Pk6D6nvl8O8VdJbweh57M9NyCNfjhbb3eD+m
RR0cPoz78VceEO83s7tR5oq4P13Uz8L7p+EG2w4lnF+2j2zD8btiJiODHXU3
6sEHXA90YoPw7z80TWxNx/n/oTnfEWSepLc/XuJ4Xqr4i98nxTzy9TlyhRDz
oCyyb+yOzc+QexyHD+PxXt636dsT5K72/AYp5At01cFo5N1BglniyDPuUgEP
kTkv+Y3g+TlsK/j2PvKh9ce+Ash+9uZXw3B8KT/z5kEe4P/Zcg/5ren4LF4P
Nynpybs4Pz5SW8T7d8IwuwJbr2JzLN6fiQk7z+Hf6wS9+If33zVSaEkozh9i
8RtGkSWPVkyHI1szJ7H/xfXKbMPUA+RMti1s7bj/vHejAI93++8K4XrkoQFh
w1hcH85+v1iJ/EN767sEXG8qzqwWIku8+1SWgqxJSVnNRmYSeBX+FrkuuCEg
E/mD/pfl/5ADezUzXiNHWEav4Hyw8uFuVDLyxQeOfng/W8PBU8+Qk/SDr+P1
3TIgu/YEeZzxYx7ej2TGsYxHeD+ZP1fB8XPcUtc9Crm09Pj0EDIPb8/VSNwP
//RPm0Y2NtzwFNvO+/CpVeT7FcOc0chST6bLqTUkOCBwuDEGeVHS4B8H8uN9
0gNxyKfbGF7zIb+NMj6ZhFz/9VObMPKhE4H0V7jf/5dtKY78yCWDBX/fhrfB
wtLIny9/1v6M6+3u2PWDyBkT2l9KkD06iv4oIPvlZmjV4fdbPstUQubTOtH1
C9lviskQInvv32aO892dBsnPysgNrnbJOJ/+qvesxd6pGBaJ6+VFPbEQ/Pti
H1YmXlxPB8x+4edJK7+sE0OO8Ej4it+n37tUgeNT4F/0YTwevvOnClWRtzlm
qUkha5UmB51GHm0aHRVFvjZWP3oe9+c/3itsRd46PFJ4A9mVb89hTmThD/M1
t3A/qPWXwoh8dq9+XzgyhTMtfQ7Nb8psWnMsrjdzs4aDuL6GTF5NQfaaEdiC
8ye13jogA5+vwzftwP0ZR9z30SzkV1YGj/B+dM+86ZuH/N/G2QS83y6R1vgL
8fk8w9HxEbL+VFRCETJ/7qODgbje3N41g68vilZvv4nrJ/sbxgJcX+NYHW2Q
v2wzKcvG/UHJNV0D5CqKtWQmsm7g9NxxZJO6DfKpOB9Jsz6TRZ6ImJ54grz3
MrO7OO5vZOqs7+H+PGc0VwB57WvUcw/kzueCURtxvL1Tr72InCzzIIsF+RuX
hqchcuy+1ABGnK+vmTwBuP+oNhcmIZfu3HZqNzJT7t/U1SoSZE8Jq8b1npt9
uzQ2W0b5Udyv2Y+xVK8h75F524nriYq9930Knr8C8d4y5EbFjf503F9sPhCe
huvbaMhLTlwf2QyFHiDH+FhRtuJ+5FN5iwuO1zSPu7twPbvzfdUc+Qi/7gE5
5Edmce3Hkb83rw2rIcdf/PBREplMfxRriq30t5Eb2WzXQ5GryNt+U33X12iw
w2a3ZQDyon/uygiyzcTUrnhkxpK/99uRf76+oJWF+xcRFbcq5BnhhhjcH1eN
/Zn5gmzRfLYB1wtrcq9iFnLMv535eD/ySUj5ZyDvGDrNswN5iuIw+wZ5dP/F
GID8cId3HnbHkOHiGfz7t9JT6ciBpMBJV+Rvhm+yPiLPhXHIROLrXgsbC5HP
1vg7pSNz789jr0HOUdQ1L0dWfhWZ1olML3z9+jfyquq39mnktCiXDdN4f9gE
BbDhfiJ5VZFaS4Kpn0rDxfH8GTRM8SIrmynXqOP6f+HWmCiy6Goqix3yPdng
UWnkD8MuHPeRt67IfZZHjlF5+/AT8tmQvTsUkQOC/hzD/cEyw/Fl7I9aPDW4
fzMUG912GFl20qMO1xulc/luMsiJxr3dF5CPD4f+E0eOCBSLicbny03SHluQ
o5VHvEvxfrmkI0xHnj1bsXUaWZqptn8SfY+MQuecMJkOPZsseluRN068j9BB
vvQzSSkXeaTf57Ib8mZza74nyM9uPCQnIX+ePP/mJnJ59oX2cuQ1T4tDOsj8
VjHuQ8hedox0vF4lR0/a0il02DBb74DzAUfnKYkdyLc0Qypxf8a5g2KlgFwR
9M07Bvnxya5nmsjMXK8WbXG9H7p71whZ7nniRxnkl/eobebI6fS2XWQcP6M7
j1ogk05aNNai/SFz3uS2MfK5aS+lp8iXjp8J0MJuzB91QA4U2yWM3zdWd9ju
KPJDHs8Twsg9vwTBRuTii5lsZOSPCgdmBr+j6z0+br/Q97xWCeQoQS6YOPHh
HTJTXi5nEvJYlOCSN7JOUYTLbeQBJbOHasg55md/XUJOGE9wYURucZjzNEQ+
Qt33Kh/N/5Mdtr/UkOU0DAsdkTlilc5D5CBKgKsQduUFR2Vk9TTlxG+4Hzbq
19FEPp5cy3kdn6cpe/acQZaCs1/4kJNDOSVvImfXer3E+6n2eOKpaOwDfU3n
keMUa4O/IPuQWyzYkN/M8b4ZR76dvnrm0yqqV6737cTR9//kNhu3Qb4Xbnn1
EvLS6Tp5XuSkrpYj7/D8/Rg+VbuC8g/XySMryPo15/XDkHMvv67Uxf1NsNgJ
Q2Rn2RS+VJx/YlKlRZGb2nYakVE8pIyenF9dRvWPv/KBJfLB6+Zuf5AvJ6VX
FCL3zP6+2oC8jyNjWBjF64H+3SG1yDyjY623kFHbeawVefr5zYs9yBs+p7ON
IUdpa1w4WkeC+w4sCHOi9z1OOvcsBvmn57dEiMwg+qltBNl24o2PD3JC5VS3
wg8Uzym3A74hx9lfCvFDnkxkMBFB3ztycyT9C/IH19yLgci+q3WHppF3R3jR
Z5EvzDhLCtaj8+q5e3qOON8oxUYeQeb/WAhxvkgeNnihgyy1kSXRF5+ft3Qm
6yPn7XopgPvlT+6RJE1k4b3eCm+R4Xc1TRnkkwUKZ06geHF/t+kgO/J8t0n1
ILJg0fYX7ej9Cjtqc0JQfBYeXY97jGxh8xbsYkD9qI79WQ3klcZjdsXInxO/
qA6j7zW0bFE0YUT94NkbEz7Iyc2zWf3Isc98+GnIaZfuN9szofp6Se/TbTSf
P0b3p/Yhr+Y0/p1F6xHGaQj0qXRYxZw2eBY5uHa5+h2yYI2gIj6PZeTA+BXk
Ecl9jkR9MRPmkqeh/aDqrHIdxce9bP1vFsjXvNnCy1G8uQeR3R2RGe3aVLcg
V4tcE7NH9qq6f83xG8qnkeUzJ5GZFK7trqxE37Mn5pQg8sSS7IOdyKV3lhcb
0Pv+ZDHWhVaQ4L97DlVOyI30dMbVchTvm2K3zKPxfzkYq+uO/G533LkLyH60
q9kMyFocH28Uou9/XRki9ayMBO0sKnwYkEXLMh5oIue0TzXLoPmbzGkJYUGe
dhZT00fzPfoxNbmrFO3vA7sLrNB6HA9clatCVgzh8jmH1u+AwoBJLfJFy/Ob
jNF633ihbD2AvNdRPd0IxUPl5VNHeNHzjo9sO3kKxY/huxZwBjnVttX1BIq/
jlv89z8hr/637ZsyiufI1d7ZXWi896J4mZSW0Hlut9a+d8iGHFrTSoso/qe9
H2uh7z+91eKq+gIN1mi+NVxBloufOmU+T4MyMVIXi9B8WZtxevjO0aDTisyl
R2h+D55ryfhvFo2PNtjmheZ/z9agd8szNOg66zF7Da1XSPkOITPkgRfSeTfw
efznT5f6aRp0m/yx6ovW/5zpoU3nkW3++hlGoXi5enSAgxu5v2NZLgPF06O0
Yau/UzRoq8Qx+B3Fo431xxeNyMoktegBFM9PmaBOP3KBmIMquZEERXbHWQmg
++n/qqa4m9D+uFX3nwuyoo1ZwLZmEhSkfE+YRb60IPlbsAXFg9S8yhM0vn8S
Un/ZWkmQS+wMPIe+527zsv8Q8mBQ2Ig2+t5Xvyq/Zrah+YkkbzuD5qPjPD3X
8icJCgjnWd9F86WXIvJ+GrkpzaGyDc1nq4UDj107et9CJ6MKmv84+VNhRcgi
DGkXcX7Q3vyaNIvMdZnyyxb3G4KvHjH9QvVNznABn8f+/LFqnEDXT/x4NdWM
4uPOEWevLORJe86vSSietoga/tBHNo+grN5E8Xg79J92JXr/M6OYzVoovi0b
mkm8yKfO2B/axkyH7PsMFRTR+OuYsq+OstDh97d13UfQ91158TIhnY0O/UUe
ifKi+Xi+IptqwU6H3rL8NdVo/mDlosk8Bx3+uFD97xyaX0gzjXbmQuddxdHd
bWj+c4WhaeNGdB44dsr5wA9cn5a/snKjerf8/fBNtJ773xhJbuGhw/nqIeUk
tP6ya5IyS8iF3yReFaB4cU1S/faSF53fNTwHalB8jU5ArW2b6ZC3J/i/FhSf
urKh1yyQ/x0Q5/iN4t9Ba+ChJXKfMmVbfzGKt1g16x3I5Pe1ivNFaD+w7T2L
n5f+SLeepxDNpz3depgH//c7BiP1AhS/y20HR9H4zl7ee/xBHuqvK7+R0zfR
IfD0WFz4TII3Yw4OS6HvCQkMKbudg97XvDfAiZMOd9HuZctlo/vZzfRc0fxM
nAt7z/uJBD33UM6oovkDIyNK4llovU23eXei+T5xlDPa8SPqZ75o7ldH62F/
uTJk4j/U356PexSA8gPpo+6VDOQRCVbPeLS+244/2/sW+Yv/uGg0igdHrZTV
EeTT5vwPnFH8vDHO7fRGz8vZ+UuehOLN729WphV6X6W4zrwfil+jSvLWaDSe
ZslgUcokqleVym5b0PhvxFHjw8dQ/G9U9RhH3yd2s8Ru/zB63lmJSK581J+1
S9bO9qP9/DXa0vsL6sdjP7AN/KXBbd1hNnu/ov6x481Jzh4a/DygILINzb/+
6ychXp00uBaYLX8C5Qf2XgEDuQ50/9SsWApaz/2Zx7LV29H5e8mkUAKt/0rg
U5XcNhrUtD2W9QPFi/y/7OBHrajf+OynEIb2o2GTr3tvC+pX7zLfO43idZbk
mvsG+bpDsZvQbxJkebidexzZpmBwb0c3CZJGxr9mofst/PzC/HtJcHvqx1Hy
T5Qv0l6JMA2SoKZ46VoTer/a35fnjEfQ/plk3Sz9mwY784YqHP6heprv4Mne
TYNKmhGrhybRefS32KQj+t7fOkz0zGkSbGkKPac7gPJpzLtr5bPoPC26kSV5
BH3PZpeb1+ZJUM11xcp2ggbTyWMyLxdQPnLz2HwP5YvIrImqs4uo/2e0OkZH
6yW+/eS7COQaTn2ZOvzfd67z3ZZDplln/v6B6gsfy/v3Wuj+8UXD6BUUP5tq
69eq51D9evHpGUTx6NlrbvR5hgQlPniO3OFH+3VsEzfXFMqn/J8+lW5D/esv
Z4ZW9D0KO6+f6xCjw2CRgIsc6HvDbK3m8iRR/3ykb+PXfnR/Kouq7n46vPqz
QWumB/UDY+1SPnJov26uav6vA+UHYxZ2+SN02H85pZUV5YNrg6/LzgM6bJev
/8CC1itngsdh5hgdRguv04vQ+t68vMTTpIr674B/ZkooHja3BTRPq6P+89Lx
TdFof32/VsaieoIOaYrXuH6heKy8Zf03D/mA0tXyHZkkaByWKKCLLKv/yTvg
NTrfHeYdnUH3v3Q+UbgxGZ23d5VppKHnx3FmKPbGo/G+3CnohN5/6HjgffYY
dB6SjJdTOUqHHjbzxakPSPAPxf3hHgU61GDydvkaSoJmbfw79snQ4Ye8YZbr
IShfBWQzmO2hQ5NL4iJVASRY23BIPVuUDlmlzvv9voXyx9jebhMBVH9D/jbm
+KLviZt7dwrN/+bdgQF2Pmh8mXrd2Wg/i5Ut3VzzRv0kvcYN/z3pyYH5Lm90
3dNcd780Wn+hwBU44Yv/vvRVwRXtLwltfW4zfxLcWl9f/6QL1QfFkz8KAkmw
/fYnzU9NNPjS/lXNlrskuENbRXnsGw3qcg5Srt4nwV+3sictC2mwofS4+fto
tP+Xu4T2ZdHggsbNRzloPkJ0b11NS0P18HR0TuQLEpygcp36+hzFGxOt4WA6
Cd7Z68DyIJYG/+M2uXUPzX/8qVMSCpFo/7nsvhaA8uOvx3krLaE02C0WNMCM
6vPFhzJ+QcHo/PttwZoB5f8I80N1526j/U1lWjmN4sVLauO0nx8NOjQdDu8d
JcHMgmtZiz40KC8QH3kfxW/8tMHfTuRN5XuyZRnJ8KZH8HXUHMHVaveO/zjI
MFSfY0kCPe++gO+lvi1kKBGWKfoSve989tXCF2JkmCKou/w5DPUP5dc9q6TJ
sOlRx7RNNA3+2X5j/YACGf48lzGW+IwGQ2KutX1UJsO8P6+PXXpNg+rbxawk
T5DhqZTwtjQ0P79So9SvnyRDuv9Nd5MStF/XnLkvGpLhyuyz3NMNNBgqU8Aw
bEyGfVE2lwP/oPmPLwrpNCXD4vKl+RLUD7AlqpZLmpEhNfpY6iATjrf+uAIT
MuxiKjhQxofi+fe3pYDTZNiRszd4J4qnzO0nZNz0yLDQNEyqGe2X1re3ViLR
eA6xBDlFG9Chgoi1zy9Ihg/c9uiIX0T9cdtVDRM5MlwsPHlA24MObwYkim+V
IMOSM84vC0Lp0HSxPOuIABkGPdzre+gZHc5tSOtrZSPD/aFS79wy6FCz1/Qp
9wo6jy7tij1SQIe72aP8BIZJsC2eT0T5O4rf8z+Ct6H9azKhd1e7mQ5zdavr
9UtQvXmYfnRnJ+oPknuVxjNQf/h9SCG+F/XDq9v/7YtF/ZNl/7bbg3RovLnz
uhGKz20jajXZQyjen99JTXBC51eJs6Rt6PrM02hGHXN0frou5Jv6F9UzP7t7
zzRIMF32k45aB8pXsW3qjbKoH3gf9HCtng7pAnsYxEVJ0H4FtraX0qGhYc+R
1k0kqH0lt/bfR9TfeFJWNjOhenT2s6nJc3R+H5wSPjKxDs7XxS8qhdGhVXNP
1d72dbDd6f7mWmc63GH+L9Gych30bF5PAOZ02Nb2UXdL3jo4fahYpw7SoW1d
UkvCh3WQUiJA+7qDDr+Cq5fF362DQ8ojYhZoPY8nnP7dnbkOrjhojU/0of5U
dLP/SPY6ECj8trWmjAbry4bvWJWug5b1SBHVFLRf645t1G5ZB/6D8H1GAA3u
UVILzRxbB1F59DSr8+j8GN5EPobGrz/gWPBBBe2XT/4lJrwk+GSXXcKKGLp/
tfQymwQJMt4RSI+m0yApgCKkBlF+KdNVaBqlQtaq7x5DJmj9lsxsNzRSIXOE
/XDDDXRe5x1yiMqjwr3aSdxtEajfg+cu5aZSYTzNRzYV7W8RhxdTg9FUqKOh
lj2Bz0M8rCd7gqnwwT4h5gCU/y9b8xV2elHhyVETFTEUP7aikrv5nakw4grH
WKQUGer+vRhT5kSFx385x4Wg/TKXwAh4kEv07i58vEaGSXtcug7eoMLfGg0J
pZFkeGtgsFHbgwp9L6zymmeR4U6mORffQCoc7Jft528hQ6mtytWDUVT44mkt
X8wsGVqDwvmnr6hwulVV4+ImCox7Zdz1pogKN7REuG+RpkCqz+egjb+pUG1s
T5GSBgW+S9JiqlmlwnejHyQszlKg66sQ/7LtNNh1qtOe6RoF5vEydrVrofUJ
jNcq96XAUp/uvl9uNKjBbwBk71Lg7oFOs2CUD/aEBMuP36fAa5di3t9D9V5c
0cv+aQQF7Ycwtduo36uh16jM3aNAr9E63nkdOnSN2y3x9RYFnmf/UG9+B8XT
poIn7eh9h8KzYnnL6fCRwYiwjDkFXuleSnRhYIY22wL3NEMKtGQSaCuAzHDv
v2Wp3m0UuGvlr7GwNzP0ujjSEbdIhmoLR49XZjNDzmsz/Qa1ZDhlE1jdNs4M
I3+kHPZ4Rob3l0HeDVEWKDItZxJpR4YP6x9pFhiyQIVjyd3yMmSo5OeT98eX
BfYce5rNjvqFlvlxTcEUFvjrpE9IFerXXr7bcedzCQs8z/mrTRzVm+H+2S1b
f7FAzQG7C70ovu4yeZp8GWaBJ0NCX+dSSNCq4t8lOMUCHYvkrpbfXQdHczuB
+ST6fay/2dZNKJ7jlIfGBljgG9u3vnkJa2Auf2fdTDMLpPzqiW3ZvwaKTO6l
heWxwNIU3o/e31fBzR0O3HOPWaDNsz8Xk+1WQVlay/ngqyyQS2VjgeCmVUAd
qX7yQZEFvuPlLk8qXQGct4ycSIwscHTFRPS77wroVdjNxlLGDBct245sVl0B
UftyGVz9mOFtl+p7/7hXwGNnKc0lOWa4dJ2FPWV8GQSdkPTWRvkoos/I2615
GXye3z8n8ZgO+XmMxOLKl0Hb9eQ6AxU63N+U6Lu3ZBlU721Ru/2PBl+nRx3U
rloGFnYP56/H0GDVdwEnhq5lkGil3dACaPB9VybZYm0ZODY4/TIfpMK7jlzy
5rtXgIeYte/bB1TY1TwUum65Ai6G3b5vq0iFIdlVr5Sfr4AzLu+qhIeY4K9Q
42j+iRXg5TN4xOkxExQ81gg9TqyCIc1rol2aTDDISpVBP2MVfFXfcHyaxARj
Q/rq7witgaY0tlKpPEbIr/mXhyF2DWSce0Bm82CEig4GUajHAi81ytiZjzLC
3y+tbmxA+Uzv8feJZzRGeN/9SM4fKRKcObq3xa+RAUYEK9wpQ/2NqUCLhthL
Bsgn+1vEdgj1xxf+WEvfZoDanlw3z6H9bc8YJHjiEgPMFvwqDHLJUMHusY2Y
MQMULGIyPbebAkV3jI3d0mOAl9ZPj1HiKbC8X7JU/DQDrF+9ELqXiwEukfMP
TNoyQIPpR4OfghkgB99iQyF6vnJ68Q+pNQZoefVreOA7BjiqZuXecZ0RSsTo
lCgOM8DizurH+X8ZocOxBuneg4xQylZw5YYuE8zRK2t1iWCE7Gr7NhlmMsGX
ZG7m7lVGmHJe2MqSSoWWLoxvh72ZID2Bfd1IhwpDj4YISnJRoWltil/DLSrU
4tSV+ptNhRdvs0/aJFKh7WUfj+5rqH57yThXplBhdmsTyRj1h5dM07eJ3afC
4G3JDp+3MsMI3babmmZUWNY3aPOIhvaHxUnVZSYqrN6Sme+1xgJfpvMW737I
BC8fFAubWmaFxouVDMJo3dITA7UCltjg3muhWWH6jFBXWTPs3/QGeGdW5J1j
GAP8JBX77UIPOzzRr7utPosC/6tadFrJ44DFo72S1+rJcPUX/fnto5xw68fp
4dOoH2dTtHipdZ8Tzpj3p+bNrAPpz3D7SA0nHH7sXVcstgZutLfXpixwQpqD
eUf7pRVg8d+c1i12Lmj5pVz3UNkSmGvlGVHl4IIm/y2w88FFEN439MhpmRO+
fu2Z0NExD/Zqp9zmb+KEXdw9n7SezgE5zVXJplhOuLzDJ63j1iwQFDtUHXqK
E5pKq5GY786AsuUy39oZDphvyW78+OM06HVivgSlOWD1mQf7+tenwBMfyaQB
I3ZYe/o/VS67KRChnxnC47QBDu75d1tschLYfrO/0uDDBkdWVHgPR04CnmM1
v6uCWOHWbc+++utOgjBDTnGteyzwAZ+QylmRSbCptbNT4j4zDNG58sCCZRKI
eufd/xmFzvMvNYuV6ZPg9sPiwAuo34sWGXtC2zIJJGwEMlzSUb0Y6u1pPzoJ
+DJfR1mXMEHPsHlJQZdJ4B87s/FADyPc0Gn61bpwEhjM6r57g/aLL2Vg1n7L
FJDd/+XSWXkGqCCTdEEieAqMdVJkMpwo8FWyulI+0zR43Z0g0PofGeYOHndx
eDQN8k+YRS6SyDDHw3b8g8IMqFOb+iSM6jSraTJNdmIGOPc41D24vg4YSWW1
5bmz4DrrV+0qjTUgHuT6xSF2Dqzp/C6tObAKQk/tm7KImAe0ldQsz30or0z1
tVOfLQAjWVvfEuVlIJHefpqtbBHEbhh58urCEkh4vNisQ1sGZT43fLUTFsHM
UPTi4IUVkChySH5xZAGkHo1ZKK1aBezL6vIcxgtgZ2H26/O660BRX+Pb86Z5
IK6b+u+uGzo/bizvv2s7D5ycwy3Fz6D+8ix/wjDLPHCFDOeM9SiwOMTuzfHy
OcDuvaB5xZQBVmxWvhT+ZA5YbsobznVlhMteqhTT4Dmwn3X7pOtbJvj77U7j
8Ydz4LAc9+fnC1TIb0R3fVg0B77uv7atHvVhvmLBtgU886A9M3bPYBszbE+R
6Q16Mg8ihTjAJ3tWmGG3nL7l9ALoqwgXsNi4ARbYTn63NFwEiytK2v4V7JDq
/barMnUJLECOJX5lTkiaCIk0sloBX+jNUkpbuGC1csKTLyhPyn2w1K/v5YK3
29l/qOSR4IKhmLnyw40Q7rHVbw+jQEENr1xJjk2wVl7/580ORmiV9Sjsy/FN
UErb3rsdnaeWeA8LzvBsghsU7iiU6bBC07qCkRdXN0LZnb3sSxEcsGF04sVN
ZS5oD/QGT4ON8P6NYs9YCQ5oWSQvf3+OG7ZKbFVe52SFXWdU88C3zfCONIv7
rxiUh76XjSaEbIEWif/SwyQpsGJK86E3TRDGKFs2VmquAKVLejvlxLZBcuXY
9VM3Z4H07RPJlpeFYfL0Dp+S/nHwriz8ygW6CLSLvO6UazsANPw1fm50FoGH
9+ebijH1gN66l3Y9n0Rgu9CfB11pbUBnoGv0dLMIVDRPOvOnpx5sf33SZqhF
BP4r3D56gvwdnMo58etDkQhsO9ry0puxBKgwnRx3eyQCNeP2aKcy54PnjCT7
CTMR+Gfqs/zTro9A2iSIRuMUgeEnJZ6cv/YOXDt9Yod4tjCUHDR+Wrr2EvTR
e/pcTwlDvdEzHpxRz0Fi+n97KEXb4O35iMbXh56CwaghpowKIXij6XusnEUM
+G3nqGqcLwirG2R22pEjgcZGW+6sRAEoOTRvlO52H5za7sTU7LoV7tRv1cwO
ugv6vaTz2FS3wIS20nDN4iCw1ph2pIuVH7LuvMH2qfM2MB/gettetxnG+47n
Bry4BSghj5/fiOKF99fh3qQWX8DmZxv3x5wH9n0w0Poj4Q12JzfG0fZwQ8fy
pPh+fk9g/MHfzIhxE+zo2d457O8OGHU7IqoGuGDz+8cJKjpuoEnNdG64lRMq
d/BMHbjgCmhcP3XupHFAj/T0e2aFLiDW88r0SskGuPU/GB6l4wLOd5xJLl9k
hfYjd8fE6C6A6weo/qPNArekK6XuGHQGrPwulxvz6fBa7KFZEnKZVn5evgYN
boQJ7YcZXECXfeuUzzgTFH2+UMIn5wLKb1fLVL9jhLJfjdy9vF3AqojZ78Mh
DNCW1Eb70uIC1vO3rRm4UmDg192WZ5VcQclXPpazfmR4Tu7+fpb3ruD4Ilv/
pXgStBGlkZj3uYGkHbdyVKLWwad0HofKHDdAYWLjCudcA6mvnv5oPOEOJvbM
OmmlrYAXYhprVT3uYO/XvqKj1svgvI6vlY2vB2BlnWI9JbMEpg+8rDIV8QQ3
WaLrIgUWgcOH+VW3ck+gt2d/g5LAApgOoW6JvOIFYpvUk97smwdGBzh23eLx
BmeOcFiZmcyBjdvCKkUKvAHr3ErsyINZEOdbL2pm4wMajY9HC3fMgLdF3/m5
ab7gxQPds42yM6CCh4nRQcQPuOeXH/uwaRqU7JJ84uDgB7g3awnwPZoC3ilb
VHd+9APPPSaSr4hOAavymY4J+VvAajjivLr1JHh6oXCXD5M/KOcJruM2nABx
x16ElUn4g59N4mVVOyfAhG1vVfsJf3A+enNSE3kCUJeGDFJu+qOTu1CZeOI4
uK1yVJrLzx84fYwdpweNg+ePWL/mBPiDrfY60U6e4+B00FPmKH9/MBdaWqjn
Nw5uSrVkprr7gyrzdJgZNQ688kqESHb+4OYleaa3OeNgzxbeA3kG/kAtxIfD
dXQclL35RF7a5A9Ytyp7mx+bAIKXEp4PD98C14cn1xidJ8C96s05PPm3gL1w
o4RT5gRo5E8XPqd7C+jyiErMHZsEkbcj/1PgvAXEO796DMZOguXSTnJ+jR+w
n9vsprs6CY5PWd81CvYDRv/FSeSjOm15wLXVW8kPmB+Jq2v9OwU29z2MNu7x
BXb2ObxnLk8D1rJwzi/HfMGS6JcV7hU039FG1pVL3mB5daijQ3sWZEu1cYca
eIM/QiMbyBvmwEBniP2TNC+gk+986H7nHFAZG/zOzugFxhaKlNuK54HbzJ7n
XGc9gSFf6pRB3gLIUZ90q871AC1PFyyjvy0CGVGThetbPYD46g7vM+NLwOw9
dyu85Q5EHhv9DNi7Aq5ufX7VZ8wNSF7Ofsd/ZxWMHBdvu33ODbx+wTd0grwO
+CTmzhZ0ugLTKzbuWdokuPeJJvU92q+Cmgzk5d1kuJx89Dp92QXUv/cbKuan
wMnw89FPnrqA5+etly4IMsDthdd5nfVcwExWwJ4TcozwuEyp2jyPCyAFm+ZV
2zLBH+cE/uuccAaRHIZcOqjfYL1B1YjrdQap/RTDg1J06FTF2Wu+5Ax0XISV
tKqZoaZG/TvTQy6ghHZU+fM9Vhhv4MRrk+oC5BbX3h1y2ACjpu0sb+q6gil/
2zcTVzigRNWotquSG5BZiJoRq+SE8w8Y1I0D3IHHhTq9gUEu+PGC3Ts3BU9Q
9WS35eLmTTBo/XFzl4c3kDN0OBpgwA3HGkqcYg75gcCyLCOeJzxQTzNAYH63
P7jIkGma3McLR8JyPX9lB4BHfzXqnsnyQfYv0TBqcwhoYluJ5wjkh0NsM5fo
UaHAIqf/zJe6LVAxv5Qar/UAPGaY2WrLJQD5v6i/4zaPBsr+TJHdqoIwQHXB
/vFALGjpDuEyuywEPc3uCYipJoHDmQdnbNy2wfij/qVtD1OB9IctsuvywnBk
utnqHSkDdNs5e35NFYbnKGv9I0ofwW7RywvyNBFolbaLxpmRB8Y6Tt1gNhGB
+xQYWFt2lICp8DLbkBgReKqzqUQ16zv4L2DJzaZEBHIc8Wk2K2oAfzPLKjTa
RGB39Ca1s5fbwfninFC/ehGoIKBze8ejP2C33MF7T1+JwJWtYVdVGIeBxIf9
2zxOi8Dq5I2vVchTgOXUknBfrTCkBi0GHHZfAD93lkp7swnDAfbPh81KGOH1
a548Px9thWdy3giHhTLDTXO0ra8L+eCv1ud9J7jZoYEIwz/ZIh6opGyfX/GP
EwbrFkbeq98Ir8vmWmqd2AgFS5tZenZwQhdOeoAs2yao+Gn7a95XrDD2aYvN
EOo/eIaEfp9opsFvi0t7k1g3wRCZmMqv6L1Wm7P3PfDfCEOjs566mlLgvmS7
K9QyLrjrNTyWifo4RY19YXeHOKE0u292GusaeBoYw/yExAl/fpN+6tG4DBq2
/itmkGSH8Xy3vf/uWAI6DI5espZs0KxmdVG/ewEUDnrlZKWic/dVPqelqXkw
nk996UVlho5OLp26WvPA1juw9rcfDYa+Kegv75gDSwzfT7jyUmHT4LxVFzo3
JBR532wtZ4TOp5kizFA/2JyaJzESwQDlrkzs/Rg5B5hTx6HGDQr8oRegnvUF
2XJqwtyBDJ1zROZ3MaF+VDYrKtyDBJNUr9fEnZ8HA377Kx8fWgfV1gwTh3/N
A92Kh16yiatgd0/X0dcXF0C4SUfAAXT+PpGX0ThMXwQ9BaUurPVLgL7f+Jbe
l0Xw4x2LsEf0IjC4o294KXgJlOwXWHO+uQAqemd/T9gsg6Gzy+kHHObBg8JV
n1qDFfDVmE1OwHMOmJm8OkU2XgXN+7U3NCfMgnq36pz4K2ugxq11v8zPGSAR
+NPjS8w62Loj5eqT/TPA6WH0RIslCZbXZsZ5xk6Dk3fClS+skGCwcGSgEapL
ScZ19IgkMtw+qOFSGTcFek5nO2ifpMDRfvnvETIo3ihubgFMDLC88hd/RPsk
sMyInGcrZYC19/waKyImQWztzidJd9H514dHw8JoEuiWBGzuMGGCBdYqFlGS
k4Dz57ljsnupEJ1mn7RzToKkT+Rbk8w0aPBBpjiPOgni1b7zSI6gdUubHZ/Y
MAlW1wZvfPpBhzefyYga7poEG0YY1fZ9Zob3D6X2DRtMgrk7Ew/7n7NAp+cC
jl1R6DwlZGf0G+Wruev2qr4jk+DqSrJq9TU2aCzIraBgOgVSlW682KS/AXLu
2K0c0TUFeIbkuht2s8P3eWY3NvpNAyvVSOu2WXa4nd/pjJriDLhn5aNU9oED
HmHeYhTKMwtCfPcpBe/lhDXZrLZUVDdsR9NDItw44e8EUcWLO+bBw/fR0l+y
0PmTFCFVarIAHvWo213p5YSdbOy3LN4uAt+8x3/3MnDBWDUQc1FgGfBeYP76
m5MLFnRlj7ekrIChh7sNstm44Aepj/QjKmtAl//WpOMcJ1wfr7+RMbkOTOKt
rx6v5YRSmyhlNxpJ0KD58efVKE64X75GIjudDIuX/TiWtDhhku9FsOpPgYnc
YXelhjlgo/mjBTddBrhHQ8xeSYwD3k2TTPVhZYTq8e+n9HXZIQO3GPlHFiMc
ce4UGrXbAHMOeWzrPsEEWWT17EP82KCsu/gMtYwJnqUamJ6LYoX5pTuGn4lR
YYnEpj7pNBbYrq1XRbenQouvh94zfmOGcoxuU/HRVCh28vCvfZN0uEmSejkk
lQqNLcQCju2kQ7Fiho7EBCocnbxRz25Hg8NufS9kb1Phm/WUzyUFVJixx2Kw
y4AKh6NZBinbqVDuzNM5U24qPLAh9PzyIyb48cYlCYsKJuivc6H1tgATZB88
IxDiyATdz21Z2v+BER6IT3mrzcEEn5CSoq8aM8LaDSaDva8Y4fuuvxWB6LsN
zm4J0TnKCN/kqHz6r4YBmn5R+qhSzwD9Vn+x733KAKV3e7Vq2TDAxrw3zRLu
DDByXtQzbZYCo5+WrPZaMcCtm1vl3e5QoEryXt0EAwY4+lYs6fE2Cvzjkdye
ooeuiys8/p5DhmGx2W91jRngg6ruLa9Pk2F22L2wxQsMcGrdOeD9HAmeX7x/
msOXAebsuKOugfrcyyqd/aQEBgguxu0sUCPB5L+KY6rlDNDpy2L901GUX94k
u5+ZYYCCxQKCFkbrIO2f451icUbY4mgvyVi1BjQjSwPWrBlhgE+NcI3mGrAI
VcmLfM4Iqcwukk+rV0Fnhwjf/CgjVPOa/tB9ZhUs3PjL4aTIBMeFIt9mL6wA
RaEwWdMIJrg296JAIXkFSNZe/EgdZILM/KxsbmdWwFrUs8XSY1T4x3dQ1kdk
BYTeG4hoReso2lUXoD+7DB6QRTjd1qgw64vzvdmWZfBM5kRTswUNBoyV7TxX
vgxi+kJP8xbQoNraVc7gkmUQniT25/RWOmT68cFAp3YZHKt/pPDKlQ6707ZI
h/UvA/1ved1b6+nwzfsNRexsK+Budv+rvJ3MkJ2V/e3toyuAwpkhF+nKDPdd
z20O9l4BwTT5t++LmWGs/tRgVOUKWPEaENtPQ/mhOG6dtm0VXPFVP31IhQVG
flM9zOu3Cv54WQkzuLNAECgxUzWMvMIyOPCCBbJqPLjMdnYNRDJeeXumggW+
/zb75X7bGsgK/Voz38UC8/7rD/9jsg7E9NNP+v1jgYP89Br73+hc0vM7oXeK
BVZl3nh+6AAJqiQpOyiPscAmmbhmdhcSnEyRHfn7mwVu8DYVVPtMgqc3ZRiq
lbHAgMqypKElEtRLmudiQ+8vUJBVoR8mQ++JKut1DxZobBA7l+dMhmoi7cUs
WixQN2f9nDTa73kxGU/28aDx2Ec2J3eRYZCnW1dAOzP8pnCW342NAtfeNrOI
xTND6CFZLSFDgVkCXNHSZ5jhhet80eYGFKhp0P+lgI8ZDv558aTRgYLO9cLm
Hc10mHl0Y4+7LwVe2bwnOiiSDuGRN1/M7lFgn1N4+3N9Onz9kaMmKYICH0t/
ZFnfRIe+4QzaMfcpsFMz/7huGw1evcZ2LzaEApt3XSnanUiDF5l8zIW8KNBj
VPsepwMNXu92Y0ixo0Ctt0N7LirSYNNq1bdcQwqERaQsDy4aPC42bjt1mAJ1
ExUD/UeoELY2uPUIUmBYifKupO9UaMNnwyq4RoabwOddAxlU2Hj8hKJ8Bxlu
/S307PRjKiwKPcZdgPbfA7l8x64gKqTFb398MIoM95VJ89p7UKFAM4VDwJEM
x8dfDDZdp8Ko++2yqBGH6+bDxyYcqTCytUiRLkaGYs9vOIVco8LLX7l5O0hk
aKvYI2/tSoX+D3tffflNgvcOnCpVvEWFz+7eFyPlo7qavnmpPpwKX2rUMw3G
keDY3EVif+xbpT/I8iZBMR7l2PX/qFBQrWP92TkSbMl4fX8BfY9hdkVIozoJ
knbJnbvaS4VpXVfdPPaR4Mq2rgssJBq8c8joz39b0TlYu3vhhiANTlQPxz1h
JkE1C7k5PTR/5uNdVl4z6Bzx+zZJzZwGf0cL5pv/WgfqqXfl571osLg85Yp0
5TqQz2IvvvKUBlkX9fyu566DAabKuGG0H8OGTr0V+LAOlg/LWfB10uB96c6T
fO/WwYtpnbzkVRqcn/1jpvZ+HWgvBFYcEaBDRSWmGK+cdSA1G0eNVKDDS0Wz
+4NK14GjgKeV1Wk6jDgfxiXWvA5GvwtIWTrSYX/fhmyO4XUwE3Iq4FQwHaof
HDP1IKP8BpUX1uLpULPOmyGfgwTzrOOey2fS4WFFs51x20iwsI+rqqGIDhcG
JNd70HwkWEp+zKylw8cJ0o7Gx0lQ28iYKe8nHU7XJ5YXGpHgOGn9598eOgRi
z6Y67EiQa4e0kfgAHZpoeOc6+pKga79KUtgQHZo2z0kciiJBJfu6izuwD3O+
m3uF5lf4BRulnw6/WX3NciggwaU2XR7NbjrkC9jeZ1FPggelDYNE21C8b6/I
juglQX+Bh/+KaujwTkOiWh3K56cfe40bfqXDoVPbwgZpZGhYzuG39T86/PFK
2ypzMxlqX3OXMkimw6IBGQ/STjJ8PKLuo/SQDhVO8gh9PoD2e7R5vKAfHbIa
WT4tUiLDQK31w/JX6DCR4uTCqE6G/KfNYmpM6fC46fd+N10yrKwTOr9djQ61
pG0e8RmSoczN/SLOB+jQ1VBovdeYDK83JrBRttHhrJlDTp8pGdqZwftkNjqs
dRJu3GVGhg9nc+ZfLtJgqohRJ/7/Adw3x8WKDtJg/9QWpkJUr+rszN8ntdLg
+5Pn9dROkeFTn79OKpU0ePA7zeq6Fvq+W0ft9uTSoMq7e2HnVciQfOq//Bvp
NPhx7f5RqEiGAVaXrkg/R/v7g5qzhAwZfrp4n9nxMQ0qLc5tOYHOtRbfeMcV
I2jQyl7Hu1iIDMXrnagJd2iwTtnnR/4mMlQd+7X9UQANLl3Z9cmCToZUvRvL
QrdosAXmjn1Dfau14gWdA740OHOdpVx0kgQ//NxRWupDg9YHt/BE9JHgsuqj
sQp03fl25VfJdhLs12ylS/jToK3Unzs8dSh+8ls9WwJpMPENt8DlUhJ0pxaf
/XQXfV8ZTyDIJcEA+W6bTDS+LyElDu8ySZDtab3f6xiUnxj9GWpekqB0V8uO
wAQadJgsuPw6gQQ1I+yNxV7RYFnjhmyDxyjft2jZ27+nQTH/oGetD0jw54xT
v3weDVL7tTuOhpJgrfYVbvsytP9U7rXeDybB/7V03vFYfm8cf8h4MsueZTXI
SEaE3NlJEVkVympQiPqipQglUigkWiJKmSFSkYZRkT3KSFZ2VMTvXJffn+/X
8zz3fcZ1zn17vZz3J1SXSfP7R9L/h4YLtcE0aiLs2+fQVlaKY9r/3r8gGnW9
QpFN+Tt5Py4eERAl9cyRoFXxZpSVOtmr1CV9hkZNfplbt/YvK2V+8k8ED2HD
dK0sbSY6Je56M+sD4deRBolGnHQqLfa0pDa5nkm59/Nufjr1z3m3n8N5GrWh
WmHDgjid+rzelkXmAo3aamySGbGK1OtKh5LgcBp1++ly9kB5OnXuPUeFF2n/
UeMp/1JSb38nj35viaZRUU163GYadOqKK8vZ3Dga1Rp/b1pMh05Vxtn/Gk6k
UcbN0oFyW+iUBtMrhxO3adTI8SoVbwM6lVy4ap/uAxqltsrBa5jUs+wNx8CN
j2hUbIrWnhQTOlXgwCW7I4dGfb5+YnnEVjpVt21CyLeQRtGlTQXyCNsuDZe7
/oLsH99ZJSUI79ZcGEsj89m7a9+JJmM6tU+q0iLhA43qflMk32NIpzZ7HLTY
+4lGeSqcP79Dn04pTIeH9TTQqOYu2vlVFJ1i6nKvk2qjUXV7lyYd16ZTsRnb
mLm/0aj+HHbe7aR/9kasBslk/e9o+DRerEKnnnzNm3rbT/Zvz6jPtYp0SiRQ
9n3IMI0Su378TrwsnXpr+naydpRG5RlkhqyVoZP3xustdyZoVJNWSELUCjo1
uCo44u8U+bs42fR9qxDZL3vKVzeR/UTk5e9nYuT5OhaWHrLxN426XHvvgAuZ
P7rS5D6xPzSqZHTL4VJWsl/xhK8KJ2zOPWWqwUinljw1njlN2Howht41x0rZ
CRueZiQ82mdqWj7DSt1k654RIdfz2r+Gf3CCrC9Hl74acj/GkNIuxxFWav/O
gwZSv2hUob6Sj9wgK3VLJezPykmyH39V+m7Vx0rJuz40/zhGow4LfYzs6mal
vLR/rtIcId9PM5Rt/spKbbWZSXEfolHHD8qHa3WQ539A7pr9ZHx4/kvi5moj
7wcXeIw2kPX5U9Zvxc4WVspGwvVSTxeNulVd3sFE3h/YJ9YcP9NJo2Yyq/et
JfvPJl8eJ4428M3UvyxqZKWycpc7Xm+ikfe0xIV8whmxLPqrvtCoM3V/HYXJ
9wX+JLq/IvP7eHOO0FfCgw0jH4/V0CiZnM/t8P+U+mcPV8H5ESsVP5eTZH39
a9Z03fCWRkUfuiZm2M5Kjag9L9leAf4Rlke25Hk4OPoxOv4VWe/mNd6Z38jn
tbvaBctolJ+6q4tGDyvFLfSl6SN5/pttWKY8Tdbn3JnsrRVk/2g0+Xiwneyn
oSklP2ZIvV5PbvfrJn/fLr+9V+jIMxrlE274YoGMt6CLr+aqAhrlb3Spch2Z
j+fCN+Ql82nUe14FOcdfrJSs6+zK/Xk0SvJD34uo36zUjZW6/r25NOppOFte
/iwrFcGstjmDMM/2Tg84L8bDrnblKeGdm1OG3zHQqfqlTC3/CM/JRX3rIfuB
4pLoumhyvaWXnpXVkfrZ8vbzdjdyP0MXR98oNjrl75bjdoK0p2iQYXgZqTez
xJLaF9DenuI3u7jJ/qCamadB3l91/BqeWy8n9epcNttB+ju+eYnuMlKvI3mZ
yulkPF4yOw2c4yPP++DMkmiyPoV9Fdkfkv3m5Gq+b9EvadTQhkzhCwJ0alQn
uOnOaxold9FDQ0CQTlU4nhopIeOfUWSRDP8fLT/THdpWSaMK4rklgXMOcevN
vKNR145lRQgSvsncPAH/78f3h3lDNLneWG96AyeZ79ItLmpV5H7t8q5e/2rJ
+sidlakh7QlKC/lcT+rD3MxE8SZp71r91AOX68h6PWlau4mHTnX+8TKQJvUU
teXFcPYy8r4rmvAtluwPyrnGd1hI/yf5Kj07G8l6fPNbQ5eMT5ng3Qv/SD26
f85d7sxO/n5ZVRQ61kz2n7T8S8eX0ilDt7qNBS006u4z5pmzZLzl1taJ7SDP
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
       "]]},
     Annotation[#, "Charting`Private`Tag$9707#4"]& ], 
    TagBox[
     {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[0.75], 
      LineBox[CompressedData["
1:eJwU13c8Vl8YAPDXfF97rygRMloUKXFOrvASaSoViUQqJSWjksysoojqJyOj
7E32pdzXyCYjK5vsvX6nv3y+n+uee87zPOc555W4bnfmBj2JRJphIpH+/f1+
5fIJF9udWrvatXycoQFNzn3uwLfrO7WOcdHaBg4Y0IqDplU3L+3Uqmnhzzgj
YUD7m9//PkB3p1Z7EAvDcXoDmkm87H8N0ju1mPe2rJpVnKQpf/A70FUmrnU7
d+eNOOpJWhrPEeaxjB1awjZD6oYX9WlCcNz2cLyY1iEZoepGTypNhg8y5PkI
ayUtql3w6ThBk8x3ahfnFtBaJv4yMuGaNAuP+g77TR4tvyMjZvvIkDYryJjy
mYVT68D0Cp9P2VHaj7dtrOViLFoxR64P3TBVoTV1+N5Po7BosY/JhHueVKE1
/M7YP+LYh6VazubZ3GalmVtLLI/Z9GGFDmnvoTErrYLnxdGFy30Yu2NQraQm
ck/bPLNhH6a/4qPPvZeVJtsmLr0T9mHyvqG8LMKsNJXzvj3WUn3YdUqzndhf
FtrdwS833gn2YTx8S1sqv1hoshkll35S+jCO6/y1VypYaEf58RdnJ3sxHwYp
XloECy3JTTE+K6cXu9rUPyuvy0LLdZ60FE/sxXie7RKMPMhCe9H2we31+17s
Tpe86Q5xFtrNmhbCz60XK+x/YKSxSKHpyKXbtuv1Yu4fjtowfKbQ8G+7TD6V
9WCZBYuVkYwUmpE7e5ZZfA9GHv1Aq5gm0/Tju3z3BvRgBTHR+HwXmZagdDB8
/mIP1jGf4fUwm0zLNClo3T/zG+vwUFpfsSLThAyOGBhLIZ9m2WKrYabxxxyT
NXzbhS2cWlAB/zHRJAJOXtN50oV9gEnH+PyZaA9853kNb3RhG2UyDjNOTDSP
oZH2F8pdmK7Q3O2a80y09/bWT161dmLX7cqU1zmYaKmNE+3yop2Y1NRSNHRj
pNllmVympvzCylf+9OneZqDROPXfXVprxZhiPKNzzOlofO5fkpaHWzHZC+4h
nGfpaLp6vxKim1ux4C90FXe16Gj2MpdPCqW0Ykvs6h06u+lor2UnRt3NW7GL
r95FXJkk0YrlpX5eo7VgjWfvX+d0IdGeds2WSsQ2Y+VlIJTpyBZho/KyUyi4
GZML4L5YuH2L4DaIcRF2a8YOLx1kfEG/RQRtcMMjV5qx+jNdFFizSUh6tb5Y
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
6vguR0kHhXT8Y/TBu4dC+6lqogZZVctp+JEP3K4mZv3Uh9eeJH18k4b3tU7I
j8/2Uf/T1d5T5JSGB0bONjW29FGNTQx+rJim4XvDd2/9yuujkoRGuWhyafiT
59/CtJ/1Ubecjlx/+TwV52htmA3l6KP6zZ/A948k4+bsf02YDvRS9105+sut
5wvOoSThqynUTe1STbM9a/cZFxX+JnDgUBuVRcSlY+96OC6QoFG1R6KGOvdE
n/f5j3B8m/bZHbtHqqmGQWOJoiHhuJ+jXN7d1GrqqbpYFRmFcLxST27wj0Y1
1dHU+bGf6TvcN7nb6qY5jdrxc5/i7cZQ/NSx02JhWVVUu6ODvAcnQ/DTGpKj
isGV1I7TF87xl4XgMe6+zHbXK6lVtYJDKm9D8Odssu2zSpXUbayhqkAjBF/7
JPK9trmCmqC8qW8cEoz/blHmqhatoPZcWy1xpr7GL4CXNtk55dSz9lonTSRe
43ZS4gdO+JVT9bR2SDxeeYV/kpGxEL5WTiXg6/47X17hD1XDj/mwllP51Acf
HeN6hXf5O295Xy+j3htWm+dpDMKLzpNv7z1SRq1W5PCQ8grCSQm7ovi5y6j5
flPfsqYC8fr/RELii0upJzO4oxU/B+J2/60OnQktpS4OpAfIXA7EQ7udFMHd
Uqryns7tITyBOI1FVOO2dilVduYQl+rfAOwYbWheLCaHkFHPTk53CsA/Oamr
3B0poRacvF7lqBCAX12tiCgJKaF2DWffuEYfgF2Q5n9QNJ1NxOc+lY995Y9H
mWuOSk0UU4PeuzqzaPnj5ZsmPw6HF1O11hS8b4v6Y3GeeCa3ZjbhLFA4aZfk
h+s1h54VXSiish7yF7ln7ofr4l0LYzFFVN7GVxdOHfHDTokuVrOHZRFvfWfG
yLUvcXZ7rvMYQxF1O1Ug/L8XL3HLkR3M1ZmF1EXe3zlrl19iDwWT6+OnMokJ
7RgBs1lf3LjTrTZQsJBayvFhwvuLL+7BudhGVH2jxlty+Fm+8MXU40db2/Qz
CQe38+bWYr74+7SSD1P7vlH7s2LJ4q0+uEiriv6v/gJqyx3hHNdUH6x6I2ku
+GsGIWnjXyao74NTgz9FG58soD67n9l9gdkHD+7JBuN0BdRDLcvbDvd6Y5je
stpPzgxi4mCN3NWn3njTzuXivLv5VK9HJ69Lqnnj16t13s5I51Mdjid88BLw
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
ZSAGd3xasx92ZGhaA3/YcsSAnq8mzTfC/jvNNODG8Sp5mJtxThb+7qOuBFt5
ha2Gw1njVeCK8Ft8dDyZi2j97Fgwzg53P3Smbiko+IP8uJLxWRX2+jwxTM93
jJvp86pbw3rhRyLxm2DH+MRmeMezQ/T7dwP9aD9ZHXOMjk/1vGoprZfp4rWw
0Zm8XJp/Ga7icOMZwTdwT8tlYbj5ws4X8GB9Jz9dn0DTJJj5/QAXre99evGw
ZPEbdvq8uXwMbFC0ixFWC+eOhs+VPaP9ey/nwPz+96nuF7zmTXok3NJe+BVO
izxPvZ3tSSf84ucqen+hVjqN98ucyHvwxeiBT7AiwwB9/+mVuhWwwhu2WPhW
97oCmo/hBx7DF2Rc6PmBd9QhGebv3ZUGj0WvToVPsqU/pf/vhLvS+f8XFv+Y
9p92J7o+fCukY+Arn6bo7+fWy4fv0fEM5FTCy6t3RsCGh9Pq6XiZft6Gd6s2
t8GZAnohNP/PKPTBeWImwfCl85d+wLsOLgyCOap9xmm/2u97ExZwzKT/r3uE
vqb3j9rX0f6w6mAyfZ/AnNZK2G6Ol9bXpK+YKK0/n+Fw+OasoyTc0L8tivan
4zLSMOsGlgdwb6GFDCz8VonWY0DfpDzdnxQjaL/9tvr3JnjhYVG6PubTOiqw
XlXMK9jYbWIzvEjkaR7cFs5H+xP7x/giOOKsDr2uoeVbTtdnbS99PsVN7yM8
9WpCCT4g/bOG9h87d0WY+dKhBrjpVbAc/d6y8/T/GQ1P/Y10/t//aYeV8uPW
wTfYs7vg/AuxdL4j6Z29dD9I2CVG568QMwBr7WoUgn1lJgdhzkzdFfBUQt83
2GLwDl1fnQcOdH8aan+/BI49dP0nPX+ksHHAnVz6w7C3nAOND2P2A+qvdlMM
cM/MaurfvTcmEc8pNVn6PtH8Hlq/l69+oN/7s9DvO91/960Zou9b5TYI74zW
pPXwguFdPxxsy9cP+z0zp/UuMvO0B35uq98NC39fQ+efkRxKz5PHdG7Q9TG4
urUDnmRoa4Xt5vTb6XgS1en6KiS4f4Ej5lxoPRUGCtLrdnzJND4hjb3U+q0/
3tP9r5yRvl/CS4vG01LRsQsWM8woofW8Urhn/vziQ+P/WvMLHa90oQutx9wn
lXQ+WjEh+bCm2RDdD5s9G2i/F01T+gbHtRrR/f98QRitDxO/ySxaLwMLftH+
5N5A61lJ0msEtsoffAvfv8BB64fXVSmD7r9Fo3/hkb236XXtvzdofzVeb0yf
t39zmMZTb/t6+n73uYWL4Jb4tdn0vFEXuBjmNNCj4zm3uYPmw6KN/nS86esX
L4WLBFtp/mcqLuaGl31WfwfXHG+j/nPoMZ3/dKkHD+33L1+Vwet9xWm+eX2P
o+vNuUKA3u8SwFw9vz+r0PcfGTSi8WlPVuOC57i9aL0I3xen49n+N7KW1uPc
Lzp+08ToOjiqP56T5iO7Pz1f3dQxoPN9YWHyGV52o4+ux+tHs9Qb3rmxwRaB
VxrhhP5kRnjyvCa1sZ8r3Y+WNvjQ/LkcoTkNs1ZcpM9fHrCj+d60ew393i6X
rzQeoxL36PgsHWrH4DMr1On8BIeHR2GH+hy6v8u5JNPrX/38K+nzSbdofZ29
xESvy6dwzdJ8SLWk15muhdPx9QqdpNcPKUrSeJuP76L23TlK6/GhryS9f4XR
QWrvtt7598lk0/ub8+5Tt7I8px7e9pbaWLiZWi+/lPrOnllq47+F1DZJzPR9
p7zLqKdFmKhPWnygnglhoOapnrcc+XUBB3XM2z1t/noaZyU1w8N572SZd8SR
eW8Ynr9fffm8/wdPVw3G
       "]]},
     Annotation[#, "Charting`Private`Tag$9707#5"]& ], 
    TagBox[
     {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[0.75], 
      LineBox[CompressedData["
1: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
l/q3y6bv6/VP2KAlUj7xiZP61u3tY5Z9A1h6zwtyaAaZOuC/Jz3QuxujPk5d
sX5JR00VVGmUmm3F3nztrX0vtUFRNShNsGyrx0yJCeeyt9cplldknyq9qccC
bZRaLr0baogeF45rKMmlpTwIbnxRtk5xOiawJhpaj1UvbDkO31un+Es3yWi6
12NvTouhD4zrlF83/1adZa3H6B0W2x+PrVG+f2op/DJfh8mWOKSzln5s4I0Z
NdPsyqH5yzWXJz1Yo+iqPP29o6kOY27i3H7nv0Z5d+azWO+rOsxNVLqa7iT+
nZHpVVZyHbY/88VPZ401Sn2lYWRYcB1m9fbAxV/ca5RzO9Pyr7vWYYT5+35f
Fz80HPjwKv+xdA6tx/uyC61zlQIq/M9f6NVhub8PVsjmrVIeCjieH5Wqw3zf
jmpKRqxSbEjKx+XZ67Df+9936LusUiJS4k6GLdViDeSmi777Vim6dvc9lkZr
MTdO+f4nuh8anJde6t4JyqaZ99u9NqBbpZxe58jhK6rF3KuOK3d9XaEsbT4p
r3tQi+Ul/Am/XrNCOZm2tyI0vBYzTGraebh6sOFlaW9XMXc2zaH0eaTm9RVK
7tqIIzpVi1F+7BTZe3qFUjnLvWZArcVW3dYM7gwtU/77uVX/a6gGuyi/11/6
7TKF5P1T+ll+DXb5ZpBfR8dAg22gIFeKwROaUSiRqeTqMoXVqisi3aoGI62/
139utUwJEZRx61KqwWhxwi8qdJYpguY5BxXoa7DKV1GUX4LLlAXJQPm8j9UY
R1PLmsbqEkWjc/DHsfxq7M+L39MiIgMNbaY+268ePaYJpRnFSFUsUc6d7qgS
OlWNGah3WTSnL1GeZNWVaqlUY8whjUthAUuUzmt/D1xjqsaU/7Vfczi9RCEJ
3nT9MVyFOc1FddgYLlEuPn++eamoCos5/M9U7UJ/w57CD2cEyY9pZQ59T7K3
Fykn3JxMme2rMCh4zrHwdZEivnL0I5tOFXbfdJDbrn6R8lg/Ik2LswobHrUR
2trsayjkWWhSz86iJe/ozosJW6RYZIWc26h6h2UqTssdclmkNEhlmKcmvcO6
OC94e/9doHg8eX04dLES+5QydLymZ4HidySY53NnJfaxhJUzVLyvYV72UUn9
10e0sVzipcLkBYoD57j6ZlAldoCV466l/wIlNnjwQvPJSuzLb9oz3tMLFLYJ
JaYSlUrscNnp53/2LlA2fATHW5krsaPDM7fHJRYoQSca1ojfK7AT+xpePg3q
bfiWMnt49sgjGlHEjMg1NU85ItVNvphagZEX+ubg/Txlv1yg6ONLFZirw2jt
SY3eBoLh7gO2XI9oeZK7xH6mzVNG0vy7nZQqMMFZOapd8DzlnVnbkSXmCowz
xH32/VRPww+FovzFjEyauXjF5dQD85SJ1hgb/4a32MRqpKeVyjzF+8N2s/uj
txjXqv5elR3zlPdzshyB199iqRFiK2sRPQ3OVwNMuRcyaB3H35vIjc1RCgbv
Lm5qv8X2KK65mLTOUTzHBq968b/FPGKvnSqwn6N8lJrc5xldju3l3xdI3T9H
Ido/t7vmXo7pW/5O8ezobgiLHDt4J+chzYH3ongJ/xylu8D43oJsORZGFI6J
3/hHKWEQirVjLMesVL9erArvbhDXTN0To/iQxjludi6m7R+lUfXkVlJ9Gbb/
iHBlfuE/ipJF9YmzWWXY0zkFjm6j7oalK/J0P18/oGGmX+i1b/yjMJWmbx88
W4aN7Rf89tAF39+EU/3y3jJsT8+XSpP19w1XPyf8TtZ5QJsOXh58rfWPMrL/
JueuzVIsf/ePodO7/lHSNkPuPxouxfa0vMj2vPS+gfdnL1tq3X1aT4/n29WZ
WcrDpfBc4oNSjN7oyI2pgVmKXFA0+WtAKfbFJUB0rmqW8kt379SwTSlmMaRe
97e+q+Hk88yWVen7NIM21YJ9sbOUV/3Zc6oipdi9QKbYBL9Zyp8lq42IjRLs
iRihKQq6Glyf/eklF6bTitisjM6bzlKusBv1JlaVYBb2ooRN5VnKNvVSiGlG
Cbal5sTwqKqz4YRA5bDj3nRajXkytx1xljKg8UGMZFeCvS+Wfujc/5firMI0
x2tUgu0tfmmvaNjZkBBET2LuTKNdeXh9UffqXwrfyS/HbtOXYL5WF545H/hL
8Wm61TzzoxhDVNka+eqOhnDnZt+l02k0xnzTgn1//1CCb2ATvM+KMUOtmg/L
dX8oF7icr/RFFGPpdzWUf/j1UwZTLT6k+6ViZeM2HuFW/ZRxW2HywaOp2Hup
m7Umev2UMwG31GX2pGIJbCzXJLb6KO5sRWowkYKdMA6/bXi7j2KbRRsRs0rB
PnY+XKHL7KU8dXu4/5ZxMvZ8+HLyqR/dlCXWCZvTqonYkqpN8d+wdsopKxV2
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
trAV3ySgx8OWso//w+vbMmh31G0CqnZutPPB6xHu3iybisLj1aTrFq1DRrde
8rE3xhPQ25n7VhOG+HlBfRGkZLw/WdzV/Y3JKPukkEjOfdw+tdpIwOt7UXpW
JTqLgP7VXovRouH91c61mPeUgN5d7LaxNcP1QeFG8Pwr/P9SWuoluD5dajVY
OVJMQHtuKCcZWeD2+XJXlFYQ0Nld1YkknEOjrR9z1+H1cs/8KQe+Prg9Y+oo
nm/lpGu2Zw+Q0dM96+0enbjeG9jeYNhPRv1rT1Yt+ghI+ulkNvM+MuIPmY+Z
/khA+iuX5AONyKjKWP+APq4Pt6S5yO64P3yte+4of8f1Pc/VYwz39xuVPaoG
rz/rQoulBXUy2myKgO+/CajWk/Nb4R4ymmzRyr/3l4DK2IMfKSjg/p9VuNmO
12/oxL16Tykymh3dXxC+SEAdzLGNUaJkdEWY62n9MgEZBj8dShYgo1O7zSFo
lYC8/wvqeshNRg/lqh++XcPrt01stIAV1xcL6SN+6wSkoWh45zMjGSluHdws
xbk8JztyD55/1tBfWcE4n2Q6dq8E14P7TVI7BvD/W3xhCw5cJCF4EuRWhe8/
bOXfFTNLQkyi3jRYwe1b4FGe/42vj7V1cVgioBfqQ6XFkyR0bpxHeX2egObr
LG9EfichyT4ZpIvr5c17TSHDoySkulJxSP4PAWUodua8HiYhRwff9P4pAhoL
eZ3L8omECDUX7xzA48Xrscg884GE+iZiHiXj8VwXrjW1GsTPb9q0aRoloLUw
wTdmAyTkz4EtjX0moML2+YZGfL5V2ai6r38goJ+y+VM1OP9zj5Xd2U9AKxGP
CTr4eqWBGIUD3bi9dP3zsvh+5yd685M68PtedYZnGH6e0HTqKSaMgNh5lY+Z
DZGQ6VJ+QzZ+H4hONgq58Bmfr9FH2fzrCcjXjMX75xcSQpo1/yJqCKgotrci
7ysJpfGFFn/B3wMtftSmfNz/UO9rJv54/TGuBEVMTJCQLPV8o105/k7H5IZN
8ftW/AzhbEopAd1WhLCWGRIafT/NKFZCQIuGnE6n/pHQo727dq3ielPkLemz
iM/rKo6L6TI4n5CJ2xW7gp+nurXx5A0eHy9x1p0bJKTL0xflg3NdzLPYuG0S
CvgiNB2LM19y66VxOjI6f7lvZRFnvwemurxMZGQmblj0BN8vVsrfkJuZjD7Y
3X9zD++fC8Uebh/x+umMTq2pxe35bRXW58BBRmP3Dx6SweflzE0zpTwuvL9m
JPZX4v44tIvZv8LvDxOaDywDcX//s/AlOPOR0UeX2mZ7PB4Ob6a+9PLjepP5
scepmoA4aXS+czvweVurdSeoFv++98GlRrye3/jvXHuKx7culUuLJkhGZ7o5
LD41ElD6bX3VUJy3SRk1HHi/Lh2NunAR5yGzAx/34vniJA1vC+HsPTJw0Amf
31++NXsE4/t9CUo45I/3c1K0645c/Dzgum1+9T0BqZEfNt7F7cnZT3fkNK7/
Bf73vx3A7b0n0V0ljvf75PHzu/pxf3i29Z/V4fWTCU/TNfD+SqTUhukPElDM
oboMH04yCipVS4jC663rbNOzRPw91P5j2r0A1weHFG5KFh4/3gufg3KGCCi7
1HgpA4/ve0p4hucnvN/fJRokksjIQp/OkQGvX0WpNza38f58s6nf7Inzgzdi
vkH0+P1iyTowF+f46WijYCIZXWC1S3iD85WFdLP/5zd0y7r0Ls4gyZFQtElC
lxo3Jvfj3DHZ3TK7TkKRH/7kfcDP23lXk2SG9/fobHeTEc6Vc7u4mvH64TJZ
sY/E7ctt/LvgtExC0YyGn4px+38QmtwV8XnRbtvwvhH374r5b29BXA+eMdds
V+H+BxQee6qC1+OD8nXz7AE8/vszV33nScja++hkHB6vloWeQ7/nSMj18oHC
i3g8j/YW3ruD89JwxbB5LwEdiAi+bIbzBatPd6Tx+BP8BGTUcX4jZdu6jueH
Db3O2IvzrSp0Z6CLgIYkPC564nw2iTWzGM9nZg9xvQLnqw5jBffx/n0m8Isi
j59/5YKeXgyef4edY9JvcC6afHknqg2PT8s5OIHbGxoW8zIVr5e/ltsMPLg/
uYZTkaWt+PoGtvYxnBN9Rt9O4PXVS+mubcL9P1H4+KUiznRPPjOX4/GptKy8
drOZgJC4cFkpHr/9PU4753B9IHmsDFav4u+l2hb5Kzifr7wQ0InHu/7UhiAv
zjzrO6tG8XxwuX3ka8brWVqytHUO79drVFOOeJwb8+O/0m/h76le7gZvnCVe
frbnwvMrkSua74Jzphitnx/Xa8h/In8J55SG8iFuvB7KX2iZJuFsVxVzjA7v
79K6vaQ2nA020gz+3+++WbT/uPHzv9VFfi7H68msmtXeDWfnRvqUAAYyesVx
TOn/753cRG7x3Xj9feqO3jbB/Zv3SjyB4fzRvUQFw9nPaa/VUVwv7rk5k07g
8WiNwcOAc6bN8brfOD9UrXSUwet5Ruvz3Tt4PFVTwnu9cL6cLVqgiMc7OEEH
e4yzb8Nf826csY8XEupwHq6+k3sFz89ZjWdx7TjvJ+cyieH5+xVjdOH/3wtM
/9dxfcdz+XZxACeJQkVmsiotkgiZlYQWUuRXHqkIGaXSQkmpZESlIURCGUm2
hr2SyCiRUFpERWTmOZ/rz/frvr/XOOdc57q/m4pLyB51umOx5N7dUwwcKN9i
PCYKR8i7SjbN4KZ6cOn6OF+VfF5OPCuCfGs8XeYjre/Q0eODilQ/w9JSvr7k
0UHt6Axy8Oo5BSLkxqDceBWqNwW1TLtI2q+JlOfCePKT5CgBSfJNmd9m0+m+
CItebhNC8TI8PBSwn+x0e8rkCYqnv3C2eR5ZJ3VWiiN52eG7m8bJezfemlxD
8V+SvdZYler75qKWFFWyk1neIvQb/kFDw5uUv6uTX/AcJ0t87tn6j/LL0xHN
f4EsUmpk4UB2f3re35/8oU0muYHqYerjtu7T5JwDp2ONyIkxPhn7yd3Fc48U
Uv2o5Kpe2kDu8fq8ZC2Zt1pvjiz5ygRXZTX1h74TDho/aH3VBgOye8jv39pl
ppLNc3d1c5A/yZp5OZO5lWtKEqk+1dqsfGXJHD9sJWzJmwW5CmsoPlPOSRvL
kW8MdWmdJJ/vXuDVS/WtdjfYVILcz+ksXkquXzhumEnx7hTSa3tA7vRNdTQl
RySOhESQY3nX/v1G+SpPiKyHXc+2y58lH9uZJZ5IFsxPlZUh+4fzFBaTG+zG
Rp5R/gPXreb4Tq6xDHlqS257vndEnNbT1xq5hZe81exppjm5IL88NBP1Y3Bm
YRi5/U6crhNZsMRIvY28L3XP73nkfc7/y11G+1fd77jqC9Vj/ofqc35kt9nj
gY/IupY77NvgKjXFs+Rvbu6LdCi+2QmJ223Ijx4aRIaTk7N/y+iT9/PfiBwm
m2XyBimRQ4TsplhRvr5mcPjMI68N3VCeQf5Z2FciS+ZpmvNhOuVbd0GK+AKy
TXbVVntyzMWDIqrk6sgt5tnkbu8mEyPypfmX+SZT/UTsr1q9h/w7I7J2A9k9
PXA71rd6eJVAAFlzSfTQA3KpfpJmCfntiQ/HGslRf1uGB8j7Zw3Jc9P+v23Y
OC5D9RnjY71pJdl5pFpQn7zxbKqyG+KXESFvTU6I/CUWTzbquqfsRm65WGnc
Ru7a229+nBz/3IBfguJftdc29yRZc/ekR+bk3u6SOA/yi+9rAwPI1xQljjqR
z8oojxWRs+1Mgy3Jv79qOg+R43fMcdEl+9pMNVGg/AvqzrshTT7lPjR3J3np
pdToEVr/aXX/UxfIKib/FtWRfSOkR1LJvWti6+LIk423rWtA/ew2ND5KHqnJ
l/5DFjnfom5A3qe73WQG1WOO3vZNM8kX9C9kyZNb/W+saKF4Ny28v0qD/Ow0
f3gcWS3l6+e15OpQWbmD5Ld6xlkbyak54vu0yeI715aYkLOep3PykuPrqzU3
k+Nm6nm9oXxPrIswNCIvtzhilUBOOsi1UJcc9VGE35N8ed3t+cvIX0ZtRreQ
E8oNA6XIvL5xfork8KaYbF6yvVNL3zRyevEvrt+0n9M90Wd6qN7+d3Zt/Rsy
h8+BvQ3kgSvvAvPIL/Ir0vPJTR/KbqI/qsc+9U8lP41qsPUmP/fl+RKLenZ8
sfl/ZJthsWcR5M5TLhU6ZMkN5eO3yDPdnq+YQxZw1PK5TS56IvVnlPJVEf9A
NIacIzV05AM56dfcVw/Ie8LcGwvJJTYhyZkYz+2MVTz5TsPiYyXkMU5F3UCy
QtHR3kZya4V99mGypJPvi+/kHQk7hq3Jr286Fk2Q8x4NLjPG+e88d0mM9v/h
vyeeauTlNa/qlcmfxJ1H55OF5QVMN5LHjErKRcmlCfuT95GFO2f2TCOvTLWJ
9CWrz+Q7ykm2tC6pjyJfN1JwGKF6LhWR4XpC3nn9Qu4AuSFAtRP5u8X9066f
vEoxSLkPtt28E1arORnHT/kWtZX1w/umPt68C8iOt35XDpNfuYrI6pGXzDTl
56D5ur8b52wj509uW4h+tSppToITeduehL+C5Fy3+8Ve5MRgoa1S5NFDxd1B
5KLdrgJLyKciPvNEks8NPRrWIAdpXOFMJKf96/pmSA7Tj63MIO/ieZloSf6a
vHDnM/K+5r7puD9NbKUfF5P3anZ3HoOvFL0uJ09t2jF+kXxBQ7uskrxeeNLi
cLLtZIcIuEFzg1YSOfmvhwPed82byvOUHHDKQB/j+fvZ2L/E+s8pGWO+V81J
S9+TvU5Z3MwkL/VS1+smh2bMtUomS10QPjpMPtl7MyWG/PigZtYUqq/f6x0L
wsita5Z+FSIXe/U/uUi+m6bVL0WWChB8eZLcuKO1dCHqVVZCyoWsc+WQuTK5
UXPGe2ty3NxdlzXIZ+Li1DaT5V7HHtYlf5WOstRFfCUlx9eQ39+ccFqK9Yg2
Ll1H/j7Ue1OKrL1YkdeInJt9ih/9OWaf71XY4k5W1z/Kf/08zveG5MCz9yx+
4X5eLthrQA5fJXXgI3m2+rJ3GF/5XJNFI1kme3Ua5ucNuTC3kjx65dyllWSr
Nzo9z8iqvs9PqpBHK6Or0snLn9WFo//dEeV6mUh++2TK5Plka7m9o3fJtdLK
tZLkglwD+wjy1p/HZ88it5YVCNwgu15b8G8qefv5nMErZB3DB9c5yE2lp+RC
yAMS0yYGKf6LD3D6B5ObxYO39JD/SzozH75u5n3/E3l4qko3/GL3Vqlm8t4Q
l9f4vefTwrJa8kOpDWVXySe6Q7+Wk1s01e5i/sFMWft81N/oZVusr0l8xCwb
/b1ZvCeGfPy+VV4q6uvlTJX7mC/r4KP75M0/0iVSyVWZ/GvukotSbIKyyKli
2z0iyM396z2e4/ebYyxuYLxT8bllZD4Fka4rqE/3S/o15IBFlhqXyRJNy4be
Il67qvTQb5qTk4vbyX+vFHBeIq/zkQ/+jn7675wP6j921shqnG/LFQuyL5Df
afwrHyErLLgZDb//9nUGF9XDnCPPNPD+lG0u3HzkF7HGHv7kQr/lN4TIFdus
THHfTRcSypYgl9Z+fhJEVklbtF2W/Gu3z6MQ8qcZ3PvRL0qsbsleI6/3N/yi
QJ5WNPAP+3PlcCtRJv+cZ6GH/Q/7/BtbQf5+qb42mvxTwuXSStS7w0BCHPmf
7Cpn3EffYvQyE8lmGz2jUO/6x6W6EO+mWod5q8hlXcorM9EPf6ePwf9bcyM0
D+d314Zlq8k5foe+IX8uK6UL8DyuT2BZKVm7/F8G+tnpc+v/e4F4bqwTxfje
AQE7a8ha5Ut/amE/PCuXNJB3VTwywvq+t5TlNZFrePUV1Mi+E3WTW8kbRNfF
L8f5VlzK0UF+UKNSivO40q/yXid5Y3DitcXkjuL3P76S95dOmitPntun2tCF
9cxPO4l49uy6a4n6ndBekiyJ/VdGHPyJ+ugeKhYlJ4dukftNrnWfUSOI/ayO
cOxDvduLNaN/JwvZGPaTEznzf/OQT7Q0PoGrVQTnIt8B3etewpv1bnvg/P+n
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
       "]]},
     Annotation[#, "Charting`Private`Tag$9707#6"]& ]}, {}},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "ScalingFunctions" -> 
    None},
  PlotRange->{{0, 10.5}, {0, 10.5}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.88840448212053*^9, 3.888480730589466*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"051649ec-7214-46cb-8833-040eec6f792d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Fig 9 b", "Subsubsection",
 CellChangeTimes->{{3.888402521166562*^9, 
  3.8884025624936743`*^9}},ExpressionUUID->"6046c041-9359-4644-94e0-\
6eb150ec0681"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Clear", " ", "all", " ", "variables"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], ";"}]}]], "Input",
 CellLabel->"In[1]:=",ExpressionUUID->"439898a9-adff-433c-9a99-5e2829c5b1fb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Define", " ", "the", " ", "dynamical", " ", "system", " ", "for", " ", 
    "coupled", " ", "dark", " ", "matter", " ", 
    RowBox[{"(", "z", ")"}], " ", "and", " ", "dark", " ", "energy", " ", 
    RowBox[{"(", "x", ")"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"de1t", ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"x1", "'"}], "[", "t", "]"}], "==", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "3"}], "*", 
       RowBox[{"y1", "[", "t", "]"}], "*", 
       RowBox[{"x1", "[", "t", "]"}], "*", 
       RowBox[{"(", 
        RowBox[{"1", "+", "wx", "+", 
         RowBox[{"\[Epsilon]", "*", 
          RowBox[{"x1", "[", "t", "]"}]}]}], ")"}]}], "-", 
      RowBox[{"q", "*", 
       RowBox[{"x1", "[", "t", "]"}], "*", 
       RowBox[{"y1", "[", "t", "]"}], "*", 
       RowBox[{"z1", "[", "t", "]"}]}]}]}]}], "\[IndentingNewLine]", 
   RowBox[{"de2t", ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"y1", "'"}], "[", "t", "]"}], "==", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"y1", "[", "t", "]"}], "^", "2"}]}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "/", "6"}], ")"}], "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"x1", "[", "t", "]"}], "+", 
         RowBox[{"z1", "[", "t", "]"}], "+", 
         RowBox[{"3", "*", "wx", "*", 
          RowBox[{"x1", "[", "t", "]"}]}], "+", 
         RowBox[{"3", "*", "\[Epsilon]", "*", 
          RowBox[{
           RowBox[{"x1", "[", "t", "]"}], "^", "2"}]}]}], ")"}]}]}]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"de3t", ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"z1", "'"}], "[", "t", "]"}], "==", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "3"}], "*", 
       RowBox[{"y1", "[", "t", "]"}], "*", 
       RowBox[{"z1", "[", "t", "]"}]}], "+", " ", 
      RowBox[{"q", "*", 
       RowBox[{"x1", "[", "t", "]"}], "*", 
       RowBox[{"y1", "[", "t", "]"}], "*", 
       RowBox[{"z1", "[", "t", "]"}]}]}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.888401218788467*^9, 3.888401273947598*^9}, {
  3.888401348229657*^9, 3.888401349531745*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"eac1cf62-20a9-4ec0-9760-555018b4758f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"q", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wx", "=", 
   RowBox[{"-", "0.5"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Epsilon]", "=", 
   RowBox[{"-", "0.25"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.887977889055066*^9, 3.8879778890554047`*^9}, {
   3.8879783492505503`*^9, 3.8879783568319263`*^9}, {3.8884013253873777`*^9, 
   3.888401334714533*^9}, 3.888401731282817*^9, {3.888402581169729*^9, 
   3.88840260350963*^9}, {3.888487445296742*^9, 3.8884874457357063`*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"6183e03b-48c0-4a58-9977-ec64b86f0299"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Analyse", " ", "the", " ", "unstable", " ", "spiral", " ", "fixed", " ", 
    "point"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "z", " ", "and", " ", "y", " ", "values", " ", "at", " ", "the", " ", 
    "spiral", " ", "point", " ", "for", " ", "this", " ", "case"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"zSpiral", "=", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"3", " ", 
       RowBox[{"(", 
        RowBox[{"q", "+", 
         RowBox[{"q", " ", "wx"}], "+", 
         RowBox[{"3", " ", "\[Epsilon]"}]}], ")"}]}], 
      SuperscriptBox["q", "2"]]}]}], "\[IndentingNewLine]", 
   RowBox[{"ySpiralPlus", "=", 
    FractionBox[
     SqrtBox[
      RowBox[{
       RowBox[{
        RowBox[{"-", "q"}], " ", "wx"}], "-", 
       RowBox[{"3", " ", "\[Epsilon]"}]}]], "q"]}], "\[IndentingNewLine]", 
   RowBox[{"ySpiralMinus", "=", 
    RowBox[{"-", 
     FractionBox[
      SqrtBox[
       RowBox[{
        RowBox[{
         RowBox[{"-", "q"}], " ", "wx"}], "-", 
        RowBox[{"3", " ", "\[Epsilon]"}]}]], "q"]}]}]}]}]], "Input",
 CellChangeTimes->{{3.888486651854121*^9, 3.888486662734692*^9}, {
  3.8884868431719*^9, 3.888486844655525*^9}, {3.888487575886574*^9, 
  3.888487605654868*^9}, {3.88848808765993*^9, 3.888488099011839*^9}, {
  3.888489551688723*^9, 3.8884895538170013`*^9}, {3.888489603144909*^9, 
  3.88848961464121*^9}},ExpressionUUID->"bed6439b-e432-4d8d-965e-\
45ca3e7502e1"],

Cell[BoxData["0.75`"], "Output",
 CellChangeTimes->{3.888486665021443*^9, 3.888486845268406*^9, 
  3.888487603176792*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"2b740c4c-1434-4b19-89de-fceeb9eec5bf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Find", " ", "the", " ", "eigenvalues", " ", "when", " ", "taking", " ", 
    "the", " ", "negative", " ", "root", " ", "for", " ", "y", " ", "value", 
    " ", "at", " ", "spiral", " ", "fixed", " ", "point"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"Eig1", "=", 
   FractionBox[
    RowBox[{"2", " ", 
     SqrtBox[
      RowBox[{
       RowBox[{
        RowBox[{"-", "q"}], " ", "wx"}], "-", 
       RowBox[{"3", " ", "\[Epsilon]"}]}]]}], "q"]}]}]], "Input",
 CellChangeTimes->{
  3.88848692086131*^9, {3.888487609165598*^9, 3.888487635566389*^9}, {
   3.888487673797865*^9, 3.8884876932855577`*^9}, {3.888488104507476*^9, 
   3.888488110779294*^9}, 
   3.8884896490170727`*^9},ExpressionUUID->"55aea93f-a9dc-4212-ba42-\
571925aa3c9e"],

Cell[BoxData["2.23606797749979`"], "Output",
 CellChangeTimes->{3.8884871434916697`*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"3c01e317-ab05-47ce-aaf0-d3312797826b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Eig2", "=", 
  FractionBox[
   RowBox[{"3", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"3", " ", 
       SqrtBox[
        RowBox[{
         RowBox[{
          RowBox[{"-", "q"}], " ", "wx"}], "-", 
         RowBox[{"3", " ", "\[Epsilon]"}]}]], " ", "\[Epsilon]"}], "-", 
      SqrtBox[
       RowBox[{
        RowBox[{
         RowBox[{"-", "4"}], " ", 
         SuperscriptBox["q", "3"], " ", "wx"}], "-", 
        RowBox[{"4", " ", 
         SuperscriptBox["q", "3"], " ", 
         SuperscriptBox["wx", "2"]}], "-", 
        RowBox[{"12", " ", 
         SuperscriptBox["q", "2"], " ", "\[Epsilon]"}], "-", 
        RowBox[{"24", " ", 
         SuperscriptBox["q", "2"], " ", "wx", " ", "\[Epsilon]"}], "-", 
        RowBox[{"36", " ", "q", " ", 
         SuperscriptBox["\[Epsilon]", "2"]}], "-", 
        RowBox[{"9", " ", "q", " ", "wx", " ", 
         SuperscriptBox["\[Epsilon]", "2"]}], "-", 
        RowBox[{"27", " ", 
         SuperscriptBox["\[Epsilon]", "3"]}]}]]}], ")"}]}], 
   RowBox[{"2", " ", 
    SuperscriptBox["q", "2"]}]]}]], "Input",
 CellChangeTimes->{{3.8884866744240294`*^9, 3.888486678078228*^9}, {
  3.8884876408773403`*^9, 3.888487642646698*^9}, {3.888487688461347*^9, 
  3.88848769696249*^9}, {3.888489650754553*^9, 
  3.8884896508991823`*^9}},ExpressionUUID->"7f25c6af-45b0-494b-8426-\
e67e76ce5beb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "1.2577882373436318`"}], "-", 
  RowBox[{"1.109264959331178`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.888486674927709*^9, 3.888486678502983*^9}},
 CellLabel->"Out[32]=",ExpressionUUID->"cb392165-bcd6-438f-956f-522ccb72d089"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 FractionBox[
  RowBox[{"Eig3", "=", 
   RowBox[{"3", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"3", " ", 
       SqrtBox[
        RowBox[{
         RowBox[{
          RowBox[{"-", "q"}], " ", "wx"}], "-", 
         RowBox[{"3", " ", "\[Epsilon]"}]}]], " ", "\[Epsilon]"}], "+", 
      SqrtBox[
       RowBox[{
        RowBox[{
         RowBox[{"-", "4"}], " ", 
         SuperscriptBox["q", "3"], " ", "wx"}], "-", 
        RowBox[{"4", " ", 
         SuperscriptBox["q", "3"], " ", 
         SuperscriptBox["wx", "2"]}], "-", 
        RowBox[{"12", " ", 
         SuperscriptBox["q", "2"], " ", "\[Epsilon]"}], "-", 
        RowBox[{"24", " ", 
         SuperscriptBox["q", "2"], " ", "wx", " ", "\[Epsilon]"}], "-", 
        RowBox[{"36", " ", "q", " ", 
         SuperscriptBox["\[Epsilon]", "2"]}], "-", 
        RowBox[{"9", " ", "q", " ", "wx", " ", 
         SuperscriptBox["\[Epsilon]", "2"]}], "-", 
        RowBox[{"27", " ", 
         SuperscriptBox["\[Epsilon]", "3"]}]}]]}], ")"}]}]}], 
  RowBox[{"2", " ", 
   SuperscriptBox["q", "2"]}]]], "Input",
 CellChangeTimes->{{3.88848668266206*^9, 3.8884866830550823`*^9}, {
   3.888487645399228*^9, 3.888487646470676*^9}, 
   3.8884896521120367`*^9},ExpressionUUID->"354ac916-3e31-4c8e-8917-\
36610b09ed01"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "1.2577882373436318`"}], "+", 
  RowBox[{"1.109264959331178`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.888486683519774*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"81d96ecf-336f-41c1-8760-afffecb23d93"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Find", " ", "the", " ", "eigenvalues", " ", "when", " ", "taking", " ", 
    "the", " ", "positive", " ", "root", " ", "for", " ", "y", " ", "value", 
    " ", "at", " ", "spiral", " ", "fixed", " ", "point"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"Eig4", "=", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"2", " ", 
      SqrtBox[
       RowBox[{
        RowBox[{
         RowBox[{"-", "q"}], " ", "wx"}], "-", 
        RowBox[{"3", " ", "\[Epsilon]"}]}]]}], "q"]}]}]}]], "Input",
 CellChangeTimes->{
  3.888486763833042*^9, {3.8884876699495163`*^9, 3.888487670526697*^9}, {
   3.888487730780436*^9, 3.888487731893096*^9}, {3.8884881155986137`*^9, 
   3.888488118963181*^9}, 
   3.8884896588412237`*^9},ExpressionUUID->"2db41329-f19b-49c8-900e-\
34326dcabed6"],

Cell[BoxData[
 RowBox[{"-", "2.23606797749979`"}]], "Output",
 CellChangeTimes->{3.8884867640867777`*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"9ccff50b-6443-4d54-9eda-259d44882d42"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Eig5", "=", 
  FractionBox[
   RowBox[{"3", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "3"}], " ", 
       SqrtBox[
        RowBox[{
         RowBox[{
          RowBox[{"-", "q"}], " ", "wx"}], "-", 
         RowBox[{"3", " ", "\[Epsilon]"}]}]], " ", "\[Epsilon]"}], "-", 
      SqrtBox[
       RowBox[{
        RowBox[{
         RowBox[{"-", "4"}], " ", 
         SuperscriptBox["q", "3"], " ", "wx"}], "-", 
        RowBox[{"4", " ", 
         SuperscriptBox["q", "3"], " ", 
         SuperscriptBox["wx", "2"]}], "-", 
        RowBox[{"12", " ", 
         SuperscriptBox["q", "2"], " ", "\[Epsilon]"}], "-", 
        RowBox[{"24", " ", 
         SuperscriptBox["q", "2"], " ", "wx", " ", "\[Epsilon]"}], "-", 
        RowBox[{"36", " ", "q", " ", 
         SuperscriptBox["\[Epsilon]", "2"]}], "-", 
        RowBox[{"9", " ", "q", " ", "wx", " ", 
         SuperscriptBox["\[Epsilon]", "2"]}], "-", 
        RowBox[{"27", " ", 
         SuperscriptBox["\[Epsilon]", "3"]}]}]]}], ")"}]}], 
   RowBox[{"2", " ", 
    SuperscriptBox["q", "2"]}]]}]], "Input",
 CellChangeTimes->{
  3.88848676596802*^9, {3.888487734100576*^9, 3.888487735085452*^9}, 
   3.888489660554659*^9},ExpressionUUID->"a47499e5-770f-4752-8c60-\
3200949ff98a"],

Cell[BoxData[
 RowBox[{"1.2577882373436318`", "\[VeryThinSpace]", "-", 
  RowBox[{"1.109264959331178`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.888486766253598*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"052ba672-210f-48a8-b59a-f8ad23ef0624"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Eig6", "=", 
  FractionBox[
   RowBox[{"3", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "3"}], " ", 
       SqrtBox[
        RowBox[{
         RowBox[{
          RowBox[{"-", "q"}], " ", "wx"}], "-", 
         RowBox[{"3", " ", "\[Epsilon]"}]}]], " ", "\[Epsilon]"}], "+", 
      SqrtBox[
       RowBox[{
        RowBox[{
         RowBox[{"-", "4"}], " ", 
         SuperscriptBox["q", "3"], " ", "wx"}], "-", 
        RowBox[{"4", " ", 
         SuperscriptBox["q", "3"], " ", 
         SuperscriptBox["wx", "2"]}], "-", 
        RowBox[{"12", " ", 
         SuperscriptBox["q", "2"], " ", "\[Epsilon]"}], "-", 
        RowBox[{"24", " ", 
         SuperscriptBox["q", "2"], " ", "wx", " ", "\[Epsilon]"}], "-", 
        RowBox[{"36", " ", "q", " ", 
         SuperscriptBox["\[Epsilon]", "2"]}], "-", 
        RowBox[{"9", " ", "q", " ", "wx", " ", 
         SuperscriptBox["\[Epsilon]", "2"]}], "-", 
        RowBox[{"27", " ", 
         SuperscriptBox["\[Epsilon]", "3"]}]}]]}], ")"}]}], 
   RowBox[{"2", " ", 
    SuperscriptBox["q", "2"]}]]}]], "Input",
 CellChangeTimes->{
  3.888486768344144*^9, {3.88848773822081*^9, 3.888487739461982*^9}, 
   3.88848966212167*^9},ExpressionUUID->"3b862597-a753-4ed8-9970-\
60bc0bc0f778"],

Cell[BoxData[
 RowBox[{"1.2577882373436318`", "\[VeryThinSpace]", "+", 
  RowBox[{"1.109264959331178`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.88848676888444*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"20d263df-1275-454b-a295-72f7d398e682"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"traj", "[", 
     RowBox[{"x0_", ",", "y0_", ",", "z0_"}], "]"}], "=", 
    RowBox[{"NDSolve", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"de1t", ",", "de2t", ",", "de3t", ",", " ", 
        RowBox[{
         RowBox[{"x1", "[", "0", "]"}], "==", "x0"}], ",", 
        RowBox[{
         RowBox[{"y1", "[", "0", "]"}], "==", "y0"}], ",", 
        RowBox[{
         RowBox[{"z1", "[", "0", "]"}], "==", "z0"}]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"x1", ",", "y1", ",", "z1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", 
        RowBox[{"-", "50"}], ",", "50"}], "}"}]}], "]"}]}], ";"}], 
  " "}]], "Input",
 CellChangeTimes->{{3.8438885804511986`*^9, 3.843888581311265*^9}, {
  3.8438938592742786`*^9, 3.843893939219122*^9}, {3.8438941114297333`*^9, 
  3.8438942191846347`*^9}, {3.843894249969864*^9, 3.843894346269736*^9}, {
  3.8438944055744495`*^9, 3.843894799140247*^9}, {3.8438948607399817`*^9, 
  3.8438948847105308`*^9}, {3.844144226711842*^9, 3.844144269018071*^9}, {
  3.887979872791584*^9, 3.887979910367338*^9}, {3.887980029651232*^9, 
  3.887980031254677*^9}, {3.888055637414365*^9, 3.8880556536066236`*^9}, {
  3.8880559265002527`*^9, 3.888055942599481*^9}, {3.888385806342004*^9, 
  3.888385807953027*^9}, {3.888401283220417*^9, 3.8884012975687943`*^9}, {
  3.8884013397587967`*^9, 3.888401343483832*^9}, {3.888402725276833*^9, 
  3.888402726925267*^9}, {3.888402998410335*^9, 3.8884030109803867`*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"58522eef-22b3-4b87-811a-852aec920e79"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve", "ndinnt", 
   "\"Initial condition \\!\\(\\*RowBox[{\\\"x0\\\"}]\\) is not a number or a \
rectangular array of numbers.\"", 2, 24, 18, 18333247605171888988, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.888310947399899*^9, 3.888385574514182*^9, 3.8883856324712677`*^9, 
   3.888385739330179*^9, 3.888385830216976*^9, {3.8884013373018436`*^9, 
   3.888401352004178*^9}, 3.888401735657505*^9, {3.888402605129703*^9, 
   3.8884026268330927`*^9}, 3.888402727363521*^9, {3.8884030003984747`*^9, 
   3.888403012046533*^9}, 3.888403190474678*^9, 3.888481303452929*^9, 
   3.888487455185079*^9, {3.888494095894459*^9, 3.888494110452332*^9}},
 CellLabel->
  "During evaluation of \
In[24]:=",ExpressionUUID->"b828da22-7cce-4a96-8238-e3b9bf210c8c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"sol", "[", "1", "]"}], "=", 
   RowBox[{"traj", "[", 
    RowBox[{"2", ",", "0.1", ",", "0.009"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sol", "[", "2", "]"}], "=", 
   RowBox[{"traj", "[", 
    RowBox[{"0.5", ",", "0.1", ",", "0.009"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sol", "[", "3", "]"}], "=", 
   RowBox[{"traj", "[", 
    RowBox[{"5", ",", "0.1", ",", "0.009"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sol", "[", "4", "]"}], "=", 
   RowBox[{"traj", "[", 
    RowBox[{"4", ",", "0.1", ",", "0.009"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sol", "[", "5", "]"}], "=", 
   RowBox[{"traj", "[", 
    RowBox[{"1", ",", "0.1", ",", "0.009"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sol", "[", "6", "]"}], "=", 
   RowBox[{"traj", "[", 
    RowBox[{"3", ",", "2", ",", "0.009"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sol", "[", "7", "]"}], "=", 
   RowBox[{"traj", "[", 
    RowBox[{"4", ",", "3", ",", "0.009"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sol", "[", "8", "]"}], "=", 
   RowBox[{"traj", "[", 
    RowBox[{"1", ",", "2.5", ",", "0.009"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.887978731059854*^9, 3.887978757612252*^9}, {
   3.887978845812172*^9, 3.887978859965249*^9}, {3.88797894002472*^9, 
   3.8879789403355103`*^9}, {3.88797897759439*^9, 3.88797901355768*^9}, 
   3.887979128052725*^9, {3.88797923767091*^9, 3.887979237845546*^9}, {
   3.887979375257626*^9, 3.88797939675972*^9}, {3.887979429202385*^9, 
   3.887979516979513*^9}, {3.887979558765677*^9, 3.887979566700461*^9}, {
   3.887979612678831*^9, 3.887979664270924*^9}, {3.887979922277718*^9, 
   3.887979997391836*^9}, 3.887980080905983*^9, {3.8879801208038273`*^9, 
   3.88798015412414*^9}, {3.888054939843245*^9, 3.888054943018937*^9}, {
   3.888055844364393*^9, 3.8880558605745296`*^9}, {3.888055913193152*^9, 
   3.888055918216709*^9}, 3.8880559966976633`*^9, {3.888056036287993*^9, 
   3.888056085299884*^9}, {3.88805612209927*^9, 3.8880561244131937`*^9}, {
   3.88805618652389*^9, 3.888056190803598*^9}, {3.8883009702722473`*^9, 
   3.888301001671629*^9}, {3.8883010401298227`*^9, 3.888301112638144*^9}, 
   3.888301171388793*^9, {3.888301202257996*^9, 3.8883012287725487`*^9}, {
   3.888401380694333*^9, 3.8884013833951883`*^9}, {3.888401462909256*^9, 
   3.888401475754928*^9}, {3.888402651297779*^9, 3.8884027057433147`*^9}, {
   3.888402766916638*^9, 3.888402773252879*^9}, {3.888402855974597*^9, 
   3.888402864196711*^9}, {3.888402903096746*^9, 3.888402946812313*^9}, {
   3.888403012736313*^9, 3.888403096157276*^9}, {3.8884032087548103`*^9, 
   3.888403247818666*^9}, {3.88849404986267*^9, 3.888494081896409*^9}, 
   3.8884941197014103`*^9},
 CellLabel->"In[34]:=",ExpressionUUID->"51bf51ec-b710-484e-b49d-a6b504bafda0"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve", "ndsz", 
   "\"At \\!\\(\\*RowBox[{\\\"t\\\"}]\\) == \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"0.5530180665756259`\\\"}]\\), step size is effectively zero; singularity \
or stiff system suspected.\"", 2, 39, 22, 18333247605171888988, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.888494096130167*^9, 3.8884941201033363`*^9}},
 CellLabel->
  "During evaluation of \
In[34]:=",ExpressionUUID->"06f62cf8-ca79-4c83-8a74-1c9bdbb0e459"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve", "ndsz", 
   "\"At \\!\\(\\*RowBox[{\\\"t\\\"}]\\) == \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"0.353626579356845`\\\"}]\\), step size is effectively zero; singularity \
or stiff system suspected.\"", 2, 40, 23, 18333247605171888988, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.888494096130167*^9, 3.888494120112756*^9}},
 CellLabel->
  "During evaluation of \
In[34]:=",ExpressionUUID->"95813798-a44b-4dcb-a824-243f77d512d6"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve", "ndsz", 
   "\"At \\!\\(\\*RowBox[{\\\"t\\\"}]\\) == \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"0.4065031761677718`\\\"}]\\), step size is effectively zero; singularity \
or stiff system suspected.\"", 2, 41, 24, 18333247605171888988, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.888494096130167*^9, 3.8884941201204348`*^9}},
 CellLabel->
  "During evaluation of \
In[34]:=",ExpressionUUID->"34f5313c-0b91-48e2-b34a-4480b523c623"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x1", "[", "t", "]"}], ",", 
          RowBox[{"y1", "[", "t", "]"}]}], "}"}], "/.", 
        RowBox[{"sol", "[", "i", "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "8"}], "}"}]}], "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{"-", "50"}], ",", "50"}], "}"}], ",", 
     RowBox[{"PlotStyle", " ", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"Gray", ",", " ", 
         RowBox[{"Opacity", "[", "0.75", "]"}]}], "}"}], "}"}]}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "6"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "}"}]}]}], "]"}], ",", 
   RowBox[{"AxesLabel", "->", 
    RowBox[{"{", 
     RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.887979052254037*^9, 3.887979188623329*^9}, {
   3.887979228021886*^9, 3.887979401632031*^9}, {3.8879794459550867`*^9, 
   3.887979470345598*^9}, {3.887979600112005*^9, 3.88797960112506*^9}, {
   3.887979692930244*^9, 3.88797971039893*^9}, {3.887979803249867*^9, 
   3.887979842918675*^9}, {3.8879800704105587`*^9, 3.8879801035747423`*^9}, {
   3.8880557121793327`*^9, 3.888055759237444*^9}, {3.888055829243101*^9, 
   3.8880558350643997`*^9}, {3.8880558766966743`*^9, 3.888055894503551*^9}, {
   3.888055934499653*^9, 3.8880559569798098`*^9}, 3.888056008344767*^9, 
   3.8880560546239023`*^9, {3.8880560971933813`*^9, 3.888056164628825*^9}, 
   3.888057209628414*^9, {3.8883010969077797`*^9, 3.888301106866012*^9}, 
   3.88838581273239*^9, {3.888401301027873*^9, 3.888401314603023*^9}, {
   3.888401394687004*^9, 3.888401408667405*^9}, {3.8884017594302588`*^9, 
   3.888401789202386*^9}, {3.888402657936475*^9, 3.888402689151956*^9}, {
   3.8884027196816397`*^9, 3.888402747418346*^9}, 3.888402867655637*^9, {
   3.888402952199245*^9, 3.8884030158848963`*^9}, 3.88840319449933*^9, {
   3.888481290475276*^9, 3.8884812980029383`*^9}, 3.888494121881715*^9},
 CellLabel->"In[42]:=",ExpressionUUID->"e0891166-4fd0-4abc-ac29-1aa17e343851"],

Cell[BoxData[
 TemplateBox[{
  "InterpolatingFunction", "dmval", 
   "\"Input value \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"-\\\", \
\\\"49.99795918367347`\\\"}], \\\"}\\\"}]\\) lies outside the range of data \
in the interpolating function. Extrapolation will be used.\"", 2, 42, 25, 
   18333247605171888988, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.888494122349427*^9},
 CellLabel->
  "During evaluation of \
In[42]:=",ExpressionUUID->"bb17be4b-5a95-42fe-8799-bc4df7de32a6"],

Cell[BoxData[
 TemplateBox[{
  "InterpolatingFunction", "dmval", 
   "\"Input value \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"-\\\", \
\\\"49.99795918367347`\\\"}], \\\"}\\\"}]\\) lies outside the range of data \
in the interpolating function. Extrapolation will be used.\"", 2, 42, 26, 
   18333247605171888988, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8884941223587723`*^9},
 CellLabel->
  "During evaluation of \
In[42]:=",ExpressionUUID->"d325736a-c0ba-4c6d-9742-f6bd2c4cf31b"],

Cell[BoxData[
 TemplateBox[{
  "InterpolatingFunction", "dmval", 
   "\"Input value \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"-\\\", \
\\\"49.99795918367347`\\\"}], \\\"}\\\"}]\\) lies outside the range of data \
in the interpolating function. Extrapolation will be used.\"", 2, 42, 27, 
   18333247605171888988, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.888494122366742*^9},
 CellLabel->
  "During evaluation of \
In[42]:=",ExpressionUUID->"06be90a0-7876-4267-a664-de1f83babb8a"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"InterpolatingFunction\\\
\", \\\"::\\\", \\\"dmval\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"", 2, 42, 28, 18333247605171888988, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8884941223747187`*^9},
 CellLabel->
  "During evaluation of \
In[42]:=",ExpressionUUID->"f95d37f5-491b-45ea-91f8-12d14ce9d422"],

Cell[BoxData[
 TemplateBox[{
  "InterpolatingFunction", "dprec", 
   "\"The precision of input value \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"-\\\", \\\"49.99795918367347`\\\"}], \\\"}\\\"}]\\) and/or the \
interpolation grid is insufficient to compute the value.\"", 2, 42, 29, 
   18333247605171888988, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.888494122382966*^9},
 CellLabel->
  "During evaluation of \
In[42]:=",ExpressionUUID->"ecf5fbbc-56a2-4e4f-9026-10b4dede9d59"],

Cell[BoxData[
 TemplateBox[{
  "InterpolatingFunction", "dprec", 
   "\"The precision of input value \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"-\\\", \\\"49.99795918367347`\\\"}], \\\"}\\\"}]\\) and/or the \
interpolation grid is insufficient to compute the value.\"", 2, 42, 30, 
   18333247605171888988, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8884941223903437`*^9},
 CellLabel->
  "During evaluation of \
In[42]:=",ExpressionUUID->"d548d39c-197a-4449-a09b-79f9de291d1c"],

Cell[BoxData[
 TemplateBox[{
  "InterpolatingFunction", "dprec", 
   "\"The precision of input value \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"-\\\", \\\"47.95714285714286`\\\"}], \\\"}\\\"}]\\) and/or the \
interpolation grid is insufficient to compute the value.\"", 2, 42, 31, 
   18333247605171888988, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8884941223974953`*^9},
 CellLabel->
  "During evaluation of \
In[42]:=",ExpressionUUID->"67e760e0-395f-43b5-a652-3fd6ce57a355"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"InterpolatingFunction\\\
\", \\\"::\\\", \\\"dprec\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"", 2, 42, 32, 18333247605171888988, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.888494122404765*^9},
 CellLabel->
  "During evaluation of \
In[42]:=",ExpressionUUID->"bb281a88-ea71-4ed9-8943-398ace15258b"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[0.75], 
      LineBox[CompressedData["
1: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
wXd5RYFNGTJ0st9lPm5MghMaCS+FJMnwf3W9FJ8=
       "]]},
     Annotation[#, "Charting`Private`Tag$8944#1"]& ], 
    TagBox[
     {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[0.75], 
      LineBox[CompressedData["
1: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
SsKyWpOnkvCubxK8Ut+DtJwrbfnNFeTA1lczG6d6cPy7ser++Aoi1dbOP6Hd
C4sMcf9A7QqisEtP/0NfL1xWKl/8crOc/P2uIxvK14fYs1LuX7TLSfWl4O8f
VfswZcso/CtWTgIvWU1cv94HVxPdtGgtQoYdh9JK5vTjoOeGqCSHUtLWEOI3
qdCPSqZN3cC/N+SBAut75d5+JLx5X+rr/4bcc63VVbnbj0ElSeOlcSXEWDY2
KWa6Hx4KKYM5pUXk3o7cK2rz2KjdxKMWpFVEjE6AflCGjZl/ykJfKwrJ2+G4
/eWb2eiS5HlgXF5A6mrWPn10kQ2BVaRTJi2P5DttUWy4zob94R1V0Up5xM0k
T7rmDhsWIht2v3ueSzL+hhpywtjIy4zfZ+OZQ0Zu5O6ZiWFj1U7jgMbv2eTq
GZtBVhob4ftpdry0bKLqb9TjVMHGE0unxWztLLJp3sfvxrVsbv9uTnyRnUm2
S+ra9reyUbj1icLuFZlc/Uv9Zj+woRQqWlQwkk465O32Phln47dyqGZzaRrx
EO90ejvNRtq84+k8galko7ZYy15BDh4OSA6/V0smwkGDF1zFOHjn+nPozfQr
kr6yarXZYg4kBmz1pioSyVf3QeOupRwY24lsi32YQJLlu+X5FDnIsF2u2WoU
TwZOTH1tXsWBe/1C0RjpOCJ3jL1WZx0HrOnfbst7Ysgjtepb0ts54N82MjtR
GUUyG66fdtrFQf4Ctew5ByKIcSavzXVw4L+6yXwJ8zlpqInbLrmfA8dWInZx
/zOym/n1kpkOBwZMkclF5aEk84BPxI5DHPCkVy/T3xVMNg+p2JfqcVBkwT7j
bhtIfinmPeLoc5A8IyGnduoh2WuiVJtgwAH7YnHAP737RKXwJO88Iw7Mn0gW
GO+8S8pCDgmJGXP9bS/byW/gQlau7sjJ4vLC6PMrEgxsSO31nUPfuRxds+Ly
3j8gJ/mSY95xuTix+0uPoSViJEx/WHD5x+GMMVFDR0iuPj7qxrVvpOGqet7l
Ngzd3ofsNuRg2YCu20l9L8ic3iH+8igHVP8ZmuoZXwS9//Rf9BEOxkSa2rTs
H+N3/kXHfYc5uFAVlq60+wkWLF/X4H2Qg2DT1v3XKkPwU8Pm10VtDpZEOWw4
pROGc2oyZqNaHHjGfbYorArHzmUDRyV2c1Cn/K7T4tB/cNjsoN+lwdXHKa+W
rIqE0K+bmae2cFDjUy2hsCwaut9+ptxX52C1ZlGzskkMBNT4a46t4UDlyJ3h
OX6xUNegXrxV5iD3+afw+NI45GoVpHyR46BM3Fb110Q89AXfh+XLcCAra6w9
qpgI2oGKtwdEuP5HjX8/75mEpYW37ojycaB3xPUF/XUyKrdn9t39w4bhO53p
G90p8DQ9MW4/ykZ99bLc5+vSEadsa/RpgI15d5fJDplkYMkW3pJF3Wx0bMYH
LdfXOHd0wuBmFRsVL/MmnHozcd/U/UJ+GRv99Al+f7ssOD6JOJSYy8aWC4zV
/r+zMJhuGRf7kg2jNhtptUU56BocX5sVysY7rfjGksgc+FoVFbr4sWH7aXG7
7KpcjK+sPKTmyEYYz5rzytvy4Jp+N3AZjY2bj+ITGCV5GDkbYlltwcYJk5xx
Wa181NWnWZzQYiOLunT0rXYBxOjsdDfufRLy5VFd7e4iiH2a1Wr/2Y8gDk/L
/cIimG+KH0ZPP/rlmcING4vh0FhWVxrTjy8ilq488iW4+/Lc+7RV/fiTR7v5
YOQNlm97n7VGqB8CVxwMz1qUYrEBe5fucB/67t7dmEmVwqMuQ8H+Ffd+HKDr
ZEeU4eLt1N4khT6csFGbEVxajlu2PoscZnuxZftHIxwpx6+2H0dHenqx51tt
Y/rtcsTGhZyb96wXzN5nX9W7yzHQ0Gi0U6gXXVPbc6oDKpDGryEwOdAD3agC
85KiCsgcORV8nfSgxKzBeGigAr/W62zuc+7Br6+x1ODWSjiYiHeFsbvx8VDu
SHxjJXqKhr6mF3TjT+rzYs+fldhRv+NBRAD3ffl6Q9Z9BR12E1g5X7MbOj6X
a+ts6fDpCKq6/7QLL8PjPs2dpmNfXcbilMtdsPr413pCmoFff/h83+ztwsfi
PY4CGgxMmYra5X/phFnL3e58Zwa87ZQOHDjQCbeudr9zHxnIVuJTV1zaiQHj
q1HNc5go2RMnOedrB5TyF3W5L2VirHSr19uIDnwYCPz76AgTVovGzxPHDsx9
zHfv23kmRisVJkp0O8C3NtMq6hYTRk7/nez9/g6j9buzWAlMDPHpiwjUvoNj
xIfpw8VMfJnp19gb8w7aa5N3Lq1n4tBrq5Ap/XcocBewTfvGBE1l7bOApHao
O7bLt2+jMF/lG+v2nXbwHTnVwa9DYZ5Wq8Ajs3b4KDrvCDOlcOWJeaAofzsO
GrPfv3fgzkV3wu5497Sh74S8TPxtCvcg91M+tw3iwg2tDb4UFDUSKhvOtyG0
kll09SWF1tsDkYO72sC/07pmJJnCRsHuUSXJNqg/dl3VmUNhO91KbiWzFSZa
1ieXURQELFWXf45shXzv9T/O9RRifrqx+lxasdDxjId+O4WDvkaNx1RbUV0u
9PDOIIXNd3Rau7j/w/9y2Wl9IxR+9DqMP+lpwabyyEnGBIWBLodvbvktUDUY
SdwyRWF0Y1Pm86AWxLsoLd4wQ6HKS6rvs20LpF193IpmKTQrZUhfP9ACz+AR
gZa5LDxtGPupLs/9ny7+8d5DkIX/tNWXK800Q8rQYBeZx4K9FrVCv72ZO4/F
7AoTZWFPm0ZERlYz9nVZiguIs1D51URW93EzvluUdYhLsGDgaPxP9lIzXvbn
hhcuYoHX3jZT+UAzpPM0jGclWZiabgq1UWjGZuU9gh8Xs6CjSsQ//G1CFXdq
uibFgqi0jV9kVxNSp6Iux3B5xSUxiaGiJuz14I105/Ibm2dlZ583QU017LMo
l5WMPpaJ3myC6qW7XSZce6kLaLvGjzfBvcvzvSH3vLP0e6f4djThaP/x2wJc
PfqPkg7ryzaB2Vkq77KQxZ1bdNfX/GqE8Fp73ZgFLMy2NKi7dTVin4ainR/X
357gtBuWJY0Itwzn2yDCwsMIa7VbEY2wTFviGybEjcfTjyeq3Buxbcs10zJ+
rj6pn/P1zjbCVXxXURIvCwkjZ3R59zYiwv4zvzk3/hFdA4vGFBsh4/rDr4ab
Hzfb+lGqvgHfdAacBb5TMKeNbO0KaQAupN9uGqew1WK42cyiAV1bjKZpnym4
jP2MfzRUj3X7Vy+d4lC49uzVo/1p9WC8S1802UMhKNxe88L1ehhdbFYvfcet
lzGNs/289TilH3OVWUdBZqTYc0ftW/SLyQ/ysSicP2rYPBPyFqlS5jIyFRRS
BfvHCla+BXN9rGBZLgV9nyp7fqM6PE8/uUP5BQXnmUcV4cvq0E0zdJELofA1
Lerdk+FapNZkh31/ROE2s4uVc68WBbZ/92q4UzD68aohpbAGUmvDc7aeoVD8
MbbU0qcGBeKFkqvNKBwtPyh106wGdAHK5q8+BU05O9WGH9XIOzCubrqbQgJP
bzrvjmqoaGjuZy2hELbbValsXjUCvF+zPyyk4JlnxNfRUwXWzrEH40IUeCrs
Pil7VmHl7iRG2RQTx07QYhY1sdAcG81/sYkJTvFlf+oOBacNVIytFxMf9MfL
KkwoKG8yuRfoysR2Xj1JhdUUkn7/LYy3Z0LuVbKycDMT/LxxvbHmTBSaRkdc
WsPE1ijfD7PcVTXzoHX5KB0VWQ6qBQ0MnF3oaRlL0aEz6PN3FYMB35qSIz3R
dFzIMx55UshA2xbOT1MzOtRPZucbxzBw+lZ/vDazEodrXQtCHBmI6Dv9ySW7
ApwlCZsuSzLwXUCizeNJBfgP/a6NEGLAvvvYt+arFSh0jbzw9g8dz97yjpza
UAHeDWI9a4foEDv/Rn8wuxypGk0xo3l0+J++tcT0IQFLZG5JojkdO28WCylu
eQNBjW3r3SIrEV7vueHZ3DcY9lv6dUtwJc54Wex0bSmBpGHLl28PKnHQIabw
plMJuvIPi3perYRLUdXdMyXF2DzUE8TZXwlZesXK5pNFYHlznlR+rsCwyjXP
MXY+4h9UeQZqVUB0OuS60Jt8rN9zxFZ2WwW+/yqmXXuWj39usSRFrQJlx4Z2
rDPIx67wiXcDUhWwHfozuK0yDw2diSWZX7h+LGAWjOflIv3j80/FEeXQMqp4
e6QhG9ejTz1I4SnHPD+Rwy252bhdz9zzcpzgnKi8gv+LbHjOHlg13Uuw6fIh
gRBaNkQGEmUbiwlsMtxHPvFkw3ynz7qVzgQDRFD57J4sbM1epmc5Woax75+W
7st5jTmqn9aMD5ai8ZyWedefFEw+aNea87cEAqK8Plc7UnCgdTLD/EsJxM/W
MA7npkB8KPbQm94SWP7MFa22S4FzakjL6zLufv4evR52MvZpP+bsuVcC1oso
487WJFxzDVacFCrBTO0kn91wInaZhZkcUyxGp2z23N3xcdDQn5XTv1WIjfcF
Aq4ExGHq0ZGx6CuFqOzMWV3pGodU87kX/lkVgpnJdKzXj4PR1rCl7XqFeGC/
8f31X7E4KOCROr28EN4TBQtLzWKxNypPYYZeALqD6O2UVTEQ8y2pq5QqgAvL
S0RMPQoWLqeEL7XlQd9aM8rh8zPkZbQ+N8jJwcRf+0wx4RCMvxeJd67KgtUl
aT+NE4E4r54sOKmbiUPzJbWudPrBy/RnbnhTOjTpEnMNB+9j2v1e6ZaXqUg5
L0kzbfREcXzv00mSjN+M2sWiynexXqkmTu73K8zNCX/Zq3kbLkuP9rXcT8Sf
Bwqm5vGu0Fof+bBJPgFC8sqjKcXOOBcih/JPcYhd5h2+wfE6ChYvtLs4FAv5
4NedKyyu4d/Xm01DH2IQlKJ6+fEJB5xpC3KpXxADldBIV19vOyxsfbJTxyAa
v0cKfhztvIQPZz4Lp8i/hIH8E6tH6RehvaWrcKIzEtt+trq7xl8ET88F+5ut
kWjQkimx/e8izPMY0nwNkch70fjojN9FVPNXHFrBiMT066vSXtYXkXTqHZ99
RiTEzTKt3shdhE9n6/AFr0j8I8yptlAagn5lmJD1kTg17ymfpT8NAcJKTG9V
7v4+qnzMi4YrX57NP6IciXi56W1LrtMAD6YsWzYSHhPzS5OMaBB5/1NCjj8S
2ttVtGMW0OAUI/x6ojsCdyocXzkJ0jCHd5N4S3sEUqrzvY7MWkPWzlKjoCkC
XwxZz4XHrWGQIt7lzYrAgVWP+wrrrcEY9dHdmhOBf/4L015T1vAtSGapZERg
3Lb9XUqZNZJWmgrIJEcgyZ/SzMiwhgO8y+a8jACvgbZDfqI1agLXbPv1PAIl
D15NVkZZ43PTi0uToRFYfv05vSXMGuoWQ+ZfAiPgZELvGw6wxlfXJTwjDyPw
P/fFFz0=
       "]]},
     Annotation[#, "Charting`Private`Tag$8944#2"]& ], 
    TagBox[
     {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[0.75], 
      LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$8944#3"]& ], 
    TagBox[
     {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[0.75], 
      LineBox[CompressedData["
1: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
gl5Zq1M+C83Y3+y3NmzPqOB/CQDxnQ==
       "]]},
     Annotation[#, "Charting`Private`Tag$8944#4"]& ], 
    TagBox[
     {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[0.75], 
      LineBox[CompressedData["
1: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
vafS2TeM4qFSbSW2O68Qpt5zk/TN8Zjvk6j05kUh/mkfNTevi4PFsaoGE4tC
JHU2HyhYE4csicrTef0FeKlSJWfbGoOL5b/k6AsLUP7el/bWMArHI9efZ7jm
oXLdZ8m3vc/xPEJ1fCmVA28fr4vO3MGYTVdIGw56i8x/lzfyujzCooxdxrpt
WXC6azPdvf4+FoapP9sRkYG3hjkhX03uYCD2obrCjjQYrHSyn3G9hRUSuj0r
tqagbrYoR/LLdbw4dOChg2YyKnySQu4K+6BmSdAa2feJqNPJW5T8wQuOCTN/
TqsngDqiWkvjuwRrEYebFv/FQ/bntFTEmBsCutTluUbisBkrM/3+uiLvfAKP
aF8s3HNObrg3eB5bZ6Im2AtjcetJe2XR0XMobH9YSzRjMD2QavG1zRGuWStY
pf+iIXdGXNLrsz3e3tqdYZYdBaFtehc2Mu2xNI1PqjE1CvcHm10YtfbYx+LL
0EyMwuBxqfsosEeqdmLPjogobH5YlWr4wh6bRsRLpPyjsCjLYNzE2J5Thwye
8TKNwsoAoWNlbXZY8Utj2ZN5URhLXrb2H90OdZ7iyvtnI3HSnK2sVmuH2buW
x6amIzF6hhjXFdhh3d4WZbvxSLzW21W7KsIOfayMqVPtkWjKvJB/7bQdtA/u
3BKWGYl0HTbf31N22NDe+MIxJRJnVn/y9tW3g5uX8sDehEjoHVSIC9awQ27q
KaG+l5Go3Z1XNyRhh9vChYF6dyPxvvdPRsBaOzTwMojcrUjOu9uEyQnbgbfM
pXrptUgcXDbreGuBHSJs1xxrdYtEJOnRVZi1heA+kdoP5yPxy1pX8vuULYry
LwknOEYijL1kIpJliy0MWfkgm0jU2M/PMhm0Rd81xZVXLSPxP787u+Q=
       "]]},
     Annotation[#, "Charting`Private`Tag$8944#5"]& ], 
    TagBox[
     {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[0.75], 
      LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$8944#6"]& ], 
    TagBox[
     {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[0.75], 
      LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$8944#7"]& ], 
    TagBox[
     {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[0.75], 
      LineBox[CompressedData["
1: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
5zzkiPWhAi/5eLouFw3+D0EXgvo=
       "]]},
     Annotation[#, "Charting`Private`Tag$8944#8"]& ]}, {}},
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox["\"x\"", HoldForm], TraditionalForm], 
    FormBox[
     TagBox["\"y\"", HoldForm], TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{886.5, 596.},
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "ScalingFunctions" -> 
    None},
  PlotRange->{{0, 6}, {-3, 3}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.888301030336822*^9, 3.888301114960032*^9}, 
   3.888301173925928*^9, {3.888301205127512*^9, 3.888301234454039*^9}, 
   3.8883109477529917`*^9, 3.888385574889071*^9, 3.888385742193818*^9, 
   3.888385831174666*^9, {3.888401369404501*^9, 3.888401409241605*^9}, 
   3.888401478708088*^9, {3.888401738446601*^9, 3.8884017898472633`*^9}, {
   3.888402629567595*^9, 3.88840274794925*^9}, 3.888402868242173*^9, {
   3.888402904739884*^9, 3.8884029210149517`*^9}, 3.888402952812084*^9, {
   3.88840298558711*^9, 3.888403016305736*^9}, {3.888403053713262*^9, 
   3.888403098092869*^9}, {3.888403191510972*^9, 3.888403249763896*^9}, 
   3.888481303567102*^9, 3.888487455427993*^9, {3.8884940989102573`*^9, 
   3.8884941224696608`*^9}},
 CellLabel->"Out[42]=",ExpressionUUID->"8ec25ace-e38b-4e49-a4ca-c5d4a77f6f1a"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell["Compactification", "Subsection",
 CellChangeTimes->{{3.888482089034349*^9, 3.888482102373567*^9}, 
   3.888489534825341*^9},ExpressionUUID->"47f78b07-c67f-4402-9b0c-\
31942edb48ad"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Compact x - z Phase Space", "Subsubsection"]], \
"Subsection",
 CellChangeTimes->{{3.888396757108968*^9, 3.8883967792116327`*^9}, {
   3.888481974786878*^9, 3.888481978478022*^9}, 
   3.8884820876637383`*^9},ExpressionUUID->"36fe4927-a259-44b2-bb40-\
eb0c3ec25870"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Define", " ", "the", " ", "dynamical", " ", "system", " ", "for", " ", 
    "coupled", " ", "dark", " ", "matter", " ", 
    RowBox[{"(", "z", ")"}], " ", "and", " ", "dark", " ", "energy", " ", 
    RowBox[{"(", "x", ")"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"deX", ":=", 
    RowBox[{
     RowBox[{"X", "'"}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "3"}], "*", "X", "*", 
       RowBox[{"(", 
        RowBox[{"1", "-", "X"}], ")"}], "*", 
       RowBox[{"(", 
        RowBox[{"1", "+", "wx", "+", 
         RowBox[{"\[Epsilon]", "*", 
          RowBox[{"(", 
           RowBox[{"X", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", "X"}], ")"}]}], ")"}]}]}], ")"}]}], "-", 
      RowBox[{"q", "*", "X", "*", 
       RowBox[{"(", 
        RowBox[{"1", "-", "X"}], ")"}], "*", 
       RowBox[{"Z", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", "Z"}], ")"}]}]}]}]}]}], "\[IndentingNewLine]", 
   RowBox[{"deZ", ":=", 
    RowBox[{
     RowBox[{"Z", "'"}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "3"}], "*", "Z", "*", 
       RowBox[{"(", 
        RowBox[{"1", "-", "Z"}], ")"}]}], " ", "+", " ", 
      RowBox[{"q", "*", 
       RowBox[{"(", 
        RowBox[{"X", "/", 
         RowBox[{"(", 
          RowBox[{"1", "-", "X"}], ")"}]}], ")"}], "*", "Z", "*", 
       RowBox[{"(", 
        RowBox[{"1", "-", "Z"}], ")"}]}]}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.88778352760754*^9, 3.887783529359799*^9}, {
   3.8877836089673634`*^9, 3.887783636614414*^9}, {3.8877945671764097`*^9, 
   3.887794595132979*^9}, {3.888482458139373*^9, 3.888482486173691*^9}, {
   3.888483160522704*^9, 3.8884831856550627`*^9}, 3.888483331615554*^9},
 CellLabel->"In[19]:=",ExpressionUUID->"b1023052-e6a4-4fb1-81f8-154e39d913ab"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Find", " ", "the", " ", "fixed", " ", "points", " ", "of", " ", "the", 
    " ", "system"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"FPs", "=", 
    RowBox[{
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"deX", "==", "0"}], ",", 
         RowBox[{"deZ", "==", "0"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"X", ",", "Z"}], "}"}]}], "]"}], "Fig", " ", "9", " ", 
     "b"}]}], "\n"}]}]], "Input",
 CellChangeTimes->{{3.887783835950109*^9, 3.8877838945109367`*^9}, {
   3.888482479838831*^9, 3.88848248115018*^9}, {3.888483322913253*^9, 
   3.888483326487487*^9}, 3.8884849664592657`*^9, 
   3.888489229894609*^9},ExpressionUUID->"bf240767-9b97-404e-9aa6-\
6613b97b70c3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"X", "\[Rule]", 
      FractionBox["3", 
       RowBox[{"3", "+", "q"}]]}], ",", 
     RowBox[{"Z", "\[Rule]", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"3", " ", 
         RowBox[{"(", 
          RowBox[{"q", "+", 
           RowBox[{"q", " ", "wx"}], "+", 
           RowBox[{"3", " ", "\[Epsilon]"}]}], ")"}]}], 
        RowBox[{
         RowBox[{
          RowBox[{"-", "3"}], " ", "q"}], "+", 
         SuperscriptBox["q", "2"], "-", 
         RowBox[{"3", " ", "q", " ", "wx"}], "-", 
         RowBox[{"9", " ", "\[Epsilon]"}]}]]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"X", "\[Rule]", "0"}], ",", 
     RowBox[{"Z", "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"X", "\[Rule]", 
      FractionBox[
       RowBox[{"1", "+", "wx"}], 
       RowBox[{"1", "+", "wx", "-", "\[Epsilon]"}]]}], ",", 
     RowBox[{"Z", "\[Rule]", "0"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.887783886343814*^9, 3.887783894791018*^9}, 
   3.887794602662032*^9, 3.887795460207513*^9, 3.887796811979241*^9, 
   3.88838793728578*^9, 3.888393308727167*^9, 3.888399217107098*^9, 
   3.888401640037324*^9, 3.888402175991043*^9, 3.8884806612815113`*^9, 
   3.888481208021104*^9, 3.888482496216395*^9, 3.888482843504725*^9, 
   3.8884833362671947`*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"3aab72a6-73a4-40c4-bcda-72c0ff614d01"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"FP", "[", "1", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"X", "/.", 
      RowBox[{"FPs", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ",", 
     RowBox[{"Z", "/.", 
      RowBox[{"FPs", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "2"}], "]"}], "]"}]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FP", "[", "2", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"X", "/.", 
      RowBox[{"FPs", "[", 
       RowBox[{"[", 
        RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ",", 
     RowBox[{"Z", "/.", 
      RowBox[{"FPs", "[", 
       RowBox[{"[", 
        RowBox[{"2", ",", "2"}], "]"}], "]"}]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FP", "[", "3", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"X", "/.", 
      RowBox[{"FPs", "[", 
       RowBox[{"[", 
        RowBox[{"3", ",", "1"}], "]"}], "]"}]}], ",", 
     RowBox[{"Z", "/.", 
      RowBox[{"FPs", "[", 
       RowBox[{"[", 
        RowBox[{"3", ",", "2"}], "]"}], "]"}]}]}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.887794606869719*^9, 3.887794612900786*^9}, {
  3.888387673082815*^9, 3.8883876780179157`*^9}, {3.8884824997426443`*^9, 
  3.888482502814036*^9}, {3.888483343298789*^9, 3.888483345974123*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"f3c7a816-de55-44f8-b45a-d426ba1c5d58"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Put", " ", "fixed", " ", "points", " ", "into", " ", "a", " ", "table"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"FPs", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"FP", "[", "i", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "3"}], "}"}]}], "]"}]}], ";"}]}]], "Input",\

 CellChangeTimes->{{3.8672143768787384`*^9, 3.8672144154966393`*^9}, {
   3.867224467122445*^9, 3.8672244725038586`*^9}, {3.868024836545911*^9, 
   3.868024837240116*^9}, 3.868958478845225*^9, 3.869126991902952*^9, 
   3.882269611642425*^9, {3.884941331752728*^9, 3.884941333151639*^9}, 
   3.887977524370623*^9, {3.8880648874787903`*^9, 3.888064887583043*^9}, {
   3.8883866629648542`*^9, 3.8883866668787622`*^9}, {3.888387685986022*^9, 
   3.888387686065666*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"a89eea58-6b69-4f50-b613-689ed3addc88"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Find", " ", "the", " ", "4", "D", " ", "Jacobian", " ", "matrix", " ", 
    "for", " ", "general", " ", "system", " ", "of", " ", 
    RowBox[{"equations", ".", " ", 
     RowBox[{"D", "[", "]"}]}], " ", "differentiates", " ", "each", " ", 
    "expression"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"J", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{"deX", ",", "X"}], "]"}], ",", 
          RowBox[{"D", "[", 
           RowBox[{"deX", ",", "Z"}], "]"}]}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{"deZ", ",", "X"}], "]"}], ",", 
          RowBox[{"D", "[", 
           RowBox[{"deZ", ",", "Z"}], "]"}]}], "}"}]}], "}"}], "]"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{"J", "//", "MatrixForm"}]}]}]], "Input",
 CellChangeTimes->{{3.8672146504912844`*^9, 3.867214712242198*^9}, {
  3.868944173552453*^9, 3.8689441811471653`*^9}, {3.883803822024252*^9, 
  3.88380382370331*^9}, {3.8849413374850473`*^9, 3.884941360072496*^9}, {
  3.888064788786353*^9, 3.888064809682465*^9}, {3.888386676661456*^9, 
  3.888386680406108*^9}, {3.8883878754897747`*^9, 3.8883878820335407`*^9}, {
  3.888482830050289*^9, 3.888482835765423*^9}, {3.888483359826264*^9, 
  3.888483363430828*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"ba688f16-53fd-40cc-b75c-96ff66b4d37f"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox[
       RowBox[{"3", "+", 
        RowBox[{"3", " ", "wx", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"2", " ", "X"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "Z"}], ")"}]}], "-", 
        RowBox[{"3", " ", "Z"}], "+", 
        RowBox[{"q", " ", "Z"}], "-", 
        RowBox[{"2", " ", "X", " ", 
         RowBox[{"(", 
          RowBox[{"3", "-", 
           RowBox[{"3", " ", "\[Epsilon]"}], "+", 
           RowBox[{"Z", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "3"}], "+", "q", "+", 
              RowBox[{"3", " ", "\[Epsilon]"}]}], ")"}]}]}], ")"}]}]}], 
       RowBox[{
        RowBox[{"-", "1"}], "+", "Z"}]], 
      FractionBox[
       RowBox[{"q", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "X"}], ")"}], " ", "X"}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "Z"}], ")"}], "2"]]},
     {
      RowBox[{"-", 
       FractionBox[
        RowBox[{"q", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "Z"}], ")"}], " ", "Z"}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "X"}], ")"}], "2"]]}], 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "3"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"3", "+", "q"}], ")"}], " ", "X"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"2", " ", "Z"}]}], ")"}]}], 
       RowBox[{
        RowBox[{"-", "1"}], "+", "X"}]]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGDQAeJZXQc4P3x847jvVIQgiNZ7ev3SFyBt5s51HUQ7CP+9
D6L3iCu/AtF615reg+h5j1TkvwLpG4oHqm0+v3HU+ft2Doh+oLh9HYg+d24f
gyuI/vf4F4iex10l4Qakd8hd+7odSL9YUDFvB5A2iMhZD6ITBJnegegS7W3f
QHQQ/2flXUA6t9/0Hoie4xAp8xZIP1v3tKnj2xvHZr+VSb1A+pDU7UWbgDRT
cfcWED1vmvu6zUA6plugY9f3N45dPGr6T4F0RmZ8SOwPoL3trEWNQPqUSMkT
ED1r5pOAJiDt1mUSCaK775e9AdGTpT52twLpp4nL8zqA9EFG9bmdQDpItuIB
iJ5+baXRBiD95QBjOYg+syFCciOQnnTnsTOInna9rwVEAwDIh9ca
  "],
 CellLabel->
  "Out[27]//MatrixForm=",ExpressionUUID->"2fbc4d2e-beab-47f6-9628-\
0b7c0b596eab"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Find", " ", "the", " ", "Jacobian", " ", "and", " ", "eigenvalues", " ", 
    "for", " ", "each", " ", "fixed", " ", "point"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"FPTable", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"FPs", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "//", "MatrixForm"}], ",", 
        RowBox[{
         RowBox[{"Simplify", "[", 
          RowBox[{"J", "/.", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"X", "->", 
              RowBox[{"FPs", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "1"}], "]"}], "]"}]}], ",", 
             RowBox[{"Z", "->", 
              RowBox[{"FPs", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "2"}], "]"}], "]"}]}]}], "}"}]}], "]"}], "//",
          "MatrixForm"}], ",", 
        RowBox[{
         RowBox[{"Eigenvalues", "[", 
          RowBox[{"J", "/.", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"X", "->", 
              RowBox[{"FPs", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "1"}], "]"}], "]"}]}], ",", 
             RowBox[{"Z", "->", 
              RowBox[{"FPs", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "2"}], "]"}], "]"}]}]}], "}"}]}], "]"}], "//",
          "MatrixForm"}], ",", 
        RowBox[{
         RowBox[{"Eigenvectors", "[", 
          RowBox[{"J", "/.", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"X", "->", 
              RowBox[{"FPs", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "1"}], "]"}], "]"}]}], ",", 
             RowBox[{"Z", "->", 
              RowBox[{"FPs", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "2"}], "]"}], "]"}]}]}], "}"}]}], "]"}], "//",
          "MatrixForm"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "3"}], "}"}]}], "]"}]}], ";"}]}]], "Input",\

 CellChangeTimes->{{3.867225318077546*^9, 3.8672254169870214`*^9}, {
   3.867225448024709*^9, 3.8672254542249594`*^9}, {3.8672255001121364`*^9, 
   3.8672255191902294`*^9}, {3.8672255581112022`*^9, 
   3.8672255642188787`*^9}, {3.8672255973534174`*^9, 
   3.8672256274971313`*^9}, {3.8672256839287667`*^9, 
   3.8672256945159383`*^9}, {3.867225730109685*^9, 3.867225738455241*^9}, {
   3.8672257699330273`*^9, 3.867225778278576*^9}, {3.867225811278432*^9, 
   3.86722581683035*^9}, {3.867225903530884*^9, 3.8672259267803965`*^9}, {
   3.867225979984497*^9, 3.867225987304329*^9}, 3.867226143110686*^9, {
   3.867227332365857*^9, 3.867227342142587*^9}, {3.867407053817068*^9, 
   3.8674070581695633`*^9}, {3.8680242099370823`*^9, 3.868024213440816*^9}, {
   3.868024365757309*^9, 3.8680243705990753`*^9}, {3.8680245930712137`*^9, 
   3.8680246064401407`*^9}, {3.8680247507314663`*^9, 3.868024752328637*^9}, {
   3.8689441880925694`*^9, 3.8689441917923965`*^9}, 3.868956001836708*^9, 
   3.8689590190222435`*^9, {3.869126738407119*^9, 3.8691267437236*^9}, 
   3.869126782049677*^9, {3.869127818860439*^9, 3.869127857050398*^9}, 
   3.8691279323005037`*^9, 3.869128019515766*^9, {3.8691294821423035`*^9, 
   3.869129491277402*^9}, {3.869197845521573*^9, 3.869197845678837*^9}, {
   3.87163244715317*^9, 3.8716324493928595`*^9}, {3.8716327635423284`*^9, 
   3.8716327651125145`*^9}, 3.8777566945081463`*^9, {3.8777569014323*^9, 
   3.877756902992178*^9}, 3.882269477299637*^9, 3.8822696146808777`*^9, {
   3.884941367280037*^9, 3.884941402363988*^9}, {3.884941530288258*^9, 
   3.884941535802528*^9}, {3.8849416037112207`*^9, 3.88494162633784*^9}, 
   3.88797755141038*^9, {3.8880648989189*^9, 3.888064918294055*^9}, {
   3.888386700285853*^9, 3.888386700909945*^9}, {3.888387946270321*^9, 
   3.888387946657957*^9}, {3.888482510151402*^9, 3.8884825170306387`*^9}, {
   3.888483369539356*^9, 3.8884833737909517`*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"fb5bd9b3-72e6-4259-a865-395c06be888a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Use", " ", "TableForm", " ", "to", " ", "display", " ", "the", " ", 
    "fixed", " ", "points", " ", "with", " ", "their", " ", "Jacobian", " ", 
    "matrix", " ", "and", " ", "eigenvalues"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Extra", " ", "fixed", " ", "points", " ", "from", " ", 
     "compactification", " ", "at", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"X", " ", "=", " ", "1"}], ",", " ", 
       RowBox[{"Z", " ", "=", " ", "0"}]}], "}"}]}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"X", " ", "=", " ", "1"}], ",", " ", 
      RowBox[{"Z", " ", "=", " ", "1"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"X", " ", "=", " ", "0"}], ",", " ", 
      RowBox[{"Z", " ", "=", " ", "1"}]}], "}"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"FPTable", "=", 
   RowBox[{"TableForm", "[", 
    RowBox[{"FPTable", ",", 
     RowBox[{"TableHeadings", "->", 
      RowBox[{"{", 
       RowBox[{"None", ",", 
        RowBox[{"{", 
         RowBox[{
         "\"\<Fixed Point\>\"", ",", "\"\<Jacobian\>\"", ",", 
          "\"\<Eigenvalues\>\"", ",", "\"\<Eigenvectors\>\""}], "}"}]}], 
       "}"}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8674732571734056`*^9, 3.8674733087235513`*^9}, {
   3.8680240454027176`*^9, 3.8680240517453375`*^9}, {3.868944198427647*^9, 
   3.8689442010925846`*^9}, {3.8691296342126307`*^9, 3.869129635352618*^9}, {
   3.8691296836226945`*^9, 3.8691297054374857`*^9}, 3.8691297421488905`*^9, {
   3.8691297832126884`*^9, 3.869129802932803*^9}, {3.8777567702425528`*^9, 
   3.8777567889867887`*^9}, {3.877756859522192*^9, 3.8777568704743633`*^9}, {
   3.877756944239081*^9, 3.8777569721182117`*^9}, {3.883803874115755*^9, 
   3.8838039117033367`*^9}, {3.884941538839074*^9, 3.884941542102433*^9}, {
   3.888483548287424*^9, 
   3.888483597143457*^9}},ExpressionUUID->"203d6844-ad36-4371-8937-\
1f01aca93b62"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      TagBox["\<\"Fixed Point\"\>",
       HoldForm], 
      TagBox["\<\"Jacobian\"\>",
       HoldForm], 
      TagBox["\<\"Eigenvalues\"\>",
       HoldForm], 
      TagBox["\<\"Eigenvectors\"\>",
       HoldForm]},
     {
      TagBox[
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            FractionBox["3", 
             RowBox[{"3", "+", "q"}]]},
           {
            RowBox[{"-", 
             FractionBox[
              RowBox[{"3", " ", 
               RowBox[{"(", 
                RowBox[{"q", "+", 
                 RowBox[{"q", " ", "wx"}], "+", 
                 RowBox[{"3", " ", "\[Epsilon]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{
                RowBox[{"-", "3"}], " ", "q"}], "+", 
               SuperscriptBox["q", "2"], "-", 
               RowBox[{"3", " ", "q", " ", "wx"}], "-", 
               RowBox[{"9", " ", "\[Epsilon]"}]}]]}]}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {
           RowBox[{"-", 
            FractionBox[
             RowBox[{"9", " ", "\[Epsilon]"}], "q"]}], 
           RowBox[{"-", 
            FractionBox[
             RowBox[{"3", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 SuperscriptBox["q", "2"], "-", 
                 RowBox[{"3", " ", "q", " ", 
                  RowBox[{"(", 
                   RowBox[{"1", "+", "wx"}], ")"}]}], "-", 
                 RowBox[{"9", " ", "\[Epsilon]"}]}], ")"}], "2"]}], 
             RowBox[{
              SuperscriptBox["q", "2"], " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"3", "+", "q"}], ")"}], "2"]}]]}]},
          {
           RowBox[{"-", 
            FractionBox[
             RowBox[{"3", " ", "q", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"3", "+", "q"}], ")"}], "2"], " ", 
              RowBox[{"(", 
               RowBox[{"q", "+", 
                RowBox[{"q", " ", "wx"}], "+", 
                RowBox[{"3", " ", "\[Epsilon]"}]}], ")"}]}], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox["q", "2"], "-", 
                RowBox[{"3", " ", "q", " ", 
                 RowBox[{"(", 
                  RowBox[{"1", "+", "wx"}], ")"}]}], "-", 
                RowBox[{"9", " ", "\[Epsilon]"}]}], ")"}], "2"]]}], "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            FractionBox[
             RowBox[{"3", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "243"}], " ", 
                 SuperscriptBox["q", "3"], " ", "\[Epsilon]"}], "+", 
                RowBox[{"54", " ", 
                 SuperscriptBox["q", "5"], " ", "\[Epsilon]"}], "-", 
                RowBox[{"3", " ", 
                 SuperscriptBox["q", "7"], " ", "\[Epsilon]"}], "-", 
                RowBox[{"486", " ", 
                 SuperscriptBox["q", "3"], " ", "wx", " ", "\[Epsilon]"}], 
                "-", 
                RowBox[{"162", " ", 
                 SuperscriptBox["q", "4"], " ", "wx", " ", "\[Epsilon]"}], 
                "+", 
                RowBox[{"54", " ", 
                 SuperscriptBox["q", "5"], " ", "wx", " ", "\[Epsilon]"}], 
                "+", 
                RowBox[{"18", " ", 
                 SuperscriptBox["q", "6"], " ", "wx", " ", "\[Epsilon]"}], 
                "-", 
                RowBox[{"243", " ", 
                 SuperscriptBox["q", "3"], " ", 
                 SuperscriptBox["wx", "2"], " ", "\[Epsilon]"}], "-", 
                RowBox[{"162", " ", 
                 SuperscriptBox["q", "4"], " ", 
                 SuperscriptBox["wx", "2"], " ", "\[Epsilon]"}], "-", 
                RowBox[{"27", " ", 
                 SuperscriptBox["q", "5"], " ", 
                 SuperscriptBox["wx", "2"], " ", "\[Epsilon]"}], "-", 
                RowBox[{"1458", " ", 
                 SuperscriptBox["q", "2"], " ", 
                 SuperscriptBox["\[Epsilon]", "2"]}], "-", 
                RowBox[{"486", " ", 
                 SuperscriptBox["q", "3"], " ", 
                 SuperscriptBox["\[Epsilon]", "2"]}], "+", 
                RowBox[{"162", " ", 
                 SuperscriptBox["q", "4"], " ", 
                 SuperscriptBox["\[Epsilon]", "2"]}], "+", 
                RowBox[{"54", " ", 
                 SuperscriptBox["q", "5"], " ", 
                 SuperscriptBox["\[Epsilon]", "2"]}], "-", 
                RowBox[{"1458", " ", 
                 SuperscriptBox["q", "2"], " ", "wx", " ", 
                 SuperscriptBox["\[Epsilon]", "2"]}], "-", 
                RowBox[{"972", " ", 
                 SuperscriptBox["q", "3"], " ", "wx", " ", 
                 SuperscriptBox["\[Epsilon]", "2"]}], "-", 
                RowBox[{"162", " ", 
                 SuperscriptBox["q", "4"], " ", "wx", " ", 
                 SuperscriptBox["\[Epsilon]", "2"]}], "-", 
                RowBox[{"2187", " ", "q", " ", 
                 SuperscriptBox["\[Epsilon]", "3"]}], "-", 
                RowBox[{"1458", " ", 
                 SuperscriptBox["q", "2"], " ", 
                 SuperscriptBox["\[Epsilon]", "3"]}], "-", 
                RowBox[{"243", " ", 
                 SuperscriptBox["q", "3"], " ", 
                 SuperscriptBox["\[Epsilon]", "3"]}], "-", 
                RowBox[{"q", " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{"3", "+", "q"}], ")"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", "3"}], " ", "q"}], "+", 
                    SuperscriptBox["q", "2"], "-", 
                    RowBox[{"3", " ", "q", " ", "wx"}], "-", 
                    RowBox[{"9", " ", "\[Epsilon]"}]}], ")"}], "2"], " ", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{"4", " ", 
                    SuperscriptBox["q", "2"]}], "+", 
                   RowBox[{"4", " ", 
                    SuperscriptBox["q", "2"], " ", "wx"}], "+", 
                   RowBox[{"12", " ", "q", " ", "\[Epsilon]"}], "+", 
                   RowBox[{"9", " ", 
                    SuperscriptBox["\[Epsilon]", "2"]}]}]]}]}], ")"}]}], 
             RowBox[{"2", " ", 
              SuperscriptBox["q", "2"], " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"3", "+", "q"}], ")"}], "2"], " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "3"}], " ", "q"}], "+", 
                 SuperscriptBox["q", "2"], "-", 
                 RowBox[{"3", " ", "q", " ", "wx"}], "-", 
                 RowBox[{"9", " ", "\[Epsilon]"}]}], ")"}], "2"]}]]},
           {
            FractionBox[
             RowBox[{"3", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "243"}], " ", 
                 SuperscriptBox["q", "3"], " ", "\[Epsilon]"}], "+", 
                RowBox[{"54", " ", 
                 SuperscriptBox["q", "5"], " ", "\[Epsilon]"}], "-", 
                RowBox[{"3", " ", 
                 SuperscriptBox["q", "7"], " ", "\[Epsilon]"}], "-", 
                RowBox[{"486", " ", 
                 SuperscriptBox["q", "3"], " ", "wx", " ", "\[Epsilon]"}], 
                "-", 
                RowBox[{"162", " ", 
                 SuperscriptBox["q", "4"], " ", "wx", " ", "\[Epsilon]"}], 
                "+", 
                RowBox[{"54", " ", 
                 SuperscriptBox["q", "5"], " ", "wx", " ", "\[Epsilon]"}], 
                "+", 
                RowBox[{"18", " ", 
                 SuperscriptBox["q", "6"], " ", "wx", " ", "\[Epsilon]"}], 
                "-", 
                RowBox[{"243", " ", 
                 SuperscriptBox["q", "3"], " ", 
                 SuperscriptBox["wx", "2"], " ", "\[Epsilon]"}], "-", 
                RowBox[{"162", " ", 
                 SuperscriptBox["q", "4"], " ", 
                 SuperscriptBox["wx", "2"], " ", "\[Epsilon]"}], "-", 
                RowBox[{"27", " ", 
                 SuperscriptBox["q", "5"], " ", 
                 SuperscriptBox["wx", "2"], " ", "\[Epsilon]"}], "-", 
                RowBox[{"1458", " ", 
                 SuperscriptBox["q", "2"], " ", 
                 SuperscriptBox["\[Epsilon]", "2"]}], "-", 
                RowBox[{"486", " ", 
                 SuperscriptBox["q", "3"], " ", 
                 SuperscriptBox["\[Epsilon]", "2"]}], "+", 
                RowBox[{"162", " ", 
                 SuperscriptBox["q", "4"], " ", 
                 SuperscriptBox["\[Epsilon]", "2"]}], "+", 
                RowBox[{"54", " ", 
                 SuperscriptBox["q", "5"], " ", 
                 SuperscriptBox["\[Epsilon]", "2"]}], "-", 
                RowBox[{"1458", " ", 
                 SuperscriptBox["q", "2"], " ", "wx", " ", 
                 SuperscriptBox["\[Epsilon]", "2"]}], "-", 
                RowBox[{"972", " ", 
                 SuperscriptBox["q", "3"], " ", "wx", " ", 
                 SuperscriptBox["\[Epsilon]", "2"]}], "-", 
                RowBox[{"162", " ", 
                 SuperscriptBox["q", "4"], " ", "wx", " ", 
                 SuperscriptBox["\[Epsilon]", "2"]}], "-", 
                RowBox[{"2187", " ", "q", " ", 
                 SuperscriptBox["\[Epsilon]", "3"]}], "-", 
                RowBox[{"1458", " ", 
                 SuperscriptBox["q", "2"], " ", 
                 SuperscriptBox["\[Epsilon]", "3"]}], "-", 
                RowBox[{"243", " ", 
                 SuperscriptBox["q", "3"], " ", 
                 SuperscriptBox["\[Epsilon]", "3"]}], "+", 
                RowBox[{"q", " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{"3", "+", "q"}], ")"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", "3"}], " ", "q"}], "+", 
                    SuperscriptBox["q", "2"], "-", 
                    RowBox[{"3", " ", "q", " ", "wx"}], "-", 
                    RowBox[{"9", " ", "\[Epsilon]"}]}], ")"}], "2"], " ", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{"4", " ", 
                    SuperscriptBox["q", "2"]}], "+", 
                   RowBox[{"4", " ", 
                    SuperscriptBox["q", "2"], " ", "wx"}], "+", 
                   RowBox[{"12", " ", "q", " ", "\[Epsilon]"}], "+", 
                   RowBox[{"9", " ", 
                    SuperscriptBox["\[Epsilon]", "2"]}]}]]}]}], ")"}]}], 
             RowBox[{"2", " ", 
              SuperscriptBox["q", "2"], " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"3", "+", "q"}], ")"}], "2"], " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "3"}], " ", "q"}], "+", 
                 SuperscriptBox["q", "2"], "-", 
                 RowBox[{"3", " ", "q", " ", "wx"}], "-", 
                 RowBox[{"9", " ", "\[Epsilon]"}]}], ")"}], "2"]}]]}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {
           RowBox[{"-", 
            FractionBox[
             RowBox[{
              RowBox[{
               RowBox[{"-", "27"}], " ", 
               SuperscriptBox["q", "2"], " ", "\[Epsilon]"}], "+", 
              RowBox[{"18", " ", 
               SuperscriptBox["q", "3"], " ", "\[Epsilon]"}], "-", 
              RowBox[{"3", " ", 
               SuperscriptBox["q", "4"], " ", "\[Epsilon]"}], "-", 
              RowBox[{"54", " ", 
               SuperscriptBox["q", "2"], " ", "wx", " ", "\[Epsilon]"}], "+", 
              
              RowBox[{"18", " ", 
               SuperscriptBox["q", "3"], " ", "wx", " ", "\[Epsilon]"}], "-", 
              
              RowBox[{"27", " ", 
               SuperscriptBox["q", "2"], " ", 
               SuperscriptBox["wx", "2"], " ", "\[Epsilon]"}], "-", 
              RowBox[{"162", " ", "q", " ", 
               SuperscriptBox["\[Epsilon]", "2"]}], "+", 
              RowBox[{"54", " ", 
               SuperscriptBox["q", "2"], " ", 
               SuperscriptBox["\[Epsilon]", "2"]}], "-", 
              RowBox[{"162", " ", "q", " ", "wx", " ", 
               SuperscriptBox["\[Epsilon]", "2"]}], "-", 
              RowBox[{"243", " ", 
               SuperscriptBox["\[Epsilon]", "3"]}], "-", 
              RowBox[{"9", " ", 
               SuperscriptBox["q", "2"], " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{"4", " ", 
                  SuperscriptBox["q", "2"]}], "+", 
                 RowBox[{"4", " ", 
                  SuperscriptBox["q", "2"], " ", "wx"}], "+", 
                 RowBox[{"12", " ", "q", " ", "\[Epsilon]"}], "+", 
                 RowBox[{"9", " ", 
                  SuperscriptBox["\[Epsilon]", "2"]}]}]]}], "+", 
              RowBox[{"6", " ", 
               SuperscriptBox["q", "3"], " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{"4", " ", 
                  SuperscriptBox["q", "2"]}], "+", 
                 RowBox[{"4", " ", 
                  SuperscriptBox["q", "2"], " ", "wx"}], "+", 
                 RowBox[{"12", " ", "q", " ", "\[Epsilon]"}], "+", 
                 RowBox[{"9", " ", 
                  SuperscriptBox["\[Epsilon]", "2"]}]}]]}], "-", 
              RowBox[{
               SuperscriptBox["q", "4"], " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{"4", " ", 
                  SuperscriptBox["q", "2"]}], "+", 
                 RowBox[{"4", " ", 
                  SuperscriptBox["q", "2"], " ", "wx"}], "+", 
                 RowBox[{"12", " ", "q", " ", "\[Epsilon]"}], "+", 
                 RowBox[{"9", " ", 
                  SuperscriptBox["\[Epsilon]", "2"]}]}]]}], "-", 
              RowBox[{"18", " ", 
               SuperscriptBox["q", "2"], " ", "wx", " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{"4", " ", 
                  SuperscriptBox["q", "2"]}], "+", 
                 RowBox[{"4", " ", 
                  SuperscriptBox["q", "2"], " ", "wx"}], "+", 
                 RowBox[{"12", " ", "q", " ", "\[Epsilon]"}], "+", 
                 RowBox[{"9", " ", 
                  SuperscriptBox["\[Epsilon]", "2"]}]}]]}], "+", 
              RowBox[{"6", " ", 
               SuperscriptBox["q", "3"], " ", "wx", " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{"4", " ", 
                  SuperscriptBox["q", "2"]}], "+", 
                 RowBox[{"4", " ", 
                  SuperscriptBox["q", "2"], " ", "wx"}], "+", 
                 RowBox[{"12", " ", "q", " ", "\[Epsilon]"}], "+", 
                 RowBox[{"9", " ", 
                  SuperscriptBox["\[Epsilon]", "2"]}]}]]}], "-", 
              RowBox[{"9", " ", 
               SuperscriptBox["q", "2"], " ", 
               SuperscriptBox["wx", "2"], " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{"4", " ", 
                  SuperscriptBox["q", "2"]}], "+", 
                 RowBox[{"4", " ", 
                  SuperscriptBox["q", "2"], " ", "wx"}], "+", 
                 RowBox[{"12", " ", "q", " ", "\[Epsilon]"}], "+", 
                 RowBox[{"9", " ", 
                  SuperscriptBox["\[Epsilon]", "2"]}]}]]}], "-", 
              RowBox[{"54", " ", "q", " ", "\[Epsilon]", " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{"4", " ", 
                  SuperscriptBox["q", "2"]}], "+", 
                 RowBox[{"4", " ", 
                  SuperscriptBox["q", "2"], " ", "wx"}], "+", 
                 RowBox[{"12", " ", "q", " ", "\[Epsilon]"}], "+", 
                 RowBox[{"9", " ", 
                  SuperscriptBox["\[Epsilon]", "2"]}]}]]}], "+", 
              RowBox[{"18", " ", 
               SuperscriptBox["q", "2"], " ", "\[Epsilon]", " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{"4", " ", 
                  SuperscriptBox["q", "2"]}], "+", 
                 RowBox[{"4", " ", 
                  SuperscriptBox["q", "2"], " ", "wx"}], "+", 
                 RowBox[{"12", " ", "q", " ", "\[Epsilon]"}], "+", 
                 RowBox[{"9", " ", 
                  SuperscriptBox["\[Epsilon]", "2"]}]}]]}], "-", 
              RowBox[{"54", " ", "q", " ", "wx", " ", "\[Epsilon]", " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{"4", " ", 
                  SuperscriptBox["q", "2"]}], "+", 
                 RowBox[{"4", " ", 
                  SuperscriptBox["q", "2"], " ", "wx"}], "+", 
                 RowBox[{"12", " ", "q", " ", "\[Epsilon]"}], "+", 
                 RowBox[{"9", " ", 
                  SuperscriptBox["\[Epsilon]", "2"]}]}]]}], "-", 
              RowBox[{"81", " ", 
               SuperscriptBox["\[Epsilon]", "2"], " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{"4", " ", 
                  SuperscriptBox["q", "2"]}], "+", 
                 RowBox[{"4", " ", 
                  SuperscriptBox["q", "2"], " ", "wx"}], "+", 
                 RowBox[{"12", " ", "q", " ", "\[Epsilon]"}], "+", 
                 RowBox[{"9", " ", 
                  SuperscriptBox["\[Epsilon]", "2"]}]}]]}]}], 
             RowBox[{"2", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"3", " ", "q"}], "+", 
                 SuperscriptBox["q", "2"]}], ")"}], "2"], " ", 
              RowBox[{"(", 
               RowBox[{"q", "+", 
                RowBox[{"q", " ", "wx"}], "+", 
                RowBox[{"3", " ", "\[Epsilon]"}]}], ")"}]}]]}], "1"},
          {
           RowBox[{"-", 
            FractionBox[
             RowBox[{
              RowBox[{
               RowBox[{"-", "27"}], " ", 
               SuperscriptBox["q", "2"], " ", "\[Epsilon]"}], "+", 
              RowBox[{"18", " ", 
               SuperscriptBox["q", "3"], " ", "\[Epsilon]"}], "-", 
              RowBox[{"3", " ", 
               SuperscriptBox["q", "4"], " ", "\[Epsilon]"}], "-", 
              RowBox[{"54", " ", 
               SuperscriptBox["q", "2"], " ", "wx", " ", "\[Epsilon]"}], "+", 
              
              RowBox[{"18", " ", 
               SuperscriptBox["q", "3"], " ", "wx", " ", "\[Epsilon]"}], "-", 
              
              RowBox[{"27", " ", 
               SuperscriptBox["q", "2"], " ", 
               SuperscriptBox["wx", "2"], " ", "\[Epsilon]"}], "-", 
              RowBox[{"162", " ", "q", " ", 
               SuperscriptBox["\[Epsilon]", "2"]}], "+", 
              RowBox[{"54", " ", 
               SuperscriptBox["q", "2"], " ", 
               SuperscriptBox["\[Epsilon]", "2"]}], "-", 
              RowBox[{"162", " ", "q", " ", "wx", " ", 
               SuperscriptBox["\[Epsilon]", "2"]}], "-", 
              RowBox[{"243", " ", 
               SuperscriptBox["\[Epsilon]", "3"]}], "+", 
              RowBox[{"9", " ", 
               SuperscriptBox["q", "2"], " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{"4", " ", 
                  SuperscriptBox["q", "2"]}], "+", 
                 RowBox[{"4", " ", 
                  SuperscriptBox["q", "2"], " ", "wx"}], "+", 
                 RowBox[{"12", " ", "q", " ", "\[Epsilon]"}], "+", 
                 RowBox[{"9", " ", 
                  SuperscriptBox["\[Epsilon]", "2"]}]}]]}], "-", 
              RowBox[{"6", " ", 
               SuperscriptBox["q", "3"], " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{"4", " ", 
                  SuperscriptBox["q", "2"]}], "+", 
                 RowBox[{"4", " ", 
                  SuperscriptBox["q", "2"], " ", "wx"}], "+", 
                 RowBox[{"12", " ", "q", " ", "\[Epsilon]"}], "+", 
                 RowBox[{"9", " ", 
                  SuperscriptBox["\[Epsilon]", "2"]}]}]]}], "+", 
              RowBox[{
               SuperscriptBox["q", "4"], " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{"4", " ", 
                  SuperscriptBox["q", "2"]}], "+", 
                 RowBox[{"4", " ", 
                  SuperscriptBox["q", "2"], " ", "wx"}], "+", 
                 RowBox[{"12", " ", "q", " ", "\[Epsilon]"}], "+", 
                 RowBox[{"9", " ", 
                  SuperscriptBox["\[Epsilon]", "2"]}]}]]}], "+", 
              RowBox[{"18", " ", 
               SuperscriptBox["q", "2"], " ", "wx", " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{"4", " ", 
                  SuperscriptBox["q", "2"]}], "+", 
                 RowBox[{"4", " ", 
                  SuperscriptBox["q", "2"], " ", "wx"}], "+", 
                 RowBox[{"12", " ", "q", " ", "\[Epsilon]"}], "+", 
                 RowBox[{"9", " ", 
                  SuperscriptBox["\[Epsilon]", "2"]}]}]]}], "-", 
              RowBox[{"6", " ", 
               SuperscriptBox["q", "3"], " ", "wx", " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{"4", " ", 
                  SuperscriptBox["q", "2"]}], "+", 
                 RowBox[{"4", " ", 
                  SuperscriptBox["q", "2"], " ", "wx"}], "+", 
                 RowBox[{"12", " ", "q", " ", "\[Epsilon]"}], "+", 
                 RowBox[{"9", " ", 
                  SuperscriptBox["\[Epsilon]", "2"]}]}]]}], "+", 
              RowBox[{"9", " ", 
               SuperscriptBox["q", "2"], " ", 
               SuperscriptBox["wx", "2"], " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{"4", " ", 
                  SuperscriptBox["q", "2"]}], "+", 
                 RowBox[{"4", " ", 
                  SuperscriptBox["q", "2"], " ", "wx"}], "+", 
                 RowBox[{"12", " ", "q", " ", "\[Epsilon]"}], "+", 
                 RowBox[{"9", " ", 
                  SuperscriptBox["\[Epsilon]", "2"]}]}]]}], "+", 
              RowBox[{"54", " ", "q", " ", "\[Epsilon]", " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{"4", " ", 
                  SuperscriptBox["q", "2"]}], "+", 
                 RowBox[{"4", " ", 
                  SuperscriptBox["q", "2"], " ", "wx"}], "+", 
                 RowBox[{"12", " ", "q", " ", "\[Epsilon]"}], "+", 
                 RowBox[{"9", " ", 
                  SuperscriptBox["\[Epsilon]", "2"]}]}]]}], "-", 
              RowBox[{"18", " ", 
               SuperscriptBox["q", "2"], " ", "\[Epsilon]", " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{"4", " ", 
                  SuperscriptBox["q", "2"]}], "+", 
                 RowBox[{"4", " ", 
                  SuperscriptBox["q", "2"], " ", "wx"}], "+", 
                 RowBox[{"12", " ", "q", " ", "\[Epsilon]"}], "+", 
                 RowBox[{"9", " ", 
                  SuperscriptBox["\[Epsilon]", "2"]}]}]]}], "+", 
              RowBox[{"54", " ", "q", " ", "wx", " ", "\[Epsilon]", " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{"4", " ", 
                  SuperscriptBox["q", "2"]}], "+", 
                 RowBox[{"4", " ", 
                  SuperscriptBox["q", "2"], " ", "wx"}], "+", 
                 RowBox[{"12", " ", "q", " ", "\[Epsilon]"}], "+", 
                 RowBox[{"9", " ", 
                  SuperscriptBox["\[Epsilon]", "2"]}]}]]}], "+", 
              RowBox[{"81", " ", 
               SuperscriptBox["\[Epsilon]", "2"], " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{"4", " ", 
                  SuperscriptBox["q", "2"]}], "+", 
                 RowBox[{"4", " ", 
                  SuperscriptBox["q", "2"], " ", "wx"}], "+", 
                 RowBox[{"12", " ", "q", " ", "\[Epsilon]"}], "+", 
                 RowBox[{"9", " ", 
                  SuperscriptBox["\[Epsilon]", "2"]}]}]]}]}], 
             RowBox[{"2", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"3", " ", "q"}], "+", 
                 SuperscriptBox["q", "2"]}], ")"}], "2"], " ", 
              RowBox[{"(", 
               RowBox[{"q", "+", 
                RowBox[{"q", " ", "wx"}], "+", 
                RowBox[{"3", " ", "\[Epsilon]"}]}], ")"}]}]]}], "1"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]]},
     {
      TagBox[
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {
           RowBox[{
            RowBox[{"-", "3"}], " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", "wx"}], ")"}]}], "0"},
          {"0", 
           RowBox[{"-", "3"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            RowBox[{"-", "3"}]},
           {
            RowBox[{"3", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "-", "wx"}], ")"}]}]}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "1"},
          {"1", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]]},
     {
      TagBox[
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            FractionBox[
             RowBox[{"1", "+", "wx"}], 
             RowBox[{"1", "+", "wx", "-", "\[Epsilon]"}]]},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {
           RowBox[{"3", " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", "wx"}], ")"}]}], 
           FractionBox[
            RowBox[{"q", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", "wx"}], ")"}], " ", "\[Epsilon]"}], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", "wx", "-", "\[Epsilon]"}], ")"}], "2"]]},
          {"0", 
           RowBox[{
            RowBox[{"-", "3"}], "-", 
            FractionBox[
             RowBox[{"q", " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", "wx"}], ")"}]}], "\[Epsilon]"]}]}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            RowBox[{"3", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", "wx"}], ")"}]}]},
           {
            RowBox[{"-", 
             FractionBox[
              RowBox[{"q", "+", 
               RowBox[{"q", " ", "wx"}], "+", 
               RowBox[{"3", " ", "\[Epsilon]"}]}], "\[Epsilon]"]}]}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"1", "0"},
          {
           RowBox[{"-", 
            FractionBox[
             RowBox[{"q", " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", "wx"}], ")"}], " ", 
              SuperscriptBox["\[Epsilon]", "2"]}], 
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"1", "+", "wx", "-", "\[Epsilon]"}], ")"}], "2"], " ", 
              RowBox[{"(", 
               RowBox[{"q", "+", 
                RowBox[{"q", " ", "wx"}], "+", 
                RowBox[{"6", " ", "\[Epsilon]"}], "+", 
                RowBox[{"3", " ", "wx", " ", "\[Epsilon]"}]}], ")"}]}]]}], "1"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{
     "Columns" -> {{False}}, "Rows" -> {False, True, {False}, False}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   {None, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {
     None, {"Fixed Point", "Jacobian", "Eigenvalues", 
       "Eigenvectors"}}]]]], "Output",
 CellChangeTimes->{
  3.884941454690998*^9, {3.884941542933641*^9, 3.884941546476881*^9}, {
   3.884941605209611*^9, 3.884941629149145*^9}, 3.88495119079465*^9, 
   3.88495122436862*^9, 3.8849512959610043`*^9, 3.884951377134953*^9, 
   3.8849514201387043`*^9, 3.8849518012042103`*^9, 3.88562223805123*^9, 
   3.885622503492572*^9, 3.8856226457884483`*^9, 3.8856396860561047`*^9, 
   3.8856416872205048`*^9, 3.88564192395665*^9, 3.885875118753622*^9, 
   3.885876467829794*^9, 3.88587660344481*^9, 3.885877104125065*^9, 
   3.8858771737497377`*^9, 3.885879583665038*^9, 3.8858810737327747`*^9, 
   3.885983970859274*^9, 3.8873508072443657`*^9, 3.887360789363636*^9, 
   3.8874370789522543`*^9, 3.8874372204501667`*^9, 3.8874392183274717`*^9, 
   3.887977553478746*^9, 3.888064921266267*^9, 3.888310947009956*^9, 
   3.888384915379505*^9, 3.888385827648429*^9, 3.888386703120358*^9, 
   3.888386763050202*^9, 3.8883879486553*^9, 3.8883933143100967`*^9, 
   3.888399223590488*^9, 3.888401642021921*^9, 3.888402182920209*^9, 
   3.888480661362626*^9, 3.888481208128563*^9, 3.888482520451787*^9, 
   3.88848285090773*^9, 3.888483376603113*^9},
 CellLabel->
  "Out[29]//TableForm=",ExpressionUUID->"74fd4acd-fc84-410d-9892-\
b12a8235c41c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Find", " ", "condition", " ", "for", " ", "first", " ", "fixed", " ", 
    "point", " ", "to", " ", "be", " ", "complex"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"wxCond", "=", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"4", " ", 
        SuperscriptBox["q", "2"]}], "+", 
       RowBox[{"4", " ", 
        SuperscriptBox["q", "2"], " ", "wx"}], "+", 
       RowBox[{"12", " ", "q", " ", "\[Epsilon]"}], "+", 
       RowBox[{"9", " ", 
        SuperscriptBox["\[Epsilon]", "2"]}]}], "==", "0"}], ",", 
     RowBox[{"{", 
      RowBox[{"q", ",", "\[Epsilon]", ",", "wx"}], "}"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.888394762343412*^9, 3.888394773774496*^9}, {
  3.888396078984737*^9, 3.8883961420811*^9}, {3.888396504286385*^9, 
  3.888396504430975*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"a4c361d0-8f48-4568-80e3-90bb1d301433"],

Cell[BoxData[
 TemplateBox[{
  "Solve", "svars", 
   "\"Equations may not give solutions for all \\\"solve\\\" variables.\"", 2,
    12, 1, 18333173876482113157, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.888394774155014*^9, 3.888396143399876*^9, 
  3.8883992249362507`*^9, 3.8884016427625504`*^9, 3.888402184711317*^9, 
  3.888480661404483*^9, 3.888481208175156*^9, 3.888482869534152*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"68faf1de-f08f-4590-98ae-34fd8b6f5b72"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"wx", "\[Rule]", 
     RowBox[{"-", 
      FractionBox[
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "q"}], "+", 
          RowBox[{"3", " ", "\[Epsilon]"}]}], ")"}], "2"], 
       RowBox[{"4", " ", 
        SuperscriptBox["q", "2"]}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"q", "\[Rule]", "0"}], ",", 
     RowBox[{"\[Epsilon]", "\[Rule]", "0"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.888394756050598*^9, 3.888394774163561*^9}, 
   3.888396143408059*^9, 3.888399224945829*^9, 3.888401642767928*^9, 
   3.888402184718754*^9, 3.888480661410144*^9, 3.888481208188833*^9, 
   3.888482869540464*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"ad819a13-9ae4-48d8-b0df-0bfb4c4c0802"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"wxCondition", "=", 
  RowBox[{"wx", "/.", 
   RowBox[{"wxCond", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.888396130198745*^9, 3.8883961823042192`*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"6f01469b-dc2c-4f35-8e07-66f895a6fb83"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", " ", "q"}], "+", 
      RowBox[{"3", " ", "\[Epsilon]"}]}], ")"}], "2"], 
   RowBox[{"4", " ", 
    SuperscriptBox["q", "2"]}]]}]], "Output",
 CellChangeTimes->{3.888396156964006*^9, 3.8883992256993856`*^9, 
  3.888401643171076*^9, 3.888402188185144*^9, 3.888480661422019*^9, 
  3.8884812082127867`*^9, 3.888482869882765*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"aac7be21-23b8-4087-8c6c-222000bc1b73"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Maximum", " ", "value", " ", "wx", " ", "can", " ", "be", " ", "for", 
     " ", "positive", " ", "values", " ", "of", " ", "\[Epsilon]", " ", "and",
      " ", "q"}], " ", "->", " ", 
    RowBox[{
     RowBox[{"Fig", ".", " ", "9"}], "a"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"wxMax1", "=", 
   RowBox[{"wxCondition", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Epsilon]", "->", "0.01"}], ",", 
      RowBox[{"q", "->", ".1"}]}], "}"}]}]}]}]], "Input",
 CellChangeTimes->{{3.888396188889471*^9, 3.888396250405672*^9}, {
   3.88839643679565*^9, 3.888396450454376*^9}, {3.888396727271161*^9, 
   3.8883967415997477`*^9}, {3.888399256797667*^9, 3.888399256939949*^9}, {
   3.888399289589098*^9, 3.888399289763579*^9}, {3.888399577693181*^9, 
   3.8883995786429*^9}, {3.888401648075615*^9, 3.888401649793898*^9}, {
   3.888402031568365*^9, 3.8884020345601187`*^9}, 3.888402134705879*^9},
 CellLabel->"In[14]:=",ExpressionUUID->"fd052ac9-e85d-485e-96bf-5a80f6fe8066"],

Cell[BoxData[
 RowBox[{"-", "1.3224999999999998`"}]], "Output",
 CellChangeTimes->{{3.888396190207408*^9, 3.888396209127961*^9}, 
   3.888396239726666*^9, {3.8883964375626917`*^9, 3.888396450864183*^9}, {
   3.888396728048736*^9, 3.8883967418597927`*^9}, {3.8883992274665537`*^9, 
   3.888399257225938*^9}, 3.888399290221753*^9, 3.88839957935618*^9, {
   3.888401643580565*^9, 3.8884016502292147`*^9}, 3.888402189258237*^9, 
   3.888480661427802*^9, 3.888481208234194*^9, 3.8884828703758793`*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"b2b78cda-bbe8-454b-a285-71061150aaca"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Maximum", " ", "value", " ", "wx", " ", "can", " ", "be", " ", "for", " ",
     "positive", " ", "q", " ", "and", " ", "negative", " ", "\[Epsilon]", 
    " ", "to", " ", "reproduce", " ", 
    RowBox[{"Fig", ".", " ", "9"}], "b"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"wxMax2", "=", 
   RowBox[{"wxCondition", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Epsilon]", "->", 
       RowBox[{"-", "0.25"}]}], ",", 
      RowBox[{"q", "->", "1"}]}], "}"}]}]}]}]], "Input",
 CellChangeTimes->{
  3.888402050823923*^9, {3.888402122087219*^9, 3.888402154303185*^9}, {
   3.888402254186022*^9, 3.888402299126996*^9}, {3.888402340136343*^9, 
   3.888402363294355*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"0b36032e-de44-444f-93b0-cdb84a2b68ad"],

Cell[BoxData[
 RowBox[{"-", "0.390625`"}]], "Output",
 CellChangeTimes->{
  3.888402190613138*^9, {3.888402270289102*^9, 3.888402300441293*^9}, 
   3.888402342455991*^9, 3.8884806614414988`*^9, 3.888481208262619*^9, 
   3.888482870686092*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"07c69b8f-21ef-4302-ba81-b24f9e8afa70"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Define", " ", "the", " ", "differential", " ", "equations", " ", "in", 
    " ", "terms", " ", "of", " ", "their", " ", "variables"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"DE", "[", 
      RowBox[{"wx_", ",", "q_", ",", "\[Epsilon]_"}], "]"}], "=", "deX"}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"DM", "[", "q_", "]"}], "=", "deZ"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.887783657511712*^9, 3.887783686624045*^9}, {
  3.887783776422574*^9, 3.887783778430128*^9}, {3.887794618325459*^9, 
  3.887794623663451*^9}, {3.887795001836006*^9, 3.8877950042740183`*^9}, {
  3.888482874055367*^9, 3.8884828742217617`*^9}, {3.888483396441649*^9, 
  3.8884833966620903`*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"fec470ac-a915-4e98-9c26-9ccab6f0c4f1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"StreamPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"DE", "[", 
        RowBox[{"wx", ",", "q", ",", "\[Epsilon]"}], "]"}], ",", 
       RowBox[{"DM", "[", "q", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"X", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Z", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"FrameLabel", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<x\>\"", ",", "\"\<Z\>\""}], "}"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"q", ",", "0", ",", "20", ",", 
     RowBox[{"Appearance", "->", "\"\<Open\>\""}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"wx", ",", 
     RowBox[{"-", "10"}], ",", "10", ",", 
     RowBox[{"Appearance", "->", "\"\<Open\>\""}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", ",", 
     RowBox[{"-", "2"}], ",", "2", ",", 
     RowBox[{"Appearance", "->", "\"\<Open\>\""}]}], "}"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.887805603837902*^9, 3.887805618135332*^9}, {
   3.888393765223463*^9, 3.888393765445427*^9}, {3.888393814103344*^9, 
   3.8883938142928047`*^9}, 3.8883940451420193`*^9, {3.888395081831902*^9, 
   3.8883950835654793`*^9}, {3.888395832251377*^9, 3.888395833249305*^9}, {
   3.8884016724295807`*^9, 3.888401692459043*^9}, {3.8884828785598*^9, 
   3.888482884647406*^9}, {3.888483403857115*^9, 3.888483405303738*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"6a2001da-6860-4a9a-b4e5-b85e4ccc40ef"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`q$$ = 
    1., $CellContext`wx$$ = -0.5, $CellContext`\[Epsilon]$$ = -0.25, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`q$$], 0, 20}, {
      Hold[$CellContext`wx$$], -10, 10}, {
      Hold[$CellContext`\[Epsilon]$$], -2, 2}}, Typeset`size$$ = {
    360., {176., 181.2578125}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`q$$ = 
        0, $CellContext`wx$$ = -10, $CellContext`\[Epsilon]$$ = -2}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> StreamPlot[{
         $CellContext`DE[$CellContext`wx$$, $CellContext`q$$, $CellContext`\
\[Epsilon]$$], 
         $CellContext`DM[$CellContext`q$$]}, {$CellContext`X, 0, 
         1}, {$CellContext`Z, 0, 1}, FrameLabel -> {"x", "Z"}], 
      "Specifications" :> {{$CellContext`q$$, 0, 20, Appearance -> 
         "Open"}, {$CellContext`wx$$, -10, 10, Appearance -> 
         "Open"}, {$CellContext`\[Epsilon]$$, -2, 2, Appearance -> "Open"}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{406., {276.6875, 282.3125}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.8884022048771677`*^9, 3.888480661467361*^9, 
  3.888481208348138*^9, 3.8884828857096167`*^9, 3.888483405605338*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"01cc928b-12ad-45bd-b956-4d7ca85eb229"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Compact x - y - z Phase Space", "Subsection",
 CellChangeTimes->{{3.888396757108968*^9, 3.888396789868569*^9}, {
   3.888481985157799*^9, 3.888481986677782*^9}, 
   3.888482084232766*^9},ExpressionUUID->"353a32bb-5c1a-4e89-9e55-\
16e9eb350d2c"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "Define", " ", "the", " ", "dynamical", " ", "system", " ", "for", " ", 
   "compact", " ", "interacting", " ", "dark", " ", "matter", " ", 
   RowBox[{"(", "Z", ")"}], " ", "and", " ", "dark", " ", "energy", " ", 
   RowBox[{"(", "X", ")"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.8884839129128857`*^9, 3.888483915546131*^9}, 
   3.88848501225203*^9},ExpressionUUID->"6546fc09-37b2-480e-b5e2-\
47b302487c5b"],

Cell[BoxData[{
 RowBox[{"deX", ":=", 
  RowBox[{
   RowBox[{"X", "'"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "3"}], "*", 
     RowBox[{"(", 
      RowBox[{"Y", "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"Y", "^", "2"}]}], ")"}], "^", 
         RowBox[{"(", 
          RowBox[{"1", "/", "2"}], ")"}]}], ")"}]}], ")"}], "*", "X", "*", 
     RowBox[{"(", 
      RowBox[{"1", "-", "X"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"1", "+", "wx", "+", 
       RowBox[{"\[Epsilon]", "*", 
        RowBox[{"(", 
         RowBox[{"X", "/", 
          RowBox[{"(", 
           RowBox[{"1", "-", "X"}], ")"}]}], ")"}]}]}], ")"}]}], "-", 
    RowBox[{"q", "*", "X", "*", 
     RowBox[{"(", 
      RowBox[{"1", "-", "X"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"Z", "/", 
       RowBox[{"(", 
        RowBox[{"1", "-", "Z"}], ")"}]}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"Y", "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"Y", "^", "2"}]}], ")"}], "^", 
         RowBox[{"(", 
          RowBox[{"1", "/", "2"}], ")"}]}], ")"}]}], 
      ")"}]}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{"deY", ":=", 
  RowBox[{
   RowBox[{"Y", "'"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      RowBox[{"Y", "^", "2"}]}], "*", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"Y", "^", "2"}]}], ")"}], "^", 
      RowBox[{"(", 
       RowBox[{"1", "/", "2"}], ")"}]}]}], "-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"Y", "^", "2"}]}], ")"}], "^", 
         RowBox[{"(", 
          RowBox[{"3", "/", "2"}], ")"}]}], ")"}], "/", "6"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"X", "/", 
         RowBox[{"(", 
          RowBox[{"1", "-", "X"}], ")"}]}], ")"}], "+", 
       RowBox[{"(", 
        RowBox[{"Z", "/", 
         RowBox[{"(", 
          RowBox[{"1", "-", "Z"}], ")"}]}], ")"}], "+", 
       RowBox[{"3", "*", "wx", "*", 
        RowBox[{"(", 
         RowBox[{"X", "/", 
          RowBox[{"(", 
           RowBox[{"1", "-", "X"}], ")"}]}], ")"}]}], "+", 
       RowBox[{"3", "*", "\[Epsilon]", "*", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"X", "^", "2"}], "/", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", "X"}], ")"}], "^", "2"}], ")"}]}], ")"}]}]}], 
      ")"}]}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{"deZ", ":=", 
  RowBox[{
   RowBox[{"Z", "'"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "3"}], "*", "Z", "*", 
     RowBox[{"(", 
      RowBox[{"1", "-", "Z"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"Y", "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"Y", "^", "2"}]}], ")"}], "^", 
         RowBox[{"(", 
          RowBox[{"1", "/", "2"}], ")"}]}], ")"}]}], ")"}]}], " ", "+", " ", 
    RowBox[{"q", "*", 
     RowBox[{"(", 
      RowBox[{"X", "/", 
       RowBox[{"(", 
        RowBox[{"1", "-", "X"}], ")"}]}], ")"}], "*", "Z", "*", 
     RowBox[{"(", 
      RowBox[{"1", "-", "Z"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"Y", "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"Y", "^", "2"}]}], ")"}], "^", 
         RowBox[{"(", 
          RowBox[{"1", "/", "2"}], ")"}]}], ")"}]}], ")"}]}]}]}]}]}], "Input",\

 CellChangeTimes->{{3.888483655935636*^9, 3.888483713447761*^9}, 
   3.888483887916707*^9, {3.8884941551339493`*^9, 3.888494157328888*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"8fd43000-0ebc-4665-99c1-a7637697916d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Find", " ", "the", " ", "fixed", " ", "points", " ", "of", " ", "the", 
    " ", "system"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"FPs", "=", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"deX", "==", "0"}], ",", 
       RowBox[{"deY", "==", "0"}], ",", 
       RowBox[{"deZ", "==", "0"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"X", ",", "Y", ",", "Z"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.867924266311984*^9, 3.867924270493926*^9}, 
   3.868943807877423*^9, {3.878639758179953*^9, 3.878639761499497*^9}, 
   3.878651528972577*^9, {3.8786516021307096`*^9, 3.878651604117207*^9}, 
   3.87871921821413*^9, {3.878816579965701*^9, 3.878816656202022*^9}, {
   3.878816724091421*^9, 3.8788167242418823`*^9}, {3.886593925365925*^9, 
   3.886593929997612*^9}, {3.8884838975143023`*^9, 3.888483907345714*^9}, {
   3.888484644999448*^9, 3.888484647508894*^9}, {3.888493373861292*^9, 
   3.888493375116663*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"f69a916a-b9de-4111-96d0-c8a296b47164"],

Cell[BoxData[
 TemplateBox[{
  "Solve", "svars", 
   "\"Equations may not give solutions for all \\\"solve\\\" variables.\"", 2,
    5, 1, 18333248129472315460, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.888494179550425*^9},
 CellLabel->
  "During evaluation of \
In[5]:=",ExpressionUUID->"5b95d598-92cb-4efc-99aa-77f2e294d078"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Y", "\[Rule]", "0"}], ",", 
     RowBox[{"Z", "\[Rule]", 
      FractionBox[
       RowBox[{"X", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "-", 
          RowBox[{"3", " ", "wx"}], "+", "X", "+", 
          RowBox[{"3", " ", "wx", " ", "X"}], "-", 
          RowBox[{"3", " ", "X", " ", "\[Epsilon]"}]}], ")"}]}], 
       RowBox[{"1", "-", 
        RowBox[{"3", " ", "X"}], "-", 
        RowBox[{"3", " ", "wx", " ", "X"}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["X", "2"]}], "+", 
        RowBox[{"3", " ", "wx", " ", 
         SuperscriptBox["X", "2"]}], "-", 
        RowBox[{"3", " ", 
         SuperscriptBox["X", "2"], " ", "\[Epsilon]"}]}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"X", "\[Rule]", "0"}], ",", 
     RowBox[{"Y", "\[Rule]", "0"}], ",", 
     RowBox[{"Z", "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"X", "\[Rule]", 
      FractionBox[
       RowBox[{"1", "+", 
        RowBox[{"3", " ", "wx"}]}], 
       RowBox[{"1", "+", 
        RowBox[{"3", " ", "wx"}], "-", 
        RowBox[{"3", " ", "\[Epsilon]"}]}]]}], ",", 
     RowBox[{"Y", "\[Rule]", "0"}], ",", 
     RowBox[{"Z", "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"X", "\[Rule]", 
      FractionBox[
       RowBox[{"1", "+", "wx"}], 
       RowBox[{"1", "+", "wx", "-", "\[Epsilon]"}]]}], ",", 
     RowBox[{"Y", "\[Rule]", 
      RowBox[{"-", 
       FractionBox[
        SqrtBox[
         RowBox[{"1", "+", "wx"}]], 
        SqrtBox[
         RowBox[{"1", "+", "wx", "-", 
          RowBox[{"3", " ", "\[Epsilon]"}]}]]]}]}], ",", 
     RowBox[{"Z", "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"X", "\[Rule]", 
      FractionBox[
       RowBox[{"1", "+", "wx"}], 
       RowBox[{"1", "+", "wx", "-", "\[Epsilon]"}]]}], ",", 
     RowBox[{"Y", "\[Rule]", 
      FractionBox[
       SqrtBox[
        RowBox[{"1", "+", "wx"}]], 
       SqrtBox[
        RowBox[{"1", "+", "wx", "-", 
         RowBox[{"3", " ", "\[Epsilon]"}]}]]]}], ",", 
     RowBox[{"Z", "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"X", "\[Rule]", 
      FractionBox["3", 
       RowBox[{"3", "+", "q"}]]}], ",", 
     RowBox[{"Y", "\[Rule]", 
      RowBox[{"-", 
       FractionBox[
        SqrtBox[
         RowBox[{
          RowBox[{
           RowBox[{"-", "q"}], " ", "wx"}], "-", 
          RowBox[{"3", " ", "\[Epsilon]"}]}]], 
        SqrtBox[
         RowBox[{
          SuperscriptBox["q", "2"], "-", 
          RowBox[{"q", " ", "wx"}], "-", 
          RowBox[{"3", " ", "\[Epsilon]"}]}]]]}]}], ",", 
     RowBox[{"Z", "\[Rule]", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"3", " ", 
         RowBox[{"(", 
          RowBox[{"q", "+", 
           RowBox[{"q", " ", "wx"}], "+", 
           RowBox[{"3", " ", "\[Epsilon]"}]}], ")"}]}], 
        RowBox[{
         RowBox[{
          RowBox[{"-", "3"}], " ", "q"}], "+", 
         SuperscriptBox["q", "2"], "-", 
         RowBox[{"3", " ", "q", " ", "wx"}], "-", 
         RowBox[{"9", " ", "\[Epsilon]"}]}]]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"X", "\[Rule]", 
      FractionBox["3", 
       RowBox[{"3", "+", "q"}]]}], ",", 
     RowBox[{"Y", "\[Rule]", 
      FractionBox[
       SqrtBox[
        RowBox[{
         RowBox[{
          RowBox[{"-", "q"}], " ", "wx"}], "-", 
         RowBox[{"3", " ", "\[Epsilon]"}]}]], 
       SqrtBox[
        RowBox[{
         SuperscriptBox["q", "2"], "-", 
         RowBox[{"q", " ", "wx"}], "-", 
         RowBox[{"3", " ", "\[Epsilon]"}]}]]]}], ",", 
     RowBox[{"Z", "\[Rule]", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"3", " ", 
         RowBox[{"(", 
          RowBox[{"q", "+", 
           RowBox[{"q", " ", "wx"}], "+", 
           RowBox[{"3", " ", "\[Epsilon]"}]}], ")"}]}], 
        RowBox[{
         RowBox[{
          RowBox[{"-", "3"}], " ", "q"}], "+", 
         SuperscriptBox["q", "2"], "-", 
         RowBox[{"3", " ", "q", " ", "wx"}], "-", 
         RowBox[{"9", " ", "\[Epsilon]"}]}]]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"X", "\[Rule]", 
      FractionBox["3", 
       RowBox[{"3", "+", "q"}]]}], ",", 
     RowBox[{"Y", "\[Rule]", "0"}], ",", 
     RowBox[{"Z", "\[Rule]", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"3", " ", 
         RowBox[{"(", 
          RowBox[{"q", "+", 
           RowBox[{"3", " ", "q", " ", "wx"}], "+", 
           RowBox[{"9", " ", "\[Epsilon]"}]}], ")"}]}], 
        RowBox[{
         RowBox[{
          RowBox[{"-", "3"}], " ", "q"}], "+", 
         SuperscriptBox["q", "2"], "-", 
         RowBox[{"9", " ", "q", " ", "wx"}], "-", 
         RowBox[{"27", " ", "\[Epsilon]"}]}]]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"X", "\[Rule]", 
      FractionBox[
       RowBox[{"6", "+", "q", "+", 
        RowBox[{"6", " ", "wx"}], "+", 
        RowBox[{"3", " ", "q", " ", "wx"}], "-", 
        RowBox[{"3", " ", "\[Epsilon]"}], "+", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["q", "2"], "+", 
          RowBox[{"6", " ", 
           SuperscriptBox["q", "2"], " ", "wx"}], "+", 
          RowBox[{"9", " ", 
           SuperscriptBox["q", "2"], " ", 
           SuperscriptBox["wx", "2"]}], "+", 
          RowBox[{"30", " ", "q", " ", "\[Epsilon]"}], "+", 
          RowBox[{"18", " ", "q", " ", "wx", " ", "\[Epsilon]"}], "+", 
          RowBox[{"9", " ", 
           SuperscriptBox["\[Epsilon]", "2"]}]}]]}], 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{"3", "+", "q", "+", 
          RowBox[{"3", " ", "wx"}], "+", 
          RowBox[{"3", " ", "q", " ", "wx"}], "-", 
          RowBox[{"3", " ", "\[Epsilon]"}], "-", 
          RowBox[{"3", " ", "q", " ", "\[Epsilon]"}]}], ")"}]}]]}], ",", 
     RowBox[{"Y", "\[Rule]", "0"}], ",", 
     RowBox[{"Z", "\[Rule]", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"6", "-", 
         RowBox[{"5", " ", "q"}], "+", 
         SuperscriptBox["q", "2"], "+", 
         RowBox[{"6", " ", "wx"}], "-", 
         RowBox[{"3", " ", "q", " ", "wx"}], "-", 
         RowBox[{"3", " ", "\[Epsilon]"}]}]], 
       RowBox[{"(", 
        RowBox[{"3", "-", 
         RowBox[{"3", " ", "q"}], "+", 
         RowBox[{"3", " ", "wx"}], "-", 
         RowBox[{"3", " ", "q", " ", "wx"}], "+", 
         FractionBox["9", 
          RowBox[{"3", "+", "q", "+", 
           RowBox[{"3", " ", "wx"}], "+", 
           RowBox[{"3", " ", "q", " ", "wx"}], "-", 
           RowBox[{"3", " ", "\[Epsilon]"}], "-", 
           RowBox[{"3", " ", "q", " ", "\[Epsilon]"}]}]], "+", 
         FractionBox[
          RowBox[{"9", " ", "q"}], 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"3", "+", "q", "+", 
             RowBox[{"3", " ", "wx"}], "+", 
             RowBox[{"3", " ", "q", " ", "wx"}], "-", 
             RowBox[{"3", " ", "\[Epsilon]"}], "-", 
             RowBox[{"3", " ", "q", " ", "\[Epsilon]"}]}], ")"}]}]], "+", 
         FractionBox[
          SuperscriptBox["q", "2"], 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"3", "+", "q", "+", 
             RowBox[{"3", " ", "wx"}], "+", 
             RowBox[{"3", " ", "q", " ", "wx"}], "-", 
             RowBox[{"3", " ", "\[Epsilon]"}], "-", 
             RowBox[{"3", " ", "q", " ", "\[Epsilon]"}]}], ")"}]}]], "+", 
         FractionBox[
          RowBox[{"18", " ", "wx"}], 
          RowBox[{"3", "+", "q", "+", 
           RowBox[{"3", " ", "wx"}], "+", 
           RowBox[{"3", " ", "q", " ", "wx"}], "-", 
           RowBox[{"3", " ", "\[Epsilon]"}], "-", 
           RowBox[{"3", " ", "q", " ", "\[Epsilon]"}]}]], "+", 
         FractionBox[
          RowBox[{"18", " ", "q", " ", "wx"}], 
          RowBox[{"3", "+", "q", "+", 
           RowBox[{"3", " ", "wx"}], "+", 
           RowBox[{"3", " ", "q", " ", "wx"}], "-", 
           RowBox[{"3", " ", "\[Epsilon]"}], "-", 
           RowBox[{"3", " ", "q", " ", "\[Epsilon]"}]}]], "+", 
         FractionBox[
          RowBox[{"3", " ", 
           SuperscriptBox["q", "2"], " ", "wx"}], 
          RowBox[{"3", "+", "q", "+", 
           RowBox[{"3", " ", "wx"}], "+", 
           RowBox[{"3", " ", "q", " ", "wx"}], "-", 
           RowBox[{"3", " ", "\[Epsilon]"}], "-", 
           RowBox[{"3", " ", "q", " ", "\[Epsilon]"}]}]], "+", 
         FractionBox[
          RowBox[{"9", " ", 
           SuperscriptBox["wx", "2"]}], 
          RowBox[{"3", "+", "q", "+", 
           RowBox[{"3", " ", "wx"}], "+", 
           RowBox[{"3", " ", "q", " ", "wx"}], "-", 
           RowBox[{"3", " ", "\[Epsilon]"}], "-", 
           RowBox[{"3", " ", "q", " ", "\[Epsilon]"}]}]], "+", 
         FractionBox[
          RowBox[{"27", " ", "q", " ", 
           SuperscriptBox["wx", "2"]}], 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"3", "+", "q", "+", 
             RowBox[{"3", " ", "wx"}], "+", 
             RowBox[{"3", " ", "q", " ", "wx"}], "-", 
             RowBox[{"3", " ", "\[Epsilon]"}], "-", 
             RowBox[{"3", " ", "q", " ", "\[Epsilon]"}]}], ")"}]}]], "+", 
         FractionBox[
          RowBox[{"9", " ", 
           SuperscriptBox["q", "2"], " ", 
           SuperscriptBox["wx", "2"]}], 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"3", "+", "q", "+", 
             RowBox[{"3", " ", "wx"}], "+", 
             RowBox[{"3", " ", "q", " ", "wx"}], "-", 
             RowBox[{"3", " ", "\[Epsilon]"}], "-", 
             RowBox[{"3", " ", "q", " ", "\[Epsilon]"}]}], ")"}]}]], "-", 
         FractionBox[
          RowBox[{"27", " ", "\[Epsilon]"}], 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"3", "+", "q", "+", 
             RowBox[{"3", " ", "wx"}], "+", 
             RowBox[{"3", " ", "q", " ", "wx"}], "-", 
             RowBox[{"3", " ", "\[Epsilon]"}], "-", 
             RowBox[{"3", " ", "q", " ", "\[Epsilon]"}]}], ")"}]}]], "-", 
         FractionBox[
          RowBox[{"12", " ", "q", " ", "\[Epsilon]"}], 
          RowBox[{"3", "+", "q", "+", 
           RowBox[{"3", " ", "wx"}], "+", 
           RowBox[{"3", " ", "q", " ", "wx"}], "-", 
           RowBox[{"3", " ", "\[Epsilon]"}], "-", 
           RowBox[{"3", " ", "q", " ", "\[Epsilon]"}]}]], "-", 
         FractionBox[
          RowBox[{"3", " ", 
           SuperscriptBox["q", "2"], " ", "\[Epsilon]"}], 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"3", "+", "q", "+", 
             RowBox[{"3", " ", "wx"}], "+", 
             RowBox[{"3", " ", "q", " ", "wx"}], "-", 
             RowBox[{"3", " ", "\[Epsilon]"}], "-", 
             RowBox[{"3", " ", "q", " ", "\[Epsilon]"}]}], ")"}]}]], "-", 
         FractionBox[
          RowBox[{"27", " ", "wx", " ", "\[Epsilon]"}], 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"3", "+", "q", "+", 
             RowBox[{"3", " ", "wx"}], "+", 
             RowBox[{"3", " ", "q", " ", "wx"}], "-", 
             RowBox[{"3", " ", "\[Epsilon]"}], "-", 
             RowBox[{"3", " ", "q", " ", "\[Epsilon]"}]}], ")"}]}]], "-", 
         FractionBox[
          RowBox[{"18", " ", "q", " ", "wx", " ", "\[Epsilon]"}], 
          RowBox[{"3", "+", "q", "+", 
           RowBox[{"3", " ", "wx"}], "+", 
           RowBox[{"3", " ", "q", " ", "wx"}], "-", 
           RowBox[{"3", " ", "\[Epsilon]"}], "-", 
           RowBox[{"3", " ", "q", " ", "\[Epsilon]"}]}]], "-", 
         FractionBox[
          RowBox[{"9", " ", 
           SuperscriptBox["q", "2"], " ", "wx", " ", "\[Epsilon]"}], 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"3", "+", "q", "+", 
             RowBox[{"3", " ", "wx"}], "+", 
             RowBox[{"3", " ", "q", " ", "wx"}], "-", 
             RowBox[{"3", " ", "\[Epsilon]"}], "-", 
             RowBox[{"3", " ", "q", " ", "\[Epsilon]"}]}], ")"}]}]], "+", 
         FractionBox[
          RowBox[{"9", " ", 
           SuperscriptBox["\[Epsilon]", "2"]}], 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"3", "+", "q", "+", 
             RowBox[{"3", " ", "wx"}], "+", 
             RowBox[{"3", " ", "q", " ", "wx"}], "-", 
             RowBox[{"3", " ", "\[Epsilon]"}], "-", 
             RowBox[{"3", " ", "q", " ", "\[Epsilon]"}]}], ")"}]}]], "+", 
         FractionBox[
          RowBox[{"9", " ", "q", " ", 
           SuperscriptBox["\[Epsilon]", "2"]}], 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"3", "+", "q", "+", 
             RowBox[{"3", " ", "wx"}], "+", 
             RowBox[{"3", " ", "q", " ", "wx"}], "-", 
             RowBox[{"3", " ", "\[Epsilon]"}], "-", 
             RowBox[{"3", " ", "q", " ", "\[Epsilon]"}]}], ")"}]}]], "+", 
         FractionBox[
          RowBox[{"3", " ", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["q", "2"], "+", 
             RowBox[{"6", " ", 
              SuperscriptBox["q", "2"], " ", "wx"}], "+", 
             RowBox[{"9", " ", 
              SuperscriptBox["q", "2"], " ", 
              SuperscriptBox["wx", "2"]}], "+", 
             RowBox[{"30", " ", "q", " ", "\[Epsilon]"}], "+", 
             RowBox[{"18", " ", "q", " ", "wx", " ", "\[Epsilon]"}], "+", 
             RowBox[{"9", " ", 
              SuperscriptBox["\[Epsilon]", "2"]}]}]]}], 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"3", "+", "q", "+", 
             RowBox[{"3", " ", "wx"}], "+", 
             RowBox[{"3", " ", "q", " ", "wx"}], "-", 
             RowBox[{"3", " ", "\[Epsilon]"}], "-", 
             RowBox[{"3", " ", "q", " ", "\[Epsilon]"}]}], ")"}]}]], "+", 
         FractionBox[
          RowBox[{"q", " ", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["q", "2"], "+", 
             RowBox[{"6", " ", 
              SuperscriptBox["q", "2"], " ", "wx"}], "+", 
             RowBox[{"9", " ", 
              SuperscriptBox["q", "2"], " ", 
              SuperscriptBox["wx", "2"]}], "+", 
             RowBox[{"30", " ", "q", " ", "\[Epsilon]"}], "+", 
             RowBox[{"18", " ", "q", " ", "wx", " ", "\[Epsilon]"}], "+", 
             RowBox[{"9", " ", 
              SuperscriptBox["\[Epsilon]", "2"]}]}]]}], 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"3", "+", "q", "+", 
             RowBox[{"3", " ", "wx"}], "+", 
             RowBox[{"3", " ", "q", " ", "wx"}], "-", 
             RowBox[{"3", " ", "\[Epsilon]"}], "-", 
             RowBox[{"3", " ", "q", " ", "\[Epsilon]"}]}], ")"}]}]], "+", 
         FractionBox[
          RowBox[{"3", " ", "wx", " ", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["q", "2"], "+", 
             RowBox[{"6", " ", 
              SuperscriptBox["q", "2"], " ", "wx"}], "+", 
             RowBox[{"9", " ", 
              SuperscriptBox["q", "2"], " ", 
              SuperscriptBox["wx", "2"]}], "+", 
             RowBox[{"30", " ", "q", " ", "\[Epsilon]"}], "+", 
             RowBox[{"18", " ", "q", " ", "wx", " ", "\[Epsilon]"}], "+", 
             RowBox[{"9", " ", 
              SuperscriptBox["\[Epsilon]", "2"]}]}]]}], 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"3", "+", "q", "+", 
             RowBox[{"3", " ", "wx"}], "+", 
             RowBox[{"3", " ", "q", " ", "wx"}], "-", 
             RowBox[{"3", " ", "\[Epsilon]"}], "-", 
             RowBox[{"3", " ", "q", " ", "\[Epsilon]"}]}], ")"}]}]], "+", 
         FractionBox[
          RowBox[{"3", " ", "q", " ", "wx", " ", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["q", "2"], "+", 
             RowBox[{"6", " ", 
              SuperscriptBox["q", "2"], " ", "wx"}], "+", 
             RowBox[{"9", " ", 
              SuperscriptBox["q", "2"], " ", 
              SuperscriptBox["wx", "2"]}], "+", 
             RowBox[{"30", " ", "q", " ", "\[Epsilon]"}], "+", 
             RowBox[{"18", " ", "q", " ", "wx", " ", "\[Epsilon]"}], "+", 
             RowBox[{"9", " ", 
              SuperscriptBox["\[Epsilon]", "2"]}]}]]}], 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"3", "+", "q", "+", 
             RowBox[{"3", " ", "wx"}], "+", 
             RowBox[{"3", " ", "q", " ", "wx"}], "-", 
             RowBox[{"3", " ", "\[Epsilon]"}], "-", 
             RowBox[{"3", " ", "q", " ", "\[Epsilon]"}]}], ")"}]}]], "-", 
         FractionBox[
          RowBox[{"3", " ", "\[Epsilon]", " ", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["q", "2"], "+", 
             RowBox[{"6", " ", 
              SuperscriptBox["q", "2"], " ", "wx"}], "+", 
             RowBox[{"9", " ", 
              SuperscriptBox["q", "2"], " ", 
              SuperscriptBox["wx", "2"]}], "+", 
             RowBox[{"30", " ", "q", " ", "\[Epsilon]"}], "+", 
             RowBox[{"18", " ", "q", " ", "wx", " ", "\[Epsilon]"}], "+", 
             RowBox[{"9", " ", 
              SuperscriptBox["\[Epsilon]", "2"]}]}]]}], 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"3", "+", "q", "+", 
             RowBox[{"3", " ", "wx"}], "+", 
             RowBox[{"3", " ", "q", " ", "wx"}], "-", 
             RowBox[{"3", " ", "\[Epsilon]"}], "-", 
             RowBox[{"3", " ", "q", " ", "\[Epsilon]"}]}], ")"}]}]], "-", 
         FractionBox[
          RowBox[{"3", " ", "q", " ", "\[Epsilon]", " ", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["q", "2"], "+", 
             RowBox[{"6", " ", 
              SuperscriptBox["q", "2"], " ", "wx"}], "+", 
             RowBox[{"9", " ", 
              SuperscriptBox["q", "2"], " ", 
              SuperscriptBox["wx", "2"]}], "+", 
             RowBox[{"30", " ", "q", " ", "\[Epsilon]"}], "+", 
             RowBox[{"18", " ", "q", " ", "wx", " ", "\[Epsilon]"}], "+", 
             RowBox[{"9", " ", 
              SuperscriptBox["\[Epsilon]", "2"]}]}]]}], 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"3", "+", "q", "+", 
             RowBox[{"3", " ", "wx"}], "+", 
             RowBox[{"3", " ", "q", " ", "wx"}], "-", 
             RowBox[{"3", " ", "\[Epsilon]"}], "-", 
             RowBox[{"3", " ", "q", " ", "\[Epsilon]"}]}], ")"}]}]]}], 
        ")"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"X", "\[Rule]", 
      FractionBox[
       RowBox[{"6", "+", "q", "+", 
        RowBox[{"6", " ", "wx"}], "+", 
        RowBox[{"3", " ", "q", " ", "wx"}], "-", 
        RowBox[{"3", " ", "\[Epsilon]"}], "-", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["q", "2"], "+", 
          RowBox[{"6", " ", 
           SuperscriptBox["q", "2"], " ", "wx"}], "+", 
          RowBox[{"9", " ", 
           SuperscriptBox["q", "2"], " ", 
           SuperscriptBox["wx", "2"]}], "+", 
          RowBox[{"30", " ", "q", " ", "\[Epsilon]"}], "+", 
          RowBox[{"18", " ", "q", " ", "wx", " ", "\[Epsilon]"}], "+", 
          RowBox[{"9", " ", 
           SuperscriptBox["\[Epsilon]", "2"]}]}]]}], 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{"3", "+", "q", "+", 
          RowBox[{"3", " ", "wx"}], "+", 
          RowBox[{"3", " ", "q", " ", "wx"}], "-", 
          RowBox[{"3", " ", "\[Epsilon]"}], "-", 
          RowBox[{"3", " ", "q", " ", "\[Epsilon]"}]}], ")"}]}]]}], ",", 
     RowBox[{"Y", "\[Rule]", "0"}], ",", 
     RowBox[{"Z", "\[Rule]", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"6", "-", 
         RowBox[{"5", " ", "q"}], "+", 
         SuperscriptBox["q", "2"], "+", 
         RowBox[{"6", " ", "wx"}], "-", 
         RowBox[{"3", " ", "q", " ", "wx"}], "-", 
         RowBox[{"3", " ", "\[Epsilon]"}]}]], 
       RowBox[{"(", 
        RowBox[{"3", "-", 
         RowBox[{"3", " ", "q"}], "+", 
         RowBox[{"3", " ", "wx"}], "-", 
         RowBox[{"3", " ", "q", " ", "wx"}], "+", 
         FractionBox["9", 
          RowBox[{"3", "+", "q", "+", 
           RowBox[{"3", " ", "wx"}], "+", 
           RowBox[{"3", " ", "q", " ", "wx"}], "-", 
           RowBox[{"3", " ", "\[Epsilon]"}], "-", 
           RowBox[{"3", " ", "q", " ", "\[Epsilon]"}]}]], "+", 
         FractionBox[
          RowBox[{"9", " ", "q"}], 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"3", "+", "q", "+", 
             RowBox[{"3", " ", "wx"}], "+", 
             RowBox[{"3", " ", "q", " ", "wx"}], "-", 
             RowBox[{"3", " ", "\[Epsilon]"}], "-", 
             RowBox[{"3", " ", "q", " ", "\[Epsilon]"}]}], ")"}]}]], "+", 
         FractionBox[
          SuperscriptBox["q", "2"], 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"3", "+", "q", "+", 
             RowBox[{"3", " ", "wx"}], "+", 
             RowBox[{"3", " ", "q", " ", "wx"}], "-", 
             RowBox[{"3", " ", "\[Epsilon]"}], "-", 
             RowBox[{"3", " ", "q", " ", "\[Epsilon]"}]}], ")"}]}]], "+", 
         FractionBox[
          RowBox[{"18", " ", "wx"}], 
          RowBox[{"3", "+", "q", "+", 
           RowBox[{"3", " ", "wx"}], "+", 
           RowBox[{"3", " ", "q", " ", "wx"}], "-", 
           RowBox[{"3", " ", "\[Epsilon]"}], "-", 
           RowBox[{"3", " ", "q", " ", "\[Epsilon]"}]}]], "+", 
         FractionBox[
          RowBox[{"18", " ", "q", " ", "wx"}], 
          RowBox[{"3", "+", "q", "+", 
           RowBox[{"3", " ", "wx"}], "+", 
           RowBox[{"3", " ", "q", " ", "wx"}], "-", 
           RowBox[{"3", " ", "\[Epsilon]"}], "-", 
           RowBox[{"3", " ", "q", " ", "\[Epsilon]"}]}]], "+", 
         FractionBox[
          RowBox[{"3", " ", 
           SuperscriptBox["q", "2"], " ", "wx"}], 
          RowBox[{"3", "+", "q", "+", 
           RowBox[{"3", " ", "wx"}], "+", 
           RowBox[{"3", " ", "q", " ", "wx"}], "-", 
           RowBox[{"3", " ", "\[Epsilon]"}], "-", 
           RowBox[{"3", " ", "q", " ", "\[Epsilon]"}]}]], "+", 
         FractionBox[
          RowBox[{"9", " ", 
           SuperscriptBox["wx", "2"]}], 
          RowBox[{"3", "+", "q", "+", 
           RowBox[{"3", " ", "wx"}], "+", 
           RowBox[{"3", " ", "q", " ", "wx"}], "-", 
           RowBox[{"3", " ", "\[Epsilon]"}], "-", 
           RowBox[{"3", " ", "q", " ", "\[Epsilon]"}]}]], "+", 
         FractionBox[
          RowBox[{"27", " ", "q", " ", 
           SuperscriptBox["wx", "2"]}], 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"3", "+", "q", "+", 
             RowBox[{"3", " ", "wx"}], "+", 
             RowBox[{"3", " ", "q", " ", "wx"}], "-", 
             RowBox[{"3", " ", "\[Epsilon]"}], "-", 
             RowBox[{"3", " ", "q", " ", "\[Epsilon]"}]}], ")"}]}]], "+", 
         FractionBox[
          RowBox[{"9", " ", 
           SuperscriptBox["q", "2"], " ", 
           SuperscriptBox["wx", "2"]}], 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"3", "+", "q", "+", 
             RowBox[{"3", " ", "wx"}], "+", 
             RowBox[{"3", " ", "q", " ", "wx"}], "-", 
             RowBox[{"3", " ", "\[Epsilon]"}], "-", 
             RowBox[{"3", " ", "q", " ", "\[Epsilon]"}]}], ")"}]}]], "-", 
         FractionBox[
          RowBox[{"27", " ", "\[Epsilon]"}], 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"3", "+", "q", "+", 
             RowBox[{"3", " ", "wx"}], "+", 
             RowBox[{"3", " ", "q", " ", "wx"}], "-", 
             RowBox[{"3", " ", "\[Epsilon]"}], "-", 
             RowBox[{"3", " ", "q", " ", "\[Epsilon]"}]}], ")"}]}]], "-", 
         FractionBox[
          RowBox[{"12", " ", "q", " ", "\[Epsilon]"}], 
          RowBox[{"3", "+", "q", "+", 
           RowBox[{"3", " ", "wx"}], "+", 
           RowBox[{"3", " ", "q", " ", "wx"}], "-", 
           RowBox[{"3", " ", "\[Epsilon]"}], "-", 
           RowBox[{"3", " ", "q", " ", "\[Epsilon]"}]}]], "-", 
         FractionBox[
          RowBox[{"3", " ", 
           SuperscriptBox["q", "2"], " ", "\[Epsilon]"}], 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"3", "+", "q", "+", 
             RowBox[{"3", " ", "wx"}], "+", 
             RowBox[{"3", " ", "q", " ", "wx"}], "-", 
             RowBox[{"3", " ", "\[Epsilon]"}], "-", 
             RowBox[{"3", " ", "q", " ", "\[Epsilon]"}]}], ")"}]}]], "-", 
         FractionBox[
          RowBox[{"27", " ", "wx", " ", "\[Epsilon]"}], 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"3", "+", "q", "+", 
             RowBox[{"3", " ", "wx"}], "+", 
             RowBox[{"3", " ", "q", " ", "wx"}], "-", 
             RowBox[{"3", " ", "\[Epsilon]"}], "-", 
             RowBox[{"3", " ", "q", " ", "\[Epsilon]"}]}], ")"}]}]], "-", 
         FractionBox[
          RowBox[{"18", " ", "q", " ", "wx", " ", "\[Epsilon]"}], 
          RowBox[{"3", "+", "q", "+", 
           RowBox[{"3", " ", "wx"}], "+", 
           RowBox[{"3", " ", "q", " ", "wx"}], "-", 
           RowBox[{"3", " ", "\[Epsilon]"}], "-", 
           RowBox[{"3", " ", "q", " ", "\[Epsilon]"}]}]], "-", 
         FractionBox[
          RowBox[{"9", " ", 
           SuperscriptBox["q", "2"], " ", "wx", " ", "\[Epsilon]"}], 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"3", "+", "q", "+", 
             RowBox[{"3", " ", "wx"}], "+", 
             RowBox[{"3", " ", "q", " ", "wx"}], "-", 
             RowBox[{"3", " ", "\[Epsilon]"}], "-", 
             RowBox[{"3", " ", "q", " ", "\[Epsilon]"}]}], ")"}]}]], "+", 
         FractionBox[
          RowBox[{"9", " ", 
           SuperscriptBox["\[Epsilon]", "2"]}], 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"3", "+", "q", "+", 
             RowBox[{"3", " ", "wx"}], "+", 
             RowBox[{"3", " ", "q", " ", "wx"}], "-", 
             RowBox[{"3", " ", "\[Epsilon]"}], "-", 
             RowBox[{"3", " ", "q", " ", "\[Epsilon]"}]}], ")"}]}]], "+", 
         FractionBox[
          RowBox[{"9", " ", "q", " ", 
           SuperscriptBox["\[Epsilon]", "2"]}], 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"3", "+", "q", "+", 
             RowBox[{"3", " ", "wx"}], "+", 
             RowBox[{"3", " ", "q", " ", "wx"}], "-", 
             RowBox[{"3", " ", "\[Epsilon]"}], "-", 
             RowBox[{"3", " ", "q", " ", "\[Epsilon]"}]}], ")"}]}]], "-", 
         FractionBox[
          RowBox[{"3", " ", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["q", "2"], "+", 
             RowBox[{"6", " ", 
              SuperscriptBox["q", "2"], " ", "wx"}], "+", 
             RowBox[{"9", " ", 
              SuperscriptBox["q", "2"], " ", 
              SuperscriptBox["wx", "2"]}], "+", 
             RowBox[{"30", " ", "q", " ", "\[Epsilon]"}], "+", 
             RowBox[{"18", " ", "q", " ", "wx", " ", "\[Epsilon]"}], "+", 
             RowBox[{"9", " ", 
              SuperscriptBox["\[Epsilon]", "2"]}]}]]}], 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"3", "+", "q", "+", 
             RowBox[{"3", " ", "wx"}], "+", 
             RowBox[{"3", " ", "q", " ", "wx"}], "-", 
             RowBox[{"3", " ", "\[Epsilon]"}], "-", 
             RowBox[{"3", " ", "q", " ", "\[Epsilon]"}]}], ")"}]}]], "-", 
         FractionBox[
          RowBox[{"q", " ", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["q", "2"], "+", 
             RowBox[{"6", " ", 
              SuperscriptBox["q", "2"], " ", "wx"}], "+", 
             RowBox[{"9", " ", 
              SuperscriptBox["q", "2"], " ", 
              SuperscriptBox["wx", "2"]}], "+", 
             RowBox[{"30", " ", "q", " ", "\[Epsilon]"}], "+", 
             RowBox[{"18", " ", "q", " ", "wx", " ", "\[Epsilon]"}], "+", 
             RowBox[{"9", " ", 
              SuperscriptBox["\[Epsilon]", "2"]}]}]]}], 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"3", "+", "q", "+", 
             RowBox[{"3", " ", "wx"}], "+", 
             RowBox[{"3", " ", "q", " ", "wx"}], "-", 
             RowBox[{"3", " ", "\[Epsilon]"}], "-", 
             RowBox[{"3", " ", "q", " ", "\[Epsilon]"}]}], ")"}]}]], "-", 
         FractionBox[
          RowBox[{"3", " ", "wx", " ", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["q", "2"], "+", 
             RowBox[{"6", " ", 
              SuperscriptBox["q", "2"], " ", "wx"}], "+", 
             RowBox[{"9", " ", 
              SuperscriptBox["q", "2"], " ", 
              SuperscriptBox["wx", "2"]}], "+", 
             RowBox[{"30", " ", "q", " ", "\[Epsilon]"}], "+", 
             RowBox[{"18", " ", "q", " ", "wx", " ", "\[Epsilon]"}], "+", 
             RowBox[{"9", " ", 
              SuperscriptBox["\[Epsilon]", "2"]}]}]]}], 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"3", "+", "q", "+", 
             RowBox[{"3", " ", "wx"}], "+", 
             RowBox[{"3", " ", "q", " ", "wx"}], "-", 
             RowBox[{"3", " ", "\[Epsilon]"}], "-", 
             RowBox[{"3", " ", "q", " ", "\[Epsilon]"}]}], ")"}]}]], "-", 
         FractionBox[
          RowBox[{"3", " ", "q", " ", "wx", " ", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["q", "2"], "+", 
             RowBox[{"6", " ", 
              SuperscriptBox["q", "2"], " ", "wx"}], "+", 
             RowBox[{"9", " ", 
              SuperscriptBox["q", "2"], " ", 
              SuperscriptBox["wx", "2"]}], "+", 
             RowBox[{"30", " ", "q", " ", "\[Epsilon]"}], "+", 
             RowBox[{"18", " ", "q", " ", "wx", " ", "\[Epsilon]"}], "+", 
             RowBox[{"9", " ", 
              SuperscriptBox["\[Epsilon]", "2"]}]}]]}], 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"3", "+", "q", "+", 
             RowBox[{"3", " ", "wx"}], "+", 
             RowBox[{"3", " ", "q", " ", "wx"}], "-", 
             RowBox[{"3", " ", "\[Epsilon]"}], "-", 
             RowBox[{"3", " ", "q", " ", "\[Epsilon]"}]}], ")"}]}]], "+", 
         FractionBox[
          RowBox[{"3", " ", "\[Epsilon]", " ", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["q", "2"], "+", 
             RowBox[{"6", " ", 
              SuperscriptBox["q", "2"], " ", "wx"}], "+", 
             RowBox[{"9", " ", 
              SuperscriptBox["q", "2"], " ", 
              SuperscriptBox["wx", "2"]}], "+", 
             RowBox[{"30", " ", "q", " ", "\[Epsilon]"}], "+", 
             RowBox[{"18", " ", "q", " ", "wx", " ", "\[Epsilon]"}], "+", 
             RowBox[{"9", " ", 
              SuperscriptBox["\[Epsilon]", "2"]}]}]]}], 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"3", "+", "q", "+", 
             RowBox[{"3", " ", "wx"}], "+", 
             RowBox[{"3", " ", "q", " ", "wx"}], "-", 
             RowBox[{"3", " ", "\[Epsilon]"}], "-", 
             RowBox[{"3", " ", "q", " ", "\[Epsilon]"}]}], ")"}]}]], "+", 
         FractionBox[
          RowBox[{"3", " ", "q", " ", "\[Epsilon]", " ", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["q", "2"], "+", 
             RowBox[{"6", " ", 
              SuperscriptBox["q", "2"], " ", "wx"}], "+", 
             RowBox[{"9", " ", 
              SuperscriptBox["q", "2"], " ", 
              SuperscriptBox["wx", "2"]}], "+", 
             RowBox[{"30", " ", "q", " ", "\[Epsilon]"}], "+", 
             RowBox[{"18", " ", "q", " ", "wx", " ", "\[Epsilon]"}], "+", 
             RowBox[{"9", " ", 
              SuperscriptBox["\[Epsilon]", "2"]}]}]]}], 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"3", "+", "q", "+", 
             RowBox[{"3", " ", "wx"}], "+", 
             RowBox[{"3", " ", "q", " ", "wx"}], "-", 
             RowBox[{"3", " ", "\[Epsilon]"}], "-", 
             RowBox[{"3", " ", "q", " ", "\[Epsilon]"}]}], ")"}]}]]}], 
        ")"}]}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.888493375690978*^9, {3.888494167959641*^9, 3.8884941795630503`*^9}},
 CellLabel->"Out[5]=",ExpressionUUID->"38786507-c557-4fdc-9805-350691fe66ae"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Remove", " ", "arrows", " ", "from", " ", "fixed", " ", "points", " ", 
    "and", " ", "put", " ", "them", " ", "into", " ", "a", " ", "common", " ",
     "variable", " ", "name"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"FP", "[", "1", "]"}], "=", 
     RowBox[{"{", 
      RowBox[{"X", ",", 
       RowBox[{"Y", "/.", 
        RowBox[{"FPs", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ",", 
       RowBox[{"Z", "/.", 
        RowBox[{"FPs", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "2"}], "]"}], "]"}]}]}], "}"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"FP", "[", "2", "]"}], "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"X", "/.", 
        RowBox[{"FPs", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ",", 
       RowBox[{"Y", "/.", 
        RowBox[{"FPs", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "2"}], "]"}], "]"}]}], ",", 
       RowBox[{"Z", "/.", 
        RowBox[{"FPs", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "3"}], "]"}], "]"}]}]}], "}"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"FP", "[", "3", "]"}], "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"X", "/.", 
        RowBox[{"FPs", "[", 
         RowBox[{"[", 
          RowBox[{"3", ",", "1"}], "]"}], "]"}]}], ",", 
       RowBox[{"Y", "/.", 
        RowBox[{"FPs", "[", 
         RowBox[{"[", 
          RowBox[{"3", ",", "2"}], "]"}], "]"}]}], ",", 
       RowBox[{"Z", "/.", 
        RowBox[{"FPs", "[", 
         RowBox[{"[", 
          RowBox[{"3", ",", "3"}], "]"}], "]"}]}]}], "}"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"FP", "[", "4", "]"}], "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"X", "/.", 
        RowBox[{"FPs", "[", 
         RowBox[{"[", 
          RowBox[{"4", ",", "1"}], "]"}], "]"}]}], ",", 
       RowBox[{"Y", "/.", 
        RowBox[{"FPs", "[", 
         RowBox[{"[", 
          RowBox[{"4", ",", "2"}], "]"}], "]"}]}], ",", 
       RowBox[{"Z", "/.", 
        RowBox[{"FPs", "[", 
         RowBox[{"[", 
          RowBox[{"4", ",", "3"}], "]"}], "]"}]}]}], "}"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"FP", "[", "5", "]"}], "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"X", "/.", 
        RowBox[{"FPs", "[", 
         RowBox[{"[", 
          RowBox[{"5", ",", "1"}], "]"}], "]"}]}], ",", 
       RowBox[{"Y", "/.", 
        RowBox[{"FPs", "[", 
         RowBox[{"[", 
          RowBox[{"5", ",", "2"}], "]"}], "]"}]}], ",", 
       RowBox[{"Z", "/.", 
        RowBox[{"FPs", "[", 
         RowBox[{"[", 
          RowBox[{"5", ",", "3"}], "]"}], "]"}]}]}], "}"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"FP", "[", "6", "]"}], "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"X", "/.", 
        RowBox[{"FPs", "[", 
         RowBox[{"[", 
          RowBox[{"6", ",", "1"}], "]"}], "]"}]}], ",", 
       RowBox[{"Y", "/.", 
        RowBox[{"FPs", "[", 
         RowBox[{"[", 
          RowBox[{"6", ",", "2"}], "]"}], "]"}]}], ",", 
       RowBox[{"Z", "/.", 
        RowBox[{"FPs", "[", 
         RowBox[{"[", 
          RowBox[{"6", ",", "3"}], "]"}], "]"}]}]}], "}"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"FP", "[", "7", "]"}], "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"X", "/.", 
        RowBox[{"FPs", "[", 
         RowBox[{"[", 
          RowBox[{"7", ",", "1"}], "]"}], "]"}]}], ",", 
       RowBox[{"Y", "/.", 
        RowBox[{"FPs", "[", 
         RowBox[{"[", 
          RowBox[{"7", ",", "2"}], "]"}], "]"}]}], ",", 
       RowBox[{"Z", "/.", 
        RowBox[{"FPs", "[", 
         RowBox[{"[", 
          RowBox[{"7", ",", "3"}], "]"}], "]"}]}]}], "}"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"FP", "[", "8", "]"}], "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"X", "/.", 
        RowBox[{"FPs", "[", 
         RowBox[{"[", 
          RowBox[{"8", ",", "1"}], "]"}], "]"}]}], ",", 
       RowBox[{"Y", "/.", 
        RowBox[{"FPs", "[", 
         RowBox[{"[", 
          RowBox[{"8", ",", "2"}], "]"}], "]"}]}], ",", 
       RowBox[{"Z", "/.", 
        RowBox[{"FPs", "[", 
         RowBox[{"[", 
          RowBox[{"8", ",", "3"}], "]"}], "]"}]}]}], "}"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"FP", "[", "9", "]"}], "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"X", "/.", 
        RowBox[{"FPs", "[", 
         RowBox[{"[", 
          RowBox[{"9", ",", "1"}], "]"}], "]"}]}], ",", 
       RowBox[{"Y", "/.", 
        RowBox[{"FPs", "[", 
         RowBox[{"[", 
          RowBox[{"9", ",", "2"}], "]"}], "]"}]}], ",", 
       RowBox[{"Z", "/.", 
        RowBox[{"FPs", "[", 
         RowBox[{"[", 
          RowBox[{"9", ",", "3"}], "]"}], "]"}]}]}], "}"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"FP", "[", "10", "]"}], "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"X", "/.", 
        RowBox[{"FPs", "[", 
         RowBox[{"[", 
          RowBox[{"10", ",", "1"}], "]"}], "]"}]}], ",", 
       RowBox[{"Y", "/.", 
        RowBox[{"FPs", "[", 
         RowBox[{"[", 
          RowBox[{"10", ",", "2"}], "]"}], "]"}]}], ",", 
       RowBox[{"Z", "/.", 
        RowBox[{"FPs", "[", 
         RowBox[{"[", 
          RowBox[{"10", ",", "3"}], "]"}], "]"}]}]}], "}"}]}], ";"}], 
   "*)"}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGCQAGIQfUF/D7/8hTeOarc4xEG0k3GlNIheMn+hHIiewdKs
D6KNL602A9GpOydWguiW3QrVIPrIp4p6EH1J6kw/iA7jt5kKooU/bgPTE9Ie
zQfRbpXVC0F0TYP3ZhCddPI3mL7o+u0ciD7nd+Mu2B0+Vx7kXH7jKGZ4FUw/
u3FFsgRI/zSYqwCiQ+032F1/88axvMzPBURvuLbCA0Qn+Aong+gHslcLQbTB
J91SEO3vk9l/5P0bx77rbyeD6F13NnCpfHjjyHZWkRtEsxt384PoiiU/wfS3
rhNP33984zhPTILpA5B+OfsnH4gOmS3FD6Ivrd7esOv7G8flUVZtINpd4GJg
x483jlKie4NA9KHTn85uBNJHbN/fA9EfpNP/gWgNq1NgOkgyT3UTkPbatwZM
AwD1gNkQ
  "],
 CellLabel->"In[6]:=",ExpressionUUID->"1a578804-d0f2-47a1-b99d-570a1ef1d8df"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Put", " ", "fixed", " ", "points", " ", "into", " ", "a", " ", "table"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"FPs", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"FP", "[", "i", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "10"}], "}"}]}], "]"}]}], ";"}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.8672143768787384`*^9, 3.8672144154966393`*^9}, {
   3.867224467122445*^9, 3.8672244725038586`*^9}, {3.868024836545911*^9, 
   3.868024837240116*^9}, 3.868958478845225*^9, 3.869126991902952*^9, 
   3.882269611642425*^9, {3.884941331752728*^9, 3.884941333151639*^9}, 
   3.887977524370623*^9, 3.888399011757017*^9, {3.88848413024457*^9, 
   3.888484130428361*^9}, {3.8884843452915077`*^9, 3.888484345357668*^9}, {
   3.888484655403591*^9, 3.888484657493373*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"44587aee-2805-4cbd-96b7-36a20cce1553"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Find", " ", "the", " ", "4", "D", " ", "Jacobian", " ", "matrix", " ", 
    "for", " ", "general", " ", "system", " ", "of", " ", 
    RowBox[{"equations", ".", " ", 
     RowBox[{"D", "[", "]"}]}], " ", "differentiates", " ", "each", " ", 
    "expression"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"J", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{"deX", ",", "X"}], "]"}], ",", 
          RowBox[{"D", "[", 
           RowBox[{"deX", ",", "Y"}], "]"}], ",", 
          RowBox[{"D", "[", 
           RowBox[{"deX", ",", "Z"}], "]"}]}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{"deY", ",", "X"}], "]"}], ",", 
          RowBox[{"D", "[", 
           RowBox[{"deY", ",", "Y"}], "]"}], ",", 
          RowBox[{"D", "[", 
           RowBox[{"deY", ",", "Z"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{"deZ", ",", "X"}], "]"}], ",", 
          RowBox[{"D", "[", 
           RowBox[{"deZ", ",", "Y"}], "]"}], ",", 
          RowBox[{"D", "[", 
           RowBox[{"deZ", ",", "Z"}], "]"}]}], "}"}]}], "}"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"J", "//", "MatrixForm"}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.8672146504912844`*^9, 3.867214712242198*^9}, {
  3.868944173552453*^9, 3.8689441811471653`*^9}, {3.883803822024252*^9, 
  3.88380382370331*^9}, {3.8849413374850473`*^9, 3.884941360072496*^9}, {
  3.8884841354138813`*^9, 3.8884841661736107`*^9}, {3.888484659415097*^9, 
  3.888484666238133*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"1e04dba9-850d-45ab-9e06-91a10e027985"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Find", " ", "the", " ", "Jacobian", " ", "and", " ", "eigenvalues", " ", 
    "for", " ", "each", " ", "fixed", " ", "point"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"FPTable", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"FPs", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "//", "MatrixForm"}], ",", 
         RowBox[{
          RowBox[{"Simplify", "[", 
           RowBox[{"J", "/.", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"X", "->", 
               RowBox[{"FPs", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "1"}], "]"}], "]"}]}], ",", 
              RowBox[{"Y", "->", 
               RowBox[{"FPs", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "2"}], "]"}], "]"}]}], ",", 
              RowBox[{"Z", "->", 
               RowBox[{"FPs", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "3"}], "]"}], "]"}]}]}], "}"}]}], "]"}], "//",
           "MatrixForm"}], ",", 
         RowBox[{
          RowBox[{"Eigenvalues", "[", 
           RowBox[{"J", "/.", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"X", "->", 
               RowBox[{"FPs", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "1"}], "]"}], "]"}]}], ",", 
              RowBox[{"Y", "->", 
               RowBox[{"FPs", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "2"}], "]"}], "]"}]}], ",", 
              RowBox[{"Z", "->", 
               RowBox[{"FPs", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "3"}], "]"}], "]"}]}]}], "}"}]}], "]"}], "//",
           "MatrixForm"}], ",", 
         RowBox[{
          RowBox[{"Eigenvectors", "[", 
           RowBox[{"J", "/.", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"X", "->", 
               RowBox[{"FPs", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "1"}], "]"}], "]"}]}], ",", 
              RowBox[{"Y", "->", 
               RowBox[{"FPs", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "2"}], "]"}], "]"}]}], ",", 
              RowBox[{"Z", "->", 
               RowBox[{"FPs", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "3"}], "]"}], "]"}]}]}], "}"}]}], "]"}], "//",
           "MatrixForm"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "10"}], "}"}]}], "]"}]}], ";"}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.867225318077546*^9, 3.8672254169870214`*^9}, {
   3.867225448024709*^9, 3.8672254542249594`*^9}, {3.8672255001121364`*^9, 
   3.8672255191902294`*^9}, {3.8672255581112022`*^9, 
   3.8672255642188787`*^9}, {3.8672255973534174`*^9, 
   3.8672256274971313`*^9}, {3.8672256839287667`*^9, 
   3.8672256945159383`*^9}, {3.867225730109685*^9, 3.867225738455241*^9}, {
   3.8672257699330273`*^9, 3.867225778278576*^9}, {3.867225811278432*^9, 
   3.86722581683035*^9}, {3.867225903530884*^9, 3.8672259267803965`*^9}, {
   3.867225979984497*^9, 3.867225987304329*^9}, 3.867226143110686*^9, {
   3.867227332365857*^9, 3.867227342142587*^9}, {3.867407053817068*^9, 
   3.8674070581695633`*^9}, {3.8680242099370823`*^9, 3.868024213440816*^9}, {
   3.868024365757309*^9, 3.8680243705990753`*^9}, {3.8680245930712137`*^9, 
   3.8680246064401407`*^9}, {3.8680247507314663`*^9, 3.868024752328637*^9}, {
   3.8689441880925694`*^9, 3.8689441917923965`*^9}, 3.868956001836708*^9, 
   3.8689590190222435`*^9, {3.869126738407119*^9, 3.8691267437236*^9}, 
   3.869126782049677*^9, {3.869127818860439*^9, 3.869127857050398*^9}, 
   3.8691279323005037`*^9, 3.869128019515766*^9, {3.8691294821423035`*^9, 
   3.869129491277402*^9}, {3.869197845521573*^9, 3.869197845678837*^9}, {
   3.87163244715317*^9, 3.8716324493928595`*^9}, {3.8716327635423284`*^9, 
   3.8716327651125145`*^9}, 3.8777566945081463`*^9, {3.8777569014323*^9, 
   3.877756902992178*^9}, 3.882269477299637*^9, 3.8822696146808777`*^9, {
   3.884941367280037*^9, 3.884941402363988*^9}, {3.884941530288258*^9, 
   3.884941535802528*^9}, {3.8849416037112207`*^9, 3.88494162633784*^9}, 
   3.88797755141038*^9, 3.888399019710622*^9, 3.888399761978408*^9, {
   3.888484170599127*^9, 3.8884841956993637`*^9}, {3.8884843506026*^9, 
   3.888484352855687*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"c41fa91d-a3b7-4372-98a6-7648072fc94e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Use", " ", "TableForm", " ", "to", " ", "display", " ", "the", " ", 
    "fixed", " ", "points", " ", "with", " ", "their", " ", "Jacobian", " ", 
    "matrix", " ", "and", " ", "eigenvalues"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"FPTable", "=", 
    RowBox[{"TableForm", "[", 
     RowBox[{"FPTable", ",", 
      RowBox[{"TableHeadings", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
          "\"\<Fixed Point\>\"", ",", "\"\<Jacobian\>\"", ",", 
           "\"\<Eigenvalues\>\"", ",", "\"\<Eigenvectors\>\""}], "}"}]}], 
        "}"}]}]}], "]"}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.8674732571734056`*^9, 3.8674733087235513`*^9}, {
   3.8680240454027176`*^9, 3.8680240517453375`*^9}, {3.868944198427647*^9, 
   3.8689442010925846`*^9}, {3.8691296342126307`*^9, 3.869129635352618*^9}, {
   3.8691296836226945`*^9, 3.8691297054374857`*^9}, 3.8691297421488905`*^9, {
   3.8691297832126884`*^9, 3.869129802932803*^9}, {3.8777567702425528`*^9, 
   3.8777567889867887`*^9}, {3.877756859522192*^9, 3.8777568704743633`*^9}, {
   3.877756944239081*^9, 3.8777569721182117`*^9}, {3.883803874115755*^9, 
   3.8838039117033367`*^9}, {3.884941538839074*^9, 3.884941542102433*^9}, {
   3.888484355922248*^9, 3.888484357888496*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"0b41004e-102b-402d-9a16-bae9237c4c17"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"EqX", "[", 
    RowBox[{"q_", ",", "wx_", ",", "\[Epsilon]_"}], "]"}], "=", "deX"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"EqY", "[", 
    RowBox[{"wx_", ",", "\[Epsilon]_"}], "]"}], "=", "deY"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"EqZ", "[", "q_", "]"}], "=", "deZ"}], ";"}]}], "Input",
 CellChangeTimes->{{3.878636626661203*^9, 3.878636636042757*^9}, {
   3.8786400729113073`*^9, 3.878640099369973*^9}, {3.878640199884038*^9, 
   3.878640211434988*^9}, 3.878720216431931*^9, {3.878881437960136*^9, 
   3.878881453370654*^9}, {3.8865940267335377`*^9, 3.8865940274907312`*^9}, {
   3.888308047863652*^9, 3.888308049070133*^9}, {3.888399036557212*^9, 
   3.888399079836182*^9}, {3.888484275304049*^9, 3.88848428115834*^9}, {
   3.8884846196589823`*^9, 3.888484624178726*^9}, {3.888484669158637*^9, 
   3.888484671222137*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"4e2fcfd1-1f24-4821-bc14-5a85897734b5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"StreamPlot3D", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"EqX", "[", 
        RowBox[{"q", ",", "wx", ",", "\[Epsilon]"}], "]"}], ",", 
       RowBox[{"EqY", "[", 
        RowBox[{"wx", ",", "\[Epsilon]"}], "]"}], ",", 
       RowBox[{"EqZ", "[", "q", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"X", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Y", ",", 
       RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Z", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"AxesLabel", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<X\>\"", ",", "\"\<Y\>\"", ",", "\"\<Z\>\""}], "}"}]}]}], 
    "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"q", ",", "0", ",", "1", ",", 
     RowBox[{"Appearance", "->", "\"\<Open\>\""}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"wx", ",", 
     RowBox[{"-", "5"}], ",", "1", ",", 
     RowBox[{"Appearance", "->", "\"\<Open\>\""}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", ",", 
     RowBox[{"-", "1"}], ",", "1", ",", 
     RowBox[{"Appearance", "->", "\"\<Open\>\""}]}], "}"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.878639778339827*^9, 3.8786398085073023`*^9}, {
   3.878639979197041*^9, 3.878639982821209*^9}, {3.878640026324665*^9, 
   3.878640045259263*^9}, {3.87864010346107*^9, 3.878640117483438*^9}, {
   3.8786401881407013`*^9, 3.878640222468185*^9}, {3.8786403968945436`*^9, 
   3.878640398155799*^9}, {3.8786404492447853`*^9, 3.878640474115641*^9}, 
   3.878640504316465*^9, {3.878720213961834*^9, 3.8787202253307457`*^9}, {
   3.878881441265929*^9, 3.878881488261342*^9}, {3.878882049904756*^9, 
   3.878882050665854*^9}, 3.886593945750594*^9, {3.886594024078988*^9, 
   3.886594032638586*^9}, {3.888399106173613*^9, 3.8883991603772507`*^9}, {
   3.888402444529725*^9, 3.8884024446391277`*^9}, {3.888484299712468*^9, 
   3.888484315728594*^9}, {3.888484626084351*^9, 3.8884846307709217`*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"928062ff-6a75-46b2-9a0b-9359552deda3"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`q$$ = 
    1, $CellContext`wx$$ = -0.5, $CellContext`\[Epsilon]$$ = -0.25, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`q$$], 0, 1}, {
      Hold[$CellContext`wx$$], -5, 1}, {
      Hold[$CellContext`\[Epsilon]$$], -1, 1}}, Typeset`size$$ = {
    360., {182., 187.40710822913064`}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`q$$ = 
        0, $CellContext`wx$$ = -5, $CellContext`\[Epsilon]$$ = -1}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> StreamPlot3D[{
         $CellContext`EqX[$CellContext`q$$, $CellContext`wx$$, $CellContext`\
\[Epsilon]$$], 
         $CellContext`EqY[$CellContext`wx$$, $CellContext`\[Epsilon]$$], 
         $CellContext`EqZ[$CellContext`q$$]}, {$CellContext`X, 0, 
         1}, {$CellContext`Y, -1, 1}, {$CellContext`Z, 0, 1}, 
        AxesLabel -> {"X", "Y", "Z"}], 
      "Specifications" :> {{$CellContext`q$$, 0, 1, Appearance -> 
         "Open"}, {$CellContext`wx$$, -5, 1, Appearance -> 
         "Open"}, {$CellContext`\[Epsilon]$$, -1, 1, Appearance -> "Open"}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{406., {282.6875, 288.3125}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.8883991743648663`*^9, 3.888399400224999*^9, {3.888402427243051*^9, 
   3.888402445012536*^9}, 3.888484365851245*^9, 3.888484674016264*^9, 
   3.88849418482548*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"5f4d9327-0526-4bd8-bdb5-9e207ee3857c"],

Cell[BoxData[
 TemplateBox[{
  "Min", "nord", 
   "\"Invalid comparison with \\!\\(\\*RowBox[{RowBox[{\\\"-\\\", \
\\\"0.9708956953732595`\\\"}], \\\"+\\\", RowBox[{\\\"2.8902592387085087`*^-8\
\\\", \\\" \\\", \\\"\[ImaginaryI]\\\"}]}]\\) attempted.\"", 2, 10, 10, 
   18333248129472315460, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.888494190375821*^9},
 CellLabel->"",ExpressionUUID->"0e56a68f-6b68-446a-87ef-312a6abf6a26"],

Cell[BoxData[
 TemplateBox[{
  "Max", "nord", 
   "\"Invalid comparison with \\!\\(\\*RowBox[{RowBox[{\\\"-\\\", \
\\\"0.9708956953732595`\\\"}], \\\"+\\\", RowBox[{\\\"2.8902592387085087`*^-8\
\\\", \\\" \\\", \\\"\[ImaginaryI]\\\"}]}]\\) attempted.\"", 2, 10, 11, 
   18333248129472315460, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8884941903842497`*^9},
 CellLabel->"",ExpressionUUID->"c739bbb0-d7fe-4d1a-802a-99a0f83c96d7"],

Cell[BoxData[
 TemplateBox[{
  "Min", "nord", 
   "\"Invalid comparison with \\!\\(\\*RowBox[{RowBox[{\\\"-\\\", \
\\\"0.9898684637907692`\\\"}], \\\"+\\\", \
RowBox[{\\\"7.804698799524817`*^-8\\\", \\\" \\\", \
\\\"\[ImaginaryI]\\\"}]}]\\) attempted.\"", 2, 10, 12, 18333248129472315460, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.888494190421433*^9},
 CellLabel->"",ExpressionUUID->"c10e409d-053e-4686-819a-a7b79a3cf3db"],

Cell[BoxData[
 TemplateBox[{
  "Max", "nord", 
   "\"Invalid comparison with \\!\\(\\*RowBox[{RowBox[{\\\"-\\\", \
\\\"0.9898684637907692`\\\"}], \\\"+\\\", \
RowBox[{\\\"7.804698799524817`*^-8\\\", \\\" \\\", \
\\\"\[ImaginaryI]\\\"}]}]\\) attempted.\"", 2, 10, 13, 18333248129472315460, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.888494190431366*^9},
 CellLabel->"",ExpressionUUID->"ad8e4ea1-5378-4620-8238-ccd6b9117579"],

Cell[BoxData[
 TemplateBox[{
  "Min", "nord", 
   "\"Invalid comparison with \\!\\(\\*RowBox[{RowBox[{\\\"-\\\", \
\\\"1.000270297743553`\\\"}], \\\"+\\\", \
RowBox[{\\\"2.1190970181439385`*^-8\\\", \\\" \\\", \\\"\[ImaginaryI]\\\"}]}]\
\\) attempted.\"", 2, 10, 14, 18333248129472315460, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.888494190466496*^9},
 CellLabel->"",ExpressionUUID->"206f2bcf-8059-4598-bb57-87e855c65e72"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Min\\\", \\\"::\\\", \\\
\"nord\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 10, 15, 18333248129472315460, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.888494190479838*^9},
 CellLabel->"",ExpressionUUID->"8448b01e-1fa6-4ec8-97b8-c63bb58d319f"],

Cell[BoxData[
 TemplateBox[{
  "Max", "nord", 
   "\"Invalid comparison with \\!\\(\\*RowBox[{RowBox[{\\\"-\\\", \
\\\"1.000270297743553`\\\"}], \\\"+\\\", \
RowBox[{\\\"2.1190970181439385`*^-8\\\", \\\" \\\", \\\"\[ImaginaryI]\\\"}]}]\
\\) attempted.\"", 2, 10, 16, 18333248129472315460, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8884941904879704`*^9},
 CellLabel->"",ExpressionUUID->"bf4d17fd-9971-4779-9e08-e9f7bd9f2a29"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Max\\\", \\\"::\\\", \\\
\"nord\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 10, 17, 18333248129472315460, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.888494190495388*^9},
 CellLabel->"",ExpressionUUID->"35ebf5a6-c34b-4a23-a2df-60f027f5596a"],

Cell[BoxData[
 TemplateBox[{
  "Min", "nord", 
   "\"Invalid comparison with \\!\\(\\*RowBox[{RowBox[{\\\"-\\\", \
\\\"2.6363813290744127`\\\"}], \\\"-\\\", \
RowBox[{\\\"3.555257704356111`*^-9\\\", \\\" \\\", \
\\\"\[ImaginaryI]\\\"}]}]\\) attempted.\"", 2, 10, 18, 18333248129472315460, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8884941965008783`*^9},
 CellLabel->"",ExpressionUUID->"ff1427ae-9050-4bcb-8b05-ec7446564f13"],

Cell[BoxData[
 TemplateBox[{
  "Max", "nord", 
   "\"Invalid comparison with \\!\\(\\*RowBox[{RowBox[{\\\"-\\\", \
\\\"2.6363813290744127`\\\"}], \\\"-\\\", \
RowBox[{\\\"3.555257704356111`*^-9\\\", \\\" \\\", \
\\\"\[ImaginaryI]\\\"}]}]\\) attempted.\"", 2, 10, 19, 18333248129472315460, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.888494196508874*^9},
 CellLabel->"",ExpressionUUID->"7582a9ac-d281-4904-b852-cc9ec0f37828"],

Cell[BoxData[
 TemplateBox[{
  "Min", "nord", 
   "\"Invalid comparison with \\!\\(\\*RowBox[{RowBox[{\\\"-\\\", \
\\\"2.087637914261128`\\\"}], \\\"-\\\", RowBox[{\\\"9.07215574474015`*^-10\\\
\", \\\" \\\", \\\"\[ImaginaryI]\\\"}]}]\\) attempted.\"", 2, 10, 20, 
   18333248129472315460, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.888494196583886*^9},
 CellLabel->"",ExpressionUUID->"eb9ae5f5-48ad-44f0-91c2-86234b0ce08a"],

Cell[BoxData[
 TemplateBox[{
  "Max", "nord", 
   "\"Invalid comparison with \\!\\(\\*RowBox[{RowBox[{\\\"-\\\", \
\\\"2.087637914261128`\\\"}], \\\"-\\\", RowBox[{\\\"9.07215574474015`*^-10\\\
\", \\\" \\\", \\\"\[ImaginaryI]\\\"}]}]\\) attempted.\"", 2, 10, 21, 
   18333248129472315460, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.888494196591611*^9},
 CellLabel->"",ExpressionUUID->"1260fca0-f1d0-4d09-bcf3-6fcf71e821ec"],

Cell[BoxData[
 TemplateBox[{
  "Min", "nord", 
   "\"Invalid comparison with \\!\\(\\*RowBox[{RowBox[{\\\"-\\\", \
\\\"1.7627594800833493`\\\"}], \\\"+\\\", \
RowBox[{\\\"2.4250377650869`*^-9\\\", \\\" \\\", \\\"\[ImaginaryI]\\\"}]}]\\) \
attempted.\"", 2, 10, 22, 18333248129472315460, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8884941966358137`*^9},
 CellLabel->"",ExpressionUUID->"68e7622d-72c8-4dd2-92b2-55bfea5d98a3"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Min\\\", \\\"::\\\", \\\
\"nord\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 10, 23, 18333248129472315460, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.888494196644456*^9},
 CellLabel->"",ExpressionUUID->"1c53cad9-3dab-4384-8727-d0a98d418758"],

Cell[BoxData[
 TemplateBox[{
  "Max", "nord", 
   "\"Invalid comparison with \\!\\(\\*RowBox[{RowBox[{\\\"-\\\", \
\\\"1.7627594800833493`\\\"}], \\\"+\\\", \
RowBox[{\\\"2.4250377650869`*^-9\\\", \\\" \\\", \\\"\[ImaginaryI]\\\"}]}]\\) \
attempted.\"", 2, 10, 24, 18333248129472315460, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.888494196651924*^9},
 CellLabel->"",ExpressionUUID->"2cc8a812-109d-4175-87c4-2f7b6e538926"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Max\\\", \\\"::\\\", \\\
\"nord\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 10, 25, 18333248129472315460, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.888494196659687*^9},
 CellLabel->"",ExpressionUUID->"f660e304-c9e8-41e7-9023-ceb8a8d82764"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Fig 9 b", "Subsubsection",
 CellChangeTimes->{{3.888402521166562*^9, 
  3.8884025624936743`*^9}},ExpressionUUID->"557a7af8-eefe-4976-b764-\
250cd81c3bf7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Clear", " ", "all", " ", "variables"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], ";"}]}]], "Input",
 CellLabel->"In[1]:=",ExpressionUUID->"66fb95ef-00c0-41f0-801b-21fbaa7b08eb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Define", " ", "the", " ", "dynamical", " ", "system", " ", "for", " ", 
    "compact", " ", "interacting", " ", "dark", " ", "matter", " ", 
    RowBox[{"(", "Z", ")"}], " ", "and", " ", "dark", " ", "energy", " ", 
    RowBox[{"(", "X", ")"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"deXt", ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"X1", "'"}], "[", "t", "]"}], "==", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "3"}], "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Y1", "[", "t", "]"}], "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{
              RowBox[{"Y1", "[", "t", "]"}], "^", "2"}]}], ")"}], "^", 
           RowBox[{"(", 
            RowBox[{"1", "/", "2"}], ")"}]}], ")"}]}], ")"}], "*", 
       RowBox[{"X1", "[", "t", "]"}], "*", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"X1", "[", "t", "]"}]}], ")"}], "*", 
       RowBox[{"(", 
        RowBox[{"1", "+", "wx", "+", 
         RowBox[{"\[Epsilon]", "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"X1", "[", "t", "]"}], "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"X1", "[", "t", "]"}]}], ")"}]}], ")"}]}]}], ")"}]}], 
      "-", 
      RowBox[{"q", "*", 
       RowBox[{"X1", "[", "t", "]"}], "*", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"X1", "[", "t", "]"}]}], ")"}], "*", 
       RowBox[{
        RowBox[{"Z1", "[", "t", "]"}], "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"Z1", "[", "t", "]"}]}], ")"}]}], "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Y1", "[", "t", "]"}], "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{
              RowBox[{"Y1", "[", "t", "]"}], "^", "2"}]}], ")"}], "^", 
           RowBox[{"(", 
            RowBox[{"1", "/", "2"}], ")"}]}], ")"}]}], ")"}]}]}]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"deYt", ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"Y1", "'"}], "[", "t", "]"}], "==", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{
         RowBox[{"Y1", "[", "t", "]"}], "^", "2"}]}], "*", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{
           RowBox[{"Y1", "[", "t", "]"}], "^", "2"}]}], ")"}], "^", 
        RowBox[{"(", 
         RowBox[{"1", "/", "2"}], ")"}]}]}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{
              RowBox[{"Y1", "[", "t", "]"}], "^", "2"}]}], ")"}], "^", 
           RowBox[{"(", 
            RowBox[{"3", "/", "2"}], ")"}]}], ")"}], "/", "6"}], ")"}], "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X1", "[", "t", "]"}], "/", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"X1", "[", "t", "]"}]}], ")"}]}], ")"}], "+", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Z1", "[", "t", "]"}], "/", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"Z1", "[", "t", "]"}]}], ")"}]}], ")"}], "+", 
         RowBox[{"3", "*", "wx", "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"X1", "[", "t", "]"}], "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"X1", "[", "t", "]"}]}], ")"}]}], ")"}]}], "+", 
         RowBox[{"3", "*", "\[Epsilon]", "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"X1", "[", "t", "]"}], "^", "2"}], "/", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"X1", "[", "t", "]"}]}], ")"}], "^", "2"}], ")"}]}], 
           ")"}]}]}], ")"}]}]}]}]}], "\[IndentingNewLine]", 
   RowBox[{"deZt", ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"Z1", "'"}], "[", "t", "]"}], "==", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "3"}], "*", 
       RowBox[{"Z1", "[", "t", "]"}], "*", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"Z1", "[", "t", "]"}]}], ")"}], "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Y1", "[", "t", "]"}], "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{
              RowBox[{"Y1", "[", "t", "]"}], "^", "2"}]}], ")"}], "^", 
           RowBox[{"(", 
            RowBox[{"1", "/", "2"}], ")"}]}], ")"}]}], ")"}]}], " ", "+", " ", 
      RowBox[{"q", "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"X1", "[", "t", "]"}], "/", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"X1", "[", "t", "]"}]}], ")"}]}], ")"}], "*", 
       RowBox[{"Z1", "[", "t", "]"}], "*", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"Z1", "[", "t", "]"}]}], ")"}], "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Y1", "[", "t", "]"}], "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{
              RowBox[{"Y1", "[", "t", "]"}], "^", "2"}]}], ")"}], "^", 
           RowBox[{"(", 
            RowBox[{"1", "/", "2"}], ")"}]}], ")"}]}], 
        ")"}]}]}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.8884849870446367`*^9, 3.888485028666349*^9}, {
  3.8884892974448433`*^9, 3.8884893505799313`*^9}, {3.8884895193726587`*^9, 
  3.8884895222501163`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"72224f27-d9b0-40cd-a383-1ce294b25bca"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"q", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wx", "=", 
   RowBox[{"-", "0.5"}]}], 
  RowBox[{"(*", 
   RowBox[{"-", "0.390625`"}], "*)"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Epsilon]", "=", 
   RowBox[{"-", "0.25"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.887977889055066*^9, 3.8879778890554047`*^9}, {
   3.8879783492505503`*^9, 3.8879783568319263`*^9}, {3.8884013253873777`*^9, 
   3.888401334714533*^9}, 3.888401731282817*^9, {3.888402581169729*^9, 
   3.88840260350963*^9}, 3.888489360491706*^9, 3.888490157861148*^9, {
   3.888491212044664*^9, 3.8884912161152153`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"53ff1a90-32ce-45fa-9ca7-7a279eb10699"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Find", " ", "x", " ", "and", " ", "y", " ", "values", " ", "at", " ", 
    "unstable", " ", "spiral", " ", "in", " ", "this", " ", "case"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"xSpiral", "=", 
   RowBox[{
    FractionBox["3", "q"], "/", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      FractionBox["3", "q"]}], ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.8884916947693243`*^9, 3.888491706138761*^9}, {
  3.8884917472897673`*^9, 3.8884917610886297`*^9}},
 CellLabel->"In[82]:=",ExpressionUUID->"d4ac17c2-3498-4af4-a4fd-66f154f7e56f"],

Cell[BoxData[
 FractionBox["3", "4"]], "Output",
 CellChangeTimes->{{3.888491697217478*^9, 3.8884917143410788`*^9}, 
   3.88849177312435*^9},
 CellLabel->"Out[82]=",ExpressionUUID->"a52321b9-99a9-45da-ad85-41ef415d3d59"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ySpiral", "=", 
  RowBox[{
   FractionBox[
    SqrtBox[
     RowBox[{
      RowBox[{
       RowBox[{"-", "q"}], " ", "wx"}], "-", 
      RowBox[{"3", " ", "\[Epsilon]"}]}]], "q"], "/", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{
        RowBox[{"(", 
         FractionBox[
          SqrtBox[
           RowBox[{
            RowBox[{
             RowBox[{"-", "q"}], " ", "wx"}], "-", 
            RowBox[{"3", " ", "\[Epsilon]"}]}]], "q"], ")"}], "^", "2"}]}], 
      ")"}], "^", 
     RowBox[{"(", "0.5", ")"}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.888491676938979*^9, 3.888491710987754*^9}, {
  3.888493623126936*^9, 3.888493658170567*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"eb4b2b73-21a3-42c9-a39a-4a9b8bd43f3f"],

Cell[BoxData["0.7453559924999299`"], "Output",
 CellChangeTimes->{{3.888491689011572*^9, 3.888491715040238*^9}, 
   3.888493659028892*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"303e10b1-5b86-4b30-babe-4f792739e6d2"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Plot", " ", "the", " ", "fixed", " ", "points"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"FPShow", "=", 
    RowBox[{"ListPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          FractionBox["3", 
           RowBox[{"3", "+", "q"}]], ",", 
          RowBox[{"-", 
           FractionBox[
            SqrtBox[
             RowBox[{
              RowBox[{
               RowBox[{"-", "q"}], " ", "wx"}], "-", 
              RowBox[{"3", " ", "\[Epsilon]"}]}]], 
            SqrtBox[
             RowBox[{
              SuperscriptBox["q", "2"], "-", 
              RowBox[{"q", " ", "wx"}], "-", 
              RowBox[{"3", " ", "\[Epsilon]"}]}]]]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          FractionBox["3", 
           RowBox[{"3", "+", "q"}]], ",", 
          FractionBox[
           SqrtBox[
            RowBox[{
             RowBox[{
              RowBox[{"-", "q"}], " ", "*", "wx"}], "-", 
             RowBox[{"3", " ", "\[Epsilon]"}]}]], 
           SqrtBox[
            RowBox[{
             RowBox[{"q", "^", "2"}], "-", 
             RowBox[{"q", "*", " ", "wx"}], "-", 
             RowBox[{"3", " ", "\[Epsilon]"}]}]]]}], "}"}]}], "}"}], ",", 
      RowBox[{"PlotMarkers", "->", 
       RowBox[{"{", 
        RowBox[{"Automatic", ",", "Small"}], "}"}]}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", "Black", "}"}]}]}], "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.888493409854796*^9, 3.888493461260612*^9}, {
  3.888493493118218*^9, 3.888493515381665*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"7a951577-d442-4764-97f2-be4c6f8662fd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"traj", "[", 
     RowBox[{"X0_", ",", "Y0_", ",", "Z0_"}], "]"}], "=", 
    RowBox[{"NDSolve", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"deXt", ",", "deYt", ",", "deZt", ",", " ", 
        RowBox[{
         RowBox[{"X1", "[", "0", "]"}], "==", "X0"}], ",", 
        RowBox[{
         RowBox[{"Y1", "[", "0", "]"}], "==", "Y0"}], ",", 
        RowBox[{
         RowBox[{"Z1", "[", "0", "]"}], "==", "Z0"}]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"X1", ",", "Y1", ",", "Z1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", 
        RowBox[{"-", "80"}], ",", "80"}], "}"}], ",", 
      RowBox[{"AccuracyGoal", "->", "5"}], ",", 
      RowBox[{"PrecisionGoal", "->", "5"}], ",", 
      RowBox[{"MaxSteps", "->", "100000"}]}], "]"}]}], ";"}], " "}]], "Input",\

 CellChangeTimes->{{3.8438885804511986`*^9, 3.843888581311265*^9}, {
   3.8438938592742786`*^9, 3.843893939219122*^9}, {3.8438941114297333`*^9, 
   3.8438942191846347`*^9}, {3.843894249969864*^9, 3.843894346269736*^9}, {
   3.8438944055744495`*^9, 3.843894799140247*^9}, {3.8438948607399817`*^9, 
   3.8438948847105308`*^9}, {3.844144226711842*^9, 3.844144269018071*^9}, {
   3.887979872791584*^9, 3.887979910367338*^9}, {3.887980029651232*^9, 
   3.887980031254677*^9}, {3.888055637414365*^9, 3.8880556536066236`*^9}, {
   3.8880559265002527`*^9, 3.888055942599481*^9}, {3.888385806342004*^9, 
   3.888385807953027*^9}, {3.888401283220417*^9, 3.8884012975687943`*^9}, {
   3.8884013397587967`*^9, 3.888401343483832*^9}, {3.888402725276833*^9, 
   3.888402726925267*^9}, {3.888402998410335*^9, 3.8884030109803867`*^9}, {
   3.8884893624916773`*^9, 3.8884893862586937`*^9}, {3.8884900521672153`*^9, 
   3.8884900529187183`*^9}, {3.888490357346273*^9, 3.888490359038652*^9}, {
   3.8884906258990927`*^9, 3.8884906654985123`*^9}, {3.888490789297559*^9, 
   3.888490789470706*^9}, {3.88849083435666*^9, 3.8884908432591*^9}, {
   3.888491317224998*^9, 3.888491371521894*^9}, {3.8884920391582317`*^9, 
   3.8884920671546917`*^9}, 3.8884921590304193`*^9},
 CellLabel->"In[58]:=",ExpressionUUID->"234606cd-0c56-4b5c-a2b8-d4433ae98476"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve", "ndinnt", 
   "\"Initial condition \\!\\(\\*RowBox[{\\\"X0\\\"}]\\) is not a number or a \
rectangular array of numbers.\"", 2, 58, 35, 18333244020315986997, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.888310947399899*^9, 3.888385574514182*^9, 3.8883856324712677`*^9, 
   3.888385739330179*^9, 3.888385830216976*^9, {3.8884013373018436`*^9, 
   3.888401352004178*^9}, 3.888401735657505*^9, {3.888402605129703*^9, 
   3.8884026268330927`*^9}, 3.888402727363521*^9, {3.8884030003984747`*^9, 
   3.888403012046533*^9}, 3.888403190474678*^9, 3.888481303452929*^9, 
   3.8884895158522797`*^9, 3.88849016866706*^9, 3.888490243658867*^9, 
   3.8884903599077272`*^9, {3.888490628361741*^9, 3.8884906661205683`*^9}, 
   3.888490790457296*^9, {3.888490835268344*^9, 3.8884908403160267`*^9}, {
   3.888491313659358*^9, 3.888491372160122*^9}, 3.88849177315742*^9, {
   3.888492049152899*^9, 3.888492068735668*^9}, 3.8884921706139727`*^9, 
   3.888493553948354*^9, 3.888493798851383*^9},
 CellLabel->
  "During evaluation of \
In[58]:=",ExpressionUUID->"da9a9a2f-54b7-4a45-92e2-5147a32cf825"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"sol", "[", "1", "]"}], "=", 
   RowBox[{"traj", "[", 
    RowBox[{"0.1", ",", "0.1", ",", "0.009"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sol", "[", "2", "]"}], "=", 
   RowBox[{"traj", "[", 
    RowBox[{"0.8", ",", "0.75", ",", "0.009"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sol", "[", "3", "]"}], "=", 
   RowBox[{"traj", "[", 
    RowBox[{"0.9", ",", "0.1", ",", "0.009"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sol", "[", "4", "]"}], "=", 
   RowBox[{"traj", "[", 
    RowBox[{"0.5", ",", "0.1", ",", "0.009"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sol", "[", "5", "]"}], "=", 
   RowBox[{"traj", "[", 
    RowBox[{"0.5", ",", "0.3", ",", "0.009"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"sol", "[", "6", "]"}], "=", 
    RowBox[{"traj", "[", 
     RowBox[{"0.5", ",", "0.741", ",", "0.009"}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"flat", " ", "case"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sol", "[", "7", "]"}], "=", 
   RowBox[{"traj", "[", 
    RowBox[{"0.5", ",", "0.8", ",", "0.009"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sol", "[", "8", "]"}], "=", 
   RowBox[{"traj", "[", 
    RowBox[{"0.5", ",", "0.85", ",", "0.009"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sol", "[", "9", "]"}], "=", 
   RowBox[{"traj", "[", 
    RowBox[{"0.6", ",", "0.5", ",", "0.009"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sol", "[", "10", "]"}], "=", 
   RowBox[{"traj", "[", 
    RowBox[{"0.5", ",", "0.8", ",", "0.009"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.887978731059854*^9, 3.887978757612252*^9}, {
   3.887978845812172*^9, 3.887978859965249*^9}, {3.88797894002472*^9, 
   3.8879789403355103`*^9}, {3.88797897759439*^9, 3.88797901355768*^9}, 
   3.887979128052725*^9, {3.88797923767091*^9, 3.887979237845546*^9}, {
   3.887979375257626*^9, 3.88797939675972*^9}, {3.887979429202385*^9, 
   3.887979516979513*^9}, {3.887979558765677*^9, 3.887979566700461*^9}, {
   3.887979612678831*^9, 3.887979664270924*^9}, {3.887979922277718*^9, 
   3.887979997391836*^9}, 3.887980080905983*^9, {3.8879801208038273`*^9, 
   3.88798015412414*^9}, {3.888054939843245*^9, 3.888054943018937*^9}, {
   3.888055844364393*^9, 3.8880558605745296`*^9}, {3.888055913193152*^9, 
   3.888055918216709*^9}, 3.8880559966976633`*^9, {3.888056036287993*^9, 
   3.888056085299884*^9}, {3.88805612209927*^9, 3.8880561244131937`*^9}, {
   3.88805618652389*^9, 3.888056190803598*^9}, {3.8883009702722473`*^9, 
   3.888301001671629*^9}, {3.8883010401298227`*^9, 3.888301112638144*^9}, 
   3.888301171388793*^9, {3.888301202257996*^9, 3.8883012287725487`*^9}, {
   3.888401380694333*^9, 3.8884013833951883`*^9}, {3.888401462909256*^9, 
   3.888401475754928*^9}, {3.888402651297779*^9, 3.8884027057433147`*^9}, {
   3.888402766916638*^9, 3.888402773252879*^9}, {3.888402855974597*^9, 
   3.888402864196711*^9}, {3.888402903096746*^9, 3.888402946812313*^9}, {
   3.888403012736313*^9, 3.888403096157276*^9}, {3.8884032087548103`*^9, 
   3.888403247818666*^9}, {3.888489447995303*^9, 3.8884895051140833`*^9}, {
   3.888490037967332*^9, 3.888490040111418*^9}, {3.888490190381372*^9, 
   3.888490217198759*^9}, {3.888490261568606*^9, 3.8884902856444187`*^9}, 
   3.888490345588728*^9, {3.888490385444446*^9, 3.888490433565915*^9}, {
   3.888490471348297*^9, 3.8884905040209427`*^9}, 3.8884905742833643`*^9, {
   3.8884906115904293`*^9, 3.8884906121573563`*^9}, {3.888491226084648*^9, 
   3.888491307356353*^9}, {3.888491447530752*^9, 3.888491453148313*^9}, {
   3.888491723304224*^9, 3.88849173695636*^9}, {3.888491840056816*^9, 
   3.888491850524074*^9}, {3.888491925330976*^9, 3.888491927396234*^9}, 
   3.8884921679597273`*^9, {3.8884922299757*^9, 3.888492232082346*^9}, {
   3.888492305215869*^9, 3.888492307130794*^9}, {3.8884936695307207`*^9, 
   3.888493672498828*^9}, {3.888493744369143*^9, 3.8884937514024687`*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"ab279bd6-3b53-497d-aab0-1f69cd520970"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve", "mxst", 
   "\"Maximum number of \\!\\(\\*RowBox[{\\\"100000\\\"}]\\) steps reached at \
the point \\!\\(\\*RowBox[{\\\"t\\\"}]\\) == \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"4.612797248309701`\\\"}]\\).\"", 2, 48, 24, 18333244020315986997, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.888493559248269*^9, 3.88849367970779*^9, 
  3.8884937560944757`*^9},
 CellLabel->
  "During evaluation of \
In[47]:=",ExpressionUUID->"aae3ad5a-7ec8-40a4-b45b-2c4596c1f105"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve", "mxst", 
   "\"Maximum number of \\!\\(\\*RowBox[{\\\"100000\\\"}]\\) steps reached at \
the point \\!\\(\\*RowBox[{\\\"t\\\"}]\\) == \
\\!\\(\\*RowBox[{\\\"0.2880765483876284`\\\"}]\\).\"", 2, 48, 25, 
   18333244020315986997, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.888493559248269*^9, 3.88849367970779*^9, 
  3.888493762309066*^9},
 CellLabel->
  "During evaluation of \
In[47]:=",ExpressionUUID->"1554fa04-03a6-4a72-ab28-198b9199983c"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve", "mxst", 
   "\"Maximum number of \\!\\(\\*RowBox[{\\\"100000\\\"}]\\) steps reached at \
the point \\!\\(\\*RowBox[{\\\"t\\\"}]\\) == \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"0.15351205292246484`\\\"}]\\).\"", 2, 49, 26, 18333244020315986997, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.888493559248269*^9, 3.88849367970779*^9, 
  3.88849376692312*^9},
 CellLabel->
  "During evaluation of \
In[47]:=",ExpressionUUID->"902d3412-7819-46fc-8743-06508bc4caa2"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve", "mxst", 
   "\"Maximum number of \\!\\(\\*RowBox[{\\\"100000\\\"}]\\) steps reached at \
the point \\!\\(\\*RowBox[{\\\"t\\\"}]\\) == \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"4.943696410163246`\\\"}]\\).\"", 2, 52, 27, 18333244020315986997, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.888493559248269*^9, 3.88849367970779*^9, 
  3.888493772817872*^9},
 CellLabel->
  "During evaluation of \
In[47]:=",ExpressionUUID->"6150bea2-d6bd-4d87-974c-db1171da9771"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve", "mxst", 
   "\"Maximum number of \\!\\(\\*RowBox[{\\\"100000\\\"}]\\) steps reached at \
the point \\!\\(\\*RowBox[{\\\"t\\\"}]\\) == \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"1.1279523750730953`\\\"}]\\).\"", 2, 53, 28, 18333244020315986997, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.888493559248269*^9, 3.88849367970779*^9, 
  3.888493779183766*^9},
 CellLabel->
  "During evaluation of \
In[47]:=",ExpressionUUID->"5c64a448-6f2f-4664-806b-048263f200fc"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve", "mxst", 
   "\"Maximum number of \\!\\(\\*RowBox[{\\\"100000\\\"}]\\) steps reached at \
the point \\!\\(\\*RowBox[{\\\"t\\\"}]\\) == \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"0.7551601915967381`\\\"}]\\).\"", 2, 54, 29, 18333244020315986997, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.888493559248269*^9, 3.88849367970779*^9, 
  3.888493786166119*^9},
 CellLabel->
  "During evaluation of \
In[47]:=",ExpressionUUID->"0de3d4b2-c647-4ee8-988b-258a3338f2a6"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve", "mxst", 
   "\"Maximum number of \\!\\(\\*RowBox[{\\\"100000\\\"}]\\) steps reached at \
the point \\!\\(\\*RowBox[{\\\"t\\\"}]\\) == \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"1.1279523750730953`\\\"}]\\).\"", 2, 56, 30, 18333244020315986997, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.888493559248269*^9, 3.88849367970779*^9, 
  3.888493792516329*^9},
 CellLabel->
  "During evaluation of \
In[47]:=",ExpressionUUID->"62887be8-ce38-4372-b3e6-1769c110ecda"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PhaseSpacexy", "=", 
  RowBox[{"ParametricPlot", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"X1", "[", "t", "]"}], ",", 
           RowBox[{"Y1", "[", "t", "]"}]}], "}"}], "/.", 
         RowBox[{"sol", "[", "i", "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "10"}], "}"}]}], "]"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"t", ",", 
        RowBox[{"-", "80"}], ",", "80"}], "}"}], ",", 
      RowBox[{"PlotStyle", " ", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"Gray", ",", " ", 
          RowBox[{"Opacity", "[", "0.75", "]"}]}], "}"}], "}"}]}]}], "]"}], 
    ",", 
    RowBox[{"PlotRange", "->", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.1"}], ",", "1.1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1.1"}], ",", "1.1"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"AxesLabel", "->", 
     RowBox[{"{", 
      RowBox[{"\"\<X\>\"", ",", "\"\<Y\>\""}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.887979052254037*^9, 3.887979188623329*^9}, {
   3.887979228021886*^9, 3.887979401632031*^9}, {3.8879794459550867`*^9, 
   3.887979470345598*^9}, {3.887979600112005*^9, 3.88797960112506*^9}, {
   3.887979692930244*^9, 3.88797971039893*^9}, {3.887979803249867*^9, 
   3.887979842918675*^9}, {3.8879800704105587`*^9, 3.8879801035747423`*^9}, {
   3.8880557121793327`*^9, 3.888055759237444*^9}, {3.888055829243101*^9, 
   3.8880558350643997`*^9}, {3.8880558766966743`*^9, 3.888055894503551*^9}, {
   3.888055934499653*^9, 3.8880559569798098`*^9}, 3.888056008344767*^9, 
   3.8880560546239023`*^9, {3.8880560971933813`*^9, 3.888056164628825*^9}, 
   3.888057209628414*^9, {3.8883010969077797`*^9, 3.888301106866012*^9}, 
   3.88838581273239*^9, {3.888401301027873*^9, 3.888401314603023*^9}, {
   3.888401394687004*^9, 3.888401408667405*^9}, {3.8884017594302588`*^9, 
   3.888401789202386*^9}, {3.888402657936475*^9, 3.888402689151956*^9}, {
   3.8884027196816397`*^9, 3.888402747418346*^9}, 3.888402867655637*^9, {
   3.888402952199245*^9, 3.8884030158848963`*^9}, 3.88840319449933*^9, {
   3.888481290475276*^9, 3.8884812980029383`*^9}, {3.888489390475148*^9, 
   3.888489391939361*^9}, {3.8884900467111473`*^9, 3.888490055668681*^9}, {
   3.888490178387621*^9, 3.8884901813827753`*^9}, {3.8884902264531507`*^9, 
   3.8884902567025623`*^9}, {3.8884902996831408`*^9, 
   3.8884903304819517`*^9}, {3.888490363367571*^9, 3.8884904089852037`*^9}, {
   3.888490452026869*^9, 3.888490461958329*^9}, {3.888490631698056*^9, 
   3.888490670629952*^9}, {3.888490727873394*^9, 3.8884907313632*^9}, {
   3.888490784986022*^9, 3.8884907867896223`*^9}, 3.888491331652866*^9, 
   3.888491783219448*^9, {3.8884921738170147`*^9, 3.888492174072651*^9}, {
   3.8884924965746803`*^9, 3.888492511687302*^9}, {3.888493520408711*^9, 
   3.8884935251960983`*^9}},
 CellLabel->"In[59]:=",ExpressionUUID->"d1867a21-95d4-4ef5-8a6a-6f8b494e6afd"],

Cell[BoxData[
 TemplateBox[{
  "InterpolatingFunction", "dmval", 
   "\"Input value \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"-\\\", \
\\\"79.99673469387756`\\\"}], \\\"}\\\"}]\\) lies outside the range of data \
in the interpolating function. Extrapolation will be used.\"", 2, 59, 36, 
   18333244020315986997, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.888492502880265*^9, 3.888492513509884*^9}, 
   3.888493525697905*^9, 3.888493594878367*^9, 3.888493727071602*^9, {
   3.88849379432371*^9, 3.888493800292921*^9}},
 CellLabel->
  "During evaluation of \
In[59]:=",ExpressionUUID->"c80d1290-2377-4e37-8835-996a3a7eff79"],

Cell[BoxData[
 TemplateBox[{
  "InterpolatingFunction", "dmval", 
   "\"Input value \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"-\\\", \
\\\"79.99673469387756`\\\"}], \\\"}\\\"}]\\) lies outside the range of data \
in the interpolating function. Extrapolation will be used.\"", 2, 59, 37, 
   18333244020315986997, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.888492502880265*^9, 3.888492513509884*^9}, 
   3.888493525697905*^9, 3.888493594878367*^9, 3.888493727071602*^9, {
   3.88849379432371*^9, 3.8884938012933817`*^9}},
 CellLabel->
  "During evaluation of \
In[59]:=",ExpressionUUID->"1ab11b52-d653-4f10-8de6-036acdb9d7bb"],

Cell[BoxData[
 TemplateBox[{
  "InterpolatingFunction", "dmval", 
   "\"Input value \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"-\\\", \
\\\"79.99673469387756`\\\"}], \\\"}\\\"}]\\) lies outside the range of data \
in the interpolating function. Extrapolation will be used.\"", 2, 59, 38, 
   18333244020315986997, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.888492502880265*^9, 3.888492513509884*^9}, 
   3.888493525697905*^9, 3.888493594878367*^9, 3.888493727071602*^9, {
   3.88849379432371*^9, 3.888493802456715*^9}},
 CellLabel->
  "During evaluation of \
In[59]:=",ExpressionUUID->"0ff58bad-d74f-4460-987f-482b131ff305"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"InterpolatingFunction\\\
\", \\\"::\\\", \\\"dmval\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"", 2, 59, 39, 18333244020315986997, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.888492502880265*^9, 3.888492513509884*^9}, 
   3.888493525697905*^9, 3.888493594878367*^9, 3.888493727071602*^9, {
   3.88849379432371*^9, 3.8884938034578447`*^9}},
 CellLabel->
  "During evaluation of \
In[59]:=",ExpressionUUID->"aa300f3d-6914-4d80-8bd6-249d5a3bceeb"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[0.75], 
      LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$10129#1"]& ], 
    TagBox[
     {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[0.75], 
      LineBox[CompressedData["
1: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
7ixRwX+8hjJK
       "]]},
     Annotation[#, "Charting`Private`Tag$10129#2"]& ], {}, 
    TagBox[
     {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[0.75], 
      LineBox[CompressedData["
1:eJwVV3c81f8XRiqkQRkVSlYqQilJPdHyVV1bKMpoKCslimgTStesCIkQZY+I
tz2vcT/2vLeUkmxJQ35+f53X8zrnjzOe13POkbR2MjjDxcHBcYyTg+P/Vv7E
YJ9FIw0mDTtsp2roROfVpliXThpo4a4rWhh0IviVMgvop2FaITEpq5FORDzP
ZDX8pIGfuzvOvZVO1MVH3QPX6+K4gAhjyQc6ef/P1YD7si5uxQzonJqhEz8+
pdHBpXqQEWy+VCQXRH6s53vwpUgPx3Us4twfBJHUcLXynnMGsHm+zGa5fTA5
L6H4TE3JCHtWKlpOGYYQFcHAwDMqJsgsj+lTOhZKlj10sa8pMMXz3dXneNzD
SHoWh4n57RNY/itUsu5NOBHt2KylLHQKAYvkMoxlnpJ8Vl0DPcEKm21XHYqp
eEZ6Dh8cT+KzhbxCo7jhjUjiFe/qFrrtHJIkbOl4HkWOz8SNdfRdwOWC3yEu
l2PI03vVnnynnFBhPXboE3lBDFnGSt2UC4RTHJvKz78kw7JN2bxvrmKJ4fgk
XSue1Me9DFU08oRgipMlOzOB2CtO3gxfdRtygbppU5mviWfx37lRCx+ctjnB
46P1lojGDOVTKx5jFyMv2vt1OrlspXvBU+YxjL+pPvbNTidyjYtGjqo/hqCh
yGBUcTpZelzivY3tY4gnz8pPtaWTMwKLOVzyH+NXqIvhfu4MouzhH+vtSIeM
7ZrfAVYZhHbodL7vryAkck540uUyySuv5MHGvDD0qXvd2vI1i0wsMX0+0xuG
HcdXHC2eySK7TB/eur4gHKwr0fcdeLMJw+LJ1Ue64VC79kJDaHM2Oe1wQk/k
eziced9qxThlkxWSY8lvdz7FAZusC52z2eR8oE/VY8lIzO2n0wOUcsldO9cv
h40iMb7eQr76QC6pmfL7cNcnEld5/+bKmOUS67qtC8NHI+F0ruDf4du5REz5
8iWdyueI2+shpNKWS/xirgpbBUbjQFjbrf67eSQwf3RhQOMLmLdtMdLhyCd/
jbun7028gJRHxfFZ0XxyZpGYwUehWCiJFTb0KOeTYuSurLKIRVArO3ODbT75
3lpz9uJELDr+PN3UXptP8GSxQ7xSHPpv+K02eVFAvk1fM2XzJ8B6P1vvv6uF
JMVm9s4lJEDNQIDrfmgh8f5Ik3/hkgB/80NPOLILyYO3ycKfuxJga6DMlzFV
SIyTro0jMxHi+XskRd2KyMeXxM793muc1iNnfXwJMWXdNYupfIvT+bxhFePF
5O6ZUC6Xpam4xrE48Tl3CfFKPXJYzjgVotrb+yNESkjyMnfro19S0SRwx4V/
bwk5+T7f380/DXd5UrVqAkpIpXu42N3mdBQf2yLCr1JKMmsyrC+1ZMFk7IFx
XVQZOVa49N02vmwYOi0e3pNbRsZV/1Vn7MuG40M5q8+NZWTtgpLFU6nZeBlw
d6yFs5w4yOZG94bnILxPSvrg+XJi2tNivflxHgSFTHnYqCAZC2TE7fYUomCd
UkiXeBX5eSHi9ciTQiw6FuOetK+K7E6ROPLlRyH6Nb8dqbWpItJjr379l1UE
ZvVb5oLkKpKjWrCiUrIYDbYso4t7qsnpVXZfFTtLEOYqR6JcaojK1vzptatK
YcZLK617VkPUXQUip3VLwfVHtIxWVkNklZOn7teWzvP33bsTQrXEz/+v04O6
MkwkbLQIL6wl1VsUpHU4KqHmLqqvKMEgX8tubBs8UglV8YQDOUcYRHvNlrj0
J5X4OvCyLOAag4jpXU9nqFYh6ahxy7o2BjlrlJD9wKsag2me5hlB9WTom+aE
1dE6tF3czyks0khOGyfyjCfXIbOlycFeu5HcWcNDa+Rn4Pq4+5++a42klz/M
ypNiYPudiy+4ehvJ9cXvWfEODQh5GKPTqN9E+j+cXTY+1oRgPtsv+kJMorXP
J0RKjokF0zM+dzYziZm2R2KnBRMdzYEfvTWZ5JLbarMqBhPmezycy+yZZKcE
zxq7NAotH6+eYBMmSbLWsLv6jQKpthZraGYSRrtG36h0M0KO/DEz+MIki5xt
eAQimpFpZLVmkp8iyyS/xb1pa8bJS5XcvyUo8tT31I4YwRacF67cba9Eke7b
KXUe/i34Of3piqc+RZxrqq3NqlswefnbLm4rijiKMSLcFrZiLU9Hfb3TvJ/9
lbdRqxXuRTG5tTcowntdf5/pzVasjN3p9d2PIpW/1VuWFLVCtqLwjXQ4RaRH
duz8/KcVEaWqyvaxFClYf25T3642LN1142luCkW27JMKG3Zrg/nCcsmpbIqI
/i615stpw2lu9YXLiyiy7u9z981TbZgVXO79o5wiHyeXFB9WaceyZZdrQ2op
Ir/ng7SJczsk+0cUuxoownUnJEr3bTtOHNNWyWdS5E45Vbb5eztI7YJr0s0U
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
ouN/C9mOTQ==
       "]]},
     Annotation[#, "Charting`Private`Tag$10129#4"]& ], 
    TagBox[
     {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[0.75], 
      LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$10129#5"]& ], 
    TagBox[
     {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[0.75], 
      LineBox[CompressedData["
1:eJwVkXk4lAkAhx0plSglRGpGQ7KNLqXCrxzfaCySjlmZFJWKWA8Rm1FSKaxP
IcmtRi0bGndoupCj6DAaaciYcU8HEbvZ9o/3ef99n+elePjtOqIgJyfH/sn/
ptea/0hV7oNeuGP6v9MyRC/t1NQukkDsaLDg/JQMJz45hFb39qLAuNxXIJaB
FH1iLgrvhcktvSz+AxmCh9g0nkkvzDdPWZw/J4O951u77xIxKmzpr2o3yWA8
tMMpLUMM4b0ZWv5dI7g6rqyZtU+Munn+HyLCRuC1QtBspioGLSfdYWr+CKR6
nZf1n/RgLEO1syZ1GE0uJTdZQT1gqZ1lJVCHISeYo7us/SP+2MUq8qAOwTqy
OzXcsgtUfb9n+9T7QKtL2d32VgRLdlRCynUpghe8qWs0EYH+OBuVy6SItpkr
LpB24jj7fUbhJgkUKW+3r/btgGlXdtpAlBgFNfIe9G9toCZpr2Xld4O50buG
YtSCA/T46mhKB+qvBhqcTHqJAO7A2I0iIbQ3xB/4JnoBKxtnw9c2QqjVuQjj
I5oxO5x20inwHa7bGtwblG/EzCVCHa9RASYNAzruNNTC7+9QO90jb9Ghtd1l
spyPDlef9v64VhSZ38sx8+FjxYamiSx2Kz7vXHfJm8KH5Z6G9d6/tOK7vLWK
kPoQ8aHGs1WbW1BB93AvU6mGKG1I1qTdAsv6DUyOfwUqvrrfHSptRr/RtoCF
YzzoeI3N1yl/Dv3g02F+RTxMZkksHkY+R6ezrr+uHw+xrA8zjXc9h+bKH1bb
R+6D2JxLt5HVY1yY0CCYLIL7gOnTOevq4fZka99tRuHPn+bqSoJaXPwrYqW/
ah4yiy2lk1FP4TEe8qfylRwwb8QtWqHxCEvrlOg39uWALrBnHvyHjxFqnMIg
LQec4PMuPT18aM32NXv6NBs5ibmBFTw+jhK0Q9NzsnGrc74oZi8f+XWUBl5p
JqqnZFYCp4cQbaFeMh1ORfX6ArkNkipMNrlOx9gnoaA99I3J3AqcM+tIpVCS
cGY8K1P9czkuDT7YsmY8EVRH/QljQTk07uzkF99KxGlTr9fTOeVYPXVHZqyU
iIHhPQo628rhav3Jfb/wGjjHlqYlnivDi8VzmB8a46Gw8ZXXB1oplmz13FGl
GQvnq0Un0cFDF/+sOGA8EgcHg44lcAvx3qheWj8jHK8nrHrCXPMRrKfjmetw
Gi3Vvm5jfXfQv/hAYDQ3ACW9kthJay7K4iM5hWN+UGMNq++cyEH2Ewah0nYC
P9ixeVfMshFjNdp/5tpRMLgViu9uZSIwuTd/7JQnKj+Htac3p+N4pDiFM30Q
TyqtGnnFqej/oSrJvc2GkiutXvAgBaVfgg+7ObrCPc98bduyG1A2jd8Sy9yH
s3xbJXbSdfjZ+nC0WnYjV8fMJmVbEtgO9im67bsw++Ksl8b6iThW/HUyWdEZ
yZFVnGyVBIR8Ycde0HDCBNVnz33KNZx1jLEOjfkVNdpRhmynqwjjvFo8spyJ
oKAjlHuceKx6tqxFkWaHdw5d8luaSNiOqwkLde2QpmfRZvGcxModEnuPRXY4
9phWbVVLolCUz3qlaAeTMDrfiU9ieVdQoeQjAxZJRleCiknc/Z1r2JnFwCoV
GvdbKomd3SV3pVQGhCUGj6p8SYyEJKYv0WEgUCWvstubxLwX1y86L2RgYOZ+
3qzjJOzMfSiNigxEdbdm7PUkITUz0h0WE7CYYbhbjkVidPTmaF8uAa+S5uyI
7SQyYhuO/JZJQJrsSZRZksgzqYxrTiZQqHxKNLSVhIu+zTT/MgGTS+ky140k
1rcKJK+9CXDbNIOtjEloVfeUHTpMQPtrYglnJQnmu/AVX90IKJNl4gc0Egs2
tjxa7kgg2DZEffNyEu7bzAarCAKK+3vUQpaSCFRNznIDAYPByKmKJSRWXdjR
Pb3pZ9/o4zdTmiQOXeZyuWsI2J9SuGmpQeI/0/XOYA==
       "]]},
     Annotation[#, "Charting`Private`Tag$10129#6"]& ], 
    TagBox[
     {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[0.75], 
      LineBox[CompressedData["
1:eJwVxWk8lAkAB2BSoZRISjGulA5Hh0psf/S6rxqKDu1maYRIh9uqKCvlnTFy
5BglJXcxGkXRVCjKtKTGMSZMomZSKpTs7ofn92h7B1N9Z0hJSXn95/9Nfk/e
7C03hGzXZ2VT0xJw0ri+7YkitHE2laz4KUGcRFhz7M4gNK1464NEEhSLraoo
doOANhlqel8CPWaEUfzwAK5kGEjVx0ugnMqUGSYHIFCyOphhJoHVtu30nRsH
0FZHzE0dEMPerkY+41U/TM3Tt+WcFiN6Hn84ObQfLRYtgSwVMRYkiMqCVfrB
v3V8JID1EeyZI2OpFW8xMK8tkaP7EbNfSP2gDgpxoo9t2Uj5ADkrD9Vyxz6U
x7dPyU6/h8n7AIpOqwDSz/1NosPeg72tsMxtlgDmJfJE+OgQvFRUVFgxPXgk
eVs7NvwOE7ciikvT+eCJC5Qmfwwi492p05rMDojSvn8LLH4LmmW0c4t0K2Kq
w3ZUT3XBRZO2crNdC7YaVbJ/neqCzvcTdb2pzyBY7sJbKteForiTf0vwFMfT
UprWavORdrZ1u2FnI2Q940OnI1/DpUh2C1vAhepGVSdUdsA8M+lbTXUttjnI
UINYPPgwSqynDGrhvEogm+vPA1fjJjFReA/nOpQtfm7iodJsZMaVm3dhsNf+
mtY/bXDgS71yfcmB1uqZavOXtGH93NrKi0VsBHEKp6uyWuEcG3ys9mMFNJYr
/jx0uhnqPZYGlZUVOETbRfvs1AzpktH2jsgKVAUq/EVVa0ahWaxXtEIFmqvH
90dVNWEx17a3L7wM22Xf0ERfGiFtnDi5g1kMGZf87ibmE4ioFdsbhq5Daqn6
GYrFI/j4LzpomJIH7ugaZfrTeri7WRpyaXlYlZiq0H2rHoxz+1SmfstDN2GV
ezSzHgGPt3zLe83CxMow4ZHD9QhRE7vb5eXCJuc7P1OhHlxqRJKzTzZmPbxv
VFh3H6HzVxonZGdANPnNONizFrHHZTUC5zDR2DjsNpDAwey4o5JGUQreoKxb
PYiDmn3Bzee5KQj+MGlxwZ2DN875MfgrBUuln08o6HBwMkLVfus4A3LDpffi
HtxBtVJtjNYUHTK2I5O3Ze7A61LPjqK4ZPw5tNxIvZQNaZMqhTNyiRj22yfU
D6wExf56SKT+GdD6rnbI2FZgrDch56p8FDSo2kdo1cXI8q/TanQ4CV7/gv0s
z0K49jk5XHQMgVXhH8IAbgGm0w+EelgG4k6Ol6nwbD4SuozXtPBoCHeLfbCK
dwVNDH7ruLoPBJdn9UTb5oHZZTZC8TmIqPLUhgKdXNBdDtVohh3AkFuUzZhq
NtzCFctNC/ZixaDBuwurL0Pb3s+VUemBWO8J3ouMDBzeukUrR34XuuNtZ2mq
pWMsi+LH76Sipe9wFv/ZJbw6yzB/orYTfoYzIh+wU5GUF8h6MuqC7F5zY4Pr
TDxlZCeHuDohsKvVrLc+BavHP1Dz5jrAyFP/+IMvDKTzg27MEdris+L+dj19
BvRMZsdtVLPBXc1PLl8j6FDp6Sq9q2SD/hh9u7lhdMjv6aon5thgXWeRk84J
Op43JaX4/LAG5bz7SbcgOi77U5Je9liDuafU5KE3HSGth2f65luDKpz+2uZI
R2wD47bzOmtk3TjDKKfQsWHgRbnDamuMXfHtG1xGR3xNp6GjrjWuz3+mr6FG
x8uw8ILdi6zxw3kgP3khHXw9/2XpEwRutzRsiJGjo93riNe9hwToan5RCwZJ
qBoc+C6+R8CrU/dRloAEkTsk0GMTUBpVF+vzSaz1/kXm3CDwZdcuod0LEtPU
TOWqCwTsqhv0WDUk3FW4jdLnCHTrOu4xrSKxJVh8ixpL4JO+oW9HGYlzH2OW
/Aoh4LuYlF54jcSr+dHJngEEShTbyapcEkmPy9dW+xCwqJP67JFJIm2BSKJ6
gEDqjfEVU0wSYvFIe6QHgaW7WQbXkkn8CyNz0o8=
       "]]},
     Annotation[#, "Charting`Private`Tag$10129#7"]& ], 
    TagBox[
     {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[0.75], 
      LineBox[CompressedData["
1:eJwVxWk8lAkAB2CZNpWrsKw2lUjTMSpF0+XPO0WmHOWIotQaIU26JCskCU3z
jqNJJOTKjKXT2HWkSOMqkyvkGFfJoo3QNXb3w/N7dI+c2MuSl5OTc/3P/7fN
v6DfrvAeA8o3T05Pj8I920lmFz6A7NCay+wfo/DwvdvTcb0fjSKbDwODo9gS
9rGSr9mPp85fvcrLR2FOydnTnNGHKr9V7QacUdTWdj/6YNQHxwOerJjto4gJ
eUjXKO3F1y9+bcUjI9hEu6e81KIXC/f7nLvAGQE9RaTqaduDTiu3UUXBMHzU
Pw3RXktRcIbeakMbhr8mO7vQQYqlErl9nwV/43hkjfuTA93Y72KvSkkagvys
4Z1hz7rQ9CNyukZ1CEQ1TeWxpBOZDayE1EsfEDbS+0JL9hYaK/s63xwbhLlB
qlT9VivyfEb0g2zeYcjYWW1CoRGHlaaPNSf2osOw+21mUhWKKSqmmyVv0fZG
9U/592Jclp115O98C8f8TcnMLWJEntXxPlTRjp4VwRs9PldCZ100LUrcBrZW
s6QivwINsRZpKbI3yHsuWtao8BTU16Y2AfLNeCBnnO25qRDSTt/1/Q8lSLYn
GT1PRRijlLnfD5LgRkh5+2trEf7yFyqKLSRYTxWxE08UgJUUH5vbWQ+p/fkC
dssjVDutZpksrMdyPifPWfcBVI5EFDOv1aHFSRbga5ILz3vG6u77quAzOXad
3yhEydzx7S26VfALuNNRdUaIhhCqkeGwGLkJ/6ipFQkwh672jBUhhrOT40SI
Ww6+t17oOPTsBU4Vn5Ft+5gFPULj1RvXSmQXvS7ZppSOg4a6oYXyFdAsV1DW
5CfBZoNvTWhUGeiL47u7bJPwdUZzv9ivDEJ79YiSuUnwHTf75YBzGb5rd95I
vZSIHUEpa1yoZcgYslUOungTgnmW+vQbT/Crzv0Zijk3cDvD87331lI0HppY
axYdDzUWVfK8tQhNhXlRBr0k6mVMTsK8QnynvV9hfZeEnrYwXnVShKlrt+IW
skmUWD/0L+kQIciaXy38xoVik4ZakVAEO8pUy45FXLBmns1eyRSBGedTNBXM
QRe5V2kjrwAR7S1fVO5E4YJXlculbY8RJ5FS7bQvQ1PZdHDjzIdw+lpbR6sJ
xnj30dSxlnwohSQa9ymfgwf79ukcTSHsfLxdP5qeAqtzot6kOhubF1fqL6s8
jox1+inGjEycWejctMHXC319Lpnb1NIRfdCqipnjAXPDMQuvo2nIel4QaBl2
GPmVdyKK61LwJHmsdeLQQRhcjY6l+SUjYXnUopG8/ZBuymoyOZmE31e1cO2P
7sOR1Pq5r3g3kR74JH57hwNaugppabMT8HIpU0aN2QtHX89A/1g+eFP4dEBo
h+yjKleCra9jUi7ud39bG1yaLCjQMY1H6SJQWgN3oc7sceku4zj8SL+4OHqN
FdLWRtTmOcbiZeLyFJmxJby/nS3+41oMwuVXR2vZ78D3VUpdLi94OBK6RDuv
goEGK3udXB0eaOHXm5eUMoDQSPOmBTw8NXAb4IsYkNe87T2txUOmedk4R8BA
UiGr3EmNh92prXGpPAbqrSzI+Qo8zOadU/dwY0BpPc+QLSUhuOfQav2FQOA9
h7KgKBJ0V8GowRiBZnNHJZVwEk0njbQowwRc9WqRFkwio/FxTEU3Ae0odZe6
0yROM699OyYmkFn6gr71IAnx5eQ2ZgKByNri6tPrSVxVkqo6xBIwIhR/1jMk
Id9baezOIVBVLzBppJI4FuC462IogYEPDd+2LCKxQCvMY8CLAP0T56TuHBK7
h9v7Z/1GgKuit7+LQoIyi2e50o2A4d3J+SkyLjynetLP7yEQ/pP9kN44F89f
nkjM3EXAbmnT3MERLtSlRt6NOwgksDmf8we5yKLpqcwyI/CO7y8I6OOi7cHG
K5s3E6i2jKEyurj4FwFfyBQ=
       "]]},
     Annotation[#, "Charting`Private`Tag$10129#8"]& ], 
    TagBox[
     {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[0.75], 
      LineBox[CompressedData["
1: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

       "]]},
     Annotation[#, "Charting`Private`Tag$10129#9"]& ], 
    TagBox[
     {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[0.75], 
      LineBox[CompressedData["
1:eJwVxWk8lAkAB2BSoZRISjGulA5Hh0psf/S6rxqKDu1maYRIh9uqKCvlnTFy
5BglJXcxGkXRVCjKtKTGMSZMomZSKpTs7ofn92h7B1N9Z0hJSXn95/9Nfk/e
7C03hGzXZ2VT0xJw0ri+7YkitHE2laz4KUGcRFhz7M4gNK1464NEEhSLraoo
doOANhlqel8CPWaEUfzwAK5kGEjVx0ugnMqUGSYHIFCyOphhJoHVtu30nRsH
0FZHzE0dEMPerkY+41U/TM3Tt+WcFiN6Hn84ObQfLRYtgSwVMRYkiMqCVfrB
v3V8JID1EeyZI2OpFW8xMK8tkaP7EbNfSP2gDgpxoo9t2Uj5ADkrD9Vyxz6U
x7dPyU6/h8n7AIpOqwDSz/1NosPeg72tsMxtlgDmJfJE+OgQvFRUVFgxPXgk
eVs7NvwOE7ciikvT+eCJC5Qmfwwi492p05rMDojSvn8LLH4LmmW0c4t0K2Kq
w3ZUT3XBRZO2crNdC7YaVbJ/neqCzvcTdb2pzyBY7sJbKteForiTf0vwFMfT
UprWavORdrZ1u2FnI2Q940OnI1/DpUh2C1vAhepGVSdUdsA8M+lbTXUttjnI
UINYPPgwSqynDGrhvEogm+vPA1fjJjFReA/nOpQtfm7iodJsZMaVm3dhsNf+
mtY/bXDgS71yfcmB1uqZavOXtGH93NrKi0VsBHEKp6uyWuEcG3ys9mMFNJYr
/jx0uhnqPZYGlZUVOETbRfvs1AzpktH2jsgKVAUq/EVVa0ahWaxXtEIFmqvH
90dVNWEx17a3L7wM22Xf0ERfGiFtnDi5g1kMGZf87ibmE4ioFdsbhq5Daqn6
GYrFI/j4LzpomJIH7ugaZfrTeri7WRpyaXlYlZiq0H2rHoxz+1SmfstDN2GV
ezSzHgGPt3zLe83CxMow4ZHD9QhRE7vb5eXCJuc7P1OhHlxqRJKzTzZmPbxv
VFh3H6HzVxonZGdANPnNONizFrHHZTUC5zDR2DjsNpDAwey4o5JGUQreoKxb
PYiDmn3Bzee5KQj+MGlxwZ2DN875MfgrBUuln08o6HBwMkLVfus4A3LDpffi
HtxBtVJtjNYUHTK2I5O3Ze7A61LPjqK4ZPw5tNxIvZQNaZMqhTNyiRj22yfU
D6wExf56SKT+GdD6rnbI2FZgrDch56p8FDSo2kdo1cXI8q/TanQ4CV7/gv0s
z0K49jk5XHQMgVXhH8IAbgGm0w+EelgG4k6Ol6nwbD4SuozXtPBoCHeLfbCK
dwVNDH7ruLoPBJdn9UTb5oHZZTZC8TmIqPLUhgKdXNBdDtVohh3AkFuUzZhq
NtzCFctNC/ZixaDBuwurL0Pb3s+VUemBWO8J3ouMDBzeukUrR34XuuNtZ2mq
pWMsi+LH76Sipe9wFv/ZJbw6yzB/orYTfoYzIh+wU5GUF8h6MuqC7F5zY4Pr
TDxlZCeHuDohsKvVrLc+BavHP1Dz5jrAyFP/+IMvDKTzg27MEdris+L+dj19
BvRMZsdtVLPBXc1PLl8j6FDp6Sq9q2SD/hh9u7lhdMjv6aon5thgXWeRk84J
Op43JaX4/LAG5bz7SbcgOi77U5Je9liDuafU5KE3HSGth2f65luDKpz+2uZI
R2wD47bzOmtk3TjDKKfQsWHgRbnDamuMXfHtG1xGR3xNp6GjrjWuz3+mr6FG
x8uw8ILdi6zxw3kgP3khHXw9/2XpEwRutzRsiJGjo93riNe9hwToan5RCwZJ
qBoc+C6+R8CrU/dRloAEkTsk0GMTUBpVF+vzSaz1/kXm3CDwZdcuod0LEtPU
TOWqCwTsqhv0WDUk3FW4jdLnCHTrOu4xrSKxJVh8ixpL4JO+oW9HGYlzH2OW
/Aoh4LuYlF54jcSr+dHJngEEShTbyapcEkmPy9dW+xCwqJP67JFJIm2BSKJ6
gEDqjfEVU0wSYvFIe6QHgaW7WQbXkkn8CyNz0o8=
       "]]},
     Annotation[#, "Charting`Private`Tag$10129#10"]& ]}, {}},
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox["\"X\"", HoldForm], TraditionalForm], 
    FormBox[
     TagBox["\"Y\"", HoldForm], TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{886.5, 596.},
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "ScalingFunctions" -> 
    None},
  PlotRange->{{-0.1, 1.1}, {-1.1, 1.1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.888301030336822*^9, 3.888301114960032*^9}, 
   3.888301173925928*^9, {3.888301205127512*^9, 3.888301234454039*^9}, 
   3.8883109477529917`*^9, 3.888385574889071*^9, 3.888385742193818*^9, 
   3.888385831174666*^9, {3.888401369404501*^9, 3.888401409241605*^9}, 
   3.888401478708088*^9, {3.888401738446601*^9, 3.8884017898472633`*^9}, {
   3.888402629567595*^9, 3.88840274794925*^9}, 3.888402868242173*^9, {
   3.888402904739884*^9, 3.8884029210149517`*^9}, 3.888402952812084*^9, {
   3.88840298558711*^9, 3.888403016305736*^9}, {3.888403053713262*^9, 
   3.888403098092869*^9}, {3.888403191510972*^9, 3.888403249763896*^9}, 
   3.888481303567102*^9, {3.888490173266493*^9, 3.88849050612042*^9}, {
   3.8884906167614727`*^9, 3.8884906712607317`*^9}, {3.888490728706017*^9, 
   3.888490731862463*^9}, 3.888490808423709*^9, {3.88849133212434*^9, 
   3.8884913887580223`*^9}, 3.8884914918843403`*^9, {3.8884918090132113`*^9, 
   3.888491831233534*^9}, 3.888491881031196*^9, {3.888491970196293*^9, 
   3.888491996987602*^9}, 3.888492060499682*^9, 3.888492152798731*^9, 
   3.888492213201564*^9, 3.8884922711816063`*^9, 3.888492353990204*^9, {
   3.88849249727351*^9, 3.888492517808079*^9}, 3.888493525916959*^9, 
   3.888493599373941*^9, 3.88849373190307*^9, {3.8884937988045464`*^9, 
   3.888493804788101*^9}},
 CellLabel->"Out[59]=",ExpressionUUID->"3c79622b-59f9-4905-b7b1-20874f6eac71"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"PhaseSpacexy", ",", "FPShow"}], "]"}]], "Input",
 CellChangeTimes->{{3.8884935326801367`*^9, 3.888493536164967*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"72dee9e4-f7ba-4e38-934b-622cb8f77c21"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[0.75], 
       LineBox[CompressedData["
1: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
        "]]},
      Annotation[#, "Charting`Private`Tag$10129#1"]& ], 
     TagBox[
      {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[0.75], 
       LineBox[CompressedData["
1:eJwVVHk4lXkUvkm6JC2aRmWZaGhUioyE5kjpakGydC2ptInURWZkiUaSMspS
SlHSItwW3VJD/XRLIhnLjWu53O37fXfBlWzRZL754zzneZ9znnPe857nnMVB
x3YcUKPRaIGU/e+LebWyik4V5BsSlavqVIh78sah8IQ+2DU9kBhP70UX6bwc
iWUvzGXREj2GFShgT1r3ly1K0HMTVDaSciRzui0u1VLAqL9kpfNJGeLwr6vV
ZsmBuaZFEfiVRJrVsAxbyMHwTbF5ZwqJ/D8sPzQjTQbPK1sC6j5g5NseEuq9
WQZ7s/Oe7IjFqJ6x3stKRwZ+9Qucf7LEaBa3MWtVMQnOm1QO5H0C3U3z7ryT
QEJae1NiWQiBGvYUeDj6kkBXxcgZKwgUGtKoGWxDwr+4lccfkKJm/dvFaD4J
27l5d99wpGhIP0Ux8hXDhGXyRHi0FGn6X0xh92DYXHrpoIu9FI3x2euKajCc
RMam5d8kaGKgX+vJYwzzO7wFlpUSFKH2cDgjD4PNyIoHFickSJjbetDgPIbv
29cwDVZL0HG+5wbLGAwLtEbvHZGLUccFd+OiEAxXlkyLO3dNjMibLM/9AVQ+
nS4TuIgRl1FC2+KOIW+Z5skPAyI0t+Zh7/oNGAr97FSlmSKUnBH2h40tBsmC
zG3tK0To+0KwmGeBIfvwptbC10J0a7PBhrolGM7sZ9dvdxWiAJPIXBd9DL9/
HG/xvdmDrn95dOPUPAwOQbYJXzK7Ef21xvHgmRi+Wl+4RLIEyFFpVPJZA4Px
9xfZAtsuZLolRl13CobB5zPvJcg70L2DLaXcCQJEjozOF6fakZ5t3fuxEQIe
uz/0vUzjo3Vmfr3sQQK2CwYrZh9oRYwCvnpnPwEGw8opKQ94SP9Qo3OMkoDd
bdHOVoJmpMeocTsjI2Dhjz4GwZ8bkYfavqvjBAFioawhjv8R2SM33RYJAZwl
RUu882uR/pSlkdpiAqpiDj/TWFuNlCnXugqFBLz1eVE6wa5Ckz07zXN6CPBs
Uhoh+nO09EnaZWk3AbwdaU5LZ7ORdqr1L+cp7GJNP5vOzkL2iWs9z1H4Ve0G
9whVJkgGBm3EFA5aWlCUzSmFcvmhRVlUPZ/u4AaysxwqmDytfKpf3N67AmFO
FbT0jfWqU3zq+dOzk0yqgX5Xu66W4htmU1STm1oL4SFloSpqnvU7b/glvP0I
of96rD5BzcsKCeZIyUZga9iVh1B6OC9zvebAa4aXr9Pb31N6qRtxJtvu8GAe
LVDzKqXnFT1uSFlAKzDEK1aKKL3NmdyrPWNtoP5rdFQ6tY/xrtLpOyLbodzc
t6eShkHHurjD5VMHCLt3sSKpfXb7LDPMMOoCq8T46gptDEVNtkm7PQVwueOH
lHxdDKeG9Dz6w7vBWBDbYrqIijuv90mL64EZVhmz95pgqP7HSdfVTgheSfQn
zOUYimPKbr1kC8F7eETN0AbDY0XkfKcFIvDoivVFjhgSqsPgXLwIUFryO7dt
GPZw2O4OnSJQrG7bLGJiGKrq0BqxEkNF07fjqQcx3J+bl+KbLAa9GaGJ+6Ko
/gGpj0abxaA2xmKlJlP3ET4SHaQvAZeG0zMX5mBwivI3NwuSwJjPsaY1xRgY
sVfJ+tsSEMQsKtZEGII9nn5ql1LxAo7Hy08YHsXOSWk0lsLfW4sKk/oxcFPj
Iq13S6G31uRIriYJu71mbD2fK4VJG84QmJEQo7zD8/skhdNGRx0bGCTMH52a
YD+bAK1MBjsvlISNYWGDb7YSEO+8cXBhFglfRlmrr50lIGpA5339KxL4EZ+V
iTXUXYjTXY/+LIMzmczfJt0wNHNWyttc5UCvstUfpP6Y3TduSclTOeh/MB0P
MpJBfM8sFmOVAvY7JCX7F8nANC89Z+tbBej0B96/4iaHDi+3/PE4JTRH0dqC
FyvgcuGzvyJYvWDWYpZj7KgEJuvC1PbOPvBiGpXdn9YHc9qOvWl6p4I/7d03
7ixRwX+8hjJK
        "]]},
      Annotation[#, "Charting`Private`Tag$10129#2"]& ], {}, 
     TagBox[
      {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[0.75], 
       LineBox[CompressedData["
1:eJwVV3c81f8XRiqkQRkVSlYqQilJPdHyVV1bKMpoKCslimgTStesCIkQZY+I
tz2vcT/2vLeUkmxJQ35+f53X8zrnjzOe13POkbR2MjjDxcHBcYyTg+P/Vv7E
YJ9FIw0mDTtsp2roROfVpliXThpo4a4rWhh0IviVMgvop2FaITEpq5FORDzP
ZDX8pIGfuzvOvZVO1MVH3QPX6+K4gAhjyQc6ef/P1YD7si5uxQzonJqhEz8+
pdHBpXqQEWy+VCQXRH6s53vwpUgPx3Us4twfBJHUcLXynnMGsHm+zGa5fTA5
L6H4TE3JCHtWKlpOGYYQFcHAwDMqJsgsj+lTOhZKlj10sa8pMMXz3dXneNzD
SHoWh4n57RNY/itUsu5NOBHt2KylLHQKAYvkMoxlnpJ8Vl0DPcEKm21XHYqp
eEZ6Dh8cT+KzhbxCo7jhjUjiFe/qFrrtHJIkbOl4HkWOz8SNdfRdwOWC3yEu
l2PI03vVnnynnFBhPXboE3lBDFnGSt2UC4RTHJvKz78kw7JN2bxvrmKJ4fgk
XSue1Me9DFU08oRgipMlOzOB2CtO3gxfdRtygbppU5mviWfx37lRCx+ctjnB
46P1lojGDOVTKx5jFyMv2vt1OrlspXvBU+YxjL+pPvbNTidyjYtGjqo/hqCh
yGBUcTpZelzivY3tY4gnz8pPtaWTMwKLOVzyH+NXqIvhfu4MouzhH+vtSIeM
7ZrfAVYZhHbodL7vryAkck540uUyySuv5MHGvDD0qXvd2vI1i0wsMX0+0xuG
HcdXHC2eySK7TB/eur4gHKwr0fcdeLMJw+LJ1Ue64VC79kJDaHM2Oe1wQk/k
eziced9qxThlkxWSY8lvdz7FAZusC52z2eR8oE/VY8lIzO2n0wOUcsldO9cv
h40iMb7eQr76QC6pmfL7cNcnEld5/+bKmOUS67qtC8NHI+F0ruDf4du5REz5
8iWdyueI2+shpNKWS/xirgpbBUbjQFjbrf67eSQwf3RhQOMLmLdtMdLhyCd/
jbun7028gJRHxfFZ0XxyZpGYwUehWCiJFTb0KOeTYuSurLKIRVArO3ODbT75
3lpz9uJELDr+PN3UXptP8GSxQ7xSHPpv+K02eVFAvk1fM2XzJ8B6P1vvv6uF
JMVm9s4lJEDNQIDrfmgh8f5Ik3/hkgB/80NPOLILyYO3ycKfuxJga6DMlzFV
SIyTro0jMxHi+XskRd2KyMeXxM793muc1iNnfXwJMWXdNYupfIvT+bxhFePF
5O6ZUC6Xpam4xrE48Tl3CfFKPXJYzjgVotrb+yNESkjyMnfro19S0SRwx4V/
bwk5+T7f380/DXd5UrVqAkpIpXu42N3mdBQf2yLCr1JKMmsyrC+1ZMFk7IFx
XVQZOVa49N02vmwYOi0e3pNbRsZV/1Vn7MuG40M5q8+NZWTtgpLFU6nZeBlw
d6yFs5w4yOZG94bnILxPSvrg+XJi2tNivflxHgSFTHnYqCAZC2TE7fYUomCd
UkiXeBX5eSHi9ciTQiw6FuOetK+K7E6ROPLlRyH6Nb8dqbWpItJjr379l1UE
ZvVb5oLkKpKjWrCiUrIYDbYso4t7qsnpVXZfFTtLEOYqR6JcaojK1vzptatK
YcZLK617VkPUXQUip3VLwfVHtIxWVkNklZOn7teWzvP33bsTQrXEz/+v04O6
MkwkbLQIL6wl1VsUpHU4KqHmLqqvKMEgX8tubBs8UglV8YQDOUcYRHvNlrj0
J5X4OvCyLOAag4jpXU9nqFYh6ahxy7o2BjlrlJD9wKsag2me5hlB9WTom+aE
1dE6tF3czyks0khOGyfyjCfXIbOlycFeu5HcWcNDa+Rn4Pq4+5++a42klz/M
ypNiYPudiy+4ehvJ9cXvWfEODQh5GKPTqN9E+j+cXTY+1oRgPtsv+kJMorXP
J0RKjokF0zM+dzYziZm2R2KnBRMdzYEfvTWZ5JLbarMqBhPmezycy+yZZKcE
zxq7NAotH6+eYBMmSbLWsLv6jQKpthZraGYSRrtG36h0M0KO/DEz+MIki5xt
eAQimpFpZLVmkp8iyyS/xb1pa8bJS5XcvyUo8tT31I4YwRacF67cba9Eke7b
KXUe/i34Of3piqc+RZxrqq3NqlswefnbLm4rijiKMSLcFrZiLU9Hfb3TvJ/9
lbdRqxXuRTG5tTcowntdf5/pzVasjN3p9d2PIpW/1VuWFLVCtqLwjXQ4RaRH
duz8/KcVEaWqyvaxFClYf25T3642LN1142luCkW27JMKG3Zrg/nCcsmpbIqI
/i615stpw2lu9YXLiyiy7u9z981TbZgVXO79o5wiHyeXFB9WaceyZZdrQ2op
Ir/ng7SJczsk+0cUuxoownUnJEr3bTtOHNNWyWdS5E45Vbb5eztI7YJr0s0U
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
ouN/C9mOTQ==
        "]]},
      Annotation[#, "Charting`Private`Tag$10129#4"]& ], 
     TagBox[
      {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[0.75], 
       LineBox[CompressedData["
1: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
        "]]},
      Annotation[#, "Charting`Private`Tag$10129#5"]& ], 
     TagBox[
      {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[0.75], 
       LineBox[CompressedData["
1:eJwVkXk4lAkAhx0plSglRGpGQ7KNLqXCrxzfaCySjlmZFJWKWA8Rm1FSKaxP
IcmtRi0bGndoupCj6DAaaciYcU8HEbvZ9o/3ef99n+elePjtOqIgJyfH/sn/
ptea/0hV7oNeuGP6v9MyRC/t1NQukkDsaLDg/JQMJz45hFb39qLAuNxXIJaB
FH1iLgrvhcktvSz+AxmCh9g0nkkvzDdPWZw/J4O951u77xIxKmzpr2o3yWA8
tMMpLUMM4b0ZWv5dI7g6rqyZtU+Munn+HyLCRuC1QtBspioGLSfdYWr+CKR6
nZf1n/RgLEO1syZ1GE0uJTdZQT1gqZ1lJVCHISeYo7us/SP+2MUq8qAOwTqy
OzXcsgtUfb9n+9T7QKtL2d32VgRLdlRCynUpghe8qWs0EYH+OBuVy6SItpkr
LpB24jj7fUbhJgkUKW+3r/btgGlXdtpAlBgFNfIe9G9toCZpr2Xld4O50buG
YtSCA/T46mhKB+qvBhqcTHqJAO7A2I0iIbQ3xB/4JnoBKxtnw9c2QqjVuQjj
I5oxO5x20inwHa7bGtwblG/EzCVCHa9RASYNAzruNNTC7+9QO90jb9Ghtd1l
spyPDlef9v64VhSZ38sx8+FjxYamiSx2Kz7vXHfJm8KH5Z6G9d6/tOK7vLWK
kPoQ8aHGs1WbW1BB93AvU6mGKG1I1qTdAsv6DUyOfwUqvrrfHSptRr/RtoCF
YzzoeI3N1yl/Dv3g02F+RTxMZkksHkY+R6ezrr+uHw+xrA8zjXc9h+bKH1bb
R+6D2JxLt5HVY1yY0CCYLIL7gOnTOevq4fZka99tRuHPn+bqSoJaXPwrYqW/
ah4yiy2lk1FP4TEe8qfylRwwb8QtWqHxCEvrlOg39uWALrBnHvyHjxFqnMIg
LQec4PMuPT18aM32NXv6NBs5ibmBFTw+jhK0Q9NzsnGrc74oZi8f+XWUBl5p
JqqnZFYCp4cQbaFeMh1ORfX6ArkNkipMNrlOx9gnoaA99I3J3AqcM+tIpVCS
cGY8K1P9czkuDT7YsmY8EVRH/QljQTk07uzkF99KxGlTr9fTOeVYPXVHZqyU
iIHhPQo628rhav3Jfb/wGjjHlqYlnivDi8VzmB8a46Gw8ZXXB1oplmz13FGl
GQvnq0Un0cFDF/+sOGA8EgcHg44lcAvx3qheWj8jHK8nrHrCXPMRrKfjmetw
Gi3Vvm5jfXfQv/hAYDQ3ACW9kthJay7K4iM5hWN+UGMNq++cyEH2Ewah0nYC
P9ixeVfMshFjNdp/5tpRMLgViu9uZSIwuTd/7JQnKj+Htac3p+N4pDiFM30Q
TyqtGnnFqej/oSrJvc2GkiutXvAgBaVfgg+7ObrCPc98bduyG1A2jd8Sy9yH
s3xbJXbSdfjZ+nC0WnYjV8fMJmVbEtgO9im67bsw++Ksl8b6iThW/HUyWdEZ
yZFVnGyVBIR8Ycde0HDCBNVnz33KNZx1jLEOjfkVNdpRhmynqwjjvFo8spyJ
oKAjlHuceKx6tqxFkWaHdw5d8luaSNiOqwkLde2QpmfRZvGcxModEnuPRXY4
9phWbVVLolCUz3qlaAeTMDrfiU9ieVdQoeQjAxZJRleCiknc/Z1r2JnFwCoV
GvdbKomd3SV3pVQGhCUGj6p8SYyEJKYv0WEgUCWvstubxLwX1y86L2RgYOZ+
3qzjJOzMfSiNigxEdbdm7PUkITUz0h0WE7CYYbhbjkVidPTmaF8uAa+S5uyI
7SQyYhuO/JZJQJrsSZRZksgzqYxrTiZQqHxKNLSVhIu+zTT/MgGTS+ky140k
1rcKJK+9CXDbNIOtjEloVfeUHTpMQPtrYglnJQnmu/AVX90IKJNl4gc0Egs2
tjxa7kgg2DZEffNyEu7bzAarCAKK+3vUQpaSCFRNznIDAYPByKmKJSRWXdjR
Pb3pZ9/o4zdTmiQOXeZyuWsI2J9SuGmpQeI/0/XOYA==
        "]]},
      Annotation[#, "Charting`Private`Tag$10129#6"]& ], 
     TagBox[
      {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[0.75], 
       LineBox[CompressedData["
1:eJwVxWk8lAkAB2BSoZRISjGulA5Hh0psf/S6rxqKDu1maYRIh9uqKCvlnTFy
5BglJXcxGkXRVCjKtKTGMSZMomZSKpTs7ofn92h7B1N9Z0hJSXn95/9Nfk/e
7C03hGzXZ2VT0xJw0ri+7YkitHE2laz4KUGcRFhz7M4gNK1464NEEhSLraoo
doOANhlqel8CPWaEUfzwAK5kGEjVx0ugnMqUGSYHIFCyOphhJoHVtu30nRsH
0FZHzE0dEMPerkY+41U/TM3Tt+WcFiN6Hn84ObQfLRYtgSwVMRYkiMqCVfrB
v3V8JID1EeyZI2OpFW8xMK8tkaP7EbNfSP2gDgpxoo9t2Uj5ADkrD9Vyxz6U
x7dPyU6/h8n7AIpOqwDSz/1NosPeg72tsMxtlgDmJfJE+OgQvFRUVFgxPXgk
eVs7NvwOE7ciikvT+eCJC5Qmfwwi492p05rMDojSvn8LLH4LmmW0c4t0K2Kq
w3ZUT3XBRZO2crNdC7YaVbJ/neqCzvcTdb2pzyBY7sJbKteForiTf0vwFMfT
UprWavORdrZ1u2FnI2Q940OnI1/DpUh2C1vAhepGVSdUdsA8M+lbTXUttjnI
UINYPPgwSqynDGrhvEogm+vPA1fjJjFReA/nOpQtfm7iodJsZMaVm3dhsNf+
mtY/bXDgS71yfcmB1uqZavOXtGH93NrKi0VsBHEKp6uyWuEcG3ys9mMFNJYr
/jx0uhnqPZYGlZUVOETbRfvs1AzpktH2jsgKVAUq/EVVa0ahWaxXtEIFmqvH
90dVNWEx17a3L7wM22Xf0ERfGiFtnDi5g1kMGZf87ibmE4ioFdsbhq5Daqn6
GYrFI/j4LzpomJIH7ugaZfrTeri7WRpyaXlYlZiq0H2rHoxz+1SmfstDN2GV
ezSzHgGPt3zLe83CxMow4ZHD9QhRE7vb5eXCJuc7P1OhHlxqRJKzTzZmPbxv
VFh3H6HzVxonZGdANPnNONizFrHHZTUC5zDR2DjsNpDAwey4o5JGUQreoKxb
PYiDmn3Bzee5KQj+MGlxwZ2DN875MfgrBUuln08o6HBwMkLVfus4A3LDpffi
HtxBtVJtjNYUHTK2I5O3Ze7A61LPjqK4ZPw5tNxIvZQNaZMqhTNyiRj22yfU
D6wExf56SKT+GdD6rnbI2FZgrDch56p8FDSo2kdo1cXI8q/TanQ4CV7/gv0s
z0K49jk5XHQMgVXhH8IAbgGm0w+EelgG4k6Ol6nwbD4SuozXtPBoCHeLfbCK
dwVNDH7ruLoPBJdn9UTb5oHZZTZC8TmIqPLUhgKdXNBdDtVohh3AkFuUzZhq
NtzCFctNC/ZixaDBuwurL0Pb3s+VUemBWO8J3ouMDBzeukUrR34XuuNtZ2mq
pWMsi+LH76Sipe9wFv/ZJbw6yzB/orYTfoYzIh+wU5GUF8h6MuqC7F5zY4Pr
TDxlZCeHuDohsKvVrLc+BavHP1Dz5jrAyFP/+IMvDKTzg27MEdris+L+dj19
BvRMZsdtVLPBXc1PLl8j6FDp6Sq9q2SD/hh9u7lhdMjv6aon5thgXWeRk84J
Op43JaX4/LAG5bz7SbcgOi77U5Je9liDuafU5KE3HSGth2f65luDKpz+2uZI
R2wD47bzOmtk3TjDKKfQsWHgRbnDamuMXfHtG1xGR3xNp6GjrjWuz3+mr6FG
x8uw8ILdi6zxw3kgP3khHXw9/2XpEwRutzRsiJGjo93riNe9hwToan5RCwZJ
qBoc+C6+R8CrU/dRloAEkTsk0GMTUBpVF+vzSaz1/kXm3CDwZdcuod0LEtPU
TOWqCwTsqhv0WDUk3FW4jdLnCHTrOu4xrSKxJVh8ixpL4JO+oW9HGYlzH2OW
/Aoh4LuYlF54jcSr+dHJngEEShTbyapcEkmPy9dW+xCwqJP67JFJIm2BSKJ6
gEDqjfEVU0wSYvFIe6QHgaW7WQbXkkn8CyNz0o8=
        "]]},
      Annotation[#, "Charting`Private`Tag$10129#7"]& ], 
     TagBox[
      {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[0.75], 
       LineBox[CompressedData["
1:eJwVxWk8lAkAB2CZNpWrsKw2lUjTMSpF0+XPO0WmHOWIotQaIU26JCskCU3z
jqNJJOTKjKXT2HWkSOMqkyvkGFfJoo3QNXb3w/N7dI+c2MuSl5OTc/3P/7fN
v6DfrvAeA8o3T05Pj8I920lmFz6A7NCay+wfo/DwvdvTcb0fjSKbDwODo9gS
9rGSr9mPp85fvcrLR2FOydnTnNGHKr9V7QacUdTWdj/6YNQHxwOerJjto4gJ
eUjXKO3F1y9+bcUjI9hEu6e81KIXC/f7nLvAGQE9RaTqaduDTiu3UUXBMHzU
Pw3RXktRcIbeakMbhr8mO7vQQYqlErl9nwV/43hkjfuTA93Y72KvSkkagvys
4Z1hz7rQ9CNyukZ1CEQ1TeWxpBOZDayE1EsfEDbS+0JL9hYaK/s63xwbhLlB
qlT9VivyfEb0g2zeYcjYWW1CoRGHlaaPNSf2osOw+21mUhWKKSqmmyVv0fZG
9U/592Jclp115O98C8f8TcnMLWJEntXxPlTRjp4VwRs9PldCZ100LUrcBrZW
s6QivwINsRZpKbI3yHsuWtao8BTU16Y2AfLNeCBnnO25qRDSTt/1/Q8lSLYn
GT1PRRijlLnfD5LgRkh5+2trEf7yFyqKLSRYTxWxE08UgJUUH5vbWQ+p/fkC
dssjVDutZpksrMdyPifPWfcBVI5EFDOv1aHFSRbga5ILz3vG6u77quAzOXad
3yhEydzx7S26VfALuNNRdUaIhhCqkeGwGLkJ/6ipFQkwh672jBUhhrOT40SI
Ww6+t17oOPTsBU4Vn5Ft+5gFPULj1RvXSmQXvS7ZppSOg4a6oYXyFdAsV1DW
5CfBZoNvTWhUGeiL47u7bJPwdUZzv9ivDEJ79YiSuUnwHTf75YBzGb5rd95I
vZSIHUEpa1yoZcgYslUOungTgnmW+vQbT/Crzv0Zijk3cDvD87331lI0HppY
axYdDzUWVfK8tQhNhXlRBr0k6mVMTsK8QnynvV9hfZeEnrYwXnVShKlrt+IW
skmUWD/0L+kQIciaXy38xoVik4ZakVAEO8pUy45FXLBmns1eyRSBGedTNBXM
QRe5V2kjrwAR7S1fVO5E4YJXlculbY8RJ5FS7bQvQ1PZdHDjzIdw+lpbR6sJ
xnj30dSxlnwohSQa9ymfgwf79ukcTSHsfLxdP5qeAqtzot6kOhubF1fqL6s8
jox1+inGjEycWejctMHXC319Lpnb1NIRfdCqipnjAXPDMQuvo2nIel4QaBl2
GPmVdyKK61LwJHmsdeLQQRhcjY6l+SUjYXnUopG8/ZBuymoyOZmE31e1cO2P
7sOR1Pq5r3g3kR74JH57hwNaugppabMT8HIpU0aN2QtHX89A/1g+eFP4dEBo
h+yjKleCra9jUi7ud39bG1yaLCjQMY1H6SJQWgN3oc7sceku4zj8SL+4OHqN
FdLWRtTmOcbiZeLyFJmxJby/nS3+41oMwuVXR2vZ78D3VUpdLi94OBK6RDuv
goEGK3udXB0eaOHXm5eUMoDQSPOmBTw8NXAb4IsYkNe87T2txUOmedk4R8BA
UiGr3EmNh92prXGpPAbqrSzI+Qo8zOadU/dwY0BpPc+QLSUhuOfQav2FQOA9
h7KgKBJ0V8GowRiBZnNHJZVwEk0njbQowwRc9WqRFkwio/FxTEU3Ae0odZe6
0yROM699OyYmkFn6gr71IAnx5eQ2ZgKByNri6tPrSVxVkqo6xBIwIhR/1jMk
Id9baezOIVBVLzBppJI4FuC462IogYEPDd+2LCKxQCvMY8CLAP0T56TuHBK7
h9v7Z/1GgKuit7+LQoIyi2e50o2A4d3J+SkyLjynetLP7yEQ/pP9kN44F89f
nkjM3EXAbmnT3MERLtSlRt6NOwgksDmf8we5yKLpqcwyI/CO7y8I6OOi7cHG
K5s3E6i2jKEyurj4FwFfyBQ=
        "]]},
      Annotation[#, "Charting`Private`Tag$10129#8"]& ], 
     TagBox[
      {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[0.75], 
       LineBox[CompressedData["
1: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

        "]]},
      Annotation[#, "Charting`Private`Tag$10129#9"]& ], 
     TagBox[
      {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[0.75], 
       LineBox[CompressedData["
1:eJwVxWk8lAkAB2BSoZRISjGulA5Hh0psf/S6rxqKDu1maYRIh9uqKCvlnTFy
5BglJXcxGkXRVCjKtKTGMSZMomZSKpTs7ofn92h7B1N9Z0hJSXn95/9Nfk/e
7C03hGzXZ2VT0xJw0ri+7YkitHE2laz4KUGcRFhz7M4gNK1464NEEhSLraoo
doOANhlqel8CPWaEUfzwAK5kGEjVx0ugnMqUGSYHIFCyOphhJoHVtu30nRsH
0FZHzE0dEMPerkY+41U/TM3Tt+WcFiN6Hn84ObQfLRYtgSwVMRYkiMqCVfrB
v3V8JID1EeyZI2OpFW8xMK8tkaP7EbNfSP2gDgpxoo9t2Uj5ADkrD9Vyxz6U
x7dPyU6/h8n7AIpOqwDSz/1NosPeg72tsMxtlgDmJfJE+OgQvFRUVFgxPXgk
eVs7NvwOE7ciikvT+eCJC5Qmfwwi492p05rMDojSvn8LLH4LmmW0c4t0K2Kq
w3ZUT3XBRZO2crNdC7YaVbJ/neqCzvcTdb2pzyBY7sJbKteForiTf0vwFMfT
UprWavORdrZ1u2FnI2Q940OnI1/DpUh2C1vAhepGVSdUdsA8M+lbTXUttjnI
UINYPPgwSqynDGrhvEogm+vPA1fjJjFReA/nOpQtfm7iodJsZMaVm3dhsNf+
mtY/bXDgS71yfcmB1uqZavOXtGH93NrKi0VsBHEKp6uyWuEcG3ys9mMFNJYr
/jx0uhnqPZYGlZUVOETbRfvs1AzpktH2jsgKVAUq/EVVa0ahWaxXtEIFmqvH
90dVNWEx17a3L7wM22Xf0ERfGiFtnDi5g1kMGZf87ibmE4ioFdsbhq5Daqn6
GYrFI/j4LzpomJIH7ugaZfrTeri7WRpyaXlYlZiq0H2rHoxz+1SmfstDN2GV
ezSzHgGPt3zLe83CxMow4ZHD9QhRE7vb5eXCJuc7P1OhHlxqRJKzTzZmPbxv
VFh3H6HzVxonZGdANPnNONizFrHHZTUC5zDR2DjsNpDAwey4o5JGUQreoKxb
PYiDmn3Bzee5KQj+MGlxwZ2DN875MfgrBUuln08o6HBwMkLVfus4A3LDpffi
HtxBtVJtjNYUHTK2I5O3Ze7A61LPjqK4ZPw5tNxIvZQNaZMqhTNyiRj22yfU
D6wExf56SKT+GdD6rnbI2FZgrDch56p8FDSo2kdo1cXI8q/TanQ4CV7/gv0s
z0K49jk5XHQMgVXhH8IAbgGm0w+EelgG4k6Ol6nwbD4SuozXtPBoCHeLfbCK
dwVNDH7ruLoPBJdn9UTb5oHZZTZC8TmIqPLUhgKdXNBdDtVohh3AkFuUzZhq
NtzCFctNC/ZixaDBuwurL0Pb3s+VUemBWO8J3ouMDBzeukUrR34XuuNtZ2mq
pWMsi+LH76Sipe9wFv/ZJbw6yzB/orYTfoYzIh+wU5GUF8h6MuqC7F5zY4Pr
TDxlZCeHuDohsKvVrLc+BavHP1Dz5jrAyFP/+IMvDKTzg27MEdris+L+dj19
BvRMZsdtVLPBXc1PLl8j6FDp6Sq9q2SD/hh9u7lhdMjv6aon5thgXWeRk84J
Op43JaX4/LAG5bz7SbcgOi77U5Je9liDuafU5KE3HSGth2f65luDKpz+2uZI
R2wD47bzOmtk3TjDKKfQsWHgRbnDamuMXfHtG1xGR3xNp6GjrjWuz3+mr6FG
x8uw8ILdi6zxw3kgP3khHXw9/2XpEwRutzRsiJGjo93riNe9hwToan5RCwZJ
qBoc+C6+R8CrU/dRloAEkTsk0GMTUBpVF+vzSaz1/kXm3CDwZdcuod0LEtPU
TOWqCwTsqhv0WDUk3FW4jdLnCHTrOu4xrSKxJVh8ixpL4JO+oW9HGYlzH2OW
/Aoh4LuYlF54jcSr+dHJngEEShTbyapcEkmPy9dW+xCwqJP67JFJIm2BSKJ6
gEDqjfEVU0wSYvFIe6QHgaW7WQbXkkn8CyNz0o8=
        "]]},
      Annotation[#, "Charting`Private`Tag$10129#10"]& ]}, {}}, {{}, 
    {GrayLevel[0], PointSize[0.012833333333333334`], AbsoluteThickness[1.6], 
     GeometricTransformationBox[InsetBox[
       FormBox[
        StyleBox[
         GraphicsBox[
          {EdgeForm[None], DiskBox[{0, 0}]}],
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           GrayLevel[0]]}],
        TraditionalForm], {0., 0.}, Automatic, Offset[7]], {{{
      0.75, -0.7453559924999299}}, {{0.75, 0.7453559924999299}}}]}, {{}, {}}}},
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox["\"X\"", HoldForm], TraditionalForm], 
    FormBox[
     TagBox["\"Y\"", HoldForm], TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "ScalingFunctions" -> 
    None},
  PlotRange->{{-0.1, 1.1}, {-1.1, 1.1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.888493599440399*^9, 3.888493731938501*^9, 
  3.888493804824478*^9},
 CellLabel->"Out[60]=",ExpressionUUID->"eb46f1ec-2b00-447e-bfd7-64083fc9cede"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Test NDSolve", "Subsubsection",
 CellChangeTimes->{{3.888492526460113*^9, 
  3.888492529718751*^9}},ExpressionUUID->"e52670d0-9a65-4133-b8fd-\
2f147517e8d0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Dynamical", " ", "system", " ", "for", " ", "a", " ", "prey", 
     RowBox[{"(", "x", ")"}]}], "-", 
    RowBox[{"predator", 
     RowBox[{"(", "y", ")"}], " ", "system"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"de1", ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"x2", "'"}], "[", "t", "]"}], "==", 
     RowBox[{
      RowBox[{"a", "*", 
       RowBox[{"x2", "[", "t", "]"}]}], "-", 
      RowBox[{"b", "*", 
       RowBox[{"x2", "[", "t", "]"}], "*", 
       RowBox[{"y2", "[", "t", "]"}]}]}]}]}], "\[IndentingNewLine]", 
   RowBox[{"de2", ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"y2", "'"}], "[", "t", "]"}], "==", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "c"}], "*", 
       RowBox[{"y2", "[", "t", "]"}]}], "+", 
      RowBox[{"d", "*", 
       RowBox[{"x2", "[", "t", "]"}], "*", 
       RowBox[{"y2", "[", "t", "]"}]}]}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.8884849870446367`*^9, 3.888485028666349*^9}, {
  3.8884892974448433`*^9, 3.8884893505799313`*^9}, {3.8884895193726587`*^9, 
  3.8884895222501163`*^9}, {3.888492538195346*^9, 3.888492557031906*^9}, {
  3.888492608821023*^9, 3.888492636762401*^9}, {3.88849268360982*^9, 
  3.8884927111138973`*^9}, {3.888492741189432*^9, 3.8884927416420507`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"574d39ae-8f07-46d0-a1d2-8ea6d37e64dc"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"a", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"b", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"c", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d", "=", "1"}], ";"}]}], "Input",
 CellChangeTimes->{{3.888492712491186*^9, 3.888492718073131*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"8a920543-6dde-4fca-8a6c-43b80401f658"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"traj", "[", 
     RowBox[{"x0_", ",", "y0_"}], "]"}], "=", 
    RowBox[{"NDSolve", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"de1", ",", "de2", ",", " ", 
        RowBox[{
         RowBox[{"x2", "[", "0", "]"}], "==", "x0"}], ",", 
        RowBox[{
         RowBox[{"y2", "[", "0", "]"}], "==", "y0"}]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"x2", ",", "y2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", 
        RowBox[{"-", "80"}], ",", "80"}], "}"}], ",", 
      RowBox[{"AccuracyGoal", "->", "10"}], ",", 
      RowBox[{"PrecisionGoal", "->", "10"}], ",", 
      RowBox[{"MaxSteps", "->", "100000"}]}], "]"}]}], ";"}], " "}]], "Input",\

 CellChangeTimes->{{3.8438885804511986`*^9, 3.843888581311265*^9}, {
   3.8438938592742786`*^9, 3.843893939219122*^9}, {3.8438941114297333`*^9, 
   3.8438942191846347`*^9}, {3.843894249969864*^9, 3.843894346269736*^9}, {
   3.8438944055744495`*^9, 3.843894799140247*^9}, {3.8438948607399817`*^9, 
   3.8438948847105308`*^9}, {3.844144226711842*^9, 3.844144269018071*^9}, {
   3.887979872791584*^9, 3.887979910367338*^9}, {3.887980029651232*^9, 
   3.887980031254677*^9}, {3.888055637414365*^9, 3.8880556536066236`*^9}, {
   3.8880559265002527`*^9, 3.888055942599481*^9}, {3.888385806342004*^9, 
   3.888385807953027*^9}, {3.888401283220417*^9, 3.8884012975687943`*^9}, {
   3.8884013397587967`*^9, 3.888401343483832*^9}, {3.888402725276833*^9, 
   3.888402726925267*^9}, {3.888402998410335*^9, 3.8884030109803867`*^9}, {
   3.8884893624916773`*^9, 3.8884893862586937`*^9}, {3.8884900521672153`*^9, 
   3.8884900529187183`*^9}, {3.888490357346273*^9, 3.888490359038652*^9}, {
   3.8884906258990927`*^9, 3.8884906654985123`*^9}, {3.888490789297559*^9, 
   3.888490789470706*^9}, {3.88849083435666*^9, 3.8884908432591*^9}, {
   3.888491317224998*^9, 3.888491371521894*^9}, {3.8884920391582317`*^9, 
   3.8884920671546917`*^9}, 3.8884921590304193`*^9, {3.888492572346962*^9, 
   3.8884925944504547`*^9}, {3.888492726134804*^9, 3.888492758494934*^9}, {
   3.888492847176293*^9, 3.8884928486261387`*^9}, {3.88849289653393*^9, 
   3.888493031076523*^9}},
 CellLabel->"In[99]:=",ExpressionUUID->"ad45994c-d5a4-4597-9f51-67b60d57be9b"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve", "ndinnt", 
   "\"Initial condition \\!\\(\\*RowBox[{\\\"x0\\\"}]\\) is not a number or a \
rectangular array of numbers.\"", 2, 99, 86, 18333238934656650228, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.888493031736281*^9},
 CellLabel->
  "During evaluation of \
In[99]:=",ExpressionUUID->"1f067590-2339-451c-87f5-62265664e1e4"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"sol", "[", "1", "]"}], "=", 
   RowBox[{"traj", "[", 
    RowBox[{"1", ",", "3"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sol", "[", "2", "]"}], "=", 
   RowBox[{"traj", "[", 
    RowBox[{"5", ",", "4"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sol", "[", "3", "]"}], "=", 
   RowBox[{"traj", "[", 
    RowBox[{"7", ",", "3"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sol", "[", "4", "]"}], "=", 
   RowBox[{"traj", "[", 
    RowBox[{"8", ",", "9"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.887978731059854*^9, 3.887978757612252*^9}, {
   3.887978845812172*^9, 3.887978859965249*^9}, {3.88797894002472*^9, 
   3.8879789403355103`*^9}, {3.88797897759439*^9, 3.88797901355768*^9}, 
   3.887979128052725*^9, {3.88797923767091*^9, 3.887979237845546*^9}, {
   3.887979375257626*^9, 3.88797939675972*^9}, {3.887979429202385*^9, 
   3.887979516979513*^9}, {3.887979558765677*^9, 3.887979566700461*^9}, {
   3.887979612678831*^9, 3.887979664270924*^9}, {3.887979922277718*^9, 
   3.887979997391836*^9}, 3.887980080905983*^9, {3.8879801208038273`*^9, 
   3.88798015412414*^9}, {3.888054939843245*^9, 3.888054943018937*^9}, {
   3.888055844364393*^9, 3.8880558605745296`*^9}, {3.888055913193152*^9, 
   3.888055918216709*^9}, 3.8880559966976633`*^9, {3.888056036287993*^9, 
   3.888056085299884*^9}, {3.88805612209927*^9, 3.8880561244131937`*^9}, {
   3.88805618652389*^9, 3.888056190803598*^9}, {3.8883009702722473`*^9, 
   3.888301001671629*^9}, {3.8883010401298227`*^9, 3.888301112638144*^9}, 
   3.888301171388793*^9, {3.888301202257996*^9, 3.8883012287725487`*^9}, {
   3.888401380694333*^9, 3.8884013833951883`*^9}, {3.888401462909256*^9, 
   3.888401475754928*^9}, {3.888402651297779*^9, 3.8884027057433147`*^9}, {
   3.888402766916638*^9, 3.888402773252879*^9}, {3.888402855974597*^9, 
   3.888402864196711*^9}, {3.888402903096746*^9, 3.888402946812313*^9}, {
   3.888403012736313*^9, 3.888403096157276*^9}, {3.8884032087548103`*^9, 
   3.888403247818666*^9}, {3.888489447995303*^9, 3.8884895051140833`*^9}, {
   3.888490037967332*^9, 3.888490040111418*^9}, {3.888490190381372*^9, 
   3.888490217198759*^9}, {3.888490261568606*^9, 3.8884902856444187`*^9}, 
   3.888490345588728*^9, {3.888490385444446*^9, 3.888490433565915*^9}, {
   3.888490471348297*^9, 3.8884905040209427`*^9}, 3.8884905742833643`*^9, {
   3.8884906115904293`*^9, 3.8884906121573563`*^9}, {3.888491226084648*^9, 
   3.888491307356353*^9}, {3.888491447530752*^9, 3.888491453148313*^9}, {
   3.888491723304224*^9, 3.88849173695636*^9}, {3.888491840056816*^9, 
   3.888491850524074*^9}, {3.888491925330976*^9, 3.888491927396234*^9}, 
   3.8884921679597273`*^9, {3.8884922299757*^9, 3.888492232082346*^9}, {
   3.888492305215869*^9, 3.888492307130794*^9}, {3.8884927776662607`*^9, 
   3.88849282361607*^9}},
 CellLabel->
  "In[100]:=",ExpressionUUID->"b5e90771-a6e4-4a36-94b7-1d190f3d3f12"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x2", "[", "t", "]"}], ",", 
          RowBox[{"y2", "[", "t", "]"}]}], "}"}], "/.", 
        RowBox[{"sol", "[", "i", "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{"-", "80"}], ",", "80"}], "}"}], ",", 
     RowBox[{"PlotStyle", " ", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"Gray", ",", " ", 
         RowBox[{"Opacity", "[", "0.75", "]"}]}], "}"}], "}"}]}]}], "]"}], 
   ",", 
   RowBox[{"PlotRange", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "10"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "10"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "->", 
    RowBox[{"{", 
     RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.887979052254037*^9, 3.887979188623329*^9}, {
   3.887979228021886*^9, 3.887979401632031*^9}, {3.8879794459550867`*^9, 
   3.887979470345598*^9}, {3.887979600112005*^9, 3.88797960112506*^9}, {
   3.887979692930244*^9, 3.88797971039893*^9}, {3.887979803249867*^9, 
   3.887979842918675*^9}, {3.8879800704105587`*^9, 3.8879801035747423`*^9}, {
   3.8880557121793327`*^9, 3.888055759237444*^9}, {3.888055829243101*^9, 
   3.8880558350643997`*^9}, {3.8880558766966743`*^9, 3.888055894503551*^9}, {
   3.888055934499653*^9, 3.8880559569798098`*^9}, 3.888056008344767*^9, 
   3.8880560546239023`*^9, {3.8880560971933813`*^9, 3.888056164628825*^9}, 
   3.888057209628414*^9, {3.8883010969077797`*^9, 3.888301106866012*^9}, 
   3.88838581273239*^9, {3.888401301027873*^9, 3.888401314603023*^9}, {
   3.888401394687004*^9, 3.888401408667405*^9}, {3.8884017594302588`*^9, 
   3.888401789202386*^9}, {3.888402657936475*^9, 3.888402689151956*^9}, {
   3.8884027196816397`*^9, 3.888402747418346*^9}, 3.888402867655637*^9, {
   3.888402952199245*^9, 3.8884030158848963`*^9}, 3.88840319449933*^9, {
   3.888481290475276*^9, 3.8884812980029383`*^9}, {3.888489390475148*^9, 
   3.888489391939361*^9}, {3.8884900467111473`*^9, 3.888490055668681*^9}, {
   3.888490178387621*^9, 3.8884901813827753`*^9}, {3.8884902264531507`*^9, 
   3.8884902567025623`*^9}, {3.8884902996831408`*^9, 
   3.8884903304819517`*^9}, {3.888490363367571*^9, 3.8884904089852037`*^9}, {
   3.888490452026869*^9, 3.888490461958329*^9}, {3.888490631698056*^9, 
   3.888490670629952*^9}, {3.888490727873394*^9, 3.8884907313632*^9}, {
   3.888490784986022*^9, 3.8884907867896223`*^9}, 3.888491331652866*^9, 
   3.888491783219448*^9, {3.8884921738170147`*^9, 3.888492174072651*^9}, {
   3.8884924965746803`*^9, 3.888492511687302*^9}, {3.888492828970872*^9, 
   3.888492877530595*^9}},
 CellLabel->
  "In[104]:=",ExpressionUUID->"47b7363f-7298-4111-953d-11babe656180"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[0.75], 
      LineBox[CompressedData["
1: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
Ohz0uf4SldOfXif+ze/EU5UJznvfGTiw36F/7kcH+jXUfzyjM+EpxpHo+6Ud
dvIGgRN2TDgOO65q+tYG3dBLAvH/mIirSpV+ldmK5NlnZt/VWNBTfb5Gt64F
T/2nqrUSWRhtDBQ+ydWCHK9HHYe3ZaP5BVd4qEozVjiFb9vMzsaDts9y7o5N
0AqnfxN0YqO0jm3y6H0jaoq2GysvywFZb84fPNwA28cxc5UUn0qejN4kvLMB
9WqG25yDc6E5kLLgok496re6xRqcyIPqmtLHJ2l1yDT3sSjQzccaU5H7JlU1
ENMU3UvEC7A1XS/xflo1qvc93+IUUgAlz+vX7nyoguL3T4brVhaiTcjreMz7
SrivV7ia9b4QheUaSse+VuBT0cn6hyhCrV1GszKrHLtNd+iW1hZhyron/H5X
GbKrGhcN3i4Gp5Rwy5xoGeYH7rfuUCvBRTfVzcJ7S2G6TmG5dH8Jkv4LWm4a
WAKn+xyxcxSvmMoYC9hVFeML77op/ZtlOLj7ZC17QzEOXp3eecqyHMrRwyUa
D4oQGHl/R/WOCtxZHbxm/1AhfEMdV67ZWIlnTs4p3+2ofnBYsSldsQovShY9
lSsvwFWP19u01apRaNhavvtIAQpv529X3lODRUYrh7K+5WOiufyJ3Pla3KQM
0jw/D76SOvsZb+tgm7a2tGgsFwkeby2T2uvh1ql8m6GYi1ZJ29d7whpw9fGW
xwWUr0dtqV8vsq8ROfuUKoLT2HCOZr0KWNgEt3X++7+LsaGSOSu3PLcJFXPS
6XNe2QhVWHN0xYtmuP7dVyYzxMLworfnJlxbcPHvXq1RVxbupJczVx1sxdVV
TCXjaSYCHj5QntBuw5+vwRd4g5mIOfjp1sSWdiiLryhetomJoi0yeYWyHfh1
rDzqRzMDD+g9OjLSnVDac/fdjnAGEj2H6/fKd0F9M7P7qz0DcW8fbk/d1o1s
Q/0j27YwsH7f1LrMIz34FH/q49hiBvY0mx2o8OpF27MRlvxQFrrml3yzTOrD
7i3dfUupPVOctpJIHOvHpb5aiFB7WM3xSlnqzQDMnxl9etKQhbK0MxnfDgxC
9SFzgSj1+0o99MtG9CGsaWl3URFi4MQB+pWFmUNQmt8mHaLFwH1P7QPS/lTe
v7lQInqRgUP5bou/HxpBu7HH5Te/GJgoHDYekRtFSLF49EFRJjaEMkQGOccQ
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
PmxFh9KHqSw9y3aYlvBXBlfT0c2n+7fmbRt+6wnwHD/JyumrlZor01vxWKuv
fOQ3A+zul45Oj7QgyVSlp2B/DuYjje50SLX8fy565vRfVu68fvydonkzeP/y
0z9eyMVF0wq3ovQmZHmWyVJGc/HU6V7Adv4mHJcastUOYuVQ7dejXKaNeE1Z
qdmplg+96fTPuyMboLTPtWqWxT/hrVdkiE09sndWT/bWFWBzhxAzVK8OwhY+
Iat/FsJxciivUKkWn/2+uxqz+Cel6Yu7Eot/PI6LJp7NLoKol265r3I12pgC
dQMni9G7YpfwYf0qvA04n+eUV4z25VfT6Y8rIZUao6yjzYRFYrJkflgFShk/
Ur8OMBHuli/exCyHqM5AfIZbCYtz1hmFLitHdvdN616ZUogJtTK/qJWh3/m4
k1VDKc6UuxR8CC7FP6IenvqmDD83rJTfN1qC97NGOqsvlKOpc3nicvUS3Ijf
dbpyXQUkknRja38x0bDX2814sAJNAXsyL2xlQvn7dOnu/EpMLzy4LxdQjOti
47rB36ugEuohIStQDIP3J8TXRFSj9ov+Oj7/IhhrhK8T+FiDQcG7ZgGbipCR
4Fu6KrYWs4oSlzcaFkLj5x1956w6eHsKHn/xugA999ik2Lrq4fP9/OQUIx9F
MissF5Y2wswm7cTO5fkIGtbxcY5qxB5XnnqaXh5+dppJ3zzfhOf8dll2ibng
Cnx8vIO9GYJqcSeE1ueivCdm5kJiMyoedpWf88iBtPlif25WfuO6x0sZ48nB
VbcngYpHWqG2ZfOJGncGbKSq3a2Xt4G9s/F5gwgDG0wG54Y62tA/eoStk5VT
RGLM3BfltiM1kPtPsxYdGUnfHogmdgBZMTvo3HR8+Fwz/Da2EyPH+t0CkmkQ
pO45Uxjfhas6zxJv2NJwfp+RnWRaN6jPvq5XOM3in9QdIwKVPXirXsmvt44G
yw0yIsOzvVBvVhBtZOUWnz375rfu6seogbvrio5sWHTNBgndGUDi+dp+sPqU
7yx7ir/OIC5aLKiUssaXFMZO9VKH4H1+u64Cq2+rbXJ+7/kzhPEIg2ViHKw+
5FRP+WgxDJlMttNrWX3rdy7W9ta+ESjWqxT06NCQt96g/wvbKMzPnXG0Daah
fqnzjlfFozB++OZn5SANWtrqbfJfxhDVVTggrUFH/Pub5zJcxtGSztPUyaDj
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
t2bDpMtM4P6PAZxmso/rs/queezdgJP7IM7sDao8wOo7q3xX8W2nh3CDM+JP
KavvVla7+hYsHkbYgpVQ80oaXvsX9vwqG8Ybyrp/xwgNoo8yRIQ+j4CjfDpq
9CkNm+673NnkMArxE6GVEsU06G09PTh/aww+2+7VKuyh48/JIPdizXHMMzs/
N0fT0XpJckmC6gR47bVfNh1i4KNpZkOc6iQ0txUa32tlYNOzEHmG5hScNiWy
r4rIQdHw8Zcdt6YhLJqyLPllLmK+CH1utp/BA0aHTIlzHsxfryuwiJwFm9Br
c+X4fAwWp7gdLJ2DSGp+8D+OQoRv1H/whbqA+X18L/4dLQJ/5v4Fro1shGtp
0+JWkWJcqxZN3vOXjfAtODzWEWBC3D8zoegaOwnXFV2vLluCiKfq14R4OIhS
aNOyAItS3IiJDN0WzUE+eluvzGorQ+bVnHeNapyk9h2l7bBzBfIeSasNjHKS
GyfLv10xqsIRK+tPyT5cJJ2R8cvXqQZ2O3c7GUlxE+17ML8+XodNknohKRnc
RIPZyJmk14jWj13Oe5QpJNno39+coSbUTad09NAphEu5/nphSguWDe/K/7CH
Ss6y96n70tswfmJuvMSDSnb1/2VsEOrEqjO6B2KKqKT+TFr8kZ/d2F7YVqTA
8tUCg3Wrtn/qg7eX00gSy3fffIrIbLUchEFSFs/tdiqx6j/KPL9tGBlMR13N
aJavhlcV7FgYgYGp4NrPalSSv/Lvhq7ZMSzXly+6zaSQ+9GLPx1eN4lKNvvp
LCkKucztfZamPQ0vyonrO425SfnnDZpT0bNIHtpMv/2Si1QkbRKWXbaA17Mv
3gQ6cZJfOftKHH+ykWgjk4HZB//f35p2fdzITrrG1mv6nWUnx8vjTw3McZBS
7dvyHaz18uFybvfm4SKvR9upac1ziNO9w/ZrmotsFneUXeM0gxQdu+fhhdxE
WsDjrsmRKViK4WLNCwrhW7c+y2j5BOin8o+Dn0rc2Q0HbeZHEc0uZ83+gko4
57VOUflGwCvaNO+Sz+KNC2s8bqsOwU6Vrn16nErsYsc4/l0dQMzXh0fusrgu
g+21zxfLXkj4rJH81UMlaWuE7hqXdYFO/1W/O5VKbFIoo16s/m5QNjsu8JhK
zvE1t7cYtMFmkCfOcROVHHnanvXXrgWC+Q3bXydRiJ10Ke/z6iaI+jamLjtJ
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
jZzxqsxhWCfdD+x/RSXMmwWpqrGj6IuQL92/jUqqFBfP30wfx7/l0uJzfhRy
6K//WumRSbSkHHjS1M5NVv2wL5c/OoOtLz8cHWDNtyPzRHB52BxGFztKvBPl
IjSL1A5RbjYiXzn1+fNqTrJhdX7Jon3s5E0c59/+UXbyqEJYa/IyB9Gdfl7Y
T2Mj9bTAL7JWnGTXoU77qu0LsC46o3PThousbHFX7mGt/xnV6wvrr3OT9VLW
3cM3pnHb8tcp6k4K2aK3v3pm4yTCjL4uli6mECrt0qOW6TFoKC6+ulqdSg59
9f/FEgfcEVXXd4qhkiYK7y0b4WF4itqLuHVQycOksqb1Nwax/7KO5woW36Qn
+3If+d4HU5OVmXEsbszx81Ry7e7GvcRtvTalVKJ3A2SZcSf8bsx1JPpRyb+e
M2FB0u0QLuDV/H6KSnSDFsRe7mmFw+KjiRGtFBL+gk+6/UEzNmkO1gaaUcgC
44RUf1sjTlXmbTEY5SbqHDoq0ksboJ2+/c+jO9wk2yJ71ja4Fjof3/OK1XER
6Z1nX+taVcPi0rtlV05zkdN9Vb9UfSrB3yDo2RDLSWb8RgzTOsrBH2joJcTP
SV7qe3uP3ymD8HmvdlUrDhLTpiS3aH0pfJzebHSvYyfKe9LYaWNM3NU6ee/H
MXby586ngk8DxeAW/XPQ7jMbSei7LvCdWoykoBOn3XjZSIDtKRPbA0UQKu+y
DZ6dR8kOI6FFiwuxTWnYX6d6Dj2u1ccuM/JRkz3m3p06i+ajSvaPYvIQnfIx
5e+XGWglb5wx+pELMjySsz94GiVzD+Mzq3PwvX9S391/Cp1i3O/81uag4dHY
no7ASaRPSVHVLBgI4B5N14mcwLbhZ//i21h+niwjNvRnHDct+EsYt+lgJCbU
hFaMQeTQWHIXB4t3dO83XJoZhYhr6e53UTRI3ap5x7FtFFkKnAP+N2g4qOBj
/1h7BPTVoxb5UqzPU+9ZvHszjF9CYqv6qTTIH7VKbaoZwgf7HPp8bzZ4MvBC
WnwIp85BQIulo1wmqmOXbAchSWX+vcXSWa7WxkN6cQPg/TPOn9SSDcHrYk9n
zPoREGsn0DqejcC6ivcSx/rAqaZg4r2apfPjKT3O63pxOs/X1v4QDU8WqZl8
4+pBnKFpst09Ft+4/sk6OtEFgZOPZW98oaHfNlG7bLQTwbe9SvgGaRCn1LQv
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
       "]]},
     Annotation[#, "Charting`Private`Tag$25844#1"]& ], 
    TagBox[
     {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[0.75], 
      LineBox[CompressedData["
1:eJwUmXc4l28fhmWTbLKLiCT9UkTD9aRSSINUlEiTlpCGr71lZO89M0K2rOy9
98wqhKwQ4vX+9Rz3f5/jHtd5nccjqPdS7SE5GRnZGQYysv9/E6sTC7s+16Hx
kbPix5duePLUTECQsQHrd05tiWi44uL1F9doLRuhUqYZxaH0AT6sp3cc39GM
QIpndwuUXUAzmn0sor4Zn7xyxqw1nfFp9GDdyagW7PF/Uddu4gQb2y+73Gxa
0SyqI3QoxBFLzkbRfC/aUEtWe42uyQEGGwXqZg/bwTf5onyOwQH81p4V0O+A
qfFGnaGGPW54DHnSve/Ek3Os0nsS7CBcf7DeIqALQ6USj/0p7SD4ykj3SkU3
xAQDB0gGtmDwaNKR2tGLFxlK79722GB1ZFf65KU+LN9YnjpxzQY9mUW8+NQP
GzWFQ+9brDG+FqZHu3sQw3emlhc1raFA58gm7D+EBwnOWk+nrPBC5qievO93
0OULfUy0scIoh5kVpf4wjI46hNkIWSFt4ZnuwwsjaOzta/P1tkR847mwif9G
cSvIQLp8zgKpJxeK+faPYc+EY+adOxYgYlKH/UTH4TYusSDXaY7Nm37Di9I/
oC/n4HThrjmSBgyNuq/9BCvVXnebJRIqgjnG58wm8Ez1gdXfABIeu5/2Wcic
RFXxvdPNKiRUZpFlBv+bQoxxawyxiwRDG9ZLGTemce6+q03wgBlWOsd76b/N
gG+G1+tyoRlyjYke89O/8eOTgdZ4shn8XPmY3j2ag6gm10OGFDNkBSd8kJCd
B7UmuVFAkRn2KciN3GRfwMYHnzsuI2ZY+56UbLm+AL1Hfkc4eUgwYpQbkZxd
BP+xIIWkRySYT+/hW5leQtQp67F/NSTI397bZ7j6B2/UTp9gUzRHVsCxhpMs
KzinnWJ/ZcAczen1rFvHVzFKDPo7ellgRDvaVv/5X0QWC53j1LdESNX0/JEv
awgXDTc0k7KCv5nH0900G6BR2HXWuMIKgSHXNYaf/cP6LF/sOUNrPGLkztEZ
20SbsXLfFRkbqCtOxUkfJyOctjpuRfHa4ozceO0C1Q5CzMHtoICIHbSfnrvb
P7iDEN1rPJl0yx6H2bxzn5aSEzJ1u469L3RA94fr5wTSKYi7wTdNrtxxQjzV
DanXSZQERT8pZQkuyBYl/7eUTkW8KVC6nP/aFXy/P38VrqAmkgO9zkgweoCV
7aOI2zgN0SClsL7B6InXwaRDOWx0xICmfJrfkBdeeTSxiV+lJ1gfZnXp0Pli
0eJp5pPgnYS0y+K1+5H+GDcybp75w0DcrYjTSSoNwqOpfz/36zISVNKvmU99
DMNL/bLdz3uZiMRewYbR4EhkTO/wN//CTITmOjBkvY/B1lmVyd+WLIRD3jjf
c4YE/GDWZ3mtwUr0xIXEaTgk45/WyuEqKTaCh4NvTJArHQZ015ImxNmJay+U
hccZs7CSOlv0XJyDGO/mW359MR9jj270GB/mJCZq0l5lh5dg35cPYjTHdxO8
v5aXdK5VQLm76WrsKS4in7O6JCa7DrvKmgU/yHETegLRL8vPtIIuxSWraB8P
IUcWGhF7pxseKuxeLdM8BP3XDKYMw+/ofvbV540VL0HZ96027MEPnPMUXbxX
xksoB6zb0KTMon3mmd0Lb15CK2Vm9R71Hxx/lu7IW8dD+LFbXKqP3oC81u9X
IcrcRMncjtYBGQqivv1ZJCPNbqJPNDMzW5iOcPhM2aHHw040UO6oCqpiIkRK
HwimVjETPOnKLU8V2IiQyZb4h+30BCMjR1zqNU6C+Uvpn5Xt8w44oK6VWsFF
UF+rmlha30Twnj3Gt9/xEOdz2rzCmpdx127gyMWXvMRtySNEaMIcYvL7qIy3
57Y1SLudqjoBITWXBKpgXmLAr6ZOrGkY71pOhjtz8xJKNt1POdR6sad/iJC6
w0M8urr/TsmnNljkh1TtfMdNuMmyXOIobsDPZh/BKUsuYktgiZ6soRID8asl
TWa7Cc8GhhhSzjd4Cc3LnjLhJIigkx/uTX5Fk5vwwLEXHMRZaZ8+eqVsbOS9
z6J5zk5Ir9x8aUPzBTk/v2+2G7ERonxfFqRdUzA84Zgwa8VKUG0+z1exTYCq
rXYIdwALsefc4ndWnxhMcCt/yM9lJvIu8cZQvYvEr5gDeyYrmIj83w+pujdD
EcgQ9JR0iJGw4Wzub6AIQo7EPb7v8QyEkOwDU60aP6xnVz4PPbaTCHpu4VIl
4oOaT8eb97XREQUX8vre/fUEb6lFWasNLdFyTP3jZYmPOGHQkU12loZYUhPx
v3zTDaUn6Ga2WKkJRaI+R7DVBbqL+t8FFygJLZNPSiZfnBD9M+NT3hAFcTiO
z17/hwOCfDuj+PvIiVXB86WtOvbonJVzSRjdQThUDR/QZNvmiO0xhfxVMkLL
6KzC4IoNHI0Xr+RykxHmBgxPN6lsEKG+JsLnuom63q9Xc45b44cLxjTXNsDp
4/hLwMkKJ5OVCrnM16E39yrq5g9LBNwrcFdnW8O47KtQ1l8WYPSWX2IuWMXn
kh8UM1wWWDynynHfdAX77VfGrz81x1UJ3guPzyxDjuyPOGmQBD/KDN/zfH/Q
G0pndvwlCZxV1+7/R70EPR7vzyPbOXtPovXf/c0FvKZPcbk6ZIYTy0I1+ykX
kM3ZuZSUbwaOrmsJVZzzaP9j8tU4yQxzZu+Nw6TnICMeMPAyzQxsB+X+7C6Z
BW+ju1VwtRleSGln/RafgdG0u57kohnIqO5fjU38hfrCm5Fr4iQwOJZ+ztKY
gvbxk29/vCKh8zRHqjTLJGTe3qKMriIhjl8j51b/T3jcyyijljDH5ZVHY7rZ
P3D28UH2pTBz3JlOlfcNG8fWwHrQo70WYPOs+XzBZwwqTW6Lr9IssPb5bU27
3yhaz46MS1yxxNnfC/5BsSMwGtkMqNmwhD+3cjJFyTDYaNc4Ku9YQf3VUr/N
+HfI22omDZRawTe4Rs6V4zskxDQ1+v6zht9d2/3y4YOg0c42XY6zRqWESbHN
/gFc+5VV81jEBssvBT2Wivuwt+iloEmyDWZVVLayDHqhzqYn8fiULUTUqbmX
RHpw+3ktp3uHLbSKZYnBuS7E9G46KLy1w+UI8qys2k589pWIHhO2R1TAsEj5
lw5M/XBV6+yzhzT3e1+NhHY8zfH75RDqgPeVDq0ViW04fBAizwwcsb4Ydu1N
XisuuSf3/1Nwgo7GmY7GthbY7RxuLxV1hlqxFi3+NiNGb0P6IrcLdj5ur8WB
ZuTmhvXzc30Ao16og19lI6xZDd+PCbuiMlLYs0m1AfMDZ3GWcEPJlxUSftZh
iLcte8zAHUtJp19vedbiwfGgNodYD2x9XWKRV61B/9bM8TdvP6Jr8P7L/7iq
Qf8uhGZhvyd8fhRdY1qohIpDwbHoQU8ErngK7u+twOhKCrEZ7gXtsXzxyqZy
PPl7KODtU2+McIWHn20tQ5ton4LPGR90PGCLJx8uxR9Ld61uIV8MEvvbn61/
Q77e7c0GJj8c0+Snnt37DbmDj+IY6PxBi4bCrasl8LOs2jrCFIBTE/WzBGcx
WmmIngGhQOTqhJFFhhaCr1Pzdsm5IFSHPHY9frwAWq6jip6vg7E3gNFDZCQf
dzMOh9Jnh4Dtq+aYe2geDtB9Jv9LHQaB4oxjSU9ykTL++YGUfjgKipys8xVy
4KMt5Vz1IgJvSw4yb4lnI5U7Q8VCKhKHxyjW6/ZmoUHWf0qOLAps9NZ/zfZl
guJqMvfb7ii8sXdwfSqVgRfRn6JLv0aDVTfAgkr1C9p//TuZmBgD4cYCx69G
6Ti2wDpTEhuLsour1WTRafj0x806LiUOXPEWmwn5qfhGei5BURYPT2GL+28V
PoPVR7/N6kcC6l6wq5v3J2P1z4HKbq5EOPF0xPY4JkGDo/tfvVYSmmmOreSe
TYQuXX3yvpRkjGZSWqowfYLXQn1QFvNnNMcsK7ZNxkO3pa1b1yEVIp5T5X6t
cdhnpdPq4JiGPZmyUWPVsUhJeNjdp5GOkkMflLnrY2Cj8/33Z8kvOOAWK+Xd
F41yEX3vpV0ZUJvJEOJfj8Lzavnx26sZ+OvZXn5bJAoHKW/ffTmbiaiRdKk6
zUj4x6gPVsxlYdKo8eWCfwTi/izUrW9loymG7m1eUTgitr7Xp/PlYm5kN+sR
nTBwnRc09b+QB/O4PhYScyh4KpIKdazzYcq9nNXYEox398xlK2u/4gDXv9pH
UUF4kijT5StcCLuBSHpP60DckBNtCvYowuyBBxIhLwKQpr84pkldggCD51Uj
T/wRemjS5X5jCQykJdVqXvphUXQH2b2Ib9ht/lM928YX4o1Kpa2kUgjGSuzg
j/TBj6NBJvIPyrCm585iWuuNVpWeqEM3y3Eb9JLym14Y7AmOOXajAlbZWlwb
J71wT4mNb/peJXSYA6lP2Hri6pGEseX3VTDQvbLg3PYRL0fVD/6LrIZw+Iy1
9TbH9v/ee+9LVw18wvOm3/N64MVic0sTXx1+UEf0fZ1xg59HshSvUT1eVlqx
szW5YmcPeZJudwNmvpPRtRd9wDCFIuP7q024vM9J9G6BCwItDYVjnjdD8XfC
R84qZ0ySryQOnGoB3RnBt88HnUBV3m31kLMV63kbt7p3OGF+/Gpn8VorzjxT
X+38zxG3/WoPvJ5qg+AEFe2sgQMGVT5x7/7RDrtq5b6kVHtY+PuSn5rtACmV
5Un0ph34zy2q2FF0QTfiYJHhTTuQOOn9ffd3Q3JD6GZmni3omR977r3VA+ma
Y3q7RWxhWBX1sy+gF+J/I95dCLRBwvLbR86TfZC7cp9yjcMGwutjKovKA2j+
/Xt+MsgajnY5/LOFg9DedTu9W9Qa9TbB6cmC35FNY3DJvcAK/fcWzjDNfkfA
7ni37ltWODBh1RdYPgy+/W2rXH8tsUusUKlhmxsmTwXq6bc5kh9c5f2f1yj0
+ffUK2dYIMS0ceWayxi04jQ6k0Us8FL0xc8K93GQ5aldYI0zR145W7lYxA/w
Ru9ZeH7MHNH5FkYCxT9x/5pXSFkzCUIP3e+pTU+grk7klZgZCV+fFF95JzaF
vLo2muqjJNT2xHy/YvIL1NMmv4bXzGDXIWwV0jyNWutKv6ZmM0gIFy1Lys9C
gVFlD1W2GUzFOs4MF/7Gfcq/gRzbnCZVd/1S2e6LJYfkXbK3OT3s+YYz0mwe
opfcisqrzKBxOCv8ueYCgmmfyCvPm6FRi4FOWmERonaJe+wlSeB9qMlmLbME
amuGmN9WJHSbFpONyPzBBLkWv/IUCcrqsl2zZ5ex9YarP+6ZOXLmfKPP312B
UlVa7Ft6C6j6hpd9cFjFEbODyzGVFmiV+HL/XfdfBH4wM+XKs8Rrl/D7lqfW
MSGupHv+mRXUKtv/eWRs92yN2IxYDmuYB8i1J8hv4oKzeJdFvzWEKY4Ltw1u
Qdf65DGTChvsi3i14FlLRiSHvuOU7LSFlYzwqHb6DoLFaSs9mGPb7y/3W9+P
ISdu8DUUK7k6oKz7mrF8DAUhVLqU2XLOCTuH35h4pFMSVvVC5x5fcsH62PWi
9XoqYp/fu50RGa4Yenx46+AKNVFu/yvppYcH+kMkf9b+R0vM+m/6wNwT2ol8
DLbv6Yg8ioFGqw/eSHq1MLq+3e/ztGy3fGn9EFYRZdFBMBCqja+eXWIJhJz0
0RdRRbuID2KHe63rQmB8Unj/0GUmoowvgCwnMwKBWxTdC2+ZCfKxd/b7/KMh
bSjDNKvOQuQpxlE8OxGPvgLnBFVZVsKpJHnrXX8SmCyYr1WIsBHXFQ96np1M
g2iPlF0WLztRrvr8s01NJk7oz52j4uYgCncoaG0O54Ex14BzipeT0Kls3Udz
vQR7RIO9/AR3E/UKzvtuDpfje6BQULkIF/HXQiHrCnMdnpLIinYJcRPcr3kb
ZipakKLwroViFw/RMuhJjEV3IYWSt4Oih4ewiKfqHGsYwr/IHMNeI15CvFNd
TzRgHD6R2mIBJbzEXekB8QmrGWQ8mJuwi+QlDtJ53YuUXMJN6nSGxTkeQihN
5d/PN+uIfeEqJufOTdw69vZKpiE58eqVrHWBwW5ihl8x6O32vmdLS1f1BLIT
Wjy/As9nMhLaXynu+txkIa6+OF/fn81KLDTmS/Yu7yQ8luxr+Ns5iMlAJh7R
bCpCol0utEiPixjyYMgr1iEjzufpOPAe5yEmUM6hcGIVhcRFfiNVXuKkqkem
ePE8mO43K9cU8hLjnFve0XOTYNz47tWcxEu0UB99epl6FKb3DuodO8lLdOQJ
2V0Q6EfM300yShceYsmcnNpjsx0C7I1dV1O5CUL9PI9tfhMeBpw27/3KRbBb
q8THKlXj3NmcKd2vu4m3Rh10cV2lkL9dOLWQxUkcK9ANYowqhMYjBeatNA7C
2zTD2C40BxlVfj570tgJ2ZBz8VdYMuC8nJWSlMVGrJw78dL+cCqG7ruH8ZWx
EgbPnhfotnxC6/XENvUeFmJKLV28IyIWVy8qNNauMhO1TvaqcupRGKVKns4Q
ZCa6z/DtVX4QjlC5e4uCCYzEy4bvMeviwajbp8nmsGcXsZpcoUZe7I/yR2qS
4p92Ej2nf+xJXfTBlmycteM5euLnoRvHjsV7wVbqBiPVPC2RHjZtXl78EVr5
HtxbKTREWqOAI7m6O8pDXr2uf09NKHxpWulp+4Cwf0FMtfpUhPK/wIbHGc64
XjLH+uohJdFZc0t4eNgR1stDwnLPKYgXiUdrndUcYFJ5qybEipxY8/MOZ1m3
g0ZlIg1P+A7iz7knBSxtthCfl+2UqiYjCvmpf31qs8Fz7aiG3uUtfDtwelxy
xRofbW1MEww3kah69dqyrDUOLonXTW9soPK6UzSfrxX+OTJmNQat4775iWk9
2u0c2nuq1VxpDd/DLs+I7rXEy6SDTlK0f6H2yVh/UN0CPJn3FSQ7V7DZy3OG
PsEcif0iwXlfluH0qZDRgtscJ5iUH+8P/YOki/y3zWNJcBLpetzgswQBMlnz
IiUSjK0yxZkCF1EivqypQUmCQWpcgfqnBZzrvJcZ1GYGmxX2w3QV87gxlTIg
t53rWY+bZmN/zSE/lJWTcjvXr63FBcbwzYHwdGjdlW4GZdw/zpw6CznHXJLT
dq7nx7KGfD4+A58aB/3OGTPcCzePJFp/4W6/foHRPhL2Xhs3mTKfwqLxBZON
xyRI9IV/65ebRMxyCo/YVxIWi27vvko1Ab89piYVfOZYG3ha7Dj0Awlex8y/
uprjyKyze3PVOAz8nuhtbOd820yKCKlwDCnWm9SB/haQU/79ZbJ4FDQjT9MS
pCwx9PnPFbPGEXDs17h6s98SU1aubiETw/jYELZmpGyFdPe7X0p3DUOZFNym
8tkK97JCFu+f/o7T9keVR7it8bqr5BrZ7CBiXpUcfeZmjbCdV97DZAB2XzaF
9tLZ4HM2r70/Qz+mxLn45N1s0Ob+0l48uxdk7XbUzDy2OHb79F5xwx7Q8kk6
f0+1xYPfr/hr5LrB7HJCjuKKHW7+iL1/gbUL7t39sp0rduB1Oji9sNqBFz8e
mOcm2kOyvzeLZ6Ydl+uEG1meOODlcVtrrtk2PGkVitDY7j1/kvK/qq23QuFS
mu4qhROMgn+X/sfeCm1ugzdvRrfXhupFQrIt6E0kuWo3OcMgql4q5lEzdpvd
fydT7YK+G2fZ78s34a1syBP/xg94dkklNqS0AXTFY3XCo66Ioal1YNasR/pT
Y387and8yXs71EdWhyruWYdHch5IE+J7LJpXA3JFTiZF+Y/gWrWbPWRdjb1k
9vp3Jj7iuabx4sFbVYjJUT+uHeyJqF3xio9PVyLyTUNZ3s3t3llQUCP9XwVW
D9wJG+P3xoF/HuS/D5dDdMd4vcasN1w6vBbmT5aBjFrP0bPGB7/0ZVqT1Euh
cTc/hT/NFyEuVaYfTL+hj2nvT/soP5x5mp9KFVMCNVKF2INIf0io6yYdzynG
9PEzNLrlAchJtex24CmC8J3SHPuVQNiXUmTIexeg7Mbf5ryTwZgrX+lW2vsV
lyrZDo55hsAnczTQryQPKqenzmyshSJQVOOGsHEuYhzaTXe9DYfOoY5rVMdz
ULiH9yqbfQSc+zRaLu/MRnTqR7fj2x5x+JGi9oHfmeC2vdfNKBeFujYryurh
DFwyUTorKxKNe7rKiXojXxC8Q0f4vkAM1N5XR5+dS8f5+mHzsyKxELyo35VH
v+01Fmf++Z6Ig/nYrVt8R9IQ/6o/V0wnHkEmR6cjKj7Dpj8oqN47ATRLjQJm
8ilI9DrtrtfzCQcoxJOS6pJwK2Mop/e/JAj8uTwh9iwRwd66dAeCk+HfpPRk
RuATDA68l9Hk/gzZeYE5+tF48D3K87JOTgVJnVcuJCcO9UW/m78npqHiYySp
LDgWFE8ft4h/SMceGy+RHPcYnGi8OVn85gs2yxWV0z2isfdKOLnKqwz0vHQ1
WAmNQt+OMlb7t5koYd2vNJAbiZRwhmcH3LOgGlrbmzsUAbEIxiyKjGwI+JnV
zLBEYNHJoXzqZw4evm3raAoNg2HWQlb+oTyEXWtTOSQRigjvf6cf2OeD5Ht5
53RDMPY12VkP/v6Kzrj+DXqbIMgUr+tIvShE1yCfdtCFQETPP216vaMYnxLU
qbL5A9A//+DfQ40SxL95c9qOwh/dc1Lp2dLfMK5WFnBi1Rd6e9qSVIVKsecS
/032dR+4NDlf6+EtQyzHVvydnT6IfJecx7CvHB5nWePui3lD84mlb4JsBZ49
uS3rcM0LGTxWAqbalUhQtPwo5uCJSblUcSWvKpydpPybXfERFbLxnJTd1SAi
udvjmT4iUcXv4sfDtQiRbGn9VekO5mqtwanAOkT4a125bO0G18kjj3dzNSBZ
wdzHWdUVJjtesUkmNSKyRlS6TPwD0m5KsBwQb0YsPR+POJcLuk9k9d2mb4GG
nQzlGrszfpx4drFtuQWmv7e0SXudQD+qYyA31woSB88l8hOOmOOkmTm70oYT
ySGRU7oOYLBfik9n6ECsRHdGqI89uJT41FSOdIL31pSrW7sdqq79Kxl/2AXx
K8L0x/faIZ+/YpduUjdmI1Sc9ryxBbuRyI048l4IeNqbd3bbgOPg5dD0Z30o
W+n3Wzpng8dsJpqOU/14k7Z3g+erNVbDyWZPmQ9i74N/5H9OWMO782L0Gut3
2CqSy8mUWyFiim5gfuE7pE60NAbfsAJt1vrb/UPDEHLPN+kZtYSZVGqaQvcI
Om953Zk/aInmPCWh9cFRXDLz1pG2t4DLzsaAgdkxMIcLn6FYMMfOut1Cart+
IElcSHXnS3OQIkdm95z8CWXKxxbnN0jwbiuo5Xo3AS8T9r/fAkmIyznvxl09
iQsLH8mSLpAgO/wrlv7AL+xnu+B6gXrbR372pX4PmYYIzY7Hmx1m0Go6JB4q
PAv+2YsaWjlmcDu0Lnzl22+c0ZifZ9zmKIu//Thd/hy2ZkdoN7c5Sv+h1WFn
+Dw0VSV15RvMUB37RUT54wJIDtoJ+zbNsKwhkfjUfREnqx9vKCmSENaZbCwQ
tISDHM5ykfHb8yz5lnJn/kFa1boZSdgcFzNjuQUGlpHUd6wlptgcbyM3w/5w
rOL57ehLhiQL5Odqmpno/IVMGm3c4F1LSEnrS7/LX8OnPVyGg9JWWCm4tXNG
dAPfyHUI/XYrSGU4SpQn/MOpurbWD+7WIGOtpt88vYWkLB8Byyc2kKabLVYz
ISM8zuwKePR4259XWB5MXN9BsKq5RTt52kGH/nL21TPkxPJ9Wr/AWXswl1uu
CZ6gIF6eqrQScHJE1Vp2wAooia03fD9+6jvjtCt56Ct1KoJBlqMtP+oDjsh4
jh19TU2sbpALip93h+vpgF9jsTREa3yJsk7mRwy0pzBI/KAlrrHSLBX7ekFP
TYYyVYae0O+qp6Hs9YFGiul9xoCdRJ6MJ9mRIH9crk5y/U6/i5gqNG/8uxwE
oT2eAYkejMSerTqhd7zhqMqgFHrKxkwo5g7dt94bhf0fqBuvTTAT1ypSGs9q
xWJhwkDBpZKFOK3M0r735Sf8RUvizxRWYuDRV3GtuM+gnnsptRbKRnw0JYUL
p3+BfyX/gzlfdqLMsMZnhiMHLKxKDwx8OAitP5R16cMFoDXt55bz3+7hR8WE
iMulUHd4J0sWvJvgu3tbesO2Cir7e7VSg7gIO3L7k8ohjRAclqGo2PaVUnqm
mKOS7eDn5h+48oyHkFIgmiZnemFmakb1ZR8vYRh2M41abASOAbE7r4fzEnI5
yY9KUiag4Ccm0lHKS6jRRIhWdM2Bdcuo5PdTXkLATuRR0PIyrh/9673rDQ9x
gqetV4BhC3/5ZOztariI56MR0u8jKYmP6jHm9bqchHE0zXGydHqC72k5Y5cO
GxF8LiaO6hMzYa+WUR3DyEzs9DszfmaBjTgm5Hxu4QMdYZx0106xn5P4JWfu
IBBNQZjatD6pFOYmNG8XiGcY/oNbgegIUxoPwWDt4+SR/wcyBOcbSQdeYlS2
m/5m728IVL4wf1a+7T/ani2mt36C9mWGR7Y7L1F7qtpDSmoYtwedk02peQkP
64RlL9ceiCgwSbYr8hDabWdvCbu1YT504I68CTdhFClkbn66EY0rBU9veHAR
3zgMHa/HVWEqqbQ5N2I38b6+gi45qxQPh1cGjT5zEsU/eaZDFwphob48n1XA
QRSUxeXEyOfit/FhTZ1GdkLvS5dJZE8GbvAkKNweZyMqW84dev8iDY0zrYW/
yNkIWalTQWEWSdgV5kfXJ8pK7BZmdo0/HY/9lM82w66zEIZZBtPHuqKRJjDB
aeTMTLDx51/+yB2JMb1DB2pdmQj9qunJgaJQtCQwSHVxMhJHsldoL3AHYbFv
bq0mjYGwVjvNqr/bH4Jzey3Pa+0kKFgZtc4F+KCw+ah4Lys9oab48Le6jRc0
X6veZ+ilJRpCDzF9/vYRS29f62qm0hC7He73aLu5g0z1/ccTXtTE6Ogo6xKd
K+ir07nFbKiI+XP+Oi/HnRG8+S0hyIKSeFlh7ELD7ISdrkdzGBwpiKnuEC9K
cwc8MLpiuh5ETogTf7Q4hexR5VPw6mfeDsLjyQ/Z9mVbDGet/7s+SkYYpK/u
0FqywbeHSZb1nGQES+KJoTV2G1BQjxzKit/E9FUWJ8rr1rj/vu7B3mP/8GXl
4YJHihVadCr3U7WuY9pzy+y2gBX8mKUd/azWcO71i2vaFyzBzKt4kHn7NR6i
MGQlmVrAncyoJIthFX3MVuGnK81x+GK0btvEMv4tmWjoHTWHwLf1toLWP5Bk
Llg9sO0frJZtlxtqtnNVYHjo3G0S6mVqfB83LOKtl7FfEQsJEW8emv3pX0DN
mW6v2X4zUJR2Pfq5Mg+Kkg8CRl/NcKRU2y6Tfx5zn5qyBZLNECTy+2iv6hzs
vdR2/k0xQymHyFA202+ojsZEHS8xw578h9W2fjPgO01SlBwxg65oxLjM4Wkk
z2RaabGR0MFxS/pv9xT+vn0zd1mdhCKusYY1r0k88L+y8C2SBHGtj11v70xA
amft1PtNEqx4V6hzjv3ExcLQ2Rv65kgg7xzawfsD3TFXVVRHzCEnI72VxjgO
irO6W7f1LWASHzknwDQG4TUrw/BNC5wobPuZwTuKFf2sTPkoS3gfOEw+cHQE
1Df1Dh8VtwKrX/wU3c1hrK7V7UxzsULjNcm4HLvvKKuXdy1esMJY1zx309sh
3FmOl3TTs0ZMqImB3PoAXom+UbvWaw3nHtOlWo9+dIiUFipp2eA/E2h9ku5D
/q1Z76wRG0Q7Bftt/OpBmvO3f0PGtrh1yenpVno3EuXYTHkY7XCAGI/849AF
ac9Au5x0O7DW+PoIG3Si/8yQNoeOPZ6/tGEZ1upAn1tVXSCnA8TCHYacbrVj
hm891HnSAXH++QLnLrdhqMz4okmNI+5p3+PPvtaKTkWKeyvZTvDzuhAmodcC
0ubTExlfnGFN93FxxaIZrf4FT24XuoDvHLvP3OUmXNCNN03u+oCnfSlmYtkN
UAipXnpM7oZ3nGL0z6TqoV4trv9I3h2/aB+wJZfWwu/m6UUHVw8wtUq//P6w
Br1TWjPdph9xcrUpm563GkzNTLYmRzzBHn1y9exwJYb4jpgFLnvC52zaeEJO
BfQHOItbK70wvzOLXy+0HPE2Bd65Ud7IWU0/kehZBq5TNP/GXHzw9mvOTKF3
KYzm5NP/Wfri/JEqyZ9R32D48+fzLBs/pM5+qyQVlaB4uquzxNsfRsalVp/r
iqEXRLCNZwQgO2Y2LO+/Ihh9sNq9OBoIVakYsdXEAvRfq94sEg7G0MbnShW5
r6C61hck9SYEJlN7FNN68/A9JM/xTH8oZBSv2B10z0WV1/vQ8evhGEs9nluj
loPvp6Sfc7+KQKUn1XqKaDZIO6V4oxQi0XXwhh8ZQxa8/1xZj9gThe6Pjk6L
mxmYTqlnz6WNBqNMnFbt1hfox7yM+rAZjavu5xnqdn1B0I3c0bodsXikPHj8
olg6fuwsrJBmi8OAyOquiMtp2K/eUOF0NB43FkXHH5Klgkls66nf/QQ0Ogmu
DLxNwZVOrV9yMZ9w6d2WhCdVMkI+HuW/vpyInIJO/5exiWCzS6/v10pGygeT
VzY3PyHbg664pTUFe7XsArp5EjBzoEP4tE4qvmkLKbvOxuEUTW9NhFUagkcs
uOtaYvFkhjeLXHt7rrUT5yvKYtB2sveD3vkvsJn68zGvLBoh2Q5W+icysO/m
8I3F5igIeQ6Klp3KxNUHT+xLpiIhpRT89KBqFqK7DwRZMEdCO/2S4aNn2fjS
29jleWbbl/btyz0dnIOtZ9PBFWthkLKhPuXRmwueDpNzzQ6h2Heoe/X0wXyI
ul6bktkfgte3DzrIun9FFs89kbWuIND+TJyyoSzExvvMmcPBgSiPuWci7FGE
GeoXYvMvAjAmEKkZsrsEHeSp9o/V/GFbfYx/ZaEEv696m9Se8wNHHOhO9X5D
tZmn0fXzvnA5nvqErbEUtT0KddfUfXBckNZRoqkMj97+Yud84Q3aDNfiU4Pl
kKN/27zm4wUtqkchtBsVeJRWJfi4yhO+q93stw9UQbV3jb2K0hPWPwJqdj2u
Bk9jwAnPSx/BO3tKjTy7BlubB1xtTnkg8/qvD+K76yB/o+hX7oLbdl+VkrL+
UI9quuHnPfmuOLR3lJGNvRHtrAyX6Hw+oH464nyVbxPSWoNHzDxcIPNJ6621
bzPU+7rwJsAZn8YPsOoatMCvvPqx3mcnCOaSu1Apt+I/zdaHac2OWIriJNs4
1obL8e1HejYdoMj5UqzrYDuGO/JIOrIOyKZ+1Xz4cAfGdAMu1pHswW/441UC
OlF2Xbcxpc4OQfdD5Ke0u8DKonIpTNgOTk31dfEu3eho1ck66WiL1HWyqJDK
Hjib5c0dXLTZ7mMVzG6sffh9ylmGd7tf134+k3zhZT+a09U6C8atYRzGvRw7
MIDKZ2nidU+t4XLJ0erD3SFUHD5QQb1mhSjvzi7jd99RHJ1HHP9ohb2rVBJ9
qsPQd7h946CkFa6+63i9JTGCG9P/SIbx29xkeWb9dPcoAo5enn69wxIs4bb/
0naNoTcyevKwgQUKT2oZPmEeB5nYqdOmw+ZQv+WXIrX3BzJMZzqlHptjguWw
WO7pn6A7Qhmru07CVN5ux0/6E6B/Gyu/K4wE1fqCpZKYSciZSpbcuUICnewE
87ffU8hQJg47MZEQtNPczVRlGvMdzSkjg2YoelAvmps7g+pbY3v7Cs3A+OwK
8Vj2Nw7vOji+tc3VqWlf0dyHczAi66ki3+Zq8TOLLw/l5qFsKfu9sMgMuytx
q2j3AjxnQ+/JjZrhZ8SSrfKORRSuhfp94SWhNWTvqcDlRcStPb0Zo08CubyY
EbG6BHG1pfCWRhK+ZTpcHqBeRqu0hKaaqjnS7ZQ12fetYC7LpiTipzlCYlom
PFVXYbMw35gSYYHO+eM36B3/QpC4u75sZgkGyq1zJ5rXoKAuKdkibwWnWx4j
Pw5swPbg94SrHVYo/cPEP+jzD5L5VgXP7axRWSfbvMyyhekzMoe/XLHBb7s9
xrTXyIi6+jMNOidtwXvdK4l+3w5iwTCiNfCSHZ5YfmU229pByMfvbAx2tsdH
ySH6rh/khOhH/oatvw448UtFMqKHgvizMEHNHu+EP340U7e7KYmeEu2hKyEu
aHmft+U1SkUMPuspmPjpClvjo4XN69TEsamr1zyDPcDSJPQjUpCWON30d0/J
I09wFzoJe2vQEYYqV958v+SN8yfHv0sG0BOaMnVLG56+qA7SPrE2uZNI92Ia
mr4UgI/0C/2GKrsI5Yl94qLBwUgTzJDaKmAk7J1OP9iICgfzpWgR8z3MxGRx
oru6ShTe8Xuo1G771fHx1cWzd2JRNFTE8DifhXA5YJnq9N8n2Au8ZDvsw0o4
cr27607xGTflZ6lrX7MR5PXfDCZZv0AxvVvC9y47EcdQSIohz4aIi2WWrSoH
ESChrRfB9xXxnvsF9p7iJE7Xz3Elt5TgGNVS6FeJ3cT8DGXJcd4KiNny+U3y
chEtEYJMsrW16JWc+ZdByU3o0L6LDTjSgqu81TEU37mJMKdVnaXLnZBaiW8Z
iOYhqoxN00xODoDH2m/VSoGXqMqOiyu4OgqH4twal0+8xCXaX8yFqZNoU7Ty
9vrGS8xNiKxvCc4jNp5miPYlL5F1JLXWpG0ZtRtymf6+PMT7kdc/BqQ2wWWo
1HdwDzehdEJRfkcGBUG5p6b4CvVu4rjH22b7/XTEY0/2Hdy67MRRgXnmqCNM
BKWrtmT4XRbCP3JQcDWVlTgSI2p63Y2B2OTBuX+eHESYemJ2cg418b5fb4Ce
jItgu/+nvipkBxH0vPcbZTs3Yay94nVx+76akDlPC1PxEiEbLnuq/1vCbf6X
0fcjt/3r8O5FQcVZ9D4x8Irc9kZDN7bzjdk/cPNOSY2VPS8RI0g9NSswjKFR
/QFKym3PNFnP/bXVg3Xh0EeG6jzEG6Vn729Mb/cuelk1Vjtuokz46ofMnkZ0
CT1SmovkIkTjxTvk91dDcre5WErWbqK7p6+FJFCGwtzlVN0KTkJR2jWxK6wI
ds0KuRc6OAjhrMN8ifW5MHTdaFSeYCc2mzVOKF3JhJvoFI0uGTsRwdbPbdKc
hkJjFYFWATZibEyTM1UoGQy8nY1G51iJExd+fK2oikfrdQW1olcsROu+6FjR
SzGwJp98uRTHTGQshj0TMI/EYakHZzSqmYidN8fplfTDkNFW0p6mxkjwpVwX
/pkUhLNkxQLfphmI0MuqRw/6+eOEySGWw347iWtdMxo61L4YMTY+/PEy/fY5
XYi6N+KFf0d3GT7noCMuJrwra+LwxHPvVpqLUzSEFadRurKgB3aSf18Iqacm
ytabPum7usLfRNXm51cqgvdDcnvLLRdY73lzPDqHkki9Ritx3dQJUrIlXKrF
FMRQoIHqWJcD3jw+HP2glZy4ekC5fdrIHg3y9SbP5nYQ9bz/euvk7XCN/E3J
FNcOwvBQKtOLY7ZQK9QO1VchI9au79r6p2qDB+UMmrOMW8i8sliX5GCN3JKB
CJXAfzhJO2Bq3GuFyIfNHFzSG3hj7vBk7bwVPsfnrDkNr6GDUrjjp6slLGYq
5/pC/8JXyyiGLcMCVhTvd9/UX4WEGuFlsmYOQW6adxfOrqDS4r54oY45jhyc
miM/uIy3e/p42b6TQNnzYnJ8zx+Ij0ZmsL0j4U4/2f3rgktQYI6ayhfb9h29
26/zJBexec424dKMGf4j9LkdLizglVW5vW6FGUrm508cfToPVfU5xuxUM4gr
Bv86HTiHBxuHu7KSzHB69/eLx6x/Y1FFZsdCvhk6N78YUPyYQQfxaNF72+dY
hYTM63Wmccd4lvLnNpei0pjOm89MQZFftkv/OgmHbN5Vs7tP4uTlB2KZn0gw
uxQmGExMQFS644kLkzl+6fdnHaD8CbV3Rl+L7c1xqiNmfKhrHLeNZJRUGSxw
Q9VSYSZ/DPf+vi87FW0Bnwz1JKfkURjurxpOVbaEkD/9wGLSCFaNg02Ndljh
TylFinnuMKKOXXrE9Gib64VHeN60fMenhapinTYrSBzXKbeYHgLXzecZoUrW
YHkps2V2aRD6Oc/UqGusocUUQZ//rR/aryQzf1yzQbJuraaYSh/uxDpneo7Z
oInJPqT4Zw+yItM27lrbwi3N4ZiVXzcOLU3pZovZYZjjsZzNjS6o6jUepOiz
Q4Rr1sOR/Z0w2nhEyg2wx55zxm1V1B3Q6Lbj0NRzwBEXZYVnf9rAueE0qy/r
iFu5Cp07F1r//7+uwYzXCd/Zdu78vd6CkVbDzkMMzrjwuKTwKWsLVOoIKcGd
LkgpmvXoOdaMqYKrrjTcHyDPLl9yoqIR0nJNI2EyrjgcU26pJNMAtmmx+wkP
3HD2k8VY0dc6rNaPp61Fu+NItq6mz/VaOHtwMJr+8UAORc7Nhq1qGI4qWZCl
fMQ7q6hu44IqCH1RHFbV98TZil/9Cc6ViLA0SNr/nxfOi3I5ez2qQB2z0Xl2
cm+UBdPQ66qV46Wvwn+fh7bX0X+Y1S+Vwc2n6KB7jQ+qBruHU9VLcYjBbe5m
iS9ufVJvrHj8DbWtARqF5X7IMnpeOO9Ygq/j1vxGXf6oDBN0EX5cjNL9Rqxy
fwOwedzztHB7IcYj7MuHxYMwMvV4oUajAOvpm0Xyz4OhqcpFu+NXPnTijVSP
fwvBh9C0sw1eedjPnJheIBqGXY4PLE5dyoXC2zpSZWQ4PFYk+/U4czDsXrsi
FRABH7F4A4O5LMgw/DbRNIjEwegTTDY9mWgU3ck0eSEKW4yFY8PNGYim1OOw
ORKNb8Fyl9s6vuDRWulmpWgMbptfoI76mY57E723Hx6MRV1N0dlYqnToSVcd
5Todh4jDSTeIw2lwrzmRFKIdj+lBi/i0qs+o/e9xaIlbAhRTrdIKz6cg3vLo
He3GT5AUlxgP7ErCQfZKjqt7kxBx3YQ4RUpECXmEoqtdMhoYWikzpT5BouVg
666NFFC/tbrAtRaPn547xrsdUyEl97TIsSUOVXU71u190sDGu6NVOjcWm0n1
zx8apiPVrv6jZkoMhnq/Rgvf+gKXUiXrY2nRWD8ewph0MgN0GXcVy5ui0LRr
XStaPBPh/fSCe9ci8bpGWCdCJAszwveNyiUjMds4HiV/KBv34sWHpJ9H4EDm
og2/Qg5GbQteLeuHI9ZXY3ryQS7aKaYblHaGwX2yNU/DLw/N0xo9roUhWP4a
3M3blY/WJzJy85bBWF5X0aUUK4BOWeLD7GtBsD5osNzrXIiFz6UKe6QCwbIs
LE/6V4Rar4eW5nsDYJGp/m/8TAmEyKg1xPj8Yf1BRa6f8RuuJRv4Wgj7Iaz7
fuPeH99QZEfjNCXriys1Pt+lq0vhMEND0XPLB8K5BkIJWWUwk/CUK7X1Bmlf
2iO61HI0PDC6si/PCy43D7nMZ1aAyKxusVj1xJMz9kcpqyuR9/ltte4ZT9Be
fVH0c6IKsuc4ZW96f0Tn7VsuV7hq8FqRKJzv80BkQb/S8o1aHB74XfUtcvvd
ca18DI2tQ+Sl9YA7b9zgrcXowknVsP3OlZaZ7rjC/ePJyzKmjVBgHfnv0JUP
yEi7yDP8twl3HN0cWK+6oJhMjsmmuhlZ74ZFRe4645W7v45qWAuisiROtb91
gk8EC3uHRSvucDDf9A13RFOM249ogzYo1iTl/2xxwEGr9GwlvXY8s6LVucrk
gF/BzD46jzowOXvBTfumPXwEVHfavelEu9xiUdQnO3jkkWZ0/LowpHvvUQGV
Hbil92xFlnVjwnawWeWpLfYEud2lJOvFqc8Sf9Z6bPD3L1XxhUt9mKqutHy7
naOqb2RPyn3qx7gmrYNZizVI0suaKbsHofX7/GCxpjXqyx/SOwQMobo7M4xu
ygq14VyDN/y+g4bcu1/Qxgr6Kzoh7gbDMCDfHOsRtEK85NzHp0ojyAyU+8vs
ZQnu4p4s06Oj8GCQieD+bQFKo8JS+QNjKOs/5RqgZQFlHTVKrYPjyM5W3qHf
bg6drCb1Ryd+4HTrg3rTO+a4+8CQoLv5E4GsSXNFCySYWFVozVlPIL/Zrfiq
PwkEyv+0fJ2EcMLNC1eVSZD/JWnxnOoXuj8lSazuJOHc+We+H7Y5GOT8XSR4
m4sGvW0Rm7UzeH657kdcgRmea/gkRV/8jZfJNKUJ2z7GQdd5PP3ZHC4vhhte
3faxthCJTk7MYyikfdO42Awje6t2kfMtoMKXjHL3mBl8AofsVikWcVuk66QR
3zZnxWboHVYW4dlDs7ay7WPp7ucvnV5ZAn3xdXq9bR875N48nEOxDJZXV75+
VTGH3ZJslB//CmikBtsNx8xx2b/tp/X5VZyxZLynE2yBSLXl9gOkvyBYU41n
jC3h/pXikd7gGtKljm8lnbPCpvFqT576BrL0jxj4T1ghdegY6cjAP5xJo1M2
+WQNGfeT/p1mW9jSTDxf/8EGt4cYLtwLICMaaQudxXxtoewR+cbNYgfRVBrv
r16/3assbsTTviIndivlW36W2+5hVaEPXxlSEC0O/X+CfzoiokIx8ak5JUGh
ciyUZdQZI/9ZSEcEUBGvTPsjbp5yhfa5KN+vpdSESMZ5/h20HjA4n1/8bIOG
0GyRurrvP09Ej7Wv6SnSEQwml/keH/VGTtaOSeVIeqLRW9L8Y7QvzvEKqNTu
YiByD9+zpwoNgIfK1t93rruIjlGn5yLnQ/Dqy99rA/xMxLMMt/GqRxHQlM9Y
Fb/HTCRpzJ6+fyoaK+9lOOlOsxBxE2+u6zXHoTGifvydECtx/r8N8hO6SWjc
+6tUmoWNiKcgE74RkQbxZ42/ImnZiQIrzblB40xoakZUf6LhIPTJbK6Gm+dB
XEtDyIGBk6Dx1slx4i7BvtWxxwbsuwkfbYuaidBynORvvMmw7VtmZdx9fOW1
CGNPEFzl5ibUHycc1g1pQWv3Ak0UDQ/xq7zz94t3XaD26CuR7OQhkndmOy7H
D+HA7yt/aY14iQgfjkRv13H81lNtjSvhJR4M3HxmZT8Dq76YorcRvETOmScv
2rCEc19pXft/8RD+9fXOiFyH58A+YXNrbqL4F4nf0Y+cMOrN+segvptIjkuO
I3tKS+xyS71Z8ZqdKAnbE5RFzkS80irqrBVjIb4mZx63HWMljCofUnG47SSy
GSzLD5BzEks6TMlhKlTE+WJF868uXAQ3LeXl0vUt3C0JfahynYc42OtX9cRr
Ba/uMR9K1+YleF0GL1DKzOPQHioriW0vvOO8x9Fw9ySUGveOFkXzEjYju36R
tEdwlXKozP8ALzE/PrV5nqcPHZt5Q9WGPIRqrS3XiEw7kp6Iyot/5CYwyWis
6ridr2u3jP4L4CLCb1yYkr1ThV/NEa/UfXYTAnW87IsCpWAZvTfxwJWT0Iz6
Uv/SqgCx9+4YRtlzEHmn3vU65majx5RUb2nLThyJJW/8ovUFFacFPss4sRGd
mzbrn+k+Y1U2d/aALythI3NV9sdIAkijBcEHklgIYzPae3EDMRjrGU2OrGUm
YuSW9hz+Eokl02vzxj+ZiDTeMwdf3QrD1oQgc/clRmImIGsgTDkIh09baAhX
MBCEbml82Q5/9NyVXB29spOwPHeKklrdB5cT5VQdp+mIsCKNaAoBL7Rbf518
HkRLyNXJGW4ofUT87qUfM7doCCV+E99qRzcIPpbuvCVKTfAshWaN/3XB+P7T
KluUVMSHXR1/TPqdcLfl5Br/MgXRlql5RoLFESvyF+Iil8iJ0eTrdhdc7DF0
M6t0emsHMbdhcazglB2Yyn/YPNq9g5AJYvwWvscWZMvPlcxOkBGnaMSH8w7a
4MKJFeoTLZsYd/3RsO+2NYrmxZ46KPzD45f1YVSftn1Jl25HZ9U6LpJ9f6XH
YoVO56snJXXXEBHCfWxQ0BLPe01iw+n/gtH/St2EkgV+3fi2S7FyBRYrTdyq
fuawWdxoVPRaRvwVjzFFCnPIqkSfb33+Bw2BRyWS3UhgtNY3ELq1hLfCbgxt
UiSUsYjue391EbtmS50+zJmhnyzx1P4bCyhUnilaLzfDJ+KNk9mTeRyRsRoP
/2wGbSm57C6HOeQgOVBqO8d3fyFLxL3fUPE2pPq8nfN9Nm08Ntu5/0fD/vSp
ITPUF24s3L04DQ89RUizkRB3Rs6mvmcK1oOs8btvkXB988f1RvNJ3LUcd7VN
IaH3ZOGG8dEJ0MYIDsixmWMkPaS/5+8PbDS0OHE5m4N0f26/WPM4hK7P+jEx
WWBAWanePWsMk7a3eKViLfDma9F/qp9GIfz8OxGsYgnau8f04xJH4Hr53vuz
23707lCEy/S2H7H+00/Z+9AKfccohd61fQfrxOtO9xYr0L2n51BbHELr/YAv
1YrWOOOfy9uiMQhmBQU5xgpr9GhGblxt6MfIm+Mh0ZdsoCgiUJN/qw9iZDQP
BgZs4DTcI8+60gNXPycG9ne2kH5VznQvvht6SQ9fxgrY4UKly768J11QzxxL
3Wq0Q6Wx84DCiU7Q/rdvp8/2fSq0qH0jztuBCi+vkt5rDtjlmrsUQ9+OrGzx
kjsijjhgOjbwl6YNvwl281gqJ1DdcpMyZm1FriVVstKiE7J9uHc9ONCC3TfE
NH7POuPqrOs7yUvNMGpviJDfvt8Rt7oUni01Im5AdOYXqysuzXLkND1sgP9s
U0jhKTc0J+v7vf1Vh+ensqhJb9zhzcplomVXC891/vdbZR64Qsqfen+4BseP
v3wV6PkRPwRGG+d/VaGO5lX4DhVP7Pkp2tOdWwlBb4Ijj9ELQ9ymjLd9KxDs
flZAecALE29Kj6VblaNsb64akeMNk6rccY73ZYj7c//RsVAfWNN9WmmzKsVp
KRH3ag9f+D7w0CF8tv0oS6I/wsMP+9SaGL5klKBHLbjiVag/HnSaZfEXFiNN
JJ/xb14ArKYmyx3FihArwX9zZTwQQj4jf60SCvAgmkr7jFAwimzrv5Of+oqV
/bwlmS9DIDhEycYykocXhdleR5tC4f56/UpmYC6sjllFCIqFo23Xh4QPpjlo
PvvBUEYpAkWLF1+cvJeN3n7f069pInEewxWcmlno7XRaV2iKRPAd6v3W2pkI
Fgwf5I6MwkNri6ejzzPA9/yp7WvzaHxm6LuY4PwFu36OOw08iMFgUnzShbRt
P/K0Th66GQvaXVn/YTgNs1QfDP9HsXmHc/X+YdwekeyZqLQLbaO6H2WkFKXS
lLaiKQ0++Nh7y5YtGWUrI5uQLStk87VH9vr5/Xmuc/54znM97/t1v851HTat
KKhs1N3BsTEBcoUC61fufkLz5Mw209wviIzJwQ1KNI5cvcecfz0eNcoZR0rD
P2NQNtSblSkOrS2Xb680x6CqRlvZIS8G+cSgKV0sDlaf+IypTp/RQMnhTzOM
x6OyAcm9D6NR4vn766/WL5is1MprP/cJqzJU+qHdCRj621E9enJtHcJ5Vk3j
CfALzg1OU4zEQ9NG88+5idhcEBwQfDEC/TixvtU/CVxJG8UE9MPXzqHW2Qmz
ZAwzV0i7uIUh8lvhrbcvUqDN/23OIicU1Y/uVq3qp8Jnt6z9m7kQxORtPCv+
Jg1iOxhCR+RCkK8dZWDilI7XI3au4+zBeOSrcDYn4RtIxfGrF1KDoEDz/aJn
93fwGk+TXc8C4aZosOvbtkzMddkeSj8SgJ3t1jljb7Og/PaSynEOfyjUFpyi
/5ON+SWBZIZ/vmgUU7pSpZ6DjPTHHI/6fSDs/3nQTy8XAk/2KeT2e4Pzj9S6
9bJ5uK8SsMPg3wdkWzvH5HLmY1wv8vk4+wdMhNPSHZnKh7funFGMtNea51nd
+9dRgAdeIXeFb3vCl/u5nmtLIbRmDrUX+nhgnNHwVGBHEVKHTw1ItbijMzN2
IH2qGOscdUf6t7mjOfApozPvT1CvtfFbGrlB8sMiw89TpeBNIHL7v7oiQ2/v
tJhFGfaUhhk4vXfBNzfd2CvV5ej84XHhtqYzrkAl57BUBWrkl3/NyTvBXTL7
hkdwJRqNBVySDjhiVd5HaRtXNRr+VbiOHHFA4kWbKInWarCOLFTxnrbHiaI5
H4XEGlxf3jTq98AOfrePhiy71UJju+zMrIstduqM6/01roPAu5TVrwU22BtS
mGv4qh5vn+3boEZvA8uIAxOXDH/jy+Bo+o1z1rj3dM91YesGcNNK8b4NtYJ6
34NLj8MaUcPeoiu/aon9OnLnxyqaQLn4+uj5h5b4+4Bxtw5LC3ZULXZca7DA
Rr8eJuOLf5BW1tzEqW6BxLOeC4zxrdi5XpnsrjaHgwpjRJ1gO0pmRs48WPOn
NMcfL354/4XckOyo9Zo/qchx+DR4duCJYfE7LUsq6vk4F08/7MSxPP2o2K1U
pPRFCR0+1YWu+U8Mqd5moD3JuVV8TzdeBLXet/lnihceswcyD/Yg5Y6wRsYl
U7Tu2uEVeaYXFwxvKVkVmYDhz6GoiBd9YDx5TuaXsglMZqZ97KL6cShu/2mP
JgpYk07a7x0ZgOUK3+8xIwoE2VnZ3ioNQqiZO1JIkoKG07bSNxKG0BN+Z+He
pDFcp1M3NUuOwPB1rKTyT2PsXh5gXskbxa0Xf9lvJRgjxrPl96vD4+D3r3j+
KtYYeWzd52/xTaA8PvypRYYxirZHOtygncSm86+vFLQbI9VuRwP3wiQaHz+S
+CpEQewFdu79NP9gon+PdsNTCr67fud/yjuNx27+91j/UPBBrVTI9ugMloLj
7x98aAK5Fz95VJ/MIuiC6c4oLlM0nrkgYRs/hyypYg2hTlPIcLPNiNEt4DMk
pBiazWCfrLJxWXcRLD1uH++ZUcFup3aHp3sJ4+7UrOd7zSH5S5Pj3ssVyAyo
/fWcNcfulRxeyjoakqmW/9W71wIlVy+qGPbTEA4e4ZBzS5Z4f61pTLKalvwe
+S3cedIaz+dOh5EiOvLyUMRJiXwbcMoeM1UpoSfKr8cc2a3tsG9sNrm3gYFs
OHXTWdnPYe2cZDTk/WMkt1fKN9JxOkObs6TcejMzucdkWbKy4oqKj2on2m6x
kIXrTD7zue6gMxK8ZxDDSgbvcWofa/cEldO1eIyZjXBJ3um++Mwb1cvv8yfe
sJN1u0elL7r6YatZIdu6ufXEevfISoNuENrmGZ0THTeQH9OTD3MFQkHfsHXX
Jj9OkhvyLH6cNwJZu/8adBtykREGUbOsP5+w0ByXsf4mN9Fb/vT8fnwcblqF
UpXO8hCGdS7F/14mwkSBx7XlJC+J4bYpPmeair0taTP+Cnwkfoku7UddBkK7
62R8lPhJknS+08vZXDwuEjtaflaAXHh09WV0bhEsVrS0Q9QF13p4/mqA4i88
o3m7T/6MEKn02m8aG1iLK9IFZjb7hYkSR6HhnpomzG5KtpifESaObXr7Nmd2
gOqbHH3URoRcfLUzpDS/Dybr3mguF4gQJ5PwrInNY+inc8l94iJCok83nUxW
m8Z6m/1bfXKFCY33+h+X/i2BXsFC7Ku8EPl0IIWx7A49mR/4eWlymp9sztpy
SvQ8KxmlzhVuWMdLut7x/bMa3EBk73406MjgJCfOP7/6/TwPmbGwbC0oXEd6
J0obbl3lJ0YZURObohjI+ufUuNoSQfK4rU5FYnUFFJ2VkP53wiTL+P6OytYZ
LMyEbDr6TIT87tqY0fptHBHbj3MrrK1bytX7xffnAzjdq5HrFShC9js2bhcZ
60RkTs/scVERUumty+Lt0AK97SaaoneFSTj/Di19+XoshLb/6FnzpTmPS0dT
91Zh86t59eBYQXJSQf1A6pmfmG8RSHTKFCD6n5lSf24vAJXa/nB3CT85dcOK
9Y7LD/h9UoieruUjaX0mfeWfv2Fn2+Oq5U5eInTnWKvw1hTUi/gmqs/wkN1m
H5Ut1jz5oslTjZNr3mwTdahlKC8WB2V6h+MOcpPTCRaqy48/we3S3e3rtbnI
kVnXWN2pcPwY2p8T6sZJWJ6HuDzZHYotbnkTC94biFyf+Zao6iDwSHVk7xTl
ILGhMmnDYv54mLHF1SGZnWxmOl9+kd8Hw4LHOfKusRGP5I8VPe5eUBxWMr+2
YR2pCX9t/OidB4zkFYvr61hI2QMTzTepbmC3aVWIi2ImYYoOIrteueB6zUvq
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
TpdoLfo8joCcc/u6UWcu8n5L+q4JjWhEmFVwbH7LTVggse2YRjwEe97ZGD3m
IbSPLU6EdyeCZ1/uZpn7vESVrvjgkmgatq3o5qx7yEfEC98ofkjNxF8Bq9p6
fX7iZzUefMk3D2VBY1/OGAqQy/3C0SGfipHF+ZBO10iQRHt1KPl5VOCpiJ5X
7Gsh4llu3xPjWgcPnfYAtmvCZHnXZV/1Qy3YKJF3MlxAhCg22ej8+9EJo/Ni
V5X8RcjRzb8oVscHYCfR0mpTIEIyBinP+kLHEXHmDrvzcxFyTd6r06ViBpPb
jnyqeidMthw6yFSxuoKzMnLv1hcIkpf77jTsSWYgL0t64srP8hO5dzda9nSt
I1E53D25MjxktQaBWTWcZHv3BamC+A0kMC466NV2XpLL1u97kJmVTI9M88vw
CBCd58fCOYXoidT8l4tDl4SIRIVozLz+EhKf1mtK1QqTkXmeUyca/4HpaMXj
L94ihOk/Q4eA26PY0vdLtyFfhFiI3bHt3N6HfMmlXTYUEeKeuq1KjXSgqXc4
jb5PmDRdDJm7z9WEM5rN4sHCwoRJUI/pIXMtDjlezvwgKUScZHJXRm+Uo5jn
pdRJaUHy5vo17tKtRXg/ObGiLSlA3C/OP33gnItTu244FOzmJ+Z0Ph9FFTPg
nyZckbSLj9i9+hyyTjQVPho/Hizu4yVlbbrRytKJyG5z2q8ny0NY9mznPX85
DkfkWA3FznGTXdIMyi9CP6FHzOBY1mMuQnk/8UV+LBwRggnnPVw5SWuu9uwF
mlCcO81V98pkA7kz61jy81wQxAf3liqOrifVGx5YLZv7ISOTy17lJTsZJ5fe
v37ijW3uuRyMTGyE/mcz9+8OT2iz6AWOx7KSLs6dSoMl//9P98mz53dZyIHD
xwKUWd3wW764qX0nMzH9eJNDeIcz5L5cDvZdYSRiVtkUnSQH5MRHMM50MRAH
qzYRzmA7TNXcmbrwm55oeWaSs602mC4xebfuNx15w2/iF3DTGtmjA2XmnbRE
b+MHhSN8VmBIcVrZtEBDFJTeOt1ftsAvdv+X5zfREF1PAW9uDgucylvkZghY
QQ0bTfx7BXMcl9j/+S7HMsLa2IvaPKj4aiS4J/nDIk60Va01MDMYfzpyc1Fq
ARMnVnCT1gyyjOd2qLXOQeXIl5yHkqbgkGFTyPObRdvCwdDrZiZA8qv/qI9m
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
ec0/+Gdl2g==
       "]]},
     Annotation[#, "Charting`Private`Tag$25844#2"]& ], 
    TagBox[
     {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[0.75], 
      LineBox[CompressedData["
1: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
kaLP3/CVR7Xsk/z69UTX1R6e8xW7XF3WrlfZQszTumYktRV/Nt00365jhwbt
sjCetBbsgWmt7V87nDDWuOpU0IzgyIK++Dh72Az6nXJraQLNsOBldiUHfGj2
cQ1aaMQtbar2PTSO0J2Se7dzRyPqNX/W21U6Ys2252tyRQNGtahCFEOcsKb6
6ge9Uj2El/0/ypo5Y6Nzw5GI3s8IX5B7ln/eBXqXI6sdA9c7Uf3RrWtHXfFm
+hlr7Zka7L9LZ1bynxtGWsU7PnNUo5fXQd55fdd2ZcWeLPpdha+JsstbdG6h
Sq627UfjR5xWPmTo4nEb+cdCBXw+VoK7PG/rzrfukF4rOMj2qQId/z22mP93
B7K+IomtreWwkqiM15TygELXhuJT4+s+FZTmf9Ttge6t3480cJXhuclhBd64
e6jhlBkeOlGKzU9e0V4z9MT75jgPsb8fEL6sZDay3uEP9c2Lota7XO3xnMch
Di900su9OMNdhJ9NWx7Xz3uhwUCo6kJRIfh0+9RO/vHG+T8S9Z1OBWgyqlDe
8ccHzo4anCJ4h2Mxc4riC77oY+fMusSfD5GiwsFWrgdwWhqOqVvJg+bBtx+m
jvhjk7jbt8apXKidDS3e6xiAOwMLeD+dg9O7F8KvFAWiYNV1++RaNhJeu8/t
5X0IgTvzqa2bsvGQZexF8N1HCEz98LH9aBZkH9hb77kTjIVnz0KdLTLBpq70
78SZEPA1ZzxWU8zAuZqKtVubQtEVuqw/UPcG+9596r0xF4rSHel/ym68Rtfu
5W6P7jA0LzRx07CkYZtTsqRhUzgG49gj6ytf4sUvo4GnTRFINmxd0w9KxXuV
K3f6fkSCmrf5zLjRC6T4RKhXLUYhWZdLoELpOWbrd2RRb4mB0oF7nvuOp+Bh
6bWG87qxcLt8Tir4+DMEZ/FIBpfEwWYb3Yzt4afYYCDfaX04Hq9i+WmYjidj
h/5m54WKJ9BaZTNJUEtCj6v/Ycn9iSjqbfbytkvEZ9utIs3sSXjXsmhzSD4B
8VlsF54sJIFFhXft/ot4fGkN2X1wPBmxul+E6qUer/v98uSFqaegv05btFYS
i/y7Yv+SaFJw5/IcHatZDNRX+lX/rbs7KDXTa3lLNPQdaqekNV4g1kbC9ddE
JP7y39/NG56KeVSsfPscgfroNNXEwZdYeq5lujE/HL+7ugwqlNMwIKjLl5UZ
BsONNqe8K19DrmFWlOldKESifln8U0vHh+GyzKt1Ifg97ECtMJcB7RweH5qx
YBRZJXV8bsvEjkdcSpcEgsHyJv2HYFkWuu7EDVglPUTksJ2dfH42fJ/43Ny7
LQgjx5wlewpzMDRnbvK9KACOOpH5VXW54NPZ5UQx8UdSk5Re4VgerhwaCv22
5QFuiE7+DhDNR9vpEnEy5YsXlJEGQYN3iI3NO1Te4IMd+8+/uZRTAL1bP3z8
33uvd7HuSWmB9zjp/31z3Vsv6LTnyGWEFuFi6s75zyX34Vhr2/pH/APGdmh5
tXz1RNYFXGb4WIJpO+G8wwv3kDAe0CZYWoq3V6tDrkjeg4bIIMv3l2WQcCwb
jrnmgdbi8+vPzfWOW8iO6TxzF6GFgkzRzyrQPsynE9zrDuHHkTa0+ZXYoXv6
4cWQ26Dwn7bzbP+I2XuunTvUb2H8x8i3fqZPKFxxObN7601sa+evZj1fjarw
/YL3GdyQx7lwZCihBt115tBbcIFFckqKKcNn0O/fUj694IwjXuPMjz3qIH7P
5EkwozMOTzB+CWZvQCi3bcX9Les93rFPxSb3C0JeGeXuPO8IQ57QzgPvGnG8
N7fyt4cD7qtcOnM9uQns7iXnZMrs8U5ctt08phnbP0dvtWexx0/x7460T1og
ulksT9bQDpRT3jv+ZLbibL2o2mKZLfrjbUVGmr+iUWzRUHOXLeKoStm/0rUh
2/qC+ocjNtjbbaUccLYdsm5t5y1k173qaByyENeBkEufWlflrPA0a/4KH20X
mhS6yFc1SxSmqDGMuH9HsHzZXS03C6jFqD97wPoDXb6Bc6sZ5gj/9UFiU85P
VKe8FFGbM8Pf5+4sA/k9EL5hadSnaIYsBb/99sm/cI3bT1n7lSlmDbbb/4jp
RTWNzjsjAVNkn1oS//mkD3ySGr3VESbQDgqf25fdj5Q9xQ2XxUwgxnuuJLF1
AGyH9wTO5K13xfmG/lWGISSlnzkXrm2MnCOiq7uUhpHVdl/0FLMxuDzGqnKj
f+NW3deQgzUUvHKMScbiCL59VfbiiKAg+WvG6UrLUbjtZGDZvN4dGX69fmdn
xxAp1/zmyyUKgre47fkePIHPO2j5nq13x9Ae8rspaRIh32SWzl2gQEL2y9sh
nylcGK5diDCgwLn0NctF12kEMnPWBnhRsKh1YjzHeQb0J7+1UgopsGT3c/jo
OQvhpUbhRFpjRMtIMJH4ObAe/p5AY2gM74t/aX5X/cV16893M9uMsfOWA0cw
1QJOH9v7VM7EBM5duR/YlRcRtVFnPHO9K5aHYpYvvFiC7h+vsU896++nq0nS
Ub5lHDgl4TnVbAYZZaq5jugVyKcJhwdNmONDS4vcvr1r2K4R/kb8mCXu8+pG
vrGmIodS7zTEVFjBMVL6XMlFalIiMpiVHmiDrCj6C8PHaYhHsEyuZLMtTDou
ZtXK0ZLfOyreP16//ironwpynKQjRpEMrkN3HKAcfKPT7Ao9KZ0/7XD/gBP0
GX0Xg90ZyFbZXLOJIy44qLeV+kw2I5E7fe1o0As3bMlry7o4v4EkbcTcwMPb
8LLn1757gZn8XCvyl9rggYMKO6pT8jaSt9ys/SlSnvD/V5Qbt5eV3DJ/e73h
oxeqE7Yeky9hI9rcFryTq74QYNkpuHsfB6HfO35rhCYQM0z3LhqycpIGayrN
Lt9gDD1XUk6Y5STd5hGHForCMGLZ/vDAEBeZkhQx2tMVhYDZ3ZF6A9xE23nz
H9oD8bA5PaAnPcFDlm+xMZwRSYaB5zE6L7p1h7h+uxj//99LKChdHNjKT2gP
3ZwZ5H2Dsv0apWqqmwhD9z866vZsPD+bp/v3ngDJCQkb9697h6aNM/oVBYKE
0XfaWD28FMkaqm5FU0Ik8VxGeq1PFZ6v6D2c3ixCnGOvcoVu+oLnyplnlo+J
ElHzHFH92q+w/Xh47bOsGFHLcHj9fO4Hml/Pa433iZFjP2JvWB8dxGMFVVkL
HnEideHK0h7uSVx3lMpWrBMj+wY4NRqOzGNTxJ5FrVBRYqZTPVTyhIpIyi4+
nlISJtK5O/gDjzGSMEbiUj+1ich7fuqPushOAkIOKB74zEOy4/YuL3LxkPBH
Gd639TmIR1w/l+/6eRaeP8t22XUDMdC6LDPTKESS3qowp0VSE9aOo4pGZ0TJ
4w8JToypC5jcd3Tg/Usx8n5YWmM79xRav1y7JcUtTpjUvt0JixtC3zFrxZZ5
MaLEy/1R2awHuwfrzx/RFCPpvX9EdrC1wTzuQIi8mShJuqhaY2zWCInRh6Xc
6iKE+ampdUH+J3zUjmbYuVWY8Hd93iNkVrbuWTxtGhUkh3+a3hC4WQjp9ERp
uxoBIqtbVd1tlgvNyMqekpebiDb7yxsfhjMw9vqSZUgwP7HzZpvMPf0Sv49E
GL24y0eGFKlUlc48g3VHqSKLKy85w1lF99ElEfmKnCuqN3nI3dFvPc5ccbg1
+e16pg83qbx9P5/FMxI+N7o8DsRzET8x/QPKf0IxkNf360MxJ/HeG6HRwRmM
z6xVKwLDHOTTzes7i0IDEHlqrYZKmIP8fSDBPvvLF13351jPZbMRCVrZ40I9
XohJTXt6/Tgraa2LU1sx8cT8v20dj7s2Eu4GSZ6j+h5giKK/qvSAmUjtef50
0yV3TN7uKSo8w0Q6HV2WNt66idrIlD0nuDeQTRfO047xuKI0Lb33wDgDiby7
qXOOxRmNoXuqp77Rk1M3lHky1R3Rfb1CvKOOjvg0O2kvtNujxUC/Vu0LLZHb
xW16KsIOP7fm2lV305AfrESf6a4tXFQMHmXMU5OMI0W7C0Rt0HhVwvquMDXZ
v1ZTsf2eFXJWmrjeKlOR2T1P/7ELW+KXXOGudKY1/PlUE1EzZA7d0+cOtz1c
gWuqb/dctxnsDKWWaSWXcXl8afn0oimOhrWc0W1Ywt79T8tVDpoi7tKmAVbf
RVzMf8Gj99AE28oKtlxWXcDinbK/F6lNcOf1P0sXyXl4qx974B9gDJ5vPZ7F
G/+iSknxTNtOYwSETpx0X52F8s4NY2rdFHDZSBpwrc4g8dL4jHUSBZ9Fj1f/
YpqBXHXhhmYnCopvhfZrbp5Gsc5IkKE2BZeSd339dWoKrDyPQ6WUKehgvhq9
YjsJeS+dPhMlCmgor3ddujgBQZmtLNaXKfiV2Tr0tWkMaZdOb36/vjMp87ft
YiijqNn2QP1nKAUBvmOTH5j/4ECxdJdnOQWrCzZH7Ep/wy7Iaav1CgW8t8df
jXgPQ+dryjPLU8Zgi3ffaaIzhGyFt1kG4eve3t3/SubYIALfK3KdnjTGjrNF
lZHSAzBODzvBp2WCgAtywn939uOb8X7a3moTbDyjd+vNgT7o3OOSqj1tihES
niel1AsL6as00/WmEOXZHtRu/gtfmKXn/K+bofL4J7W9kT1Is+vc3U5ljo8z
7m03on6i1E3ruOhrc5z/zbr/A+8P8JTOi6bfsACT49foe8+/o+2XZPrv7Zao
+68lqFmxCzcZ648cWLTEk8Yvm9r+dYB8eZe33GaFv368umUf2tf3pnxLRaU1
iievtLYEt4E2VluIqdQGbKc5r6vbfYPRD+kOaYotjPIKGQOufUVqNBub9LQt
Um/p7O7UaYWhTG6Kuq8dOoxO28QbtmCoRcMkSdYeebX+sh2GzXj5fGwzZdge
H7lvtqnaNoGWg/e04EsHpBj5n1b1b0TP0R1+ik6OGJbmCbph8AWRWfRc9y84
Yef9rpsF5fXQjC0QuybrjGcJN+es5evQ6Pbqw72tLvDXQLZlVS2uLdlyxGx1
XffgjHMqpQa8a9fPa+13A1PDjjoR/moYnxyN91S7iYTu+PCejiqIeL8yH7p7
C4Ld549ufPMR4lb94Tolt5Eda/Ov9FElPEt7ND5x3MHRd1j+714F9t/OrxZ2
uosesQTHNx7lMJR7nPva2QPNT4MFjYLKYNbdPKZ47B6K6vMEs56XoiesZ2Gc
zRMv0n9u+BpVgqg4jbeHRj2Rsuz3Y3ChGB9ozrSUfb0P0T+pFrY2RWje6n7t
QJ0XfGL+VqksFULKJYn7VKM3cmiMLrtFF2BXYNu9V70+mE45sHla8R3G49RD
d9H5QUBNgKOMOR+fJe9MxB18gMrlsh/03Xn4cf6me5uLP265CKgNfshFvWho
U9nnAHDcksx7lJGDDRzqdy7LBoGyW5acSs+Gtcyz+ojXD/G3eerm6cIs0N9s
M6oSCcYlueL+vuZMjAWoXNo3GYxgsw+W8+MZOJP2XWxzQwhOeljwtauk40Gt
3fKBdQe9vKNSd2TdRSObb6cKZIShXi1sM4tKGuS8Iv3dc8IRw5989uCfl3j2
L09IpCoCzvR3V/NjU7HfWnRT+VAk2l+rZqfovkCb6eyN/wSisVNIyYxL+jka
3bWWrurGYOMd9cuSbCnY3sLEvTkjFoE/7pbwrD7FhciwR1a8j5F6l/kAz3Iy
Wk90fFd+FA+OOc4N1ozJENfzn6gXSQDTvK+RvVgSKrvTZBmuJ4Jk29Q7nUqE
yZG0n0+OJ0GS+X1w4cATPHxQbXdxRzIylVl8t+jEY9HIMbpU9CkGatWGafvi
0LkhUjJF4hkmjKx5NO7GIqGDgyn/QAoQ7pzDIhOD4lJ36SLN56iXF79zbDwK
Q7J2U74+LyD1uiSPuiQSv6SCcqY+peLa2OigW0IEFKb0LQYEX+GFa8D2zofh
CJZQ6bjskYZovbereoFh0CiUm1dYfA35idK801GhaG/u/++jTzqEO/1mB9ND
cHjHgTcLPJlgFrOnj2wOhkyWBNXKVCYG+2w25lEHY/vTMzc4urJgvj2DVd/l
IXqdPQvbGrOR4CF979daIKT5gxYYW3NguL+CYTwuAFXKn011BnKhxHne4K6S
PyJ3h+0Jo38LKlrlkkTmB+hrLO72PpgPA15JY5suXwjznddicn6Hlhuh21mK
fCAR/DqMJasAM9/CVhSLvbH3rUwN93Ih/F+X8f2r9QJXvE7OiFYRlq2aO336
72PtvsyA7cdiRDu05l9luo8zB8v3B5wuwatThRcW/vOEvscaR7hlKY7YX1tr
sL8Hq2mmDSmkDNsXxXJN33og6pRq5y2xcjCoVmhdoPXAGjk2kcJUgSxISAll
30FESmbG27UKbAnZFuJu7Y4EubtHz9J8hBxvWe+s/G1Yfi38tMxZhX1NDqUV
fLdgeHThzt09nyBVoKy+l/omgse5K710q/F5jfrvw0VXZKa93FoTWYOMPxor
8msukC+tZeHsrcWEfnllJKcLTr9TWN5zvA4/dT3bOPY64/fIlOJKWj06o89G
Cuo4QfBIZNj13ev+zKtl3ffIEde2bqfdbtAIPYEOj28NDtjWv6x07UATmuaU
VcI2OWBkwWnVgLsZAhEe7osW9lDkWVjKW2mGR+B7x/hqO2jLU4xnZlpgv+hu
KyJjh321Uy45f1vx8WJ2rtBjW3AkOlZFMXyD/vlaGsJliyIey6ALW9sgrsIp
7Shug96QtSHvi+1Q15Hc47rLGvpP93esBnRgepP4zJqCFc4f+NTm3taJutc3
onwtLRGYNFPUsv87Tv47fSwqyQJ+28nmrqRu3LjX+Kq0zxxDjhey3SR+YuJ1
g3yirDmSbhm0XNTtwQ/G10ndQWaAmczAiz2/wGp4cEBqzhQ7vl/6/YmtF0yr
2lUnTU3R+6L2/tHFXkw0HcyZGDTBsu057piJPsR99B+kszOBYNZBRdfpfkwv
M2cZMpiAmcTtuE0zCD7/Sf+558YQZXg2pyo+hMbo254F6saQStxz8Pn5YYz9
LZPOZzLGXYumgSN+vzF6M6KeqY6CE97Lxt9aRrC9ruvc9xgKws+2BZ7eO4pz
P30HrRzW/Tl5MObGkzHIn2d6wL3eIUL8XW28YhOYuxsTLL/eIe1JJb7PtSfB
nZpRa7HeIc0RIwy0MlNgzJiSUNWiYJjRSmIb6zTEtet3Zdqv+3f+pnL0/DTa
XXwPeMVTEPo6cGx8bAaVdgvJk+0U6LCcKyifnIWKPNcbdUljuPxnupRL9RfT
jDE1ir7GUGZsZ7ARnYfU0ur2khVj2FdUxiYrLaDb+bPaaoAJRu557WX2WUQY
g7ZP0QFT6PuwmZo1LUHAh7F7/z9TvP/tbxkkvQzn5//uHeszwxuqap0LcStY
892S6DBljqKfwS/8hdZQEn2lRXeXJS7Q7i+P1qIiG8PKHj6OsoKBN3Xy413U
5GriMfUTx22gvzX/kjozDdkZ9fuKb7gtNK//exQ4QUPevZUWnEyzwzPZAnne
HloS3BCdkDdpD3aWz+wu3+nIHbnD7RcsHHHkHr/1yQF6Mp5qoLpb0hkSCQwX
Wf8xkIkHImoXZVzXdzR1q4PoBlJl7B1IHX4TxZxHnXguMpH0lAvUxRbusKf+
YR4ZzExWGxZoKkw84JtrupjUs5Eob7jx+YKtJ6aYGF72ElaS9PJ54lC/F7aa
jdbTrXf+N7vPX3TXu//4h2hXbUEOsk85MZzNPwB5rI7MNf0cJD62zciXMRgz
ewN3PnnHSd7FHxTf3x4K3l8lEcKRXOQy6wZxIcNIfC2Y2ezmzk2MvStaC37G
gn2XcXKTNQ8ZZ2XLTbyYCDXzbdybzXlJdNkBxX7mZzDvrjkpY8NHvgaSEf3R
VKj4UXbYu/MT677OvAHDDAS6nKicCttEOn/VK6XQ5+Iw3aIdfZYAcbhgK/22
r2C9l/1+0DYLEmLapdI9X4pnoRHPKqaFyODhBNXGwCpILxx40sMiQuoyhhrr
DBrAeNxNIZ1PlPB3qCjzv2+FbO/L9+XUYkSjkmNfVPJ3CPiuaIgUiJEJ+lth
vxb7cFOlzSCWXZz83vGk5DbHKG5nOJx1ZBAn5qPZkWllMyg5+13XT0OM/Lic
8Xsw4x9UzIK5bT+KkAOHHk4uStCSmDsGWDkrRFw0f/2t/8JEjBiNSmX+8JNE
Xhqp+s8cxEL/xnjAPDfZcsc+Q3+QhyhmirEIl7CTs135qi9KNxFu+Wcmcrs3
kL/99U6V40Jk97sxluR6atIm0LrCdFCUWHmT924vFuEosjNg8yMx0tIYh3+n
pzGa5XiQcf11r4mNmvyd/Y0iq4ZO5w3ipP7otsbUu7343uW/vDNCjBhwKR1w
C+1EtJ9/QuEXUVJ62ao/5FwLdtKlWLB8FyFDXhf5zK/UgdbrsZ59vTAxpNa/
Jyz0EUz0K7cFs4QI4x3z0YHvJXicc8q29ZEg6VG9vUvR8B0coqQfWtkIkAz+
4Tn3kWxccnAKeamxiSjqsHVMFr9BS+2y19hxfkItM6BQk/ECHrx0WjmyfGSj
twQLr+BTbGgsVG/bw0sud1bVfZdJAPsZx57Ph3iITF6bw9eSGDDY8t4oOstN
JA7LH2fziAARXox7ZshFujds9/m3NRR7f8+GGvhyEknT2elTkw+hoZlsnZ/H
QaCsbxyR7A+f2Ma6j53spHXCq3x1qy9CWJc+7tBjI1TcWrE2Sl7wrPggNDXO
QoyfUOu/nbwH3hfC4Q6hG8kb9T0H1P7dhcVpizbaM8yEpp5OdFfhbczopDf/
3cBE9isusT9adcO0cqPWs05GsutQwStRTxecugaG8GQG0pu/YKdv5YSTn+wH
z9+kJ5+avxQLvnGA3025RebrdCRQRPrRiXUvmFTGDnBepiWts96neiZtMbNj
v8SbKzTkUUtByo8PNii7Ojyzx5SabNLMbQ8ftUIc53+UuftUpLhqNN3/qiU0
KX92ll5eg9W/StZ3zBbwtPNZy3m/Aim9jPzxYTPImQvGpx5cRpebzi2XaVNY
JO3lflixhOebj7nUbjbFNv87OdeNFhGqa7hyyd4Eo02W96X5F6B1Mp7/fI8x
ih+VZzJ2/cWh5LN3/UyN8X7gKyNXxhzSommHzTYYo/6EtaVb6CyiD2jQlhZT
8G7j9stOXjMYPZpWke+zfuwhoHjWaxpbj93KrL9OwSNrcS/5kCm4tUtyllyg
YPTUwL6nryYRfGVzgec5CjK9o6OKEiYwqmAsSy6t747SWZJMNQ4Bic0milYU
WGQEBDU5j+LgFyFrjnAKWss+3dtP/QfNx7LNpKspSB+i1i158hv8ojtY1NZ3
r5L5Gs1NlWHY/Lj/97SWMe7fmdjkxD6E272lGMsyht+nZNWGngFwxlzyPSpg
AvKyqyu9rB+Hgg4qHQ0ygVeD77BSVh8uRo9kM7KZIv/HpYpf6b0I4Up4/ynO
FLYOR9jeF/xCWAr68w+Z4Xy151Opph7Qs9jFiP00g+fcbn723z8RqT7453KE
OWbGbunZnfmB2BP5e8q1LXBwayf9xYLvWEQvY+tuS0gf1ucOIV24FhLSw8Ju
BcazlfukujrwupxWb5HKGheor8cI+LXDOJk76SCtDXp2BhnZn2lDkB+z64GN
tnC9rlh5gfcb9no5PEyJt0VHX8VEy0wrkmMFmlTl1neJUi936FcLpN5I7Y3/
YQfeHtulrO/NWPaVebgaZI+6jWUfggaaYDrDJDR61gG8WmoqAv8a8SWljwyx
OELg4pkX6cKNUGUvG3brdgTbpg/M18MaILK/5olsoRP8i/oVWWjrIc6YZJbx
1Bnngy1oFX0/o1HSRig01gWN8+V0tGK1KF7bwuqX4Io9IRYhR2uqkfGWjfp8
jhs0Eqto6L0/oVkjzuLxt5voWQKbnVoVXOhk3ykx38aR2QDrl9IfIcW8YWCP
qjs0MTHSvakSbZQZyp7nd6BwVc/2LFcFznv5hItv8MBAAscHGYFyvH7wM3bv
Jw/In2K0+7m7DDIRXr6NwfcwFWLSnH2+FBdpc/SCKZ5w/9LzgmfyA07mPLSn
O3Mf4i3nZqL0ipE2/9fni6wXAmmY5L51v8da99G6qN3eeBHo1fbevhBK7i2j
tBI+cPrNsKVgbwGcNS89nN3ii8z2zadkVvNhR7U0QL/fD58jL27R7nyL/G/H
6n+pPoDTsTs8vpV5ENdVYZW/5Y+cTYaHWIty8WQj23xFXgCOPktgVyjNgdUO
h7NnqIKQovcoP3TdMQa/POWDdB9C2SfzqNFoFijxzpaW1Y9AGzcwsYM7C3+j
VXwHngZDgEZIXl8hE9TzNn3nrEJA+yvq4+pqOqhNTij+JKFoEHiiIeX3BtGc
nJa7xMJwg4XR5PKWdc/SXDPJ2xCOBoVdsc++vIKkl1s222o4lua9/E8GvsTw
1o2XmtYi8B9tlJH5lVTs7Oa3i2GLQsTzaj7t/S9QcVfLhnNXNPy1bdp1hZ8j
jGUnGdGMQZjSRb0qrhRUsb4/3/EoFo79j3ImeZ/BWfegTkpHHO5Epoed2PYU
kcv/mQociIdOCc1nCZKMxaKEug2JT7Bct+cInXESYOgZK82eCIFPXaqGkYnI
L5V6stKWCK8kf2bnpAS8CvhtMP4qCf2U1xMSUk9w3cxDx8cvGf1MWz8Mlz+G
hE4mv4rdU5Bgf85hqzj0d/BbNFOeocx9KUVRKhZdT/dxZBin4Oes/uCZ2WiE
ty/983R8jpr7TFMSDVFQbPy0OPnoBTrjp3M3v43E5x7H/W8KUsHRUy4bmxYB
8cKiLNvplwjiT38y9CYcJXk3O+fl01DLdVPbtCgM27dN/eIKf41THJWH/L+F
IoVGaEfM6hsYPHySXfIvBO5j43+MbmXgdtN+DfddIbjsKXMuxzsTTZvPP1Kg
BKNKWOZ6nVYW5t3cqw+rPcLG8S8Ktw9koyprVppvJAipS0bJF4Rz8DakVuRc
eCB2cXgoN7Pn4raP1tSaSgDuBpdxx7Pn4S+lK8ZCwB+cTjWDF4TfIvNqrGzD
tB/eCOVde3goH6Uv5mIdO33hnHeBiunaO0Qofih4/cUHaS3HNztHFmCkuZ29
uckbTN+UZ2K7CxH21KlTqccLxSpJT48dLMKlZ7dE7iyt30eicnWyT4rRf9rm
TrfYfdyY+L7zmkAJ4vk3fOlX9URg4H2rVo1SVKYypXL434P413g22m1l0M5I
uztY74E/J1SoS6nKYWc7+3pW0AMFev8lBg+V4wP7AdfwX3fQ+vNNNG1nBWLo
jD/9i3dHjVemT3Z7Jbi/ee3WM7+NaDqVpcP9H3H/weCnmdO3kD3w86zcShXO
dwTRse29iUt0oy6mW6uhbHulmXaHG3JnPNNddWpwdv+DA3ukXf///xh3pBJr
YdQmXDp33AX7LmsfP/f3M54yf/1drecM6bCK5Ijb9VBoiZN74ugE+ls3mrHp
CyKuNO5ViXGEBs/LE0cpjciL45s5XusAe5Hr4vJKTZiyrelqZ3DA0pbNB8uP
NMOMZ/FYmIo9KDJbg7zlW+Diupd9LNEODG0BW+XOtuLG4Oon05V1b8hNPH1m
+BVSvToRUTdscVjX+2pE0DdIaBRKijy3gcTBtO2/qtuwVBZr1BRpja5/ahX2
vB3Qm9S/GxdthQMna9z/c+zEh8fNNF9eWeJOSfOevYNd6+7Ms2iss4CoreR2
S8tu+FGdLNu0ao7C8wId1Bt+orKWlnXrcXNcjn7hyK7fg8iqm4+9As2wt+Oc
LPXJXzhm8H6ka9gU6ZpW7q77e2HI5HK2Ud0UmvTOPDtk+0B/4vSDLbUmCG7Y
ulJ9vB8Bra3NSSom0A194CKoM4B/e2fvb17vDu5H3sITXoNw/cp7NeaOMZLe
uFiKlA5h9yf3dww7jXH9mCqTH8tv3NtoTXe7l4Lp673a2yxGUJEeRrM3lQKn
cDWOie9/IHJyS+m1WxQUnggMmjYcw/53pZK2ehT07ZVfUFodh92/z2z9654d
s1/S47gyicGhQ/36654VCdp5vP3oFKzdt4/kXKGgzvmc5GaZaTxP2rP83YUC
7dgn92N3z6DFot+D7yUFa6+vpPz7bxbk04mN38YoqC047s9waQ4M11sG+84a
g/rsXkXfO3/xTOm/0hsF6561lLt1qWAevBP7knoVTLDXMZpHjX4RSNr80H3M
BIUx3scsbizB39xAa+StKSSUUubjW/+hqfNQ+IsUM3T1dF6Z0l4B5yn5+a0l
5nDNyVG+NbuKQc3cISpmSzyk6qPNVKciHe6v1NQeWoHagm3v70PU5PZsqsWC
pg30Ds9r+W+nIZlGVVsi39qCcm3S7+g2WnLpVIqV75QduszSBzL30pHo41qq
JygOSHH4/C5RiZ7c/v3q7mMRJyhNbPCud2Ag2SnR3VFSLmAO+tNE9YaRnJmm
kzv/2A1Vut7NG+c3EDuBp2vHHt5GWWVNYZU6M2k32/wngt0DLff6EtjLNpJz
o2erzx31hM3+vjfVJ1nJthN7fP2HvWC+Rc3lazsb+dGz06D4Pz/Uiu+123iS
g7g9eN1Vqh+IK7pb/bIlOAlLsInmWl0wKCv0WyrYuMhkWtXly1vDkeWonxvM
wE1Oa1wrOewYDa+RzsZLzDxEQfdvVwLvE3zW7PspJshLOMWueAdUJGOqbbqt
7CAf0aSR7dYveQHCciryuR4/+XF12nfeMx0pI5/YEoI2kR2CG86tDOcgR+va
4cAqAdLS82KWy7QQPdoumayrgiTgjoFwZU4ZhsZNai4cECZyTdeMgkSqcUGb
JTXeQISED3zZ5JrRiE9DZxddnUQJ3c2o1P02bWC2ab6Cq2JkoYihJPl1D5Ra
LuibLYsRIRXdlrCFITxylLztxyVO3lH/fWSkPgW1PTrUJ5LEyNIxmyzLfwvQ
OSJ2eWTdidOaYeY/aqlJiID9720FQqQ/dTtDUe66K/Xjjovt30RqrN/3t93m
II4Wr+dP/OUmksU1TU+HeMiKT3JhpSg72ZB/M/s7owCJV0i3beFnJLPXDt1R
1xYmf1Z6o055U5FXEeOMYzGiRJLB2psiPA+dhyfMOL6IEY4bTc1nqCdxuFv4
myWPOOkbzW6+LzWI4ZydFUW9YkSHrVUoru8HUnOaK832iZHh4NCu8xVfof5V
vX3tqCipexbOyMD3Bdx2kxOpm0XIEu2g2tSDKpgtVGw5s+58pTaWLbMxpRDg
Pn54+3tBovHY3seg4x1ERDyNpL0EyPYD357l9meD6qrZ3AX1TWQss6TMWfoN
pir5/ovcwU/iM1j2Ff14Du/2E1LfNvARLtGcya49613Rc8yCfXbdmw9/xV+/
FA8/KTHd4hFuomG2qis3H4Wycf2ftGNcpCGoa+Ohr2H4L/ekZMMSJzl+5kZd
0+NgxPWx/url5iThTFN2/20PhP/xJ1lThzkIs0ppir2oH04qHT73Xz0b0ZLo
oDvyywtUrhvd5o+zEpR3foo84QkeRgbG85UbyX5P7RpxkfU+XXkQfVWPmTyy
fjnxPuc2jD5XCWgzMJGvBJ001W74y9N3xKyMkZhMJFc8vuKCxexRrvJABhIW
e//ryAUn5B2tkIo3oSezh6RYHSIc8IPHU+yIGh25q9gonCpujzI9S4Z+RVoy
HiKovtJnC1G7Ht+hCzSELr/0jsNrG2ivqI8/vkZNPhm6JvX+tEL5Hl2aG+5U
pOCRS+jZy5bQLu3vwoU1FBZK5/+kt0BUPRu3Z94Kjqk05mUMmiFIvkXeSXYZ
dMJsJTvWvXmo8pQC+7o3jb87tP6SMEVOqsyKuvEi9nx/FmPgaAJmt9hgVaEF
dJdmD432GuPrDstFsV9/4e9VfsDawhjsHSqeI2/ncHFlW6zqRmNESCmTnrjZ
9eq3CTIrpeDz6+dhRx/NYKZx//iEHwV5tLmvFYKn0cxe637jBgU0F9t5zj6Z
Qkv5aXYfFQoKChePxL2bxGZR0f6L6948KdXLc7J4ApPpXh9G1SnQs/814iE2
DgXdM1Zp5hTwTB853Bw5ipmNXME0wRQwvquo3yLxB5sTOaN9yyk4mKaQ/P/P
T/8lnA8iKxRwh+wurPcZhhb96w2rJ41huCDNsElv3ZtTG248CzPGrOskaxwG
kWK3R0NyYt3XBgEXX+4dQPAGbnEfTROY9zmdeCLTj5gvVgnNVSb4KkZb8f2/
PhimdRRLnjJF6+i5+QaVXvzeelPwVa0puhR9swZtfqGfV/7RQ30z3PcynouL
60FnJGHjXDaD0MG5ns7kn3DrSLnk9twcDQydmqWbf+DybbElfn0LbPmXFbGc
/R03w2TdlcQtIfXZ6WC2Zhcu+VNmHSYtsSra1MLE1AmGA2cX6RusEHR6qF++
rh0/RSn0rgXW4DVJiPB80ob75pczVXJsoDl+i2fn3XV/+l0w3XjVFnsL/r29
Z/UVY4L7GA6M2IJ5jd2j17QV6ilOdfZ37KAX9mDf+pMGUm5Ft0WE7HH/k5T6
ea9mHMyL1woptYdRK89WmadNeM98tFvGxgFiyTK11XWN2EPfd+Hadkc4vnNh
jaNqhGfP6s5Hvx0hfsmYWeV2A2xkTv3b/9YJFkn/NMeZ6iGoSyn+FOQM5lWN
J/tffob14/h3dbYuuCZx3PCsdi0kDNqGPl9zxcuV4Wo9gRq8SvGS0tR1Qy21
em/G8Cds8HzZTG10E4UI5fWrqoLJwqXfNjdvofJ739q+7I84Ff98VTnhNsSa
ba5uSKvEq8SM6tMt7qhbHv5omlkBz6id5Xz8dxEuc5y+oKwcm5WZ+CsPesDL
rDHQ/EcZ4mn/pWcPe4Cm8duuSfoyfH0svL/y2XoHHx+d+3i4FLtDzYStzD1R
b8l3pWfwA35IXxHbIn8fr6sicodtizGfkyFlzOMFDTchVLAUweHPpvCiRS8I
KBqnRxcUouD8yT/pI96geVJ+KsK5ABlDn740D/lA57SV+/zJd+h2D/hZPuWL
3RHMHbSi+TCPsaYSZXqAIjnvJVrGt/hr2nArVMYfFYKxtmorufASqOFvNgzA
qHHgkCJVLuhjKFcinwfCSFVk8AJ7DlIXm9ReLgVh3x7Z141S2Zjw+urTdu0R
Zqheip5SzUKXpfS/2xbB+Bn665zY3UxwTdkzuu8NgfHqp4NNdhmgG+AsvL4W
AiWKh9rZhTfQY82ie9Ueire2u0reB79G45MB7e/rjnLV+EJ/ed1VJ+knGz1e
h0PNaNNVMvsSEwH05btSI6C75hP/tjgV98YtSlwyI/FPTV1nOeIF3p5+eY+m
Kgon34Swa99+jska7nHX39EQrtIy2mqbguNnGH0DhWLxU6z1v0LbZ/iaT98y
qxcH2itV47fcnyJQss//ZvpjbEswc22PSMYHal3xlD1PYEr9plz4RRICmJg1
Pn5MgFCGF092ZSI4qjjSaAoS4ZH2ZONMVwI055yO1sQmQfozW3qawhNY81Mc
29d96mi0s9Fs3aepZZ/if9x/CpUJqziRS3HoS+h/GRD4DCNnx1oLFmIgw/RH
JOFpCuJSLfadzYjG35aDZ/prnkM2WCjhu3MUPJ4cn9lBlYrhLhemcJVIvNu8
8aTq2ZdIZ47nfHwwAvYCwfwKia+wUfJm/u5d4YhY8M9a2Lju0R8cVfdkwrCj
LDHZJeANfsVwlP4+HgpXVe+qVrEMcD6rm36nu+5RUD7yUjJx6l6eq6JXMMwv
FFR3ns5CC6+GMK3tI9BWH1nrkM1Gq03Y06TRILD+VVYr3J0DNWZNDTX3QFh8
CKvdfyAXRzSl3Dg3ByBROt+EWikPh64VnRj49gADZ3cIDFu/RR21x+D3eD9o
OLJSSp7mI0pn/00RJ18MqB49cP33O6zFKhg16Prg0yjLtrekELk2fxa2qnlj
RipHovDVezwU33TK+JIXnscsuVnsKIaBVAZ7h9F98I0UiXQXfkCN6KBm8z1P
RMYGnIjdV4pps2y67Ff3YF652fkCZxky3bbv7fzhgZ9XTjHtWinDu50y7O/X
d/qlGI1+91w5xmwmgiPr7+DqtpkKruUKnJcLfcHk4A6tMzrRARwf4f+5Wa97
5200XmSwYT1QhWnOBxKSszdh8C5lgWLyCeV5KRo0DW64/eqgsEtaNXIzfCJS
8l3B5xq7RZK6FkpN6mlnMl0gVif/0djsM45r3tkmle8M/7ufB8lAHUQDn/yX
+NkJ8x8PqZQ4NWCR+e426jFH6B5deUDN1ogm7j/VGYKOsEna9DxhtBH2QnLq
gpcckJmZWqfZ1oRclxqXrGh7eKz+lP7S0Azrj3nUc0N2kC5nWCluaYGVo2Kx
+Qk7mP7Ml+sYbEWOyFjA42e28LcsrBnZ8A0WoVdsJThtocjWeLZMvg0rjE68
e1htkL7N4dcB93bksHnckWeyxm5FPhXZpg5os4gLlPNa4d2e/4xeHu4CdWDX
8a2ylkgXXNCLzfqO9Axjv8b1XeL01DIQID/ga2a7eC7aHAEeYy+O9f/ExN8N
dny/zDBa/fJu3JceZC0zzDQdNoOh4qTsloJfOKdto7D98bqXAot3amf0woHG
6PNHVlNsEfTknsruA+03lkuugSa4u3KbJaWyH0Sf6TjPJhNQ8R2jOTgwgHMK
83aumcb4TW9p78g7BLI79eczTWPk/VjlOHJ5GKLDIZmJjMa40pmeY5H6G9VT
pzN8qiiYv6i8N2N2BCc81AOTIyiwDSfB5WqjaN27QdHeloKiD9yv75SOgWt7
KaeyFgX5ZRyGtScmUCCoa5a07s20gDM85ywm8acgDPPrx/Kbf6eNYAoKR3b0
ra37M7u/7fN5sWnwDFsnejhRcEUkeGSJaQZ6J3Z2OyZR0F1+XNSHahZGJ/bH
rXZT0HHtmZAf7Rz4iodE7+82xsz2M9GJ3H8hN9C8M+6hMX5GqeW47pvHN7rZ
oCMMJlAubEor1V8AxdUlODXCBDuZUlVlYxZxl/nJ2fWnGi4+UFl71L+ELgaD
bVqMZlg5cep5CllG7mUl+jeTZih9dZHjXPoK7qlOKslTWcBm9Ki1jswa3ghT
8v2OWELFdOhorwEVYX41W3PipRUo7pGGHw5Qk9l754Us1Wwwlcx7+CQ3DbHb
0H506IktOt5V8s0u0xDOQberO4vtkBmro2EwTUsqJA9Xf2F2wKGGCSWBWToS
ei6m40ewI95RvK7n0zCQK0p9Dg90nHFpZvBfuygjWVL8olPn5Ir95l/PSZzb
QNIVHNyOrd9///l8+X3Uk4mca9k6vXnUHYJXFc+31TITy/e21yaKPKDKN135
dAsL4Sx/q73Y44nsqK3iWkGsRHf6I/sXN284bp8LeL6BnQRbPo64/NwPG4RU
z0kocxCnoryi/x4F4mCcgaa1ECehor1+91xeMOYcq6x85jjJMJfdokdpGGyd
aEh6BxcRqWK84hQbBVfGCiP+am7ik9hTes/nMa4piQS0lfIQuZdnqQZtk5By
WmG1o4KX3NxSdAxRKYicb9pf28hHNvFonjrIlYYrJ7M7Zgb5yaIk5bWzbBZe
77u8kZtegMikWebLSr6FcmLgKRYpQeL6NrqgZqwI6jX/HDxUhQhPqoajkVQF
4p6a1+x0ECZ9O4K/kZIa5PcJvZ4OECHkcY8bv38TXhXzTUYEiRKu010hUwfb
kcj0MKubIkZ+KnBOaA714HTMPePbS2JE+UpP1PfGIZz9+u/xY25xUjjfOdvU
NYlZ06lMsQ9ihF6S87X9t3mwpiwwrQWKkqj4L8bJmVRkt9R+KjlLYXJidG8c
wyAD6Vs9Yv33sgDJfynaPW7ORi4aDGdo3uMlJ09udM/S5iZ1+BcTf5mTXNm4
PhsW/ERlcdpT7hUz6Y8MPDA5Lkg23XnyR6KIlijxzFPrhYgQN93R2F32y1iN
uGoddUSM1ASbF8zsm4XAj1SxU7TihOOqlupT71H41y3WZHOIE+ci1bV96x3u
0uhn+7BYjAhTb2KXKP+ORSf9swF0YoRrl4D0+dxWfBD0Y03lFSX7JSK8d1xt
gPaWiOAQFhHStVZ3uPNRFT41XmdSnBEiLi+1jENXSlHbpmds2CJImHrz84Sm
CmB4ZmPUfzkChF1qo8QR7ly8vMFoMha5iWi9yv+TejsDDzSWByXv8ZNvZ1K5
f9Ou77eW34MABz4yIlnw/K/YMyjs9d7MZ8NLaIpX7yrcSMTUTMEuFUceco+2
I9yNKg5rbdFpVve5CXfqdEjVnUhYXrOMuPmYi8T7a4wrTIWCnAPvlRJOEn9O
7IGTSDC2F69eav7DQUQlJrzdMgNwrKo5+PlmDuLyV5WRm9YPiyyhKpxlbEQh
VJkE03jjRsyr0QsXWQnbAAeHs78nrhyM4dGZ3Egu17Wx9d/xgOys77x/IjNp
/PNbsizcHXPaaq6HDJjIzAPxJ87vbmLtfdV0rswGYvzj63S9iisMDyy4Gm5k
JNnpfn57Tjnjz331hP9RdJdBUfUNFMBpkBAQkA4Vg1AUfQRFPNcgbFBpFQGX
7g5BugQkpaRTUkqUTgmRDpWUtBEBBamX9+Od2bk7u7P/c87vy92kZWriI9+T
tAs+tmAVO0Db+52KUN2raLNKa4OwwbS8B78oCZkMn4WuOiv8S9fjbN2iIBoL
SHbyWZbQzVh9YM1DQbztSN0/aWiBR/FfLoyDnFBRmXC82mwGrstnpp9YkBGf
JIP8H2qaImCuuoLj5hayk0+l1wqZoGZejubV0AZ07hsklLAao+/fkbBDFusI
Vp62pT5kBMuPDrsiONcw75GXek7bEL37tFvEu1dR6nKPNq/EAFSM3uwnYlZQ
2KNxWGivAVSP6or+Mv+L8XrTor9Z+mCTsst5cesP4rfu+C9vezGJr/baO7ll
CJsI7/1vgYQnLFLBGReXMHnSPoCvaLtHYrkvJd9YRN1hxzhlDxKOXu7zE9P/
jT1ht9QL75PQIdS0VOm3gI6djWnEtndv/6v61lHyCwrDf82ktr17cymosLZv
HjHV7Ts/K5Ggxi387e/Nn0jvdON984CE/rashDvT38GUfb5C25sEh5/BSbv8
vmH+1B8BzUIS1k4r9yqe/oorI+8TLGZI6PTl/Sq18RkFz5/MmR3Qh2m9hvTe
rjnE/Da9c9xaH4bl+Z03C2dhGECWkd+qj2tf0rn4E2ZwKK2w6b2IAe78jcsa
iZ4G9bVFvtrt3lnIuuyynDgFg9FqZjtGQ2gYbfn3FE1CXkZHnT/EEDTZwVZT
XZ9AmFevTfIYQbuTaiR1ZQIcAh90NouN4NIV4/5EbALSKZRGharGYM+nZtXq
HsOO7prI8zQmqD3muMhyZxQMlnmpDA0mUJ5wHNdeHUau0I9bxoGmWH3957Bt
1kfMxf6caNY2wzH11k0P0gfkLRxcCz1vjveGz763Sr5HtW+XsfxxCxyV39wf
unMIS5Yv+g2Ft70rcvsGx6cB9Ou/EqV/ZYn0U4ry9I39mNrv2vLlthX82H4E
ppf04XsiwWG9ZgVlm8OtwsW9GLQalGbLs8b3IVG7vuoemApwXlI0sNn+3BlM
NIPd4Hs7yxN22BZuxZVvjyx1IdpRe91uyxaefhdZB2924slO6XuPR+1w6KK4
8fibDnTcLEoybLXHH2PtW4dvvIUeXaFSaZ0DxshEXr7+2oaltvsUfC2OyNdL
4/SPaYVLg/tdlREniCk56WSqtSCwKnX1ALkL/handv138A3ORfKsap58iLuX
khW0aJpxNElquuOhK9R9iziuLjXClGVsQW/ADQcDRK8r/GqAeraJtZ+QO1aM
F76GrdZj7FdHvdGEO7pdb79xZ65H84Kf09j2zrbddWeH6fbunqKi6LV198QT
Wt8Es+oaULUtajXreKE92kQq/nA1HHhcJUxveEObIf4RUVyJZTVHPfbLPrhZ
aTipcrkCYyePvTK76Qsv99jYj0uvcOzuQxFJIz/0Xr1SN/yifNvb7n9Fnvgj
q18n1sF127Nnl/4JNQdAL2FIq1ujDNRjTDnLDI9hpG32lEeuFHavfN+GPAhC
u6AaS/jZEuRF+lqNdgVD9uK7aWe5YqhTFj6cu/4ETZYXGA9pFEHycViMllUo
XraX3Jp3fIGGjlWrk/JhONLcOKGvWIiQHbvi4g+EI9Ru5k9VaT7US0euHWSL
QDTBGlfzXx601gfkvBkjodjRRKvbnoPo7/GB99miYOyZ9ijV6jmUivsT7Q89
xbhDfViQaDZmNVWzg65Gw3swV0BmKRO2GbutzdxjMCTnr9T5LgNfjz2e/9MU
C7Vra3FOL7f9SpFWwMgbj/05EzZ2+WngXaE4l+T1DCHer3ipi1PheXzBq2Qr
AaGF5ZbOjSmQPkoaVwpNwj3TJjqRT8ngi1tJuRSfjKB3WSuW9MnwNMoqGXBK
wTnBuvvOromw8TF4oP8gFf0XyWiX/j1D05VLnGlaaahUHUtHUDxiz743k72f
jvjXza53j8aheLGN94t1BjgV7H4qzcZAVYb2jklkJviPrvcdz49GjtJNoYjm
LOzWvp4r6v0Uw3saayVpn+OWrFjhXeMoFD6V0ZXUzEHV3LjVDu1IXFuk2fKs
zcXhhYsOVjoRMGyYleSVzgfnWH7HqGU4ZpVCxhmaC/C6oeJidlAYYiKv1788
/gI+2TtpJEpDIRczM32UpQjOM/xCue+e4IZ2m1XkShFmL7S84FMMQU18dbb3
j2KkbnyYfTYYBNraPUu58yXIFWz9ucfxMcQKEq24fpTiq+1otPW5QIw09Hle
+FsG4/sNDdXcAfjKepm7c2c5hOk+MF4m80fYbXttoxOvINi7dchiyRdZ4P/e
avga2SF9k77L2716WDUoM68Cr4RPjP/a7tmRH+JHusiqsEs4b56XzxtHldiN
2PSrUR8se8WJ8IJ6V5315dEaONgb97hZeOLB08tvXhyvQ9ZqmFVhtgcY3hSc
z6CoBy/lk7uh39xR3x+gsDVcj8lriXk5Uu4IZK2VUaxrgDG+Pt/P/QjP7k7L
M75oRGpvVUlNnyvCKFQKh3Ob0OAfRnk78SEOqDPHqpQ2Q1OVaV3c0QXtHZ0u
fO1vwLBMqoy874w80d0GQz9aUL0i8mFY1QlXbt7MOSvUhm5mfoUHmo5oIG+L
3anbjraMRe0IYwf464Zl0ZW+xQPKAzx9vvagoP8iT8H5DtGvzPOfFdhB9Ch7
88DjTjSdpbI1/WSLqqaW0KId3aCQHS1oELDF5ZDcZqWhbli01ew9rG+Dju6v
1AqFPbgY6ux6ptwaKgftyXeH98IjZa7em9UaAUKtA1fd+yAQQ8GaaWuFh81Z
B92c+9HqKXj5woQlsr8v7CE8BvC37LwExW1LrEnFOUtHDSKDZu7AwSQLRMv+
OshaPoQJd8sxlQxzbK5V0jvOvce9strQ9ddm0OrI3hQ/+BEaAsbMz0ZMsXSw
emPJfhjKMh02FYymcM85rRU7NALdwj2PJi+Z4MqT/46vXBrD7tWuUyURxvhv
mK59uXMcjJePHuv5YoRc7YL46pIJJJyR0J25YoQkB4/2i4HbPXg94Xn+a0M8
r4soijSZhPbpH1Q/JQ3RrvRO9oT6FOSOSH0zLzfAx7HZk6+UplF1XL2dWcEA
zer5A69VZjDZd/Je+Sd9sNf7XxowmAXruMQpZT99TNB6V770m4P5te+i01L6
OOlMns388jPeOY0Zui+S0OvxoTdy8QskzBQ7ZCpIWKD4SmI69w0Pg+R33wgi
wX/wxDf5pO/Yx5zOSGZMggr/zkdszD8xTD/zI+EWCfTOJy3Vw+bhRXNnZ9r2
Lnky4qjgHvELLYlXnaKvkmDcVP3Q03ABX0M1bojcJYFFZb3iP8XfmN7v/p/Y
QxL6fot833N8Ec0j9RdDc0i4tV9Sd0hkCXpnFEV8v5DwtYj/4XfxZYSULJ03
Oa2Pq8n/crfO/EGuWO396cTtXSK39eil5l98MhueHN32f6r5AG+t7wpYTL3O
pecYQCyk6l9X/SqS9svu+KVqiFPmumbZjGug9ijKWxcygq+aFjWr4Tp8s5Z5
0xmNUVNVr6O2tAELxRfuplImMNaqbRN+ugWpkNxnx56a4niuwjWlLDLi+z6p
iLhj5ij7uOHr/oSc6Ka/UreP3hL0XaEf5bwpiB4BCtrc/VbQuWb0+7IvJaE9
RvHUz8Ya7qOd/uefUhHFeYOnPm/YoObmIau5Umpi2Xn8V3yPHSqUbgatT9IQ
95VVXg1vOuAZza/4q3voCCXP+RXdOGcc2kyqeW65g+iqsRz7UOMKmRrV/O89
9IRAitwhixZ3mIepkhblGAk2n/LeCV4vOHfs35P0jokwDtn/ruSfD862R5zv
MWImXN70c448DkC2o5Z6STALURxC+naSOgRjZhpOMVasxHOF24Os78OQVeKw
vHx/F3H81r/IIccoKPTMy3LeYSM0LKUuKonFQVfCoUFEj52Yi0awukgyTkQ4
hovZcxA/QmoNZc+mQ5Wr9XN35G6iS3etx63iORgOny7SquEkWoWlvhbFvgBl
FGnn3QUuwmre7WlPQxl+M+4NuS3GQ9zopSBFbFShmcWGnseQlyCJ8qeapTTi
96N97H+S+YiPa9rRd2jeoobzWt75t/yE4AupP4WzvYiUvxNqPChAhIpWvDow
8BHzCi7RJ54LEjp7362YX5rCwXb1Sk1mIaL++v6kXSvf0M/20v84hRDxyDt8
8YzKElTu/NMS4d/28F7LmjbtDaiYeUc4SvAT7L9bPzn0URHyfgkKYvt4CPsR
b5GgMEaiYj6i55nwbkLuxXR734tdxJE7GvcD81kJE8e1/Cs8nITuVv6ZyVJ6
QurnBYqQrzyEv67WnoirlESMYk6mYTk/4bMpP/l91xrIzj/oP6UvSCi7VXjt
Lf6NpHnx2kVGIUKnycOMovwLznf/NDakFSIiD7dcN2r4BIPj1obm7oJEV8iQ
963m7bziYJ2UShQgisI9ljg8euCoN24gHchP1Bqq5Mbzt+Ha2cPjNlp8xKun
k5nBNxrAolA4vSjES4jbuohfFK7Ef0dGhlWmuYk3E7G/cq1Lt89f5fn0XC7C
9T+Os8I3CnFEo+xitDMnkc9wsKVFPRudLq9pDG7tJhx335RQlk7DVb344ltS
HEQa6UZOSlsizrW7im4cYCfO7rqQmkIWC4f5kbz4vWyEj2zpb4GISKiN3IoT
Ft1FnAu6sFdrfxjqOcsf6cqyEuNGu2X2fA+C7E/yH1R3WIiphQO5IXn+0PX9
OqXCwEwEO0l4xCv44L9SPYV+GyZiPM9O9M+2V1+WfYrN3PbqM55D/51Qdofb
nQGxb+70hOmN/Vcc1h/C2l/lQv2+HcTFRpKC06oTllfJvl95T0s40y2N9Tg6
gHVEurckgYbgSBKyWPSwA7le8bK1LzXxKu94ZcagDRzCbuUHPaQiCoTIOXiM
rcH/g4pf7xElcVDYjZVe0grHsuSD7oVQEE3By4ToAUuwLuua/sgmJ6ooh3jc
HpmjYV3+uncnGVG/pV0W/tsUb04GBMlsbMH23GJp0DMT3HvXEmRrtYlvD26l
rtkZQz+idrZ2ZR32tBtnXjoa4Yxt19cT4Wv4Fq/AnpBkiGuVAUHLZ/5Bn677
vvGsAd7tY6Y+srKCjZyTXwIuGWCdZUqNvfEvyqKJ62vN+uCfqd2ae/YHv5OD
baU19DFsYOq+4L0MKXsJtT3k+nh7ypnC03kJfyO+vfhWScLP0xq/fz9cBMfh
oQwOfxLW1xVSMx7/xr69SoOa275MklKfp8hcgK9upV7uDRLYKZ9/cX77C8YK
Cv7C2z1QbTy6Rfd3HmVpngfot316QNRc9rTJT+TIt0s16pHAdIvrTtjv72AJ
C2Lt89rOfcdbz/YEfUPa4Q8sQ9s+DSNXtd8h9RXNel6Hfea276ekN2H9+zP+
tBj8yBTVx6vT/MFh1XPof7uWzuW07W+G9xup0bN4RrkQ39qrDz1N14ifj2YQ
Z0PdViJlAOpTYixNdtPYK6n4ZibLAJIBzC0ujlMQ+33puuM+Q+RM3/Ow95vE
mWcBDGE5hqBUP0DwpX4Cry7tlo6sEU58P+020jIB8z1/94mMGKHAdqVf69c4
hOQ3K4/4GWPYluUpD2kMmoKq8y1nTXD19HzBxvcRXIz4qK9MaYr1tIg1Dr9h
fNu3oXpywBQqVPa03pIfcTheUuNzqRludHQvmv98j9x+mo25VHMIml72YqwY
QlDNXcGq7Z3yeU70akzkIIakvXQ2VCxx0niEWst1AD4anCZC05ZYCHhBn2bT
j1SlJtEEZyuwJHMztdv34TzR++odtzXenCILkvDtRU2ejR9bgzXioqc9zqT0
YEpJhGPAxgYH4ymo77d043V63M9HErYwHzOr3fOrCxqnvWb9lm2hFdXyJIbU
CQvxH04Gb+ww7xUmJPazA9MmjlPJqfa4UMV494f/WziTn4upCnTArRqL6vUT
7XA/tqZ39ZHj9j41ZvVeaMXOIpaTc+5OSHBtni6tbkFCws62Y6HOYKxPLuqO
eQO3lZspffkuCGD1Wuf1bIZ+X+jdRx8fIllXXWnWsQk6P94/XN7tBq/pbLXH
DxthwTGXtaL3CKzeAu6GQQ1wpj7Bc0THHbJHqx7PZdXDNpTwfMTtgat0weVO
nXVQejf7Q2fYA+/z9uvt36pFOueNN8pZ2151mXj8wK4GhplND9ydvLB5SFJs
iroaNNr/PiupekPkwIfwgaxKVOYZyl0964Mjn44RppoVECAcZzaO+ULGoUFs
mO81Nm6dK/x7zG97b7Gqaf8sR3TbLdL7s/7oUyvUkOt8Cco9DyMIjQCUnZ8t
Ha4sA6XyxvRHj0DQ/Hxzx+VlKZ7OpdXee/0YRQ+ma/2rSzBYd1jWhywYLpXC
FUbdxWjcO7LKoR4Ce6bn8k9+FuH7htD56bonkExhkrTmLIIa+72VyYRQ7Dfv
+h10+QXOPbvD0fsgDFFkx9fbdhZiVpHm76v/wlFc2XN5R3w+9l4x82BjjUCc
4x6RBek8nOz94WP0NwLWpTRChXPbLgsajpT/Eomb1+hF7TOfY2iPdOXpuSjw
56R1PLLNhsQzx8yphac4r9CRsVs5C8lxzpmfdsSA3jBbwl8mE5vtBa9HJGJx
gNFpj+jxDKwdYbz4+EEc7jLJJWhLpUMhkcUxIzse/poZl4MV0qDwwV94fv0Z
SKcEWffopSLOv2lORjcREpG6OREBKZjNn0m8/yEJ9MXdUfcqktGq2HshqSgZ
t/iPlVB/TcK7GlIuyT0FzcuFFFzWiXgdX6vxSCMVdEz3+hkZE6AfydZgJpuG
vO4Q0JbHQ7NO9nSteDo6P2RcPmsdB73LYxOUhzLg2S0p++1MLKKGt/K7JTJx
pbTx0PXdMXCYKzvffjELU2lCWq83nsKSM0YnxiAbf73d9nn+jsLyPuY3szHP
QRV6l45iKRJnpixdbD7koDo0MiOVPBKptpkt5KJ5UDnE/KCHJwKOkhwM6o/z
cUdeQnzzbDioh5NOK28W4B35gG+mWRjepny79vncCxQyMkVezQzFGEfzxN2d
RegL7Cyf636Cy4FHFWhnisA7Ls2gahCCl8q3yg3fFMOp5+oyA3MwWOqHZWlL
SnBdI65bsuUxTh1VirLJLQXPaMcj6ieB4Bn+5KTwogwG1z6ot5MC0JWrpM7f
8BKSi8lRrZf9ocW9xzD+UzmyzHe33pb1g2a0t4It82skNwqZdZ3xhU9KtInW
1QoEOl15HavogyXan++ZYysx1c9YI3DfG/eMcgLv/6lChhO52ICnFzyWqgf5
STWIPqjhc+KFJ2qFtc4Iz9biR/pVrqo5D5xPn8o7Vl2HP2c40pYPeeD5vcAb
+mH1aG7JrDaxcYcV010VCcsGIMir4F7wI5jnnbTn1GyE1GV3z7KLbhBUWYzN
udEEnwAJYhejK+5bHm52UW5G4VmSV9mkCxZ/e4eI3X+D4oKM6l8tzqBdLue9
87AF5juWyDgrnVAq0fs7u64VTzqt7e0yHRF6iYs/ZHc70qsuLpckO2Cllqxv
ze0t3GnYZHc/t8cdWvHzv/91QCxHouV7jR18hWwYfLd9q/3R98bTbd+Kz5/R
m+Pqxn/qB11tWGyRStlO5fa3G8Xsvw8sXrZBGsNgy8HJHrxdWQsJDrVGVdwS
mf+HXlwpOWlbPWEFz+CqczfH+qDfE8XCKGOFTtGak+cW+mG9n/oIXZIlojTs
s9jZBiFfXRxykdESM+nBIskXh+DEkSbYSGUBtey/YlW+7xGjo05PTWGOj0a3
WK98/IDU6q6oFGYzuLi1dV4khvH0Q6oE5WFTNE0+Skh/PYI73OWh0RomcL/s
GmSvMIYSn08HRyON0UG9a3j46zhoNlPp9MeM0F8fYfWwdwLdFM9oW/4zwp+Z
8Rifyk+YyWeey4kzxIf7jd7HiiaRc+YEVwejIXZFvFoSLZ2C4+/ae18eG2CM
OJx6uHkazdy+CaOcBhAlHXuyPj0DOiGdhicv9DElKS5yn30Onjp8xfMq+tjq
G7f77/ZnlJYcWGah00c6n5D7vYwvcDt4jpWlhQSK4taUVrpvoCmutBOIIGGP
dO9d20ffEb5+62SEKQmqxVKChvQ/8SZBvaln26+TAjTydTnzWInROGSxvVsa
mpyoe178Aqlz3wLHdRIEg7O39sYs4KqXun26Lgkxn3XzV7d30F3pFvd927vI
aEdTKkXwIqaakzpHa0nIeedGvRi/hD8cNhdvM+ij1/Bn9uPXy3BmN/1naKoP
U75dx6Jm/8CJSTpZbkYfkaGyMTP7VqB2UvxfqqMBDH/xaWlZr2LDzHg4RWTb
//opKZO9/xAQ8S9i77ohho26OWzk11HuUWnVsmQEd/MDWyydGyipyf8rzG2C
rs3HFp3GWzCme6DMZGmKhUrZpJkQMuKUMe96F7k5FJmaOnlsyYnzYm+Pxr+3
QPbKhkIGiYI47MT0xZnMCkoMxtJiDygJ8endW5Jy1tDvjyzWtKQiKpPvzYs2
2cCbiTHwSyA1sVNw3dkvwA7ptK1uUaU0BMWp3F1Z6Q6g6lD5t+8nLfH7fXcT
t4gzZv41FOhI7yBOB9pzbkq4oj9ft39PJD2RHyptNm3qjmGZKwyyFIzE3VJF
QfNsT6QoP3J/4sVEPH3tMOWu7wPD4LyDf7iYidU4+l3SHf4ounHvUoYOC1GN
0+66DMH44iRlWHCOlVBVirzTcDwMnFd8WZfFdxE2yq0fsxIjwV30o6llHxuh
eElLKJwmFpP3nkRrbrskfCthT1RzIp4prn0uP8FBZFDz1dUfTsPN6p5MD5nd
xOizP5bvRrKw+0AT8fkKJzHoXzJ8g60A52V95MhIXMTVS2Uu/P+VoEWwbt8J
H27iYe5qktr4K6inMO2bf85D3LK5Ztxxuw5yYVYd/F28BMcXi03dumZQWa2G
WP7kI/RCovUP67yDj7GckMImPzHgcbbXh68fpg47RI78EiCcW3X2r00Mw+Pn
dPH3AkGi5uYjBga/KbTVVmv9t1OIaPGz/v455Buk7VZ2SdMJEQdmbz+sdlvE
O3Zy4SBNQUIiT7Uk1G4NtDuG3v9o5yd2dD77/mwXJdFcZ19+S46XCKQy7tAZ
3EHQ1PYrXv7ISTRUBrBhjIVgnWp2oh1kI+raD7ja0XIQzNpn77TdZyaYgngv
JX7lIthJfOVydbTEbm9dzzIuPkLhnViDuy45od/BwVSkKkActJjmWZ9dwfHg
504aaYIEt+KxcaX0BbB8lAsJZBUiTknR5Wz8+gxN/2qdAkohYsxCsZyr9BMa
HYfoW90EiSOZ125dUf8Arvsj66kFAsSG2cPZ5+q9SOgfFpQr5iey7Dp0r8+1
Y+rijarKZ3xE5IUXemFbjfibZZw258xLqG1avqc5WIOPoWIHb6rwEDea+h98
ZyoHvdjPleBj3MTRK2QcX8eLoHFifEmCjYsQjc10WOTKw+R5ahPH9d3EdZE3
x0PvZ6JAdzGz6ScH8bL7pto0Yyp2dFKHfPzKThRYulHNOicgyrPuK88CG7GH
xmNiTisGwW+92dPI2YiMf50XD2pFwqLZylWPbxdB/i7SlEsyDFx7dv44sv07
1Q4a2nDSDEYjTdl4kwULYWA0cVT2WgD8rBylim4wEzWs3/KXKX3BnRYuJN7L
RBziupojetsLLe869C7rMxIPDCWPZvN7oP/U4Th1BgaiIF5fKu6JG/hqKi6k
1e0gAgcEDSQfuUBZh2bd0YeO2FnpZR303RE8s0z/xDRoiWevv7j51Nmja28Q
J5sMDfGzLdBn4LMtjif9MQ0UpSY+XB2IXlG1we265cbFA1TE0PlCDaUtK+zq
5mh9KUFJNCneXHR/bwmmKXK+cxcpiNm86cafZRY4OZ6uS/OAnFCWjHvJtJ0z
0jt37XXfzp3sc+1Z5/1Ncacx+46W7xYOXlDfKXPBBAejYrcOUm5u5/ZSAIeY
MepiI9hdwtdhFXU1mfe0EU5PK/LZHl9D2hUHzUCTbe/6iXWdmVlFKSObon6l
Ac5AtIIuawUWlGF31A8YoIiZYZjd8S8kr4sHhD3Xh+4jzlNZan8gNpBGU3Ze
H+uSKc92yi2Dee8j88Z5Ekiu+UspWMLtX7c8dm5704FvXKZOfhEhrGfPTLmQ
kKj8U8RL/jf0XRQy/2qSoJRmQx9xawFvr0QtM14hYZabORdmv7De4+DHv31N
7aPQ0Lh/Hqenispub7/+HKvMkZd+P3CfbEKczpGEqLe/6kS2vsHK3MGpOO3/
z4PKOUj++CtmuDUP/Bwh4dVIatJh0S/4eXDJxmafPk5yyywXDM8hQ0GWcZfD
tmcPpXGEJc7ibvhGUvHQtueJjYgfVjO4GbPJeVPOABcFx8K+3J7GZ0bZma1a
A1gNdewok5/Cqbn6H2MKhtgX2pP8WH4SxqTD7/aMGiLyaqhb8a1PiCcJ8jO4
G+GerJOjo9kEmE6G1f04aoxj77jlTA+Mg/WuzhnRX8bgWznFH+M/Cv9jZWJH
a0xw5ELsB3myEcSvzXe4xpuiJ095SDPoI84fJbNL9DcDnXL3kSaxD4gWz7oj
7muOPtKlQY/RISjYaDp0R1pgNWv0XnLyIE6onaJP0bSEpb/NkrTtAI5krQbs
XbLE0Usf/5qr9eN0Om+gerQVdDnsy2wv9aGBT0+t5KI1lE8Ulnle6sXhL8p7
Ctet0Vc3WDKh2oPQmE9KHbU2cKgRuT9s2Q2ai8wZ0SG2UDvUJx17uAsy3bU9
aUZ2YA8zUTwU+g7vtfwzQpTtoXuIikaKrgOMXj+vb8k7oDfxUntWZDuOZy73
Z1x2RPlKTbPRiTbQfPDox10nOJ2eP+c224KzxRTRYY+cYR4f5Pnz+RtISgyk
Wha7YMfbVI9B122/diiXvvrzEDfjw5XUdZpgRqI9pX7NDcQYr0/mrUacWRq7
Jl/+CBEf/+X/u9UAwyPW1c1x7rjgGN4dp1MPctbbO5IeeOB3k+PWgEsdemOu
c9ef8kRzT28ezcVaRJZVj7bxeMHpU10mY1Y17Iy9d2vSeeO0fbJ2oGAVpDmo
z++h9AFdSF0YKa8CZ9IoEwYZfPFntCHlydXXGDcRU5be54dTS/uqKLfKkRv7
0nn39u4/eC9Krm/bARocRYsXPQKQ3ZjbxBZdhjMMCsVZbYEgY11i++ZcCuaT
Fv+OCgdBVu+/D4/NSsC79K/4fVgw7u1nMj5sXoyQn8N/C9ieoFjQZ4DrYRFk
lmhTSSqhaCpxmYl/+gICigceioqHwdaza4DXuRC7lLUim3eGgy3/tl3GaD5O
hdhzfdgIx7E3FoYpqts5HVc3y/EvAvtbEjuWp3Jwc5TV5gRVFG67L5+J9H4O
PiNILPE9hZv/vXOOUtlQediqeUAuGrQ0XN4la5loigucSXKNgRpl9hut7gys
XpT8LtcSC1lrB5no0nQkaevvCuSLx/3YniPaeWlYYJncf8z7GeLiT5tkFqXC
PnlPs+xWAmQdTovXNaZgTPBgbkVIEqgEfnVSTSbj2WefO6OxyUg4+Xe4hyEZ
klOhyy8dUnBF59DbQx6JsCr4oeWjk4rbBtHdjlvPcENKfP9XtTQ8+GWu8ygs
HhZ+JRrRWukw3iiIP3cyDsa5PcXnzDKgpxp1qPV7DAxP/qeTFZwJx9R9xw+V
RqOhvys+pjoLjhfJzzx+/BRNP/sm5zayoThbuslnHYUdt3edsbux/T3xq+/f
bRCJdXbqD8dLcjFoeIC91igCB0Rn2LhF89FhtPhGxykctv+JfBIvK8DoZ+69
KlFh+C/hmluz6Av4kpn0r1WF4gDNXPchmiKUv5j4ajP+BPK1KjNaP4qgU7hx
hEwzBJGMB7ipPhXjG+yKQj4HIfzvufDWTyXw6rtazv7/55OISxrf/1UKBc72
X4mygaB+fBhBTC8hxJm0LkcRAL6bVIHMp7e9WVDLemDID7I/fF/X278C20vf
astKX+iazzN4Nb3G4yMpAdoFPhBw2oiSFq6E9Ccq06OF3tBncLo//rQKLaV2
dCeqvaA09nTGhb8G5Eszs7VDnuhxNinnfV2LXfs3IiQ2PbA3OfGjTVkd9q5M
0f2U8EDYV4pNmrh6mGiGthtu79P7xWc1ZwMbMDN2hElU/xFIsY5Wtf6NeP/4
eMocjRusD6WWn4tsglgDnzJzxUNol1DLiRQ0Q5RWPqfczQWzx6LOEENv0OVN
K0532xkXz+2fvsnSCv2KjQbRU05IVZVOgWYb7ARturQOOyJ8jE5roawdlglX
6yYlHJCUH5GnKtwBf5l9p+gJe9QJ03PYZ75DjOjEwJG7dhDwkeG7L9sFdj2O
lyW+ttAnZq7vtuvGAnXWa7IqG1BTvZCkU+uB+EndpeDtnGz6N1e2T64X7+y7
/gwqWOOD8cUiJqIPv9boF+8mWOF3PMeKs2I/OHwvPC9et4S/SMTwXu0B/KE3
q9AnWcKqipmn1XsQKV29pEMFFtDkXnguWzEErhdM6bWp5jgidDVTnewDWr9I
3hjPMsPF7DblLbWP4DNh95+rMsVu1iWWgw3DSPgh6a/4abtHZHRvtGIUjfLH
cuzYTfAin5VpsWcMwm80hVdVjJHy7SXz5JmJ7dyZaDbMMMLR1ix2Cb5P+EzO
GK5NYYStp9o97rSTCBQ9dzzc1BCFZ7ruPNyaxNF/FzSqpwzQuDHq0EE1DeGn
4MoyMMAVuo/7DnPNoNKQmUNyRR8FL39X3T09C78cYWf5KH0Ineo/z6c2h7XU
LxflL+qjP8CkV9DzMwiRqJIzmyS4SN225Kv6gh0lEgLnGkk41vDhSDf1N3wJ
uv/IddubkWvJT2nvf4ejcr6ZtAUJAm69t8Pf/sCglRJDrSoJ7Rc7YpUuzcM1
kt3Z6zIJHedEVDi2d8Ra18Zdhu0dIfk0PCwACxDR+m30V52EFYkWcl++3wjq
HGpgsyPhZ+1n2VCqRYz1ZrdfSibhK4fdlZMri1jtN5uuGibB/IodF8PKEmZP
50W9PKQP/9vdvLlUf6BUP/eo118f+c5GM+UCf3HDhezL6IY+JrZ7c1R+BbW/
NBN5Aw1AvXWe1Om6ionq8yMcRw1xvDzQVr7pH9bVj1L/+G2IhkylMHredTCX
99FeGzRCqtrMwGfPDZjWFwZHjhlDmILK/vX6JhTS087RspridFbwjcKLZMRe
R+PnizZmILkPmE+ykxPTL0f6fuy0AKkj+bPVPDkh5LfA9tTOEjI5FfvG+ymI
PRcS65cCrJCpn7u3qJmSiG3S22n21hqXRR/m2DZQETdzE5YNztvi22UHvaq3
1EQE3aM7t1ftcJKDtlhokoYQpNd5L7bhgI0YwSjQ0BG/T+TIStxzBiv5Ic2q
bY+uPM6RnDzqiowN+p1wpifSDGb00hTcMfkjpNrmLQPxJPHboOo1TzgrHD2+
4zATQeLKdqCq9caL5FfihUk7iTdrUV5Rr/wQ24fxHbtYiCD7udTEe4+xP3Om
zmKUhUj21lII/PQEn8pucagXsxJvdF6XLNWF41+4gjJd2C5icqdMltaVp/Dn
NWh/6cRGMGUY0Bx6Gwf1BDcrT1N2Qm+fjGmvYjJEHbVf6RttO+wd+dtO2nTc
EDSNFLHcTRiITac+X8jGzBmrC+fcOYkwLc8iE/tC5K5P1ebFcBGkmAdrJ3hL
4cGst/SqnJvoIWmnxzJWwDjikHf2Rx7iHNmRGXK+ekjwb36W2OAlnl8aOa/R
/gZakUKbxVz8BKfPx07plk5ce+MYIbpPgLAxvvmMnXkA7cQWZxKTINHl/lmr
UnQUOtENiTINgoTqaW/rCf1pOP0O2HFo23mSCmqHjldtn4PXHu9zKYSIyieZ
nCVyS6g9zxRhICNIiPu5cmXarEOtWWjg9VN+QnfgarlHHiXBe/aL2/ImDyHc
kKBy1IueOEX2/ZNjACfxpCd4D+1JVuKjxLP3KT5sxNIYa5WpKgehnDC7+bZ/
J/E+oH3c7RA38Wm3+YVdt2kJrorumtvn+QjnvYJUE7vJiSxm1gEacwGijqKg
JN5nBVEhF/eI5wsSUyrkK+1GCzg1bTN1cZcQIWxFTsm6NocrhoIqfuuCRHE5
TZlU3AREmz7u69ISJIIMVwQ2Tg/BY96C5/v2/X6b+ibdduqG6JFLPYYq/MSi
KU9W8OsWVIsIyNgK8xGF19XzDO7UY+sPee6HLzzEptcXu+6+11DvkDPTL+Am
KKPjRgt9SzCQQzxLcuAiJBPIA9y38jH+NiPrsyInoUGlTteln4W01Yp9F4V3
E7f8Bqoe+6Xin7aGTTc9B8Efu+s/6qYE1K6fvcu1wUb4axOtuWdiEG/3g0Zh
bRfRfLJRK3EzAsMKGj8uUe8iUhzbRSJKQqHM58swx8NK9Hz0kFyRCYLvkmbA
WxkWQnunK9nIXn/o3lubF+3aSXiZnKbf+uiNNoFdz0tlmIhx+rsJ4Sc80Zet
36laxUCwjQoYLDO4I7Uq2/CYEj3Rf0CvNzfoIdSa9L6Q/tARH8+W1GYmOmHw
mH47dwEtYcfB7Rd/xAF2dyLlHO1piKpUpb77wnZwWN1rWXKdmoj/zhTKZ2YD
SbPFYaqTVMT58vc3yf9ZAY6zm/lilMSPMUHn27WW8KtYurRyhILw26Gv62pg
gXgpw1P/gZzgesDY7JZkBpYLbKI1WmSE4cR/+8J5TNEp0WD3mXYLW7bMElOd
xpDdJSfobr6B0pumAqalRjhJ5rd339c1FOn4NMc0GaJS8cCtWqd/OMJofmlz
1QAiC2SrN/hWka51xW2vkgEaNsqI0e6/0B8cV7zRqA+p1LN5Lk//wJh6w8tC
SR+LvkxBV0yXsRnauv/3EgkSV9keOCov4eqhpZjSAhLqbq06S8st4ob9jo35
bW+KDMxf6tj2ptOB1XBRLRJSXP9tuqos4FmBzGex7V44JuFClWL5C5eyGCUW
t3uDqXU/7z6JeQy9SlT7//+apYu1XzeM+AGrZrmUV/YkxPIYp39l/A4/4UOX
HqeQcFZn+nR43FcESJe9a/iw/f7DnToqMl+AD+OZnILbvVCXESb9cw5TGRtH
Naz08bJkne1q8SySadfcLLr1IX3qeWa+7wyqjfj+qJwxADEeyeBrPA0O1hpf
njIDsPCZfqC7O4XNmG+UY6cNsXsg9q/t3UlM9diqdr8zBFnqvNkuk08w67rz
+Ji5Ebi/y9Mf95mAve8vMWU+Y0RretTrqY6DgtaJOui9McjWXbOnXo1Co4Gb
/XqaCT6OvVusOjoCiQNPNllcTbFPL/PtQNVHnCzvNdXSN0MWbyHv3jsf0F65
b7xB2xwHy/gL05ne41bJoaEvRhY4Ecroadq97c1vr93qz1viTolQx9O0ASj/
DpXL+GAJXw3mAkXffoTv/LfFbmGFdyECvGcD+qA92KUpzGSNQb9QSpOYXmzR
vz1zotQacVV9rKdLevBGNL7q+QMb1FPZ/uX50A15YcY9vwRsUfrIV857RzfU
D+yWcZmyhaTuuNtXv07YGlPP1xfb4aiY/e4J5nfYcCklyQfbQ7Jf7DNZzlvY
7TvpEmLjANYdYdeMVdpBPjirJ6LviI53KevyrG0g1zr6vYDkBDtq65GOkRag
xfhHpbUzss+ID0uVv0HfywuT/4JdkCXpmdKb1Izk5YoV7lcPwUQd6vItqgkf
+62W+xdcceo29+RITCMYJxJ+zss8wrFAO2a67AYcMr/fEX/FHV7Ob5P7G+rB
9M9W/CKFB4ajbCpKP9dhnYFLTafBAw5cLhz83HUouuDgahbkiQf3jAt5smpg
aTxhOXffC8maBXpsEtWQU+FNUia88SoyL+J4WyX+JjJekxHzwbHBJyVJthUQ
ID3JOLnXF+/GLmu4H32NpNvjYSP7/eDw+ms47Xo5apQl0vpO+uP+3uNcjoMv
4dHMR2pSCUBX4v6m3bVl8AyfN9H1CgQbte3Q8bJSDK7dcjave4yo6SInsVcl
+Jx5/3IuUzDms+xdtFqKkWp7ueSbSQik9T1WD08WgeZa5I6dI08g1HK8jJ2u
CGeErm05FYaC88vJRC/pF+A6yXe53TkMvyxM1ZZnCrD7bNaAg1I48isCrq6b
bee0hfsG9bEIqPlZXxGjy8PgPPU4FX8kdJP5ajJLcmDb8CSWliMKBOv1+9EW
z/GZwa01i/spLvQq8UvIZOPlqm51kFg0xLHy6gVHFpqvVvZqX4nByuMiMZ3N
DDA8/Cc44BQLXoekp6FL6WCYc+EqKI+DVduH0/F/06B5c2kmn/oZyKVYP4zR
pCG/RDkm60ECWq1YtJv3pIKefdXLZSARxyq+eNYrpKBcoa3ARzwZ6zEqX+Ud
k+F/JqVt/0oy2rR2s2WTkkD290yIUGcKtj5lzIz9SMD7HqpDqwWpSBQZqCf8
n4GpUeX9mfg0MMTsdf1xPB6uO3HLKyIdGdtbj/1XLCrvdXKSYjLQ+Ybl4kxl
DISUN0g+OZn48vu/+MSn0bhYkf0ksj0L98aT0oIePUV9rNiXC6vZMPp8qGzd
Lmrbt/wCSlI5sBJwY1JwisSM+mkGX59cFFLJCvf4RyCfM3S+ZDoPcmlD+uTp
4Wg3VhkpUSnACJV4vXx7GHaq/6u3+VCI4ip/Gb61UHDUpjVbvXqBJyeI8Y3/
QpEVQp/1KKQIDm82PEaWQvBLkDbDzKIYV758nV5+EoyX68UNVGolqN/z+O3n
80E417v2TuByKeoYWK6/on4M7WftBTcvlcFMJrIkZygAX64e1Tml8hLegXMR
dK/8QVpPiLE0L8dk7RdNoUw/vDejL8mMegXt17mhyim+YPw5VBr89jW+PvAd
3Mz2gdLDAr9hlkpIFAqYhlR542CeqqCGfhVye+kf2A17ofO17+mBjmqQv3EM
Fqf2QvpBHsW9crVQes94VeKUJ+5fz+VlN9w+l/2qEdQOHnh4r0PNRKoek35x
e2Rq3CFFGejOwtoAVYa51Ls73XFon5hLwHID/o6fZWXodMNxBWdxnZlG4OqN
PwlPXCF6y15B+FMTqj69Fy68/xAVSXVaZl+akR89dDKIcMFPofOk0c030CB/
QhV4xBk7LBUOcO5tBb0hq/+WiBOIgyxk7261QaxXy/qWpCOeCJzyeR3ZjvPs
q66L8g5wa3xPEzvzFlX6smvXDeyh3TqqcUrhHQTJxdInw+0wfMGtxLqiE39X
LtNKttnCIeuDO7NQN+72003V77AF53Gtsajv3RA4xW+197YNMnZTl11q7MGE
YWvo1yxrWOyc3fc8vRcUK410xVTW4L6wZ69sWB+erzj48BhbYdS+qPNpQD9+
X1SQ7hiyxJc98yKKIQNw8omns7xmCebjhofnkwbB8M+NyiLKApc0ihaP1w4h
ge2MdlmiOeRMJH1rv7/HSRXuB8IvzTDoEseuKPIRztTCdWeGTeGGrhuhdsNI
dJQzCGIyRU5Ny4JW7wg41G/dSb1qgtXbb1hciTFseST388YY40qCLN9A3Tjq
BkIE0+eNEHTzzZ19ORMI/MkYP3fTCEqFVbsmXT+BXtJDObneEOIlfOIidyYR
1x3MHiNjiN8vvadc5KaQnqn2ObbOALixMkI6PY23bCINbts75Ya0BY+bzAwo
XOYNJL/po+USefidS7MQ/0Mllhq6vVt6d51NfTAHwWnBwHZCHzWKLd0bwZ+x
5p7DVrdGglbiF03BN1+wX764K7aehKwP0ofrmb4heJOiyyOchPy9LQ9ySd+x
5XvXrdp8e6fISvA/7/wBm9dLvjHb3s232p0ete3d7Hdnpj23d4vqDxq6HJNf
SHW2IG1tXzO+sMk3PLOAUPwqytn2ruveiiFvzt+oVLBXu2q7vYsSz826b/xG
rfpr3pZEEvijDCLnfi7ivsX181LbO2ZH4/P9it+X8PBrAd2IsD5epFeryvxZ
huWjPjZ5L30c9DaNvMf0F8obt6WO/9GH9yWnUQ3JFfStTjAMPDKAce5Ds4+k
VTim9H1J3GsIX/1Cyapt76aecC6WWjTEoNYAldfJdeylfH876IsRiiniMo5W
beDdzaAYPgYTiMw8VutX3cIKD+urhHumEI/lc232IiOOxfNmnv5uhqcRDW9r
DcgJb8vE3b+rLXDrnej8shoFodvQ2ELzyxKj4a81GVUoCZdmhbapo9YIdXFW
LNSmIoZPMRC7cm0wIR4QH+5ITZQ89Vy0NraDZ5oum3UyDVGwc/Ujg5sD9Ewv
0LK+pyUclBzu/VlxgqT7E4bTQjsIr80TFS8WH0Jgze9UjRM9YeZbrvJN3h0u
NWX8tjMMRAHTgoOyoyeqqBvm/3vARIi9HFHcK+KDl95i82N/dhKpQQ1rKq7+
iIs9WbLvBgtBVJurHcwIAvNtVv2kw6yEgldm+89fobgUnepyjnMXMXPW6bC5
fCRK/phHajCyEfnmJ3d+CY1B9adL1wWY2InLM+KcCwcScejEkdJEbg5CIf7H
zdD6VAirL1/IO7ab8Ghk1g3PycKpgy1ar29zEs9Tfm7OXCsAv5n5nwwPLuKf
ocEn6ZISuBLTJpYvuYn5o5+JOqoKaCsGnKic5yG4JXOOJ9vVg8spJJjlEB9B
w9hOIdLdguWjFm2NqvyEijfrnoFH3aCsCWBU3HabQE1px7f/hhBhXhYwpiFI
3PV70pz3eAJhUtFyr/4JEnNng+tzB+ZQdfm2S/G2C4OdOfbMnF/A3ecUwqyp
ggSbYnmp6+IK9slSZ8edECBmpv2sNjvJifZWAd37xbyES8adto/NdMTsg9X4
PcJcBJt4xVf1YBZCuFptIGeMjViNl5b/tclOpDcppr6d2klUrUnFTu3hJhzn
m+VHP9AQvTNcnr2WfEQQRQjBdJWMeEh5qrU1R4DQ36Hc+73yD8af0F9/MCRI
FCbSKt02msflHY0zN9mFCMq8S78kSmdgsZqlsmNYkPjuECtuf3wM7/z9gyL2
CRL2RWF6UsQA6ul7r6iKChA+2j2/Dt3qhJmQe4MiAz/xjbJ/IXqlGWy7vY6z
feAl/FbK/HvF63AvOMC2L4mHONWRclbgxCtckZktPG/ATVRl7u3V1S8G2zV7
L6kTXETADvpRQ+M8JP5KE8zewUmcuHymPEY+E4xhgkdufeEg/EzEiZXyFHSP
nr9yuJ+dCG0ZnwiMeobeNdGBrHY2QjukkevD3WjcS/++Y7xjF5H1dCqvTT0C
eZ6e9K8+shKyD246/zsZitrwsLKlRRZiyiZKd/ejx/D/4VVPcLEQLwRSHweG
+6Hkpe2mbchOouK+5+S8iTd0dj2wXyBjIgYEzAuejHngfMGmPr8fA0HWUT+1
GPYIhuXJXvxC9AT/i5UbnhoPcU/mI7vWJzoiSz77A2umE5JyM3vDi2gJDgjn
rdxzwFvbqCjeUBqCNl6/os3SDqvjnPLKD6kJfbss290dNgikYrkUZUdFvHN+
9zDogTVEdbo7rrtQEuaZwzsuHLXCk+jV6a9BFMSfw4tWJw5aQj3mY+DIc3KC
pW7TvczHHFLF2bHPesiIT22vLtetmUKGl7/0OSUZ4aXaplSfZQJyTfNjLI82
sbhxVM3R0xh/iJMUXjs2IHI56NYnHyN4zq7PtGWswZ7/YOBqniEokvP3MN36
B+bnzV2hiwZIiDXvdWNZxdkL5meEVQ3Qedb0seboXzhy8BJ1Pfr4c3tpcfrV
H8Q/3I3Petu9Qel23yR1GYNtnf+86PXBFzXmdyF2CQbZs12djSQIBKdxvX22
iH6OD3GXQ0gwDJ1TNcj7DeH8lzfLDLc9+jq9xbtlAZp3R0PJbpLQzXFj7umP
X3ix0ON1+RIJg5VO05wCv/Drmqze0DUSXnx46MJS9BOyoru9GbVJ+M2+89uI
9A88Xu6+avqQBIPa9zH5vd/gZfj2W3jGtn9zKhkzXb/il1Wy/PGP2z10rUt2
SfoLZukOJXLw6EOI9WtmN+Vn7E5I1dlF0gcb9yveh6OzqLDnUOCo1McyfcGX
c80z0NUUEefkM4Dk99t9thXTyH/5WUXI3wAfzt0Lsayawse2BQr5LQPc+e9t
aEz7JHxUImmeexjirZvIFbXpT8hIvG/lwGyEx2o6JwR3fIKU1eTc52wjaPS/
DDSUnsD+2wOXz103xp2PzoWkqTEwXGNX7twyhiePzmsao1GcJuK+zVWbbLuN
pNFONgK+s0oHFvxNkS233NH7/CN2cZF3q+iYofagkM8VvQ/QbN55IVjBHK1r
cq4m4u/RLNUWyXnGAj2KBV+tqIZwyq38VL2gJTY+T5HlfB1AW9yc0NHnlmis
YFzQHevHbPiUQs5pK5Rcm7q0OtaHCK+wDO9+K2R0/zzS+a0XdKbsZjwO1lg8
elf4ClUvfEXIlt7ttcGK/ifPyYM9uND225fqvQ0ekJ1mpFftRutChv/haFus
3jSR9ubrAjuF7q3K+3ZIsG7r4U1+h6OJ58cO/WePZyKFkb/+60CNadndFXYH
BCaUzO4bbceNjyNRL8gct8+bzepoZBuSZtxOTa844lrOKL/anVbstq3hFdl0
Qjm17qO3ki2YMNddEGJ1gfC34lxvzjfY1FattZV8iNSsI8/7djTjZrRlfb+u
K/IPd4JlRxNeatzi30p1gx2VDmUieyNcHhNdZYuPoKew59GUWANimY4Os9a5
Q7Kp+i/xXz32prtFFod5YJq15UbrlToMQsvjnoUnzOPaux6P1kAoOCOnXsML
/My5K3tkqhE1FPkvSNkbNhF2HfSFldCq0B72VPMBR9G3dR7pCrg7PwkzNvWF
TEiJ5pGBV3A4PHKeO8wPykwpWsd9yiFXJL1h/cYfLm8fnBBVeAlODk8VHaZA
hPpaC3DzlOHSp7M10/qPQaWaqc23UYK2ZxEzVP1BeHqAQU91vhjShZ1HPqqE
YDd6E/7MF6FyhoYs/McT3JzK2CGz+QJTd98JHe0MRa+bzysS9wtw5+ace1sU
hmqDioxwjwKQ5DRiFVPDkSVTWOIyl4f4+RC1+8kRMKDkyVXUy4V3ScHdD3mR
8Ddu2Nu3+Bx5K3EP3Vqj8D2z2+BfdDZmGx5GH156CqOhAdeX17Ng+12louNo
DBKbxF7ScWaiXC+86tqjWPylLajfnE/HCfXZoZcTcfBgPnbi9fs0qJtT9OxS
fYZDGRNed7pTkWQnrOUzkQBKsguNgoMpiM2j/guPJLzYb0574Usy8o7nnal5
lowhOonnDDuSoaBlz3rFJwU5hj7fU4wSYaiWrbfinIpDAhdVR4ae4ZKu/G93
tzTokwt2B2nFo7v/p39RaDrMnxdeilqMBePWYLlGcQb4NzUthhNjUPBuIl19
OhOVRlm56neiETOVqJl4MBsnGke/cok9xf8C0AEv/gvdMAgefak/GzYJUysK
lT9YMGZE4uWqPz/oaze0+JM/GoI2NgNjrD9DJcR14vWSP5ChkJWf9a0/p0nv
4ukAkj8ozSSV9J6vP5f4ggQSGZE/fHjaOSSwsD/Nw4VZpz2QP9DfJ+53nbE/
C8nLR/zbjj/a2qbBMJiyP5Yq76f0Uo0/GHdI3gyhsz+GL8Y4BN+LP8z+mqzX
uLQ/hsHhjwt/ij+goUUCbeC1P9jbbeoAMok/ZuxoZ6sYtz/ha5zP3faHPzzV
Ve+FYrg/tOsNJrLMhj8oTT9Y/b65P4DYhqiasoU/ofFguRcvuz8yCe/iuKeE
P2H2hXX2s7w/LqSRtEOrgz/vJuUPxE6+PzGopRJ4vII/0blHOlwAwD8RVsyU
m9qBP3vGE8iU5cA/kyumigQFgT/4MZZEudfBP0Emo9gLO4A/AhcsjYTXwj/a
1C8jLfh+P4fbj5u+5cM/143rjSiPfT/0Rc/KMgPFP0HCoCbuOXw/3Z9aucAw
xj+/ei3jfPd6P5a/k9tQb8c/kNE+z93GeT+jzcFU1b/IP3WznlAkp3g/oxql
j1Qjyj+htrWQd5d3P9woG53dmss/nUUw8gWXdj8tnX6xlCfNP51MJVAOpXU/
HZ9ATQ==
       "]]},
     Annotation[#, "Charting`Private`Tag$25844#3"]& ], 
    TagBox[
     {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[0.75], 
      LineBox[CompressedData["
1:eJwUl3c8198Xx+1NyM7ee2d3z5tEkexIZZVZKrLLTqnslKyQVUYZIXuP+Moe
Kepjy96bX7+/7uP+ce8995zHOa/Xk8f2vpEdAR4enjoVHt7/V5s64b7CkkLQ
/cbyoCmWHApSPmVUvCgCWTqHbzUuZBDqk6gdd7cYcB/O6fdfJYX3aqzcnddK
IPXA4eiqHgnUjXr3Lxt9ASfRAOcMA2Kw1bzOmWxeCvOd9yi4rYlgvPykwvVO
GQxpK59VeEQIyiuZ6azh5bCedtHoWjoBiBgaf9Su+gqKDc/jiPrwobA0V6tk
rwLOxl8eK6XCh7R8HUn+i1Vgi1/aumWAB5zC1koOOdUg8MN7OFXtBF3hHQo1
ZqkFTD6ZI2/uCP1yu3OuJ6kO/G9yvoasQ6T+ROngVkI9FPH6vIh1PUAvaD/L
s99vAGF4OTV3eR+VnBscitNvBH5OO5oohT0UsN128apqE4zI4TkOS+wips1b
WZuyzSAuwR3MK7uDJo0sA0gUW+D6vZTUfo1tNCptEi9+sRWucfQbmVttIeJz
AnR0Dm3Q6ED2WfDZJiL6e/DUJq4dKtoky8srNpCnBNX6aM83IFSOY4neXkf3
J9jFgKMTboaQdyqeW0dsO5aN13z/g5BnCrtqEWsoVT/DnXi+C+KdZTwUZlbR
VlI4cDt3Axax1VWtvYpCJEnZ9QJ6YOJVf+SE7QqK7CXMLDPuhTXmW9/XLywj
vDfr37pk+wANRwsfKi6hms4/JZwc/aDzZqHVWmkR4d6kjSueHgBTHae9UK0F
NG1tbl/EOAhbhXUwZvMX4a2duywuMAR4wZ43Jp7Po59NkUOXNYbhEl9FDkPt
HCJ/mDXU4jICJINSZwiOZ9Hz57XDVz78AIZGNZJzl2bRoOfu0of1URhv5hOz
Tp1BczrXeNP1fgGN2j09WrwZ9KZzbo+ycgwWe9rwd52nkU6B6J9Opd/AouRg
+N/vKcT5NOO2nd0fmDCNLdC2nELa99ofBCnhgCTdtEdqZhLFmhTsqDBNwJ/5
tjf6XpOoMnyHkv1kAjIbLWj96SbRNh/Rj+KNSbj3Wycv/ssECqi8lhS/OQXz
NRSET60nENevLAMHghm4k86+p8Q4gaLMTn38xjELe2+Hyj714ZBUA63QXe05
CClWUF56i0ON3e43SAPnYWThpgWFIw71NvmKX2//C7W50gaCGA6J5f9+L8uz
CIlCd/Ef8uBQU0A+he3LJZhJLRiTpsIhk7mQknbSFWh5PrVcgodDDpqeXR90
VyH2dyen/ckf5J48fM6HYw0OeJ/it5H9Ox+PTzu8twYaGuSJbhw45Fcd6qqD
WwfpKjcWQYRDT2jto2wGNiDFQ1C79g4OmTUzLhb3b0L8QcLtSzk4dOtJlsXP
31uw6NiucrKGQ8LBZUmBe9uQORRkdk1vAqn80lQ04NmFW09cq+irJpBa4jDP
kNse5O8ZV4hemkR4EjThXUP7wBNruOuyPonc12yKFK8cAlX4jafJlVNIZqCV
QWD0CFIvyquaZk8jbReBui+PTmCnyJVOrmoGFVBxOVIk4mHeoZL4hHhziN0t
R1cjGB/rJxTnEvebR9MhkgaiXgTY1XDWSspzC0hF/XjhoQ8h5moURxt8eQkR
lkZojT4nwpyK9Mk+VK2gG6Z1dbwfibFEGbe71vprqJnGyZ9jhAQLn2X7Wku6
gZ7ZBZNkM5NhTOdzLM2Zt9DYF/zRDEdy7OINfhXjVzvI8qEfLeV/FFjz9R5+
nvh9lLR6WnhMgwpb767N79A6Rn4eH9+KfKfGvrZR9+w74sPNdatcmvunsIhH
kb/E1YhAdN+e9+YrWqxF3zyVvp0U3DU3zM8+osMSRelYnmlTQWR8VX35fXos
re2oYZ2YDtRP5NBr19MY3Q++p7FNDPB4zEEjLIgBu6Sg7OVVwApmEgsapmmM
mOL+bdHFM9zQu/VQvvM7E2Yf4/JO8Ck/vLLjOWiiZsFCKiUdKV+JQuMP/B5+
S1aMnzyF6XeADJyrWngxXs+GEdu/DVz1VISSAYevSwrs2GNmFRlFMgxwn7yM
LRo4MFGOxAcu17QAWlh6FGy4sDM6XfcCevUhzmd34/tLbkzwNNW7W8JmEJj6
iGLYjQdT1v76cRizge1X54wxe14s/uCsddw1Z5iIvSESbs+HlQ6WPQzNdodQ
jV0fLnd+TKdT1LwzPRBe31GO444SwMxE+L+i2JewJH0uXKZcEBu/vxxGGhEP
Lgsjxr//CmFcVQT3mRozoVNC2tZFUAR7VZJ+4fJMMdS43VVVsRHF3JNi0lB7
Axzb+QafDhPDcPbHzQcXeqF6M/2XpKs4treG5y2ijgM078TH1yKOTUroSl95
sQa0GrntO7/FsGvndzNeVOJjp1LydejGhDGlXnPmJ5R0mN0Cz3+rZnwYqWEI
peE5Dsy7+Fx4mw4rtoYeJQkpCGATZ3/KnNOjwvApDhm+kopi7DrrO5b9h2Cn
svFBz0gcu8QtF15iuQiMnuQ+JU3iWPAaT2Em/i+oWCT+yKsgjvWov5K2w/6D
8GcltNzyYliji8P6qEUN3DcjqrhCJIp93F3Ujwn6DM93U07m2oQxM28+8wbv
dKA6LSbLEimE9WIPukYI4gB/dzE19aYgprjXC+czn4GaIK38TWUBjN7ElLiq
5THQZZofWfDyY27ztwJqCdzg8g+y0WYWPqzQlrqtX8QBKNslsm6w82Jzqcus
hVGWoLYzal8szoNdQyIv8T+YwMvxXpZ/n8GEz357Xxt7GcRlyy+tTHBiZPjf
nRNzNIGWXMiW4jYH1tc5KKDmiKDR0LEnZecMdpb3QVRWiwKw3wqu7kxmwwjp
JjqIr8rAomrk3VojVqyynp08oVsU3v768vcDCws2F+xCtEchAIYRDcJtS0wY
dwIVu0o9NzzODpy/2cuI7fKsFRaQngG+dVxCZSMDJv35l8hfJiY4yjMhkGs4
jVVPbNkeXKAHlynZff7/6LHVbyKP1l/TgJXlFP32BB1WWUwqdRVHDgOS2bKn
iemwFsXV+148JFCVuB28KkOLZa4rXjPnIASGQBZvuj4aTE4wzf5TLh7klFgM
VhhTY90uT4YvmRyhsBWto7lZSqxnjkwqinQf8RtMqFdEUGA/5lKslHR20LZO
9lN9TXJM+8Qnvh1vC527OvDlFwUZdoPZhaSIYQOx3NJsS/hDgs3yFYipeKyh
+rhIpc5mYqyMHEcbzrCKaokz6GvKiDDP8n0D/p4lxEIqeb6llBD7ut1ywv19
AZ21PMeh3kCAPR2orNJh/IvsQrwt3ozgY0RRa97GiXPITr1+U+YAD4sfLLaj
NZlFUmNpO8+E8bBfXOUDRKozaOFKMKlQ/TFQujWHbl2cRoHVIhfzNI5gVp21
qM97CllJLwXmDx/AUKLcbb3WSTTZo+Kg6b8PYfXZa/MSk2hVVHI44eweOCf+
/JORP4FW7OYJfx3ugBH5cTgVNoGufDkVodW/Dcm+E+Yn0zh0vQF/5czXLWi+
Yfm6IxmHkg97BfJyN6FS03x81haHhnm7b13M3QDhC8GiHIo49Hg47Z5R2TpI
jEonWLHgEF5vH0h9X4MEr49XvxHj0NEutb7u2iqAET5T9vEfZHApwIedaxUy
vmQ7GhHgECPDhofSp2VgpifKNqXFoWZ6mqEkmSVYFB4VOC/8T9fwCofvty2A
phL/YeclHMp2V3vYe+8vLHnYyRa645AgE6fxjOA8eJ3TbK7/gEN1uIO68eVZ
wMN95cT9+8/uV2b6nZYZMDzvJnskNoHK83YiXPOmQd/3x8npRxMol5+R6d27
KZjsyCMQ7Z9AG6np73reTYLt3os+Y/lJdDavVdUpbwKQydaP/HeT6DlH6Nmu
JhyoxF7MuU4/haocTl1znv0DgnZqjdFRU4i8Ppu4jPHf3lBSM4RpGlFTTJwy
TR6HvB2xfs+caWQSql/yhnsMeO+NKJRozKCMfK+Oc+U/wbDSWyJibgYpx4n8
drQahQ/tEWCZMItGqu7Xq7H8gBbhTw0vTOfQXYnt1IU/w+DXeWPNn2Meja98
OC78OgRnP809+rQ2j/ZiS1/0vBuEOUv8urd9fxHJAANJYuwAXL0gbLFZtYAk
v3x9oPm2H5qZ8zrjihfRhyDd9cGPfcASks1EVr6EcHcT+Kpbe4GfzCZw7tsy
OrXct++y3AO5i79NRxZW0KcJkzOO3D3A1icl2RC5irbrTl+89vU7WBmWO3RL
raEe62qvlxpd0Hwhyt/jxxrKON2fGjjeCZNCr8LYwtfRJaOtx7dedkB75lNv
4YsbqPKHJvnti9/Ak0hwjZZmEzE4VzPVMbRDsE+7gu74JvIyMmWuXGkFbK6g
07hiC0lTbbSkj7QAn9b7R4Wp2yjJ9l3e9+/NMH6XGzcfs4NUCo4KknubYMzf
+CQuehfJjBuluP9phBSJ4WTd5D1ELaTZ3LTfAImn1IvyS/fRG4szoodcDUCo
dSHNfuwAVZ+3O0nSrwe8UvYaUYYj5Jkjs6pFXwemwd9MSiyOkffQ408yb2vg
MZlndUfRCWqcTExllq4Gkb68cs4IPBg3fXOX7UclbEqOzbnp4MNW51qBU2wF
uFdfH7hKRwAdOAJvjetf4Rde8lNsggDCqjP+m5Qth5Y3Mn8+1xBCWkyBcRJL
GWjpE4WKZRIBcViHfx1lKTTdzmJUe0MMS6cYL36k/AJJ1M8PPeNIINxvYriO
uQSIBvnwvVJJ4YnBB+/7UsXQwbbaOVpOBuK76aLCRkWQaz1pYjBODkxnLZ/Y
BxQCPw6sn5+mhHmJwURjl8+QJi4/jsypgNuEs2xxuQAIZJV9VAqooX/a715p
cD60Fh17XTx9Cnp0x9K7hPIAPzPeO+0CLegnxLrZjH0Eur8EdiSUdJC0rYfl
v/8AVF9iI3VH6aBVyBpb8MyB3lb7S8sl9PBTllHY6Vo21LtDofvb05C2V8z5
6FIW/GqktbcPYwBx5WNtb61//sG64/jqE0bQeN1+t0U/A0i8LsT/CWeCk+ep
PV2330MPYaRh6ntm0NiXXz9+kg6R1/waoJUFBJRtyAY+p0FRv0y4xy4rzLrP
VSV+S4Ug1ns/NpXPwDuSMM9hrXfwk7okIfAlOwgHEj96OJQMTEQ3by0ucQDT
1X3ON15JcJRunk9lywWR3R02DiKJoJ5hZWDpzg2VMfX3mRbeQly9Uq63Og9o
pwj/eyEe8qwfEfaz8MKzrmf1gklv4Lrts6KFfV6ovta7dCbsNTzD96TWm+MD
x9AHL3mD4+C9r4PFSxw/fNSXn0sNewUJ5xOEVGcFYLpmIXwvMRY+RXE929kT
hLuENJNJX2PAcKlQzoVNGKRUxa8Q4KJB9pPnkO4lESDpU+XPPR0NPN8lfmg+
E4WTNL4A/rRISLDm9WYfFIMD9Y6dl2IRkGOK181rJAFFzaSat/Jewrx/rmv/
pCQkDdLKH6EXUJ3l3Jd1QRp8OT8xm0yHQSaf6wscvwzcrfJX8E55Bs4nMfnK
tLLgJ7XM8cj+KSTy29w2JpODRfH3o74QCv8NCTRNU8uD+m7AgzyhJxA8Rcmb
y3MWZuyDWM9zhoC6tR1mrakAO4M/FQJ4g4H3VqnN+D9f62qyE1kkFwSprYmf
TyqU4GhS/pGUYSA4UbZUZtCoAOmxP37mpj9QthSINnuoAv2L5IukN/2gg0ib
5/aqGrxxPBBwHH0E+4LPHj4PQJCbnm728Y7vP99VsylKjwGHM5PWt1M+EB2w
8etoBYPEMNXa/hYvkHqVZjr8Qx3KZQ32BsM9IZJvQtiqRwNe+e75rd3ygEUy
FiKdgfOQQZ7jZqbjDkofvPT0ZjRhWaWhQxkeQq55vpQYqRbYlSVojai7AflO
q/NXRW04iH6iH2LoCgQ4LdVO74tw0djoRrjLA7jzzvKlZuclOHwwvpsoeh+6
RKu5OaV1IbbL/6ZttAt4c46B6YfLwEHwNEqb8i4oG8lLrshfgd1SunHxRGcw
1/Ulpx3Whz2tG6X0ak5gfLU+c63NAM6+StE7WXEAMnwDU71CQ1CTdFc7/mIP
qmy8U5pZRjDwRbhB7oUd3BIq6niWYwwiliqdHfduwyIBpVVHuQnYpSSqb9rc
Agtm54X+IVM4k51ZuWlrCxJrF80eEJuB59LFMQZXG7B9DSrumuaQ0RK+k/nS
Gj6fWTX8FncNQvM2H1LctoLiS6+/3tixgCgzAQLptpvwLs01S8TlBnTvKYvH
wA3gE8+1V9+5CbKn88PZ/7MAigeP6L6+sYILu2JuTXeuwXJqicP1bGsYvkXq
8ILDHDTITuRRhA0UzD/Ye/rnKlSZqwZmBdrC2hWls70lpsCDEeGpB92CIgnD
gLg3JmD/QOpiR9RtqAhIuksaZgwXDr82HeXbwd8+odpbz4yAcyd5I/eHPcxN
y3hsvfqXJ82X7z8yOQLvWTeDUwUGEHtmZ2PothPIT+wN02bqgxB3golQizPQ
5HFsRxFdAcNN6uevle6C+2+FLlffy9AWb00jWO8CF4zPJ8QT6cIue1z3zo37
8Fi9eP8w/RJkpFGKMoc9gCmB5eB0w4vA/z4s09/FFRKGiW7E0msDt7KZrIWV
G4T+XN9anbwAD6l5/YwtH8Ii4fdTuGZNqLK+4819xx0eO0QYvf5yHqonp8lC
n3qAdcer4yvFGuD59AWpdpEnvDGuRYY16iA2QJh3btELLMiZHi8PYJBaV8Cu
p+QDh8dt/xGvAVz8/e7jHX9f0PQZdDrtjKC69OwA8eAjSPel4VvdUoNIUQ79
DTU/SFz/b7XslSqwhQbtUpf7g4Dn+4uhGiogStWlwcsbCEZyl7zC8ZUh9Ip0
Y/t6IPyoe2pK2qMIFk4/B3e7goCkleiVbIECSFU6vVT78q/Ppfl9r789C7+9
euwEskPgLleU4Ui0PFSmPj26kPkErARta/DeyEEFFnd47nMoEBzzKqrkyMIB
zNqWtT2FOK/M1PUmGUjN+6x7bfkZWDpPjL1dkIYYA+nrv/meQ3AAgVEOhzTM
sCgNUDm9gNL+IzOsRBI852N5c2pfQmnOz3YqJAFVHvrfQgQiIN4p9cd/o2IQ
SVBc8PRdJIy4bY/lhInChzesj3UYo6GLAd++VUsElq+XthhNRwM34ZVX1gzC
AGYXA//UxcDLWb2uqlVBqLVyLPTOioUbjhcCOH8KgJDXCV3um1cQ8YSw52cf
P3hZXFCliYuDQ0IJcuNhPrjFyfYO3r0GybN/jadmeWEya1hzsvQNPLaSU9gn
5AWRzl6PvJ/xIDjtgFGI8YDPf9SJurQJYC7bNPjiBjfkX2TqDTZJBA4h0sot
KS6IzopV5/qYBH517AYtFRwgLU/fskqTAjStNdtvTNnBeIctaujpO3DXrnsd
QXAGPhvmaf4mS4PjJIfyH3Ws0E1Z7HZ5JA1MKRiWC8JZQImWUfZscTr0PQon
1nNkBrYI3WLe+PdQf/0KM6ERExg/qsVLe5YBYwfMzZyXGGHk9Q3NC08yQcPO
++DoMgMM0JyPLIzIAnbhymSim6fhQ5vMuZDMbJgc2BtL8KaHHenfMfe+5cA3
cZLPsql08G75ZZzw0Qdwon8aqt1DC1S778hcsFyw8w7nNKWkhZmMjUXyuDyg
oWcsbUulgRPH7Jme3Xw40lKTO1ShBsHvuivJ9z+Bz0RQof0sJRR/nxu4sfcZ
chuNppQyKeDW1x6WoM5CCKEhHch+QA7Ls7Y2rZlFQDPIu7iiSwaNmnj2ZM+L
4UNf467NWVKIJa0O6fMuATpZ06uXxUnAoLdAqNL9C+SKcFlTSBODi0XaD0u/
UhDdV1/4R2/wWprwu82rMhBgsHJMvE4IfKQMma7l5XD16FBIO5gAnDj9pC78
/QolScV9QSX4UH+DXuOteCV8jFIsbVvGg4RI17OKAVWwN7TQlyaHB1JSbyzW
J6ph7VBpR5LwBIWobx5nm9dCNPXKgU/hEcqdLHiJ4eogmNpn0ujeIboabGU7
XFsPfCPV9UuqB0idXFXxUXwDcJr8dY9i2UdiGt+36B41gqGV4KVgwj1kBid5
Zf5NoGp+PipzZgfVE59ZTI5uhpHfXO9PRrbRKkta7vOiFohol9rt/LGF5D49
4DSeaIWX3FLfjeY20T5OTW6Irx0GrkSoTRJuoskMQvZjz28w7RWTOSz2z8f7
cz9p/tUB/aPG9XFW6+jOnSZ7sav/wePeurwn79aQqQcpi+5UF0gV70dzzq0i
nW/71zTCumG9RhF/THUVZX5ijcpI7wE9B067l7IraOLKtUtXXvYCw+nT59tP
lpAXjx1vZ1AfRE9Tv40bX0Tb77qe9IT2gyGHwRfBf5zdKs7gyvp2AAY+459U
dv1FjFm8j10rBiH8ATPl+1/z6OKhwsrHv0PAtn6+VXZ/DpWrMmW9Fx+BvS8C
4v0Cc0jrfjL7xcAfEO+ec2XLchaB6q/L0TOj8KZCK+d01gzaaKk9FWL9C9gI
zLvKd6bRNwJvWbmVMSgSJP318Oo0WtkmCWx59Rvu/hT0mK2fQkunaRnKcv4A
emzbXKUwhaSXBjTLYnAQ2/QG5ZRPIvo/uYsRYRNwf7hiy/n8JFp00e9eC5+E
iiFax8EfEyjQ/D1NWuoUvHhheL3BdwLdvpIWZNMwDU8bXOOZBScQ72jDKYqN
Gbj6HX3p/olDT8F1zPvsHFir+GiuJuHQk60XDInP5+EDXmpYrD0OSYyPZNit
/oWwisuBf1RxKIlBu2LCeRHOjZbqsbPjUEq04BD//hIMlklmJ5HiUMi7j8qG
qSsgqq15aeAft88P2Mp0FaxCfFOWkOk/brfR46Dhe7sGjxWyTAbpccjOOZvO
NGod9t6SZUnL4FB6wg0+lrgNUE40mvGwxCGGKaARy9kE0gfyPxb/xTfXPWpx
9dsWUO21H7Mt4JB9rtPnewfbcOP2k84xvQlUlXIzzhjtwr06PEuX1glELqva
vBq7B6Ozj9Yemk0iFPFtBPb3oTLIuVyeaAotygf0aXkcgkR82NeonimU8VNr
l434GHC0bHe1GqZRLJnN/J/cEyAbMzYQ+TWD7qhSis6U4GEbSer8mPAc4qRz
Mo55h4/VYIEXND7No8b/dj043hBgomZf0Yb3AuL1xQVAEiGm4c8q/PX1P04+
Vrhc9okIa1V62J5HsYry1VkkdXuJsfsfc74/frqGVL+YhPQRkmJEJezFdbob
6IP77hVxbTIM6LcKPt7ZQjShxhOayeRYgdw/jjvcQTUvhe4xElFixgfX406d
OUDMSRq4zAAqrJyEJiZg6RjJedGEkNHSYJHri0Ec/fiQeClv8HbZKSxa6QWz
fzMRfElgE92poMVsorMk27zJgPf5FYGtTDqMfw+Rj0pSQwiJ/6HcW3rM8gzB
OfwoOpgTrr/68u1pjD77p2yePSN869C0/pzNgOWScVKpPmCDRyTe3282MWJP
wxtz/KO5QdJH/YrlChMmEvk6sIpOAMjN/1sNFmPB2AoeehQri4HesdLTD96s
WATz+9mYCRng4xoZKxtmw9pnSFz/zCtCuG3PcNolduzvhlvl5kUMukYzWG93
c2BuV5/3x6doQUSQBBeZMxcmJnKu7wapAYyU45+6EsGNcbVdVvRWNAMNDztL
VlceDLY5B27L2cDjxvbRRWtebDyjumCezRnOZHn0at7kw7YYTpF+MXCHhOuC
aiH2/JiWbs+nbdVA+Hj9clLPYwGMOz1ouKrgBbxw5UZjqYKYvVXt082YNxDH
nC9i/V0Ik27+ESb0OQN+7OrVkhKLYJK/LsarlRdBymd+rrNqolj45RYNJc96
oBxguMZ2SwzTctN19YjuhpvSHjx3TcWx3+659b6cv4Gars7bsU0ce16twbhw
YQX8zacqioXFsV9kF+6uOJzA1bv3Ar6li2A7Bttvm4xoMGXWV2Oi7/mxyjDZ
39bP/uXt9BwXJsSOra4F3pUf48OofG+/SLpBi+FxvzaxFhDBbCwzaVlY8LEh
zy2+9B0xTOLYl+jLqTUo4w4Ku90qjlnIpe+Fb/4Bu5hQ1fK74hiRLx2/nUAv
RFFVd5wJFcM8xjze3u5tgC7xyUM5W1Hsl76Fjh9rCbxaig4dExPBOMLp7xry
ZcHpV3h8SZtCGEnyyP3v/G/hlkQU/UizILadHcc3ci8ctL6nEmulCWD0JCdr
L88FQZxuSv71MH6MNj2R61agBzR+/ic7fnxYA3EKv+OLO/Do0yyKCeDFFGZy
Kw2ZbSGvb09XIZIH63z4pfDY3BwqH1c3bHzgxiyY41dsmgzg8/It6mfvuLAH
oWrt5PHa8N6+KUEJnxNj/e+/261rGKTER6oserNjDBASUdynBMrsPmYJRGcw
aesg3jNPZSH5WQqRegYrllDx9ZUCnzg8F7x/vGzMgs2+9ds8VyUAcufOclQy
MmOf5o/zXKh5INC0VLZ5lhFDqpOrx6JnoOKq7k/lbwzYUdK3AP5NRijoqBQw
qjiNqZkdrjw9oIMMt2WBK+X0WHBh6/HNYWrQwDU9826kw9zyBTsdaclByiaA
WWCUFhPV8E7nvEwMjyIeDFgfnMK4fZbL2C8T/POjikPH5jRY8skrDYKWE5So
cir2qJMKYzxH3tg/eoCM2t5aXDCmxJ5jy5FsObuo7JTfwn9L5NjwV5uQWcJt
dG9tjz8hkQzzzqGN8+vfQMdRHjyV5qQY5VrLOdzJGmJrqNW5IkSCifx+MuQX
tYoeehWm+7MQY71+fFL9uctIst1nPoWJCGP8MULSHb2Iauh0tql4CLFwpqij
zca/yJbtor6CIgGG3dTBlM/OI7tcr/zn5vgYSd+qncn4LHr4kuhBwBM8LJ2q
9TmUzSCq8HclIh4nkBTqTf+5bPrfnNv7lLJ5BB5sQvxSo1NohPBgyuXpIfxe
022xY59CbY/vLVSKHMCjMa2DSJ9JtB9cz/tpbA/Qw02OlOUJFGz2vPJx+i7k
lnpWLnlPIJ9I9iu33Xdg7rrypAnTBGqY2MnKN90GCVcDzq1mHCoT+xObpbkF
7tLc3ZdC/ulKzcrKB2wTeOOlTDb0cYj6r6Id46UNiFR+6jApgkMPQqMum95c
h7UiDUZuWhw6vnbdaOjxGkjn0hfP4OOQ1W9KOtqcVWCNnQ+L+KeDZc7JPMdl
K1CW6pzzjBiHdm+HX78stwyv3n0mcGDCIapiBj6uxkVQt5Wh65DGIRaVOLMY
2wVQbP+o4WKCQ4lXuH2+n/4L/4XWzjEE4dDWsn4TyeAcdJqXRieV4RD7I4VA
76xZmJx7Yz+ziUMJbGtkTk9m4NsbE/NZ1QmUHTv/XtB1GtwbvfvfvZxACxHy
eBR3pmDl9YDr6akJdP+m7/0HrpMwR/bW5/qFSSSTYELXFDIBEwuVb2I+T6IN
IyO7e+k4cMmmejzGO4UC8zrG5r79gY481acuqVNo/xzt9vW93+Cg5uvnLTCN
epSenQpwGweX/lxLKJ1GESfl/nrHv8DBlq+KVH8Glep4Kv9J+gnLb3/6823M
IPsiU0IbnVGYV9LTnEufRbmkQS7HZD/ARd6FrPz6HJKv/49ja2gY/uZzbm1z
z6PAPqadsJIhuOD4RJt5fR6VLPRWkrwbhJBkmWcx3X/Re6Pj9pbXA+BuK3Q0
WbGAvD0YGHkT+4GhdsMwseifDyyjfxKS2wevLEP1NcuXUI0Nh4Npay8Q22Hf
/DuXESYtQUK91AMUaldnl5ZX0H/UlCP8nD1gfq+/litmFQkkCAurFn8HtrJD
cma5NURAY0B5otIFyskDVDVjayjrWbNt/mAnkKk4+PvGrKP6a10yd4I6YOTz
j/rKKxsobSzghuO5b/AlaCJvjXET3Sxb+jNO1g5qhnEb8bObaPBASYRushWm
MJk88eYtxL+1dF+nswWebai5KOZvI79Ug7o/9c1AdglP/XzaDopfcpaTbGqC
qWF8vrm0XeR7TfFSYm8jjCn5PG/4tIdMzOWaoxYa4OP9Amm3jn1UR3D+bwBt
A8h8cPXI2zxArHukd2ahHvq7vnRzSx6hNYLU4bD1WiD7OFXKEXeMpIrNCwSv
1cA479/kLZJ/3EH/enR5oAokXq/9uPQdD0jb3yw03a4EOWJ7LCUNHx5uhPun
kVbAY6/N1af+BLCzdGAfVl0O0SUvezIdCcGZKlDsRXAZkNtKtby3IgJLC6ee
NvNSoFOkjpa6TQzJ093L9ugLiH+dtifzIgHzq04JKbIloBE4FLz5lhReOkpu
5skXA/7tBZqGDjKgCWD9Ony+CHhrVIavUFOAOrFqu6dVISRO798OsaGEU9qJ
e83Un8E/5n6rcTsV7HdVXjxyK4Cu3QubLRo0UDL86LzbUh64f4oRme49Bdrr
Rl7Ej3NhM/7riXMVLbB2Z0oVcXwEf+k17lsJdHDVmeqNV28OyMV6PfcJoYek
L/mnHd5kg8VfmqNrvqfhN51xZtqdLKir4qYu8WeAkXdZwxcNMoGrmdlNI4YR
DFmMCl+fzwD+OO3E78VMgOiKSVs130NWeUwJ3xQz9FOXuHEap4NI/1V5fkFW
SEHxaVsuaVDN+s6n3IcNBPfP+emKpMK1RcHFjt9nwLpij/xMRApM+HkzOF7j
AJ4IBj9lkmR4/5YpOm2WE0po6a5HvkqEty2Np1oucINDkUEnsXwCDByR7ovz
8YBUTSHbh5l4GM9sbv1IxQumct6nwnLfQPWtQf9xAj54mtL3utL/NbRnuOX6
k/DDpUBLE2fbOPiZRmp5iUUAPPdeP/tu8gpokzLDjpUE4exmvSOXaSx8vsZs
fs9JCLyPH6xn2sYAFcWynG+uMNyffEZQ+jga8NucwomORIBN7Yrl5QtRcEe2
t+LYRgzSdIkfl+REAN5SEaPbqDjssdG5+HOFg2hLgpCzgyTkcLbqRua9AAoS
jmcnRNIgelj4rlfnOUTVi4p8wUnD7Q0lS6PDZ0BszsPj2iED6t2bAxx1T8HO
f/fujzpZ6BGUwL8UGwpUw5v6GY1yEO/c/Rnf4wn0W453Pu+XB6vi98m+9iEQ
fvr+Zd2Ns6ASrxTx1y4Ykko+nK/mVYSLa6xnU9yCIEv+2n8VtkpQGPJif+pl
IFR+CZfi+6IM5o9Kb4vbBoDWyXW9FWZV8GhLtRJr8gPCv5gTX5Qa/N2e4E9X
fgyvOjx5W9kQuATmfXJq9oWsyay+rSoA7t53Nj62PhD/Ps1xowKDVqupe8P0
3tByTGo1m64OZRG/KcIHPKF7JKXp8RsNSL4saVGY7QG0GUXyTm/PA/Fs0jnX
MHe4k9wQeuuDJrwsF+w69H4ILgYhauJtF8Dslhl1uJcbpA2kt7zd0oJ9Ogr7
OyGuEGP/AwXJX4RjNk/l+aQHoF7A1jzucgneOr9OFE25D4yhtorC5Tow1Vof
c5PpHhg7UgRJ0F2GW+/uzXi+vwt2jQ996h/rgVChTNcT7A4QTMtute9fARmh
8JT8FScQ9bTR4dQygC2qwidcnx2hqGullozVEOjXtDlO+TsAB7c8fc62Iex1
b7NUXrcHy7o6m7DfRkChLqVyX9sO7IQyutQGjMFqWFHXH7sNFNubAjcGTaDE
9awEpnULFDM+6YRPmsLIdNKfM+a2kM3L/NH95CrErcyX+HjYwH3iYdYWEXOo
bftk/S3FGhpxvFzo1jXYvYqEaNKt4GxMgPL7fAtIrGy7Z81mCSfbdGdqSG6A
MF5UYHT2DRg22Ra553YTFO/SSFRpXodP2MMb8auWYP8tPeNk4xqMBkeZ0qtb
w62au3+elpiDQ4dNDhWDDbiyCp2JCDYD0o7f0zVrNiAfY9htYH0VZJMzGz6N
2kJ/gb89y2VTOIw7SPLovgX+L2X4VS+YwFE4biO35zb8NKryoNc1BkksRnhp
3A7S+EUlj28YgbhIy+e/+/bQoPrq111fQxjXqSk1EXCEXnVf7u73BnD//mz1
hKUTuIdS+p3N0wd8J24Bqw/OQC/4oCCT/wogjbHWeIK7ELg9jbdVeBniv9jo
2NxzgdSPzDOK+rrgkJPunL34r87PQ6ReH1+CphhrYTF4AIerGXeVai/Cw5rL
FXL0rkASnNtsHKENEg+tibdWXKHsElW/+B0tIPszfbA34gbfEhprqcwugIGc
p1tv10OI5T27om6gCbr3tDHWbnf42RD/UezqeZjcNO91G/OA3fWwCHFHDRgq
dqkI2fMEM3st+7xQdYiMHDkg4PcGPyv2NxyfMEivwxfIv+kDAjtmRjsNALRt
58Qhxxf8NWfXglURfH+wci4a/zE4ib5YXG5Tg81oBnUfFz94k5PBbGSvCslD
tv+NLPiD/d/Xge2MKjCsRujchwLha6nlRMjgv76m01VfoguCUsXYiKpMRXi1
x3pYsxIEMvMTK7nBChBPfEqgfyQY+FelGNPunYWwdfeuuq4Q0Gvc0lh2kIcM
oneZrN1PgN+3YH/BRQ4yx/THQ8dCQWOnrugkQBZuMs6bfd57Ch4koTVxKTJw
o9Gi8Dx/GGxdKThkaZWGFwwXLAgsnwPN4cHEqXUp0G2WGCnKeQFivyb1mu5I
gsFd4tgzBOFwIYHrosGuOGhhFVYc9yIA+8Mr0PdGDOTHFv+kLEaCWldX2l0t
UWB+FWJ1HqIhmd8gWotEBCKcPgXfpY8B/ydubxMHheCZWpKBwWoMBIt68uWV
CALj80KPpoFYMBhsESfPEgDQkf8S1/wKGIVUNdQy+KGVbiX3an0cmJ7azs4t
4IPo8TnRlPbXYFpWcVzVxAsaDx+8Ix9/A6F/r/VNTfFAkvWothb+W/ib8aE5
jZYH6tjtI45lE+DgspH9XS1uWG2a0lt8mAgMZ2vEUyi5gJldxWKgOQmOR21r
PyZzgJMYka6fYAqQiLeWnQF26Jv326lNeAfWTBwPedfZQH2Zi772VBr03U5D
O19YQeaarbjerzRQJf87P/iUBcrDDM5SlKSD0aeIPQoHZogrO/2fV9x7sAi2
2Jg3YYKa4fhytqAMMP7NavBNnxE6x+mTn/hkwo9R63AaMwYoDyqd1/XPAuIx
ugU+59PgfsHyDkV0NtyguHvGK4weahI6mZ0+54DC58Cd4CI6MH6SIco49gFU
o3wCWqZoocHT8aSeNRfGGoJe1/PQwqub9tbS9nlAOCVaRtBDAxnTBh2iTfmQ
OCKxKXGPGoJIWwwDZD6BNt7XKhEOKvC/zh5LW/wZ9MKCsqR+UUBA16rQxPtC
GJDUnnqUSw6JFXVvWjyL4NsUXaHxMzIQOS/1+qxpMZCo+LykdCOFGNNLQWWo
BLTvR+XvOZFAus0EDMh9gTCbgCi/e8Twnucir+DZUnA4Xv9DEEAEMQOjQ5rn
y/7pQ2jcdiIhnBsuMOm3LIfb1xwJuhv+cWhvt3pA2FeIquNkpdzAB5kbzbjd
+gqYNjUrFZPEh7KDgLATsir4tZs1UOWGB9J36Gmv2VTDhuzN3LjAE6TkXVrc
11EDitT0fgPix8jn7XynjlYdzKes6N2bP0RsqidBhs71QGL59Hxy6QFy+1l3
0161AWxuZ2ZnRe+j18OtrpNMjfBzLPrHT589RLr5D1yPGuH8UUnHqwe7aDlg
sE1kpQm84tJbpN130L3TKmV0S81w9KmCg+3JNuKzaYlJ3GkBPw7ma7WpW0jB
tZzK8VQb8Hru/nnTuok8P9uwcZ9th4+R3lRcuxuonCosxcPpG7TU0Jn9kttA
E3eryvkKOkA2wAzPwmcdpUWu+f7F+w+OxG9FC7avoRstuiuJdl3Q8G719SjX
GiLqp5ag+PUdRmeY2mgDV1F4PmtHuGwPSLa4nvT3rKCKiqfrv/B6oUmJi5a9
aBltj6nV3f/RC4taD29cTltCtYoq+d+q+4B6SMm4LWURDX15Tuye1w9/3t4j
2/6wgMZt06YOswZAniFhUbvhL0qqYbx3nD8Iw4LmP1Vm5lHiVSTM2DAEKqOr
V/SZ51HRcZzQ3MQwaDELtNKazKG1zCZd4dM/gKT0Dg9D8iwyY4szcbo3Ct2B
kZLlf2ZQAOb0yP3XT7jA/Sk3X2YG9Xwg6NW1HIPi6kGKZ5HTyI7zfQfh1jjM
lDU3z2xPoRXZ0qgxgz9wM1Oh8aHzFPpVlunfJ4sDaXZxtam5SWSx5XB8wj0B
LEvnhLddJ9GFAf0iWvZJ4HxJ/9KTeBJ5/VRPK+WfArV8w26VjAl0ZDl0NV91
GszjRKuEdSeQ9cM7iRU2M0ClTlYqdYRDHtSM65/jZ4FpMc/esAKHUKQSq/P4
HDio51EkBeBQS27+eK/CXwj29JGRMsChytl4l9H0BSh9ctKGxHCIhknX6Rn3
EuASGTIZ6HCotz5bYrZkGQ6361epCXDIgVOGIkJyFTgyB0k//uP6Wukiv2ya
NViXUeDzI/3H6Qlv7X/vr0Hb8IzmRQ4cegBua7831gEkLQfXsX/3pZdFmu9v
wNmdjpnohzjEdingItGpLRhMEaz1+Mfxiso343Nkt8Gc6LOLPOUEkigI9qWz
34EPE5tUnx9OoPxLIcQcubtwU8dLSmZ9Ah0Iakx8PtmDBFwn/v3nk+iKyA/R
GocDuPbyhlSZ2hSiCI7c1pw8BPYwqzOEtNPINFhB1+ThMaTpHRSzkM2gDZyu
3BMqPEzO4rvplOgsStvuFmr9i4c5PHv4JiBgDt37OkJLM4iPFZgwj5XR/EXy
CXx3Cf4jwHZ/0lLfmlxAOYsqX416CDGiF54tRxTLKJYlZ718ggj7ual+Wlp3
FbEyE7FtEZJgiEhyzaprDbW+9S8flifFhlwEfwcmbKCqOYUHSp5k2KGEskhD
/RaqiuP7cNBOjlmqDWrrXNtFP79yHtFJUmKz9S4N/QEHiHOEhNcnmwq7ZVl2
QmNxglbUknzV5GiwUPkF61UqAjB/bDzqMXgKa2UI5CfAJwYNbn9OoTZazJlR
f16njAx4WDX0Aj7TYZ+cLaKMnamhTeHrLcdMeqw2sr2Is4IO7BbmOaOzT2PV
V2szn79nBIlZimcFZQzYrHNHYk8LG0gEpFoHDTJivmZ3rHm/c4NI8/PEIUJm
rEZO6YHFHQFw0nlYHazBgj3Ss052rBED78zL5+1jWTH2fL+t55qyYIbR/rm7
yYZZpChKJfopQZQaTWiEEztWQkiqRViJAdsiE03HOgcmsHVS4KenDTeEPZUl
Y7iwIt3uB+mxBuAr4lMw854bg/+evFRiMYdq/ts/xsN4MN/1xu++izaQHS7z
gfQRL+Z6dPrgsdEdyIg5JTPmw4eFGF9jZLvpATsKX67UhvJjBm62UyvCQXBj
kUK3450Adii726p4PRwk7cMskpoFMY0PH8qXeN6CnwR+Ch5OCPOiN2cYsM6E
LqL3yYZEIlirotfF0cIiMPWYTZYRFsVS4gkJaOLrQJd9WE4LxLD1L+fsJY7/
A24dAU9SSXFs44JCZNSln1Cp6FYjUiOO3bd/vWMg/hfcn4jT5jwRx6i4gnr9
1fbg8aokX9m4KGZ/hZCOqZcUq399XqebVwhTWbE3+UnDiN1YHS/2f8iD5bTz
Up2O5MZ0q2cYIIcJI9GUlV+/I4jpnXsobLJHjvGzXr3x0EcUi/w09Hyk6AAq
l/ifq9wSx0IGnW2a6hfhZqBnzbNmcYwUt57DuzgG1VRXrPl0xLGsuRr3jsJu
+DaTrNB+Wwyrj5me35dtgC1XrVkDQ1FMga3gTKNUCUSLh3YpSYpgdsuRdHqE
2SCvTPDFiEIYG+KINry/kwAJ87T4XxYFsQgvqYHvXlFwY+COf9aIAIZ3dflT
e0wICHl6Mkd182NnuBI8hDa9gVLIHc318mEMZTYbRzoPYK/mP87Pv3mx4mU1
3I8mOxBu42rJ3OXB5M1aRiTLboLqGRGWu+w8WKBiRMtSiQl4mW3SJ+pwY6nv
j+ee3dWDUKbTPY+JubAhhk/lRFcugOCHx7o9YRwYNU7NDzkCNE+V3DXgZMcq
w7eWcC8VYVNM3F6ghQ37WW+KzazKACP3T4GAx6xYPT4dUXSTGBgc2C2+Ps+C
yXnd0W37TwCOtOZf5LIyY69uKho/uc4DntusuiTHjJhq5qxPJQE7EJNs9uyv
MGC8S+plLyaZwFZp8z/c8mns5XvipzzL9CAAQhXs+/SYRRjRRyz/FKiQjvkx
0NFj49k2lJ3fKEAmP+Wyshwd9kcx7EnbFAk0HS2QE1jTYtY//GydGglh/zuN
6ojEKUzjLU2QqiI+VL71D9n+RI198h3JmdE8Rp+qvvG7aVBhAR8mOV8N7aOV
l25/nGYpsM4YyrvJRztoTDH3kCSFHCsJHF59l7yFfjUySfrZkmFzdj2zP5I3
UPCb10XkiqSYmJP2SNjiGjqV/DJpg5UE+y9eBPfIbxU98BHhfkFBjEX02zOh
58vIjqDslwAZEZY3Ps9d7rqI9KjarwnSE2K3r97/KJH9F7G8ekC7KUSAxRnF
+pawzaMK7mObo4v4mICBq+RqyyxKcGDjqHDHw1aJclmmUmfQQNtlbS3TE7ij
kvfqwvtp9GBC7b7/wBE8SjtSe9c2hcL8q0nE7A/hMv9FvxTKKWRUO73lTH4A
SRva7j7Ok2jLknDxds0ehMsEJEvhJpDOfd+Vy0G7EKj02IrZZQJZzj0ktTTZ
AW3ibjZaqgnkKBV26ffZbfBPL44+W41DF2x5ljgEtiA2+UGUsRcOJQsq4CtT
bcILnfYW4fM4ZFP3OmgGfwPilvPHbThxSKkk4Zs98TpU/w527vung07Zj3Pw
mNZgomfkY9Q/nfRNbgRSuVXo5si/1IuPQw0fLcI+li9DQbfA6C4tDkmLGygn
ci3B9hMn9Wf/dHhAen2uPHkBItThJ7MhDuU3Wryek/gLTH8kg22DcCgvyHiE
t28OOt7Vbkn9i5feJ5PWMWwWKBpoM2zxJxBOPyO1Q38Gsr8tXJozmEAopGvi
ttA06MxNPG/JnUBDXI9abGimoELz8lPSU5NIlF7y9TrhJMSWFbt0+00iSd6B
HjPSCXitx8WrtTOJCP++HBtmxsEyaH/JejSFskXl5Vvl/wARn7irNOU0ykwZ
INyrHIfF5Nd8itnTqGswWbiWdwzKuHpFGPRm0KUfeTzFqT/helTIrgTeLPpV
nlBQJT0KWx2y97brZlHmp69+PQMjMJN212U+fA51jd9/uv5iGPo939hEO8wj
OjVtPzmjIRiMnafzM/iLNGV0GT+JDEJ6X/aewcUF9LD422g47QBgHdjkF/1F
tP1qlg+fpB9Gd39K3nJYQj5KG7a65H3QRCn5kCN6GVkdr1cVsfbCyBIFxdeO
FSSdaDf+TKEHTD+cHSYNX0Xb7iV0V2q/Q0y6Md0LtTUk5GHYOCvQBX0CYQTW
O2vIMD6cvfh9J8xJVcrS1qyjoRDTd3FyHVCZ4OwiHLmBuMn+kD4ZbocHafYM
cGcTbZkobwdHtIE80Qr3pskWYqeKM39v0gq/zX/qrehuo9P/yVgcibXAp8D6
sCmDHXRXX2q/hr4ZCIR/8Ufe3kUEDnPASNYE/3H9eFL+bA/demJbo0nZCGtB
V1Skq/ZRjIZqZ8yZBohAeswjJwfIg4Fu4IpSPdiK5EwmXz1C0R8Kbhc21MIE
k9xNt/pjxHmt2p5dpAYGfUj4ZbnwgEK2x7Q2qwouCvJ8aJzDgzKF5XUfhUoY
r3/l8rgGH1Q1XE80Rr9C9+tS58MUArDRt7rEHV0O3z2u3pp4QQg3bUu32M3K
AFn+wht7QgSS1eZt5pKl4KY2mZYeTgwty1eyDxi+gDTrRsTSexIIeyf4SIGi
BHhimY8j20khVUGDQZe6GIRaqJLNjsngw7KvhT9HEaw/TNUUvUABNcxlGJ9K
Idx/Z8G0nUIJxyO+rGItn6C83lqkiJwahAOCHO+IFwBGMq3i9JwGzrzylpv6
kAdJm4FLLKdoIfxStIG3ci4QreGFvv3HoWNLhWbs/7j0e9nc554WOsDv3rIf
is0BreGiYZsSenhxqty/6Fo2qM1lBml/PA10Ep3hzApZoOyN3XXMZ4C/Ld9b
LXgygfZbgZR3DSNkc1mJlLNlAN5jKpzyGBMU2klrevO8B5UklzU3KhbI+xq4
tCCfDsfjzyj2dFmBUKzkpotJGiSLvD5dlMwGGW7F2i3H72DqttZc4MkZYOs4
R23nnAIdTakrVh4coPhz/0PK3ySguHQD78YJJxA9LWd19k+Ek+oqZQ19bris
y5bcyp8Ab/GHbx6I8ECxeODX6l/x8HoxsN6LlheEnvGx3ct6A2qzM21mhHzg
LRC1fuz3GoYrGyoxQn4YDZ+wT7SLg2SugLsLtAIw8MiJIfj6KxiMuhLGKCEI
P4XoGQ4tY6HQoSozwFwIyooz0g3vx8BkUL0UXpwwFGon546/jAb01fy21x8R
gM+p05SOUZAvKrDdisTA/+zHyavfI6AV+GNnPosDjeu0QPClcKDKndoZl5cE
6qbt+yEjL0Bd60dvxXcpOFN46rGh73OgZCQ10amTBqmgyfYtiTCwYn2Y3v9e
BmK+SthErj+F732haa9jZYGpc/aBSlsokGicpTwbJQeNVYs3+POegJPe03rH
BHm4oMac8jIlBKqlJHj+Fp2FOJO2raKUYOh7Or3v9UMBloOVD8ZzgyBVkq1w
llYJtCLH61yaA2FjI8yV4ZoysF8srvPtD4AitoScX8Uq8CImhsdK3h8eTXZ8
U+RSg7XVFxfu5j6Gcif2TeHUc/Ci3w8/Vv4RnJcwGf8iB9CO0+Zv7PWBjoad
7MN7GKysvbYiCfIGgRAf+jh9dbjtWazure4Fh800oipqGnC1m0RUlt4TisaF
s16dPQ/8fb4uluvuUFl4/o2JmiaopVxwUcY9BA9TG0lZwwtg8EY9Fm/cDfxY
VIP/umtBRP1k9f6sK3iK8dcafNCGcbnLskHHDyCrjI9JdfEiWGTR6K9wPwAS
X6Nvoeo68DLz0RudlHtQd79XWOijLrQqa4cL07gAQWqJNzu/3r85lE1g++oO
FCnlvbAvuQLnb413Tok5Q3ugnjeduAFg/rKelUOOUPifWGgtuSE09u483Il1
APLqemXDDUP4WYnHUmxlD4e0N7/cmzeCz0Q8koxqdvA+c0ChddEYki4S5JsJ
3QaJr6oLZMcm//oxs76Y+xZwZ3fO7nJcBe13rpsPhGzBrbtk2UbPDPQzvlya
VrGBM0frwqcjzKGSUavWzsIagEWSZG3sGlCyXDUppLACBUJRqznsOlQYJDvq
e96ESGun44WyG0B5D2U+3b4OhHe+AJm65b8CvYrTf2EBxem/zA3+WAH5iC9p
rvQ16MebejxYZQ2pM5uBMsdm4CcToFYSYwPm+tmtRqNXIelAhvW8my3sbErv
WjSbws+d6iIKy1uwT334PwrOM57rr43j9s4mM3skSVZpnOtrJEp2QrIlMsr8
y8yKSrIJJVlJ2SN7huwtKz97Zc+su/vh9TrnPDrn+lzv95NTnViuA3N68e+T
7lrAkUGeiEe1NuQS772M0LeEPZLb8oadWjD3HPvpb/MQLnd3rn5e1ARKvsg1
9hArMKeKtx6l1QS64nVKiuJHgGcgK+ogpwFO7OM+eBvW8ORf+NbsqoH9yWvl
huuPYXtIpcXZ5w6kPNpv4n5nC7vMJo7MrKowI3NoME1qD62chCKN9bfAnkLy
7sYLB2ARZjpX5K0C4Vle3gmhT4D6Oh8Xr4oy9BvFJWiYPoWrrDmUt3hvQh5d
wbsEcITctHk5T3IlIMymKiI+6wTPAyqqaI4VYba3QJn1jDPMhGHkD04UgNXC
4T87Lhcgduob/UmlAJk935I/nncFI6U3RU0C8rDikMurq+IGpKaO9PUqcsBx
4baorNN/YOgRuHnpPwzu9lPWE2a7g8NIH42WKYANL9+Mw9YziPF7aSo586+v
qhMUlO54Qrv33JGoxzW4ekSW9KDEC85wSRw+5L0KimPilaGSPrDfrOhPMSwL
Pzc5VoxMfYHGQVhc/eNloFaZDtuUeA5ms8Hrz9wuwS+jZ3gENH5AsOuR3ndf
Buwf9zrS7PiBuASzxbc70qB8OcYoe94f7jk6V1mpSkEQ11tRm7kAePv9BjK9
Jwkp0y36kxuBkE+4sEdoLwGZyqkGFZQvYICAI7Qx7CJc7Lei+SgRDE15Opkc
FeLw183GXO5RCHwJeldNNXMB+Ou0dIy/vgS8ibBgZksxUPe+d6qa4DVwHopd
stkVhUoiwghR61CQGVSq5U84B/z3etyDcW8gc/bWiJu6CLxU7Lp7X+YtHIz2
/Y1lOAtLdxpudBOHQ1/UY8OaWSGwktbfy/gdDtUR9CWoWRB6n+53mzdEgF+T
57B5iQB8cdUveV0YCSWh7w0DC/hBSXRguDQ3CpZodajIK/iAKp6G2u97NJBs
hPDqdfHCUM2BfmBnDLC43+D/vcoDg37s6MlmLDScBCSwsPGA2IegJ9sC8aDi
4t7gp8YN9EdDXT+t3oFKxrzrNVYueHjJzbP0ewJo1PR9WMnghCENBZZQjiQw
TdH6eFWZA+Zq6ffYw9+DfbvmLeV9NugQuJgkSJUMv3+T0N0pY4WLP3YevPiV
DFo3jShfvGQB1zeXdkXyPgKBK2ewrPVpwImHnMRGpkBMDot76V1m4BgJMb33
/BMMSOgmGKgzwavzub93n6WCLr57pdddRni6qKvM9DwNxK22FEOtGEC7Su/2
nah0SHomrLITQA+MjpuXTDoyYDZSsOhhAh0wcFP/DmL9DNvnXmkuVNICpUA8
d5ZrFjT7kIaXDtLAr7IJgx+zX4D5UneIjgo1EIBX4ozNV2CTuqj4qpMK7g6Y
uLEQ5cCZdjoLZWtKIHuqK9Sonwsa8RZWb5koYDaPbE/meh702VW22PWSwa3h
eDvC8/kQdXW6ZfcjKUS8ul7162wBpDbS59zzJYGkJ7VJj6UKQV7odMt3O2Io
KDbfd79TBCTMOuL3rYlgpepZSadLMUybHyX6ORIC7pPhs+vfSkCM2nLFI5gA
LvfKyWbslgI3/frrlCx80Ewtx3a0yuBG8+qHu0N4oLLeP8NfWw5WIj1aJ7R4
cKJB7H9FoRIc3E5aeTOPEcvWzqTycBX4eruLksgfoU7nfrEKhRroFLvwOnvl
AD3oMJk4EKiFpgtq4lxf/yIxx8HiF4x1QBQyhu/huY9s7pZMk9PWg30bh+TM
/T3kgSzYZFgbgLx0uO3NrV1E4sIa0ibeCMmb3fPFN3eQSuGqW8S9H3DlvnHn
R61tVMhwKdXoTRPgEQW0fLLZQmmWN26eGmgG2uyOdKawTVTHtfnw5YWf0JJJ
T2FYvYFIBxYyOhJaYZ+VlWf67zqKydmUGWVvh5CuqS1uuXW0omVc+TO3A7Jl
vDzDw9fQdzP6o5HzXbBTwefrMLiKLFy3W5epu8EvfsJH7v0K8rTo8Lh82A3s
hbPFFa5/UPlygOujnR5gE3U5R2+yjO5f7RKWOO4FP7mEaH/9JdT25XuWOmP/
vz7rTNUzW0SLFxpCX8kOwAxTkM6y+wJqU2gqLLIfBJ1QjXsfPswjwmmpjOzC
ISAVdiLB9cyhjjOiF+5TDUMpURuLKMO/Ws7OrMh1BPpIs9UITWbR6Ws1jLVb
o+Dd8phsr3QGxRL2RL15MQ6v1QtSPnHOoK60Pi5ulglgtL/Wnh06jfZxdYEE
exOg/G2Qrp5sGkmyspXTTONA7Cep3qc3U8hcWEV1bXQSkpryMUauKbT6cff2
vakpyHJSUlj8PolYPz+/ibc3DTs3rm8TGU+iBLNytnz2WTgM9avSop5Ejmuc
HtfV50BUXkS3swmHCFl+X/GJnIfM7OdFQa9w6E6cSaLxwgKMdUu/jNbHoc2L
Gb29mktgHx949pwEDv0QYNQfb1+G/744WL5mwqF2QRmnMKMV6EjOtGUkwqHj
lzFm/gRrMBZ7UHPln2e/s5B0kMWtQdPBl/XIf+vde/gl5G3r8KJ/i+nXaRwy
/Gp7IbF+A2YZaIQWLuOQ+WPVtpTmTXgxNWI1+AiHPK5nBg2NbMFFKw+e5Uwc
ChgYvi2xuA3ZwzifzK1/3h2ga3uNZBeK2vI9NDUnEdcR6/sM8T0w9WNWzayZ
RG/rdcbEbPYhii5tplNxCoVcK/kSXfAXGC613VCemEKaDGU5n08dAkt24nvq
mGmkXXL2tYL7EVS9uZ1abT2DLh28DbixewyWp7YLY4xnkb2XZYS6Ih7mr9J4
qddzDplmUVwUOI2P6f3ViEptmkcjDzvMMrbwMcVjC96Um4vo2i8jL5MxAixE
glidgmQZaRkf/MJ1E2IDRawvpKhX0GlnU9GGHiJsUOP2MvWlNdT/1AmXMUGM
DdWxLLxNWEfxSzV+0ock2Gj3/BNX2ERNH3fOnBEkwxi/cCgaiW8jpz92JezG
5JjCMGNugM8u6nwTXLqeQYFhmm5oXv4vUuJzcLTDp8JIBC8Nt8ccocQHsdEP
bU9hrA/suVc68eAUP19R9QI19r6P5MaxEiFU1iQ9krxOi8n1kwRe0CABnJvl
VhYNHcbdKEke8S8Pu2pOt7cs02HzbsNjPzqpgX/x6hBrPz0WRIHVjlvSg11y
0uy5FgbstnZ+TbwsM4yztBLFtTBisvf2H4WJssO3mMOuowEmDONZv8Xcyw1G
i2Q/iTaYsRWSNoZ5DgH4+LUz0ZCdBUuV4hvhHBeBVVMhm0ptVszD7tlZOf2L
oMgZsDOXwIZNh89yNdTIwO5GfnnaFjvm/KnKX1YHQRElVWWzEScmfNyg+jVM
EQr77HdFRs5gp5gbF4dMVaGshSNUV5obe6jD2nuwrQ3JCgJ4bKQ8mInhkMRq
iiGQzr7e0JziwbKNJGvq9yyALhmVP/7Ji/Ws4qtGWzhAaoReTFMFH8ZafSN3
l/w/OHIR3c8s48cyRM9gvsN+4HuaI5GlQQB7EuEq1qH1BtJ4LSWyhgQxRM90
mYssHnwURqrIdoWwUrq+qaCraSAZJNdExXEW653LLjILzIeyDNLdUUwEMy80
kqx6XwNMpOVj9PfOYcOWeqfjszqg9NOh1xomisk8Hkq+QzAGPTpZYnV1olju
T7nU5fUlKPQXkKeyE8V0TbCCywQHICnU9/NthAimh3uuFuNIjk3RvZO5GSGI
sb1pHNTWYsY2JSwzvxRxY8LOnLsCqjzY2J966R4lJswkfcf2gFwICwjX8jxD
QYb1WzF9ce8TwVLzHshxWu+D+v3dEFc/Uaw30mRSTmkR2E0o295WimLfZrQm
19VGgG6oI/6WmCjG1HZQwrfSBmwkT42N0DnMtmJabt2hGuKseslHBESwKzmj
TLRv84DegdwhAu8sNnJf69PMhVSIUh0q3hkRwvI3uv7e+efNLArundZVgljj
vWef4npfwScRCz2NKAFsQ3/jzv0yX+iUu3ho48aPPb8uHRJW6Ayu972MOR7x
YSnlV2h69GxAT7jJGj3kxfCyZeT8pE1hBz84yOYpD/ZgdGPcjOoezCuQHXKE
cGMvyyKmoxPUAU9IiiNUnwub4w6MEhZRAluaoaGsEk4M5/j91E4NQGz8lI/T
OQ6MuNKN0V/6EtSZPljtLGDDWkVenfa5dRGG6QWaC9RZsbCscDrJayJwnnHR
8szxaSxLRlLbB/hhFLvDz17FjEVnf9u638AFHWahl2vfMGG5NEzbpWqscP9M
o5ekAyNmx8qX/tiFEeJDJ1Y/GDFgbFmbdcyNtP+400sRDOkxqTs36nlGKKGI
3s9Sx4oOWxtTtWG3IwUCWRFOUR9aLEHvtdj5VUL4UHf+6WUlGmyh7COfkxA+
uE0ni5OmncI8OkzKGgaOEPMl38EIViqsqvP722GZvyjzxm+77ykU2GvOHaLf
sIueaT5o/meP2O24yPPknVsoairX/d0KKebG9GchtnkDFZYtPtHPIcHGYygj
+FjWkcay56NyX2LM417nwSeDVXRe7Sr3pCkR9ptpooN6dxkJMzyTONAkxGaL
Plz9vr6IBLtC8kCDAJvLFNWPurKAJPNEptbv42MM+p2OMo1zKFh9ws/YGQ9D
92o4ZF/Motrg1tryiyewtMd5GPjfDKp44h0QH34EdXB4Qy1iGs2rfRQWJD2E
R3UqhVydUyidknoQC/8Ls8IXn7uJTKHzZc/9B8X2wVXDwis2eRIVJ5SnzIzv
glZazzNXsUnE99yizyV5Byp4lcfcu3FIPE+CIclxG2xDjASjX+BQc+gav6/O
Fmg7yilvq+GQnTfP3q0bm+CPOwwSF8QhPvyuyMuKG/Cs0kKcjAqH3Pzfzr7U
WAeONUkCv5MJRM+rYPbWeg0Cdi/MNf+r/c4eN1znXIV0v7Fvkv/2K/X72oh6
/4HN9f9Yr/Dj0OgTH+WKrSWIT3MmeHITh/b1FmXbfBahchoSg1xwKMZye+72
mQXgr8G7L/cNh747z7jIdM7BBpD2eK3/O8++xhEXPgsVqufXBeAfF3wkKwu0
mIHXxLYTV2InUWvTlwH+m9Ngskm++GN/Eo0O9rd/vDwFd0dPpucfTiGFJnW/
y5cnIey6mlvT+BSSo2HtEbmBA1rbmJsJptNI7vCTdrPRBLR2OPalrk6jAdY7
zO1kv+GRhtk1qZAZVMZwTNhuMwZSTcIWKWKzaOgI8RpPjkAcxcuvdydm0Sc+
iQwL+2GQLFVorno/hwhOTVq3nfoFJmSGR/o28+iK1tf4yOpBaC40in0HC6iE
7iGtRfAAFLY3OX3kXURySk+deUz74ZJS0zgJ4xIyeNlVcajcB2Qjb2JtGJfR
tQv9k+ehF7ZlKrI8+f8gpYl63gP5HuCUdenYVFxBEm9a6XO1u4EhgehLnOsq
En2fEJj2pAtCbUhSOB+sob/e4xGOEp2wYflw24hsHbHI2Q9nxrcDmdK0blDl
OrINI6NoZWqD4qmpAHqvDdShVXvQlPYTrp6fIg+5uYn4giXUEpRbgF5aT96N
cwtJc3Bl3TlqghvlTR1OJ1uI3SHzZLvuByz7cpJzrGyjN7/onArjGmFN6Oo1
1sUd9EaL/XypVwNYTp7aZd3aRZSi/g9lntbDx8xPeGNU+wibEShwdqyDUS+7
AAHpvyh1nKymwrcWWO25iBrsDpBb4Ck384QaOCfnxxJXcojOGPERR/hXQ1mf
/7NAhmNEd56hLXm2EuINubMD/U7Q0Udduj6jCnhfWe3b7ocH0UWJ/MxLZVBN
8SlnQQ0fBkJmGB68/A582ROmIoIEMCqW6FB4tRT6HDqX+ckJYaG/KOTccTHM
VW8UPtsjhIwHy1ZTXUUgRdd9dmCLCB5o99eTFRRCA9cux+wxMZRprX1u/1QA
Dykvq9qcJgXL0BxR15R8cLCeOBEEMiCf8fhw61sePN+jkFx2JYe6uZ6opB+5
8Djy/EB8NQXgM9fNJvTnwH1pZm8GNiqgStC0eyb1DagOccaaL07Bksf2ZEFm
NhDrXOq9S0YD9ppeheIXv8CwAZUrszot7M2a+k+1fYaWrJt5R/x0oHRjPbz/
WSbUNk25uJDQg17kI1nGKxkQxNyVyrlFD63a15wqydPBiSyLPnmFAYYlvrkc
zqeC1sDd61k7jHDk3ICPP/gJ8CVO0F8qZthhdCQ81ZsCC21xhtoSp2GaxNrc
avQj7L32ueJnxQJ19/3SjTeSoYvJqt7qKysMthXi32VMhpyNKPU5InYgzp5N
0/B/D8fvzdxW7DngxO/4qv9mIojOIb3AZU5QLh06K/5fAvRbjWCl3lyQjrl+
UaF9B5+dm8rvRHJDaNnb2z/L4uDkE+5HniMP5Gjcmm5yjYXT8WYxgka8wKNc
OPJAIQZSZrgN7+jyQRa7DkU2VzTIRpwp/nWfH66XuukuUETB4xNOzyAHAZiq
YiLTIYoEUicfK9oIQQjL+hIrShkBu/3KeMoNQuA3udfYeCYciFpYU8lJzwIW
63rfA72FYtCelrgvArc5Lyjr9L4BcCC0L6o9B6QqxJfdIRRy04Qmoq6eB2Mx
3IBazSv4KtDyp79FDA6abJOqdV5Cx3ytiYGwOCzTxT02og+Bq1/S95O2xeHN
qbeGtr9fwOdvdPYS7RdhjZ2CVKQ8CO4x73+Ky5EAKu/31eOpgfBfWomrSZIk
TJZJHE4nBEDzf+KknLFSEH439sW7D/6wUxlQZZYkDUXEDH1GOX4QMWcq258r
A+/ePTNL/vkcuARTV3h6LkGKQmF2/5ovHPRuJ+zgy0J422krFx5fcDn3PJ5S
7grUi8iPHZZ4AzsmsHTu7VVQDWOt3wEvcN157sK/dg3+RDaFrP7ygJsf7Qt+
mCLwpLo/SBj4DIxcMtwPZwBwegzUjzB3sPi81jxShYGlxI8GXcr/QI6h9fF2
lBxUN1BnU864Att9Y7tOF3l4ft6zpafNBQ6bDln3TBWg2jUjiKjOGdxJDbiO
9RXhPNVI2n69EyiP1me4Gt2A2OeKEfQ9jvA7MMGN9IkSHJS/iKleegqV19wX
9cJuAlf/qTVH2qfARDaQy1SpDJpbTdQf4QmslKrfP9hXgTcZRDVx6/ZwZIIX
0qV0GyiEV3z3Xe3gKO2BgmGqKkSctFY7U9uC7JPTes4MaqDmav/jXIkN+J46
WcGPVgcJEjVWrSfW4LphWrkbpQFazNvcHLKP4ECE3y7WWhMaOCcIGmmtYL05
5NScshZsyp8yS9yxhET5Z5tPJLWBZcKlZHvBApxzTUJqzurA8N8vjIKL5qAo
rXPZQfQu6Mky3IrYMYPjWx+pua/pghzvHGUmtRncuZfwxFX/HgjRLOv0XzSF
yoI7/VyBepAyvtH21tgE6P+zmf1VrQ+u2k9yv4sZw7i3R4c5xX1g/29O3z3v
AVT05KYFWhpCcl/cE0clQ1Du0lhn63kAvC1WXa3LBqB143QDvqYxYK+Ykr59
0gcJ5Wtxb5+aQJshzUdVGz1Ql2BpKFc0hVP4No6LcA/wLOMs/XnN4DMlI2cn
ny7Ipz3etqU0B/H2Wl5lprtweeJnASWeBbTZcuYUMOjAsbXC8208S5BJyQ9z
PKMNVf2CyQ3UDyHf5Kv2opQW0HG4+fCJWAFObF40TFcTYndI5Gu0H4Ef+yrT
kJ8G2O0rKd95bQ2huyl/vR3V4Q3bZnlYnw10ZPScjt+4A2TTwqua522hHn1L
ow9UBR7cd3mzWDugY8svIzp7G0qJjr+mMjjAteY97fdjKlDFksPtp/kETld/
cGBMUQa8QrX1S3xPIYoo/c0Hl5uw40cU4HbyFL4N3Bx8eU8JZGebLFpmHaGo
ufON0M0bQP/i90LJLyd4p7rg0KKgCDfGl+VGhpyhTezin15VBXgxRXyqZ9oF
Onk+J+eaykO8wVBTOLMbECS5XXJwkIPDmR9uBPr/AcUfqnOlIRh4dO/sUH91
B1Hpy3ttxgB4nZoSGQwe8LH1TEJe3XW4Is4j1xfqCaOpk6J/r1yDH2842DI4
vOHmT97yl01XQLVC5/mVWh+Q1aFx0rSSBZznQz7zKl9IW6s8vst6Ge555owp
ZD6HdhoRkdRRGXAT9/4y+94P5HMMrXVypQEk9S4QfPIHHq/R4ohIKYhh62VX
LwqAK2EOhqGBkqAyxpkQORAIjnqzS76BEqBi47qSSvoC5sxPN5VEXIQVktVY
A5Vg0JzmAO9scRDynrD+kBgCzb9HfhmlXgBXEc72xwSvwOuVUYkRiRi4M+kT
Vni8BtHQMp4WL1FI6TkZTSN/A45JiVYvyM9BqXwNuvU1DPqoaJRCM8/CKN9s
+3zBW2jrb4vu1xcGLsbldrmkcOCb9qF25hCCCb+Ao3uRESB8XfT381UBWDWX
1BqOiQTi3q4Gnh5+YFaLuRiSGQXcNkQhL+v5YKFOd0KoJRpo0lhbt+t4wXlk
vzRwPwZ6ibuaMjt5QG+LSdT/Shyo1Z4j3J3nhg0fmQ+EofFQoDZyRYaaGygj
6RSP198BG2tDVKTXGfjmZXLVzSYRrpMnJ8lucYCR0Cta990kIBgf5b7mww6t
nb//CL/7AFfMBxkiOdlg3Mc09dfnZNjXKcm71sECjHc7JLIiPsIo41MRxben
ISDcYe1icAp8VzKVbTZjhlurQMj16hPMmgcnLyoywYcOOjyxxFRQeHGDe1ya
EQq/ReoLVqT9u5eY9AkpBohIN2vpXUr/l2tGd6Tk6OFR1StVZtFMMKNzeyhq
QAdSJxaqfV6fQfqX0SG3Dy2kyLYxnOCyIMHF4/mUEQ3sBAcWJelnQ2f3RefT
/adAKc0Wr3zmK1hIvtguN6aCcxSGGa4vckBTPOdawxEFeH4Ku4qfnAvvoO+Z
5DdyWFmXProVnAf5L6cz6J6QAe/9hS8KXvlQe7JK7iVPCiPfuQkTfQpg/OgS
aQI/CVzDWQdSvS0EE6n7Wu+YiIEBM0x7kFMEJE13AssYiYCF6WfX/fFiOGUv
v454COFlkHXGNGcp3LRr+Oh+hQDuyIzGjtt/B1n3fLN6Y3zos+VpudpTBgvX
F3m93uJBwe33hXgqFdBEz+UiGHeCrm2fb7zUVwmlnhqFi3zHaIjmhJ/QpRo2
TsKsUf0h+ksQOaYUUwNhf48nuF0O0G21KykU3rXgz080knz5L5LAJyNz/cet
VvET8qP/OPb6D3TqknM9aOo5e++u7SKDJ4w3KAMawLQ16MPZ6R1EkH50LBPW
COLsyZq8O9uIU/FodT/jB0QbPa8mYNxGZuqMn0g6myC+gSgUXd9CT4uIvjEQ
t0B9OeSrPt1E7LGlTPO3foJ1kZt0bs4GEs3PDlP/2Aq96eznV3fXkRuX/Bg3
eTs0z/Z6xKisIyYNHkN5/w7Ya7/34WrqGnI5P/FXjawLcuLfTruQriGLu/sZ
LL+6YFJg4WXrzAqySDRbfl7YDZ7zfEnGbX/Q34eqMgwJPRDJVxe2V7uMVFkY
U01Ce+HB/sfI3cYlNEx3pgjvdR+wvP+yXjO4iMhp1oKjYvvBXeL8UuPOAkp0
6rH6kTsAFi8tVp/zLiCRyi+DikOD8I2YtMfZYB5lLbo9bKP+BdmpgRdE/3mT
y/RTcq67w6B5y8Dtyp9Z1D1YcocqewRMilLzrt+cRXp+5GE2jGNgYqts9evL
DLpwi6TlTNg4EAh3alawzSCRMfzjl9QTYPLgPnVC5DTScAzXS/89AS4Izkkz
TyO2zDZ/i3IckFEdNWmkTCHKp53FGimTcMH66nzVpSn0+GfGykHUFKhtXhDR
G5hEsRZBySeR09BRSq+C5z2JzJ9/u3z4YQb8FC4Tpv7z7NXYuF/vvs8Ci6/e
wNV5HJrR1yYNxc1BZVaNXmsWDoVHHgqHsiyAmkZvq5krDtFTLWUbGy+CMzdP
OvdtHKogiyXsKV4C9yHz6xfP4lCGtnV4JdcfoOc9YeqjxaFWPoEtooQVMCwj
eqxHgEO++3FDrYxrkNo8i+M/nkAM+YZJl2fX4F7r3FYJEQ5RR9p4qNatg+yW
f/Rn5n/nCYRKIz5vgND+0uciKRxyPsRzSEzcBKH1Ar5iYxwS2foYRZi4Bbrn
VthL43CIZlLH61HmNrSF+r9an8AhO07BMee6HTgX2jQ6IjuJdkQ/3xhe3AXD
L9Ud4mmTCC/D8j9t3n3Yvsl/55h/Cn142Qtp1n9BgYOkqKJ8CjVPx4sl1R4A
bwEPdsd2GnlGy7MznTuCvBhvrutXZtC0dRjFWvox+P3gu5JzdhbtcpgNU7Pj
YUwaZr65MIeseHSn25bxsMOM3iI9v3kUUzJtKNOCjz2axLt4an8B5U8tXhzI
JcDGPE9Z92QvIUH67PsolRA7a5WyUpD5B529XHODLJUI83uqFqH1dxUNXcuX
7M8lxiJCzajV9NeR9e3cWLVWEmxE9qRbf3MDyXwY9BTcIsWqBwhcooe2kHlH
ysxpUXJMuu1L0g/WXTTId9p1zokC8y5Wf2ncto9q1FrrzNsosdC0AMNlyiNE
rTc5ailzCpNfWZ+n8caDnEs/h7rzqbEQg1ab7hkCEL3aLKbESYtprkSs+LQS
Q5Qn05PZRVqM+vbYs2ATcugUucz3o44OW6maXLIYOgU7NXOTVmn02GB7EoFK
BR18ieqp1olkwC64LgzsqzPBwsXcFxyhjNgX4wHXwnlWaOa+x6IbyYS9c52T
mcZxQZDby7QP6czYYNnjGe1xPnjVmUXyoek0xveVSHOR5SyUkVDt4u+yYEFr
kcKmDOLQwxih4i3Nht1nuhUZOCsF91efEfT4s2O1MPPuVPxVKJMuVqif5MBy
z5BZEAfKQzIHtsSlfQZLf04RHq2sAu1Cn9Mr+rkw4tT/NqQiNEG6vvLV9yJu
7EPs1+WVST1466UoEPaSBzv+WuaVvG8KvxRvMf+05sU8VoLPe/vZAENrWEWb
Nh9GvLXXef2vEzwY6/48o8yPUbEZPghs94Zt9pzoKyoCGKlW20KrZjA8pV7m
TdYRxPaq9MmwnEio8mkPuW0jhHkY/WLG6ScD+yOTy5eChTH6the787NfIJo1
LWjh81msmf3Rk3y3Uthm8ozZaRTBwhMbR2lO/QB1demhjeZzWIqYiVOsZR+U
v5sOjXklinGfMOhLqUyB9ulXQl9qRTGh8k6OOLcNKKp6dpNz9hy2Id708FY4
PhZ/r/9gQ+ksdnZDQi2Tghb7Qejlfz+AH9v7PTXQ+4MNO5/7gi5jlAMLXH1r
7R7EhwmbCWhxpNNh4gS/ZJ8kCmMKOd/JZkIJMbEnz3il4s5hZh6Euk2ftiDA
T31UsFAUs4nLpmh4OQMK12Zzv34UxZJ6fru0FQ+AUcZAo87aOWwrKUtHz7kZ
5KwqWTu2RLDEOkee1wTl4GOgeE9p5CwWFx9vx5T5DUglTiq/fRfGivp5Rupx
H6EuZBav8J0Q9gf/QFrAPhpGhnqM7f0FsZ/rQ622hi9B+0KknYSrAPb+8703
cx984Y+4dc2GEz/2Yvw/QvNnLqB9Q2J9xZMP+1YgIPXUwhaqah3eUIbzYpuB
HF6+YubwiIxZ4CSHB9Nvbd46djWAv8F/K6x/cWPXGzLocz5owZnYNXUcFTfW
22F3p6z4FoDVzsFa5BmMqShYQsxPARb5s40CuDkx/j9MBKRH18A5Zo45o4od
u2TJTd02LQ2V+O9JXtqxYS0e+KH1reJgp6iUYynKitkSn4o5LywCFe/t0p/9
PY1pxqRfjs3kB+Ep2QK6QWbM9NMYR3EINxwRSpR71DJhxSqGB0o9bCBGTh1O
950R28f/73wSETMINW2USlYyYDMWice+KvSgdMvg9K12eqy+LKvOq4Qanvof
5NbP02EE2+c1nOkpgNu3Q4OZhg7jN1OmKjAgAXs+C5UqoMVu6nwKnOQihOIJ
rfNDvdRYP4ssR1kIHpje1okUQ6ewBGG11oszh4jubUyRUSUlZt1TK7bmuY+o
WoK1dTUosIYTRmX/3B3UaVt9lW6HDNtNcnPGGW+h8jnP6LivpBjjS5vrHo4b
iJ5BR5LAlQRb2tvLude/hti3lfCfqBFj+QftZVc3V9DnKHZxGhkiTO5ut7xu
xjKiYWKfOC1KiK3sl5u8KVxErWfMXNouEGDeHwNMRKkW0IXEn1TuGD5G/bBg
wChlDrl/tThyfICHkX2CC+/sZlHEmyc14lQngJdWJnTm4QxifTRy44PTEVBc
YKaJC5xGS3VUCtRrB3Azv8Cs/8cUSmNvum7t+xc+XaPljRaYQq2VDQFZfPug
4+i0K/9+Er14TPJpaGgXevG/c/49P4kYdV7Fkn3YAWEP5edyPTg0+zaoRt9l
G5SDL7swh+CQue5puz2DLVihZr37QwOHflc2srKrb8J1+9nxWSEc8gp55kmg
uQFGOR/S1U/hUKRO1fa+8Tq0hP5eJsLDoSvvbbd0PNYgaJXY5vrJBAqkJCWZ
VFyFk8dNUpoUOFR7eKLx8PMfeLAl/ayMG4cKZSy16fiWgWNftIVWHodKPxKr
t+cuQhXeg3R8exzaP/5NEa65AAPJ+djdVBx62ufVaE40D8aWxFu4aRwKq+Ck
0m2ehVrHAb3oC5PIZ9ThenDiDGhB8b1HAZNokS3pD6/vNBRLTVFaTU2iA2LB
LkPHf/mT0OSVoTqFOjiI+J0dJ8F/6rqwRs0UqjyH96XABwf72v/lvkXTqLbZ
/Jxd/ATg/Coho2kaGc/K/vrr9RueB/ydGr4/gwQzSuLCfo8BgRvBms/BDCp7
J/PaUXcUDCeqvm2mzyKFm/c5XuKGwdgnGPfBaA45VZQ+bPf5Bc/MTmfv8s6j
5/WZd0F8CKhvnT3/bGsefUiok19fHwBxX92k3N4F9K22p+Kkvh+0xj9WX6hd
RO2Ty2GRaX2wxJTlEFu5hFzcpcUmonuh8tZeTHTLMkpePYoXiOoBgcd4l8Zn
/qBdNdGdzA/d0FYfUSfLsIpomD3mq0q6gNR19fbVs2uIN5/cwLekEzpqso5l
e9bQ2eIcf27mDhhYd0a0gevIJoxmRuZlGwSc/msvK7+BLqnGD6TSt8Jwi8aN
6xSb6I3zPVnzby1gHLNQmD62ifgZIkKeGDZD0k05cqrKLbTjls8/xt4EV/jV
Kak+b6PltS3HxqVGoOkND7udsoPes5MV32ltgP4vS6+9P+8iLUqnpi/f62Fy
/3urYfUe+m133p+1uA52pV67f53eR1NBrLa/q2uhmGBll4r4AOFbzJC9mKmB
F/j86zekDtFXcy+HL0w1sLZVjs/idIQeDJ7wJH6ogvPthi036o6RrNPboGnB
Sph+RvhDnQ4PnrNEZSjVlIPycqTA8594YFPHbTBrUwb5tfYRQqH4wNqx77wk
8B384w4GK/UJQAzVvAlbKwEUXGRcJ04IFI059XQ/i4FniE/gOz0R3OrLVvye
VwRKEtMkF/GIgZmYS3YkvRD+LD2fLdsnBrcgR67OzAL4HNX/fuOEBOJ+dIvv
FefDQJ2+qicDGXTi67vXduXBq2kH3RMpcjDQsaaO386F+oQzdyQtKeCRs1D+
Pn8uaNqcNPWlUoLT3jeZ+opvoE2y+SdtiwpSRhfy0uS/gpbimKXnXWqYzzTu
Lhr+Avz8+CwSzTRgd5TRSh+QBazSbk596bSwWOdzMHX9M7w/Q2Nu60QHX2Ur
l81JM0FjqarC6BY9AN6ro87f6dD74NSemCgD6CoZbtv9SINfpR69tqyMkJAN
zpFlqVB3i7b+Mz0ToAah49jyT6BGejzqzcIMr6kzokeaU+DCo4XMiHOn4Wqm
JGfrvznJ2sKEhaqywFKP0Y8+4o+QWlOzxu3JChZ7vmcdpJJhzMQ/kLqcDXbH
GbVlht8D18R1LRYKDgjKUlQuMkqCReM8CmobTnBZc7zqsJ0AKdJNlR0jZ+CL
2qJZcNI7eMR2KYpTnBtqqooTBHXjAb69SeI95AZv0llVnzNxIMji7eTWwwPt
X0cM+rZjAFu9z/a+gBf4khaR9Ug0lOXpufAl/+M8+zyCtx1RcPVyRmxiHD9c
O+ESSO2IhBxEsfwhSQAeNsZ9JxiJgEixa67dOYKgavpOi3kzHNxvrR+MdQrB
to/VtgZzOBBfFkxyOhaG8FNMowKKb4Eiwfa8xjUREGEN+i209wYoGWUfXHt5
DhoCGdbkPEKhxFNGimBBFJZeEVzJoH0NxOnvBb30xeAn1c2H/5X844ih3Bsx
oxeg7Mvlw0n7EDCufUaQ+F0cKn+87GeSCYbi3gBy8bCL4MFYXqZO9QKyxs6F
vHGQgLN1mnYja4FgEqAcDvclYWTKsZhoKgB03mhU92tJQesLSVv+SX9IjX4u
tqIrDW82Nl3e//GDd2LyPYKPZMBrnDdikMgPXPX/8Jx9cQkoMt5xg9BzuLIx
7vWl8DL0LFzKVtP5xzXdUSqW67LwjVt2A++0D5Szr1qyoatwn+2k41ucF9jf
xPd9n3ANyHUm5apFPUF1MerVDwoEOREXVm/3PAPJPN8N59cAdNsX9DyD3SFd
5GJ251sMbgizjAar/QdcrP1Bq25ysPFM6+dNSjfINfae/P5YHizu2sx3D7kA
2eK+47StArgF0D1TLXaGu9YG/YKeikDmvUn2O8UJUg1Zl2++uwFkNemVtUmO
QBPElsLerASnuwmOL6c/heqmsYL/SJShTze84lX5E5iwcl68pasCNY5Pp3nL
HKDs5cfJ4NJbcOz4vUyT0R7wBc90iompQoJK6cyjAFvINray0C69AyNKrLdu
kz8G35lxJSY9dUjyVbSe+mgNFEsB9OovNKA6lkhD8M4jePPIcvudvSYE/J1L
5aGwAosXfzeizLSAb1SxZ3bQEs6vJz78Y64NQe6lnlFFFuBMGnbfwkkHJlbk
8++nmEPu8ORWefhd+KU9WeCQZAbc3IWejdW6QKndHUufbgpdq9fZTY/vAflo
O3FkuQlM8TF+fKqmDzHsZuH+Zcag8OqT6mquAawUWMUcMRrBf39w7L8FDSH2
v15T80BDuJPPxHo77wEEswyjlxT3YQ07daKnaQyCBMPp5p/0weRTHgdHgAk0
/015uqCmBwLGlefDH5vCMMuJzBmqe7BgebOy1NgM8krU73EM3wXJQkUmBVNz
uElKqEJQqgPVN/wvLzyxAHXDbov9VG2wpdZXcAuzBHoDkgWU/I9rtxKryisf
Qkh041X6z5rQnO+h/ebQCrAfolh5lQa40izsj6taw5ZYz6hwrTrIXxT6+DHH
BsRjnzzYZlcD267w424BWwgw/xaY/FoVVqlJlEJy7eBqpRaOhv42fBZkjZvT
cIDoyQSlC19UINWFM5884AlIVTFurOkqwy1yo7Ksx09hxW3ayJzxJuTeyziF
b+IIX8XeVyVO3oDEzWL576ZOcPIjbL64RhGIL2yKRz51Bj3c5vTkVwXI+D3V
fO+tC0RmWVQafJYHeanwhu4qV2j9r87ZIF8O6D5750wcuQFfS6aVeDMG82Z/
i56quUPJj+4u6z6AQakoI6e8Z6BY8jnP7wIC1rvScwtCnvBL69PVZ8nXII5E
kvJPvhdQyj8WkxK8CmwU1r3R2j5gMJeRHF0tC5u3Lr0KCfQF1dgUlbjHlyHi
I7/MPbvnsL8XdHjr7CUIflKT8cvUD7bWhdoqd6WBZYKJvdbcH/o0ZsxoBqRg
fMres9MpAH4ZXB11rJcE9f4Fh+aIQDhLuLPAUS0BGU6ll91rg+C/gBkO1eaL
kEdE8a0RLxik7qVzaI2Lw3Bn/0iUZgiI9RaX++GJw3fJPJGBwpdwi6bk1hND
MZgMNGqLOvca6GRGnpS3iwLrhdBMXHEoKAzIGtVrn4NB+9uhfffCgE07Xs72
z1kYPOjmL/R/C6EGNi51H4Qh6bn5DrtVOFT/bvcXMBeCPn3saYVuBESLSMXk
yAiCIgjGyGlHwutQBeoIVgFwH/rgafwgCow/iF8kpeT/x4f+z1pdouHCeb+B
WxR8IIF3NlE1KQYqkbhdFjMvuHx7o13SFwtydxpsvC/wAMvv0ukJjngge665
zaXDDZc2ZlRzXP/NHWEeogVSLnj1dP8rx1QCWJsZ5Y94coJtR6sLv3kSxCyP
dB4Sc0CKpIpz1+57YBh3OcFS2KBM44won2YyPBv5zFuswQpTLgW+gxc/ggK3
pIktLQu8HmumTD6TAkXNWTteE8zgLXJNV4jlEzz98DqZrYYJGj3TI9m4UiE8
lJPE5RsjQI7HXQmpNHhUcN2xLYsBHgYZG0rppcNC6dPTdoX0IKao/mXhVQbU
L7VxpP+kg3mu95PnuzKBKa8su3+ZFg6bzm5MC2TBUaREqzEbLay+8395EPoF
yqd4Mw3TqOH4zyiPM/lXWDZ89MVB5BSQvlt9dDf+G7w1/c2zWEcJD09HRBpy
5cJuc8x0px0F5D7kSbc8yoVphyZhKRFy+NwyV2s0lweJVQ+/iO2SgqNcu/rq
WD6EvSD1XuolAVddPbwGXAGUi5OdSaomhmqG3w/CNwvBN5iJ2ec7EfTPlTSx
MxbDkATF6mgNIdQGDYeIKJbA2Llbw0T9BMAp4lESFVAKDG6p57S28eGaz7O8
6wPfgVEyXPYsDz5Y+T2mpL5SDjampGvr9/Agff5mH1FeBXhT/8hQkDhBHD+O
K4WuVYHvlO6QefMREr1zQ/3laDUw0VHrKD49RM69X02+tNTAnWH1jb1zB6iK
R7R7LLcWzshIEsTv7qOCv7nxvql1wKH63EOtdw+F/FilwtLqYXw4pe1O1S6a
y84cai9ogP8oxQq7S3YQmZ7u4WJXI4hPLlsJVG+jzkt9bx4c/YCq4du4uN4t
tISpER7INgOf8ox5yNYm2uGIOZP8ogXWTvH81efZRBq0nLWX535CrKjpvf/0
NxCTiFRwuX4bqDTVC+snriMqXpUS0Yl2OMdsdPjfwhq6dnto+4NHJ6CE7BhD
bA09D6u5/i6mCx7euOnJIbeKEr2GSWg8uuF9fIu/PMMKyrgQzd3+uAfuHZ/5
pr+zjLaGU377WPfC3xfChSkLS2iuhcV70LkPRoItf1ksLyL1mJ9H4W/6Aa4+
v7F3tICWj84UOJUMAJ7LjGoF5wIKOuxPU1sbhEBcSeCZ2/Oo688E+7HsL+BP
lngdHTiHLn/y/WUdPQxTHobSn9pmUav7190gwlFYFPDO7eOaRYN/mfMqbMaA
ITuxQDZkBuXHHZBsTI3D7ZPd8KDDacR9dk+a+PIELL5PXHVyn0aOYF18RIqD
Ch4u7qaTKWTgw+JpMomDLiHPFpWwKfTQDD+zoGkSXtFYO3cJTaEwLvde/9Ip
MNgLEbrcMokubvmRmhdNw925IRJLp0n0yu7u9J+qGWis0udSEZxEq78uBjT0
z4JZTwHzCA6HCIqP4iL/zsHu7cZC3nQcUhN73EEltgChToGZYk7/vLu84O3y
k0XoxGVqcqrg0E3dJfn9+iX4YkAlwiGMQ6ZGBLx4wn9gYWI815wWh0aseafH
klaAhOZoUokAh75VPia4wrAGUkHfzHiOJ9AcTijbALcGsZtut58S4RDxryW5
ju/rECtYotbIhEM6eAlsrEkbcCvN3bJd4p9n5/0RaXq1CRpZdeUmhjgU3RFL
aB20BfXV+NJPI3GImW5fOD50GzATN88Lv3Aovsbz7e7HHWghyKrcFJtEl+zo
b4o17MJIVnD4w5hJ5OzR1fJnaw8Gm0OWHtNNIfqRIc91qb+QdJrf+V7KFKrh
yztzGHAAnqk/1fpvT6NSulyR0ZlDEBCXPn2BbgZF1V4LfqR3DL8IXv2U3plB
YquuJQFjJ7BF+PZ14sm/+/8svU5djoeNnu9/tigxjxh1J3Rjw/GxpPL9ovWY
BbRR8uHxuCMBJvhV/cqQ5BKyEnwD9saEWNtSfHA+wx/0MVBXfvAeEfbnuYJu
vfwqsqcfeJVnSIw5WPE6cM+voYnWbwGJ9iTYfQ+biiCrDURrdFgCb0ixw/y4
m3fPbSHL+1MMtyvIsG/nUr64y++guAtbgm775Bj2vetR/D9PZWCaYAlSosQe
zYky4pUfoOZl57sKqVQYB91Lo1vaJ0hf8fNEAAM1xjs0cfBsCB+02+eLRaJp
MNc/nPlT/kTQ9jEsnjaaFtvQqXaj7yQFfCamrBxrOmybP6cXN0cJKj8ue24p
02N37d6xGwfRwhWKb6ZWkgwYqY2Gl0ALA5wNaX8ae5YRazWwWn+1cxqS7gaN
sokyYXhJVt7jxpzQKMHPGXaVGSM4esGZdpUXJHs/W8brncY+SRBbr68KQoxN
yOCsPwuWU37maab8efBgUqsVrWLFdCIDX1xakwCO90ktwmTsWNZ/g+ziM5eh
XXd9KtmMAyvCAgYpP2IQPb7Oat7BicHutZ934pQgk0C9S1GVCztU+sjvi6nD
003utLf23Jj2Zr0IRqwLrvJSJksYD9bCSk72KM0YXnuSeyZz8mJrH8euaclY
QT1eXNJpYj6sN5tovNLyKWj/Xp3I3OXDDDyqfo9kP4PB5Vaz55QC2MIr8a+y
TYEgupTGFikqiFWeV9juVouA9zfRDImBEHbepFM7ueIDNHTNedqHC2NRDZ1H
1y2zoUSUn+6w7SzGL/Tz7B9UBp9OGwimnohgnVVDRhHU/3KVycn5J5UopmNV
R+yZMQSPGz2K1UtEsRO5Ovec/nmgtFw3JAkUxR5ZvKa9Kb0PX2KVdQ8/i2Ae
ryboP22SYXcMrOhCDAWx2hEaZoMWZsz2s9iNzL9cmOuw7EoCAS8WzdtvT6nI
gJluvML7sSSE/SckGfzCiQgL4RzXp3A6h5UXILnUR1sw372vMFkkilkc2eQJ
sE3DqZ/LmXpRolgp6UklOUMfeFxj/LxYdw6j7L4YTRPVADC9MEKdLoI10hnu
8tYXAW1PJsFX+7MY9L/ISP+RAcTXwrftJYWxewk0bBF97+CHbQjTu2NBTDzw
eZ81CoP//B/J5fcJYPO9e+U/q/3gaUpM68sSfoyfTtJT4Kwb9Ix9FsjL4MO+
71ZOsTyyg4W2K4fMabyYdY7eOd+z5nBJ4nqpeQ4Pds2p9vBlvD7UcobacPzg
xka9Zv4bea4JIxczAxy6uTCZxKu1IZ7KcM9n4qHG+TNYktb5pFgvOQi463+3
7j0H9m2rosPLWxb6XofaFvCzY5914OR4VQLMvvFks/97l3y7Uub1aaKAWqbO
HVuzYPv+1WG7FILQxqcXYC10GpPZT4Vz13lgt9G+w22bCcu30tFkMmMHDbLr
D9V6GTH1kVnj93TM8CZq/BVnDQM2J10r10RGD8dyrdtc5fSYnvhUpdPYKeBe
UTZ5V0+HkftyBh6Rk8PeeCvjyBAtBrfpDvkQMQwVqs04btFgG8xUe4WyBID7
Lk14To0aW4mrR9kJJ6j1IRlZTiUV9uTHr7nenAOkb1FF+VuOEuNp2Cu/4rmH
Mgvm9z7/Isdk8px9tn5to5lelnaqADKMmkF09dGXTVRb0b9Jh5Fi64R8pW2/
1tGdaxoPu6hIMLMIUVtP7TV0ezb/3OMFImxbtI7JhGkF0Tw/zqXtJ8Te6uQZ
s/+by5YFhxJ/Owiw/oCfpFu0i4gklVD88QA+pvJzMETEZx7VYD243EU8LOyx
U1me8Byi9+Wv4KHEw44oPodFE80itVavbFn7Y/BZ7qL5QDmDaP5o0zGOHgJX
lnrfz0vTqEFzwDfX6ADyR/R15QOmkNW7apmjrX3IWAo7Pl6eRJQCZSQ7SXvQ
x0Q9m24/iUTEN79+0tsFukWhLW+SSWTU/d8QB/8O8HDVEl3Kx6FI3jE+/5Mt
ePwQNzjrgEMvG79yES1ugvuT/Lb96zhEm3739dDkBiSXexP85cChfo2eU877
6/DKe/S1FBkO4eLcD7XZ16Fw+v3u3L+5+LqbfHj55hrQJVC7OOPh0IPv1xmd
j1YgdxNfXo8Khy53aRV6eP8BYZ2mNUFeHFLa8Gg6oVsGCoOMvldy//93i0yK
o2QRCPiJKG7Y4FAs4ZL7ru0CNA5UHXIn4lBwmbBbncQ8CLzyXzkewCFVWrbM
UtI5+NOnS/GTbRLVmHrucS7NAHdwbJSn1SQqrP7ah41Og7Jb0zpr5ST6L/TY
23V4CqzLHkoXsE+hTC8ylzMzkzDGVFRr4j+FNOIGG5IOcEDn09lxc2sKiT8z
UjHnxAFZnMn7SPtpxMml+9+kygTYXQ8s9NiYRp5lhocX8H+D12Tl4jXfGfRJ
5tMymd8YOLz9ssXFMovYXfnWTJlGQevmZpJj2Swat+3BdMqGgWNfAb2xmkN8
tMoPyJ78Au8mJdpurnlUbNBN8FV6CAYZXnqmTc2jaH0JHR+KQVAVMKTxLFhA
oR7eOvV/+sHXVzmgLWwRNeqM5zSM90HR6Zp7HO5LSLrXJWB0tBeext9q23RY
Rl62C24P53qgyu0ywYLzH+TGdmO75agb3A0v/HkXvIKik1IvuXB1QzmllvK3
L6sob96rePh2F9B5ugfYOqyh0N9sb9eIOuHBxH9BNnTr6DgjQDoxsB0CL1Oz
SFesI/+ruRbNLG0QHft+W+bJBpJyUZmKqPwJ9B/eq4yd30SN1ziozzi1wGvh
u8MftjdR3HS00vvLzVCh29K137SF4slDaO+caoLhJ/Pidmnb6M1ie77dWiPc
uTvGFfRmB5VLqRhr4BpgjOX0mV7/XXSocJpK+Xc9rIsUX1gN3EO/Ddzxixbq
YPQOq71H9D4ii8i4fXRSC5PmfupcBX/R24eGya95akF8zv7b298HaPmiKtvw
nRqI7W4yCmY/Ql5LFcuVZNXA8pkWa7c6Rv3kSaZXQyqhp6crXrzxBBHUPmm8
zlEBxnzHmYrv8KChgMF9tKYM3icM9Zncx4dH9tu1cq7foTZ618hCkABE6LV5
E6+WwnE1drPjgAA22R1EBWlLIEnuFU5glBDcHqr7CG4WQVjpTstWExE85f08
PjtVCDdEmHS6/3lX4L3cyzX/POycNzrSbSABwin2OdrlfBgtYvcTGCCFOnyD
nKsE+UDB1v50eZsMzr2ntcrjy4MiiR4qY34KcJ7/XTCjngsW+yyDl8woYZVP
MPQTVQ4Ey79tls+lgnthT99uvf4KBEQ9kWo01CCtSjvxkysbnPHCHkj70kA1
d1YVNGRBTXBE+frzf15qF8Xu7f4ZNLo+vX+hQgcsFg9aqhUz4ee8mCA1Oz2s
Rio+en8mA7hGFv8S79JDVNS6lC1JOoxP0zWsjTGA0RRFo+dBKthPVFwz6GIE
Sds/HOJHn+DulbnWgQ4mYCSHoFWKT0C1mid0+IsZpJSVPwvwp8BPS5lW243T
IM9yfVFZ+SMsr71t6WVhhQukqz4Drsn/o+isg7puuihOlyCdonQ3SEjs/dLS
JRLyIC2C0ikYhKKEokiHhITSSktIKigloQKiP7qkQ5B4ff+8sztzZ3bnnnM+
Mzuz8IdvgWfSgA381/fN0mxfQLiwdsXFZ2egtkDk6MZUJrR9iY37NscOKu5M
C6pBGZAx6jtirn8OWqk94i9wpMNErdfX9HYO6Pv4kOzhaCroBy0OdBVwgvpN
Im7XzBRYdl3FHvlzgZTgw3gW32SQvD2T89yQG0zvyXcuXk6CDz1ZujekeSBN
/bS61MVEWGxry0zk4oVDJwoHba3nMHXfOz+PnQ+kGqcYnhsngOF3/X1xXn5I
V7uZGenyDA44dH4OKgiA6lOPk6iop/Bk161I9oogmLKvC7O9jQf/O2EJp2KF
4Om+YVrw4BPQd1RWJvksDCn2ajqzRo+BotEmcOGMKDxrGBh8+isWquY9Ge+F
ikHRs1OF+eExMNTTSpmxKg77wxRxF2Wj4bSS6IXHFyThDbXc7Ju9hyB8MZAh
iFgKkukntIW6o8CGijQlYlwKWnwlZDaKHsCW1IUUqUZpCMo9JP8v6T4c7/q+
pCyS+aeDj7U+xUeCz3j2wYsX54FkjoUvPTkCSKQNGu/myYJVn0qR7Otw6NIy
iNGvkgPZGzVh1B/DQMkm73TRF3lAftGSWev3YPPK5TzlEwW4vNJ/05bnHvzo
ZfqvQ1ERvpp//VPecgfEKiv3D+4rQUAnl4iA3m3wvCh/7yVOGSTGDHTQQghc
NGAwSDFEoLJkncCXdAs0qNaDKnoBbimvFlFfCgbb9t+28+UYnEw+d5XjCgI2
BZ3Tu+GqQOeXKTR3GACDy22H4XZq8NpUl9djzh80Vt+p0eiog3ZPgy/3Dz8w
G8NeialowDTXcey1X76gO2bg5KGiCZPX0i/mr/mAvUVsqquuFhwZt1doUfhA
TPcv7jYnbWCpslzvkPCGIFJiUv64i3ApnIMu86oXvA9416naoQOsboXGGdKe
8E6WPWiYQg8sPJ5e6aq7CfuxS59f2utDz3vP4VHjG2DVfBwY0m0Av/OFPq3u
u4HhBH7weXUj0C34u6b29jrM+onojF8zhs+LZyRoQ11BaYCBcUfeBARyjv6k
mF2D1eyvYi50piAf2/hU6IIL5BK3ParaMwWdKLtvZ0Sd4UQ4fMhlwQwy11Sz
ukWcYF3V4vnp2UvguGMonSrvCPmCy+raq+YgNRGScmDoAF+k8LlO2C2Ass9Y
G++qPfwSzCuntbGEvT9GjaYhdhBHQRnlXGIFwWQ7+IVaV0HxVOXj6dNXYI9+
KPBTyX8gOhab8CjSBiIDCo43BWygeKSCwum0LXiIaelT1VrDHFOIdETpVXjy
soLytJUVMLKYqD6qtIN8Fc7L+FSWIFl7kZEvxR4Ok7h3DgcvQ9DEndzzMQ7w
I9iciL3QHG7//qrgGuMI2k+aHJ/EXILRy2zIP9UJftXSPIy7YwaqfdGGzDXO
UEv9ttvsrinQJkS4n51ygQQ2vnqpOBN4EfnwsvU5V6CUvrAUXGgMi4Klvq/d
r8P97fNRVOlGMNiBHuB/cgOvC/ktkUcG4FeJy7iscgOIEja9pfz1oea6mOar
9psgWCJLsounBxddFGmYr3oCiYX8yJcXOkCWun3a4aEXrDxGt3uNLwJzcxXD
7xveYL093LlOpw3B1rntX/7zAZXXDXT2s5qwvpPW23LFF3R453N0P2iAdui1
cIdrflBtrrk5XqsO+eXB3iFh/pD0JTDUokYNHkhN542+DoA0ESYGijZVcLL8
j1x1JhA+ukn7qI5h0PqMBVLFg6G2Ogd7ewhQ/kbud3/0LUhhfRDvfwVBGQNB
8+h+CJhgnKbp/cpAzrKwXhZ6G3i/c3WSWSrB6Ae+LF+GuyCh7j31busC/HTY
5OWyvweK2kr3q3IUoLlVwTZXPQyYIjJTjuzkIfzpJTtH6XB4PshM+U5SDm7y
ke5SikeA0tdOWQYaWXh431ZUXz4SNqluicsdy8D4ZfwHU4b34eZ0tr3TgTTY
y3xJTvZ/AHorq8/mCaXB+5ZhomxJFOSjPclTbFJgdd3kbObWQ6jR2PsgqiwJ
998fMjfoR8M3+slahyFxCHl+/ntwXQx89FigOFYXg8+RnzV/ycdBv7pvGV23
CJQb3hsn/PwYuJRnxNPsheGtwiOaY8V4cHX1ZH5CKQSZWTVvbp15CjN7VVbH
HwVgep392xmyZ7B/NVyNPIkfvFzehj/AT4AQI6T1xYcP1vFvXHIlew4ERaMQ
ZcsL/53qnQw7mwirKCjVzZIH2PXxpZJUk2ANe/Lz/VVumKJPKvXwTwY76sD5
YV8uKD+f4L9SnwJZzT5pRM85IaZGU2yXOg0MTu/NOtzlgJ2Z4eSAoHQIXf2+
d3flLNzKp3niu50BVDmDfToe7PDGW6r9KDIL7IwHjasIz0Aw46uzzxmzgfVu
FnFNMSsUEPbw025nQ4UQhbutMwvI8QxQJU/mQO/t3eIeCWYgC1Ee/zCSCxM3
O/RZKZjAj7U8zGwsD1w38yZvbTFAo8vQkzNjL6Ff39fZ55AeDoe+67TO5YNm
yuUGdVp60Npf4PuNVwj4uoEHV6XogCi6msRQqAicPDF3FRtaCOVZZE22ewVL
j641mT+lgeiC4IbYwtdAJs74xSabGirb+tL2jouhYOLMepbkadDz6xksulYK
wrXWNTFfKMG2/xxd5FQZ0N/pmzG6fwp0LVt25BUqgMZ2qoftIgV8smyKlySv
BGnRgiUBNnIwEL+vVz5TCQzFmw7vD0iBJ6plUeHTG+BMdBeWWCQBiq/RXTZN
byE7Z6D48wwxzA0c8795VwWbUkWsBytEoPXff+FfuqohnPsa0Rl8IjjA9m87
/6yBPnzly9mchFAtt/GFhaQO3MrJV050CUAyvqotS6keKufy9d/exQe3W9Xp
Dfca4OV98Z/QjAfRrdHvZEbfwZ4N7W0xEjwINnJQGVNugv0HJXZ0Zceo2bXl
Tnx1M9CsR01/sTtCN/iHuzM530OOJ/X6J55DtO4q9Oza+nu4VNpQf2H3AGnV
zcoX9bRCUqbQrvPXfZQYj5VPl7cBu6W/RkbXHxTp+ut1UXY7hMrSqsm17yFi
/R7fuMwOuPJfjHTS510UoFp7WqSwE+TKODS4pnbQQNzcmEBzF4h88mrVIdxB
7Pm/5sWnP0Blb8vBfYltdDSW5LDD1A0f7iwbX3LZQjcPHEUUrXsgM0BXRbFw
EyW0Fy62lX6CZpbUmtaNDbQZW7ntSNcLmvt1abc1N9BaYof/7sM+KCyK8SbM
XUcrBUoK0uQDMGl4S3uDZB0Fv9EP7f86AHzc7uMD86uofNxt/EvFICxJhTZx
Dv5G75cmR9uef4Gh5OfPRbpXkNMNrknhyCGw3q35YNK/jF5V3cjOvjsM6B4d
hj/9j4vCCBSbokaAUCSJpoRwCTnmT9fzZY6C5Z8fbYOSiyjfI5Io8v3Xf3l5
c3X3+gKSfaUbErv5DfQtyxxfl80jm6KD0kOZMXgTln054ngOXSAPsEy9Pw6z
RxTcHFZzKN82MUx2YQJ4h/3q+Ztn0UVGKrpXNpNQn2s+qCU2i+KyOH9NTP+E
dlW6FIWCGeSf4C9p1/ILhK0fLNYLziBT67DTQsk4WDDVOHxWNY1U+Esz+4Kn
ICAUP+S5zjSaj0woGr82DdvGYRuJ81NI/tHZtRn7Gbh/8nsn5PEUWmY8Lg13
nYWmQ1QsgaZQs6rwWavQOZA/EWB8vYtDkuYKxzRZ84BXMXVxqfZfrfNo7r++
BbgqxXrtOAyH2GV2GQ+ploDTlWMNzxyHan6Y2Jf/twz+5cIfmaVwyJfw8JZO
8wrgTmU132HCoWyX4LAU41VwTMP3vEOEQ5U7eXILf9YA33ktAf3jfju27fzz
E+sgvXrX2ujfutHItwqpjxtwXkhR0IcZhw7WShQYWzfhc0LyQKQCDnE4LXY9
/7AFhpf+8ue64tDOrbOYx8Q2HJamJjK8wqFnl9QL3PB2oXKQsNfrLw6t+udc
tD2/B3oU8nuZ9lPotGj3pEDwH7giEKDz48cUsp3sMXrbvw+nZDpWVnym0bql
5ZN9hb/Qna4iw8U7gzIaf4+dVB+CXEvQTbedf9x+NLI6rn0MlynxzeqWZ9GS
NvlQ+doJ5Brnmw1TziPrJSUDy694GEsWMSe73QL6w0iSTdOOjw0VDQiarS6i
oP+mrEveEWChDZS34tuWEf0Gru5nKyFGPdw+cX/pN9pWkn7nOkqEfV6jUkxT
WkdHP+1TaA6IsY+jPbn6LRsorN77zysxUkwm7qSpO24LeVJW8DH6kGHsUzQf
ztbvoMLf00rKH8kx6zbtah+LP4iiqj2RReoURorH+4o86i86JXNPpLyUEhuT
Myf5z+MEfdfyoGSA05iYaO63h5wEIKHS6eM2R41R/OCf0OImhmDFJxU+X2gw
LrNW9+hlMhh4oSg000SLHTseBFY1UoFUxS+Z8zV02D67WuztPVp4cfpFGVMj
PZba+emECY8JlPhf8+kMMGDs42/pMk3OQFLbI7OELUaMTfCre74cF7hlbyZ+
4GfGwn8c8Z0n44fHogXO7W4s2PPFzyORr0Xhw9eiEs/3rFjo69SLQfvSEFJq
gN8qeAYbd4n1r3t+AS6MizTUvmTHZjQS6eSeq0JKNtuNq7LnsNrnQpI1hRdh
V4i1rnecAztrwlA098oENm9ldz35zIlp1D/4eDhlBYvfrn+5UMuFebxX+/Dj
hiMIWs2PepZxYzXdzMX3Zm6CGdfduNI3PFjg0/Z+18xAuH6K7JVuBy/2krTO
R+ZfLumU+PDdeJoPG7Jq7j5HEQ9siUIf+KgFMA5FskP5onQ4O2pSNKopiJ3j
ijdWyyyC8TlfnqRwIYylS+qrdm4NtD5JkvVvEMZIBSvjRsI6gb7BpE5rRASr
hIKhbMYREI6Nnu7LEsViltXK1mVn4WexQxhdiShmrTdwtiFtB7KxCuZKEMG4
v77Ejykgxq50horW3RLAJtbwlmO0GbC/ivvfCB24MJ57FHOvX3BiLyvsK8JT
GTFiR+9ujll+7Lr4zYLHl0ixlRd6zb+3hTHKLbkrLI57YIg7GnBIE8X8G9N4
eXbngH3S38TqX9/3KkUNe52jwCt8oKuwIYL9NBcwjRD4AGVKXWoiE8LY5ayc
rSjtOnDYnT45zhfCzHBLBHa2xSCb4TB0clsQ438qtDvV/ALebNY3CVoLYNiF
kOS+1WdAz1Wsxgr8mFWWuImMTBSIV594TIjzYePHX9WiRW9D0ZwiibwwL4Zb
cyL36vWBMZqieV0pHiwgy961dMAVeibELi2oc2OvCFyd/VrsgLUgTaTWngt7
IGpElsNiAXLJmkg/mhN7uvAjbh8zhueneMmv3+LATlz3KW6YaUO/H6HE7tZZ
rM3Jm7SDUhWkVts7LO+xY7JXRSeZbC9AwqTc6/JzZzCTNiuNckkZiOf67z5X
HyuW99HLTfyeGPzav5L0I44F+2qMDLKJBSB39BIh+3/MWKeuW7OQIjdQvvYd
P6vEhEV1RE5Mqp2FUdOna6ICjFjw9Uvy3z8xg6n9zcfpnAxYH8UHnrMp9PAe
563cwU+PPU6ZaA8xo4HbzqxW5BfosFOt3yzyI05BREP34PBlWoz92Ydbcp6k
oLFf0Zl8lwYjrw8JxBcmAom+Tx7Pnamx0+5iRyuR+DAee+/GyE8qzOm7Ssjj
+mPE2/mD8/AGJXY/ytmSTPwveledTnuO8hRmeE50ZAL9QcNU/Fw2jeQYXgBe
3d7nHXRTrXYLF0qGeTR3yJm830KCNdfjZ/VJMYv+Mg4Gkk3kTi38qkCEBKNT
JQr2fbKOZNPrtD1YiDGhXCeeazmriKRVzewxHREW++L23Nq9FWR29FzQnpUQ
s3/8qca/bAlZcUSJ6ogSYBNzP0V7zy6ilalC5wpdfCwv09CRpnMekVlQnCPz
w8OCitmJBDLmENB2Uz41OgHcPJne9YxZFKJFUf6r5wjQ+aHYq+9n0L64UDK5
1SEM7NfaBBPOIGf6lXKu/QPgruxMm7efRnSxHfi6r/fhetiVi4++TSGS8Cb7
cvc/cG8/kbLMaQoN/sj2i1LeA6aEk1Ueoik0Ep/OT8++CwxLjn6k1ThUOM/w
OJ18B8ajhgW6/HEouIuI3ZdoGx66GB1SaeLQ+tsb37dPbYF5uwhjMxcOtToW
UkdwbEKEoAfdEgUOxZdUvH+INsCyRLyi6+QXInnZzxDoug5iTidJZf/qAJK5
lrgLaxDe8fUsy7/9fgnR/qvVv8FUM3cs4RwOBXS0WJ/RXIEonNtmlzIOtYRJ
3RCeWwLzL6fSbzrh0HWvt5EoZRHe7iUcmCTiEDGVuEWE9QJk0lIemvTjUOnD
a9RSovPAWCczZ043hfC3dDmiKOfgu/gbZgvbKWTe1DY/cDAD91pymSzeTqEN
bauhq7vT8HC+18OFdhpZvs18HH88Bd50Am4ZQdOIiCMd10E3BSRL3gTnFqeR
3m0f8uvSOIjoFTJPs5tBDK19XIT2v0DVSFXbEffvfjJIOQRkfsK3DXz8N+6z
6NbwYhPU/oB5w96unpNZxH5/VsLdYALYfd7h72XOoWaGlLJP22NwbV/GMlpr
Hj2UuUr7tOQ7mHTaME/uz6MLZuf9N32/AUe7k5h53QIaTi4Lldb9ChkxPMfW
4YtoYu+0Zab4KMw/7BixtVxCW91cdyI4R2CXk91mUnEZtVUQ16pzDAOp+ZM/
1sIrSCSLQQ4THoKY2gtXrgr8RrYPfmtNY1+Ahlz8c7j0KvrNUyyd4zAIVacL
TK7qr6Evq0X6648HwKlsU6Jfcf1fbm4cz43uBx5h99igr+toTIlT5zlFH1g5
qDVGhW4gbt1l/I8Zn+H8GOFre+FNRO1d+cUR+wTXJRipb+I2kbWi+W78djdY
9J2TZcndQjcGLSkf1H0Ei1vnI77d2EZxDVX492M+QG7MVhuf2g4iffTRdOhG
F6wSmJNGcO+iF8aciZ1XOkGRSFo28PQeYq+4N19l0QHX5k3rnpD8Qbjb/e/x
7dqBL7nhjvOpfWRldJ+Lxa8N3HrG3yacPUBpGSwsLgmtUByRf9Kq8hddNqwT
c2p6D3ZE6UzZNw5RfaXwD67pFlDcPXV/6vUR0nV3LJiwbQa2j9GihvvHiN6n
kpH2dyM8kpBaNBfFg547X3+Nx76DyyGrAgszeCA5WPWfi0oDEKyq3+svwAfb
Yp5r80d1UPXyi+9dHwK4pCeCn9pbC4XjHpH+FwmBNmGlqaO4BgScaKJlhIiA
dumjYENyNfTNHFJgjMSgrCN61BdfBYcu8qNiVCSQ8Uvq2CXpLfSRTL9/SksK
+H1u+AuFb8A0U8CXjIcMCkrsklo6KoGMaZ5CWY0cTiKnPrmsVECuixx886SA
nX+8aHGuAj6MyuUklJwCprlFMeGqMmj0FO+X3qeEB17ZlGaoFE5I3f+GXD4N
9Wuk99XGioEO5zSj3kkNpwP5YzijXoNDGeqQy6OBTc+oh9war0CVuG/B4yYt
LNwoeHmXpgjWSCV0ulTp4BrTa7M7ywXQEXi5v4WTHngDAr97DOeDbmbZp58U
DDAqNeie1/MSLjIQ3K3BY4QXyyIvQnvzIAm/un+MgAniZp1X7CdygVSJf3KW
lhlmM7U4m3ZzgFtyz+euOAssU3/gI2bPAffa42vmVqwQMcEQV62XDe4KN8VZ
E9ggxNf3WirFC3C43v0mbuIMNN0JE30VnwmkBq0SIXJnYb3AyKFKMAO0Fr2e
luecA9tpq7TxwTRgwf8T8oCaE4y4gszMYlIhtu3Z38avnCC4K/zZ7FIKLNrk
XFNs5IKGwDs9pfTJMBnUXMddyg0SURSlsdOJUFBAq8pZzAO9TzfkGdqfw5VX
377M1fAClx/Hqm9lAuDN7ycrDvKBy8XZ0pXSZ3CrJmsEd8APxfW2xq21TyHd
OUO38rwg8PTvJ6j2xYPC+vFc3F0hsBMKME7APQEmeoMl2wlhKKUI6PNQeQxb
HB0knPqi4OZLUL5cFgvpR+u48X4xGHtYE79+PgY6PpjNZLtKwHDsTQHXvkcw
SM6o9DlGEpZ6OC0u33oIN8pkbQ49pKBM+S5Xt3wUhLFqeN+1lYZ4cBAZJn4A
ysT17URXZKCTqz0lZzoSBt9yP8Kcz8MBk4KI/UAE5HlrRfy+LQtKxX/5dT+F
gxunaPr3fDnIC7MOLBgKg4wDMb3RH/KQ7Wlx0rZwDwz8THje818ACem8ph3y
e4BjMJV+GKYIuSYB2lo378DOGANwrylBZjzVS4eJUDj2ipJI8FIBv5pJei67
ECiQ9fXeJgHQC1KgDNwLhqp77GcrrTBg7TXJt8kJAsvt3vSHSqoQNDA3M2kT
CL0TxC9fCqlB06fUDRahANCbjtYr5lUHXX9ZMiFif9A9DDg0FdMAxZfXslTX
fcHRgcPNWkMTSAgOVzIXfYDtnI9+pJsWjBFmXr+97g1fLI3bCrO1QXJorV+K
yBuUw7U9c+cvgunu10+0vF4QrGbkZ4XpgtwtqbtbWR6wvc5Y0l2sB0/x6j+8
PnUTllUrKreFDeDd8dA5/jh34P0VSrDYbAiZeNUaxtxucEGyxOnaeWPoro3H
E+1xBeZ5y8kFBhPwE2U9bo64BlJLC79S8E1Bf2q+45yhC3yoYrfn/WsKl/4E
hPgIOsPo5TUiRYJL0LRI7zRN6wRcY42nkpnN4Xm47KVickfYC28gIla+DNKj
nKI01A5wq9No18jLAvB8dbmtueyBJM4w3aLaEpoKmF/gwA4WdpWCSCitwTGM
XZVq2Bb04qsz9PyvwJfk2DxL9B+4XrI9Ed+0ATbit1aPmq5AM1WffGuELRCI
bJDGGltDhcLOmzhGO3BjDd4337UEKVXHk/ptO6BZ7y/YKf2XYx+7zxP+socz
T5OE7gRchvweU23abw6wpC7jTWVkDr323hQpPxyhX5Xm6ojcJdh4c9/LeMMJ
eoLyLlOImYE9fXXSMb0LVOaWnP0taQpjRoGnA7WuwezOFc1eVRPgs74gF//I
FWae2S3+tTUGjos+RVKT14FYI8KkjNoIIvabxc013YF/bP7500ADeFLsVb/T
cgOuMVskB2zrgTvJ/iGHkQc8SlTw0bqvC5w+g1JyXz3BUZa/6TXowKbDxLv4
ei9oI+q600h+EYaOoeb3U29gKQr2qp7Sgv/Ymj1U/H1g+vDU7nS3JgQejRue
dvIFdsvI4dRmDehNsyVct/UDmetR2cLv1YGc9zFPmIs/DHf1GR70qoHewrnl
6yEB8Me92Md/XhX8qxpGTLMC4X6GzTeyf7mebeGvx2p/EPzXeXFWSAmDLFWN
UXzaW5A0VTVWvYBA3bmb/5JDCMwcf8lDHiog0UkUWtERCq7Tj64cECvDLYHz
BfsKd+Dcg67e0+WK4OA4QX3m/V2wqTKUeuV6ATZ3ePzuld4DgpZreXtSChAa
kf3K/H4YoItyswoU8jBQbzTK7BoODg+YLzSsy8IEeYOQ6eUIOPc2xbZ75jwc
ZTHxJBpHws2LtEzvZmVAodHjdLjFffA4//HnzqY0fKbA3WlyfwB+coF/pk5J
Q9uCfObvuChoyOMw+C0hBbHv/zL0ND8E95p5nse2ksB4+7UF48kjKNAv+xkj
LgE5Grkcz4xigCbwQrnwWzGILTgjT10ZC5xRUfbkuqKgkqaU5MX7GOIzqnIN
N4XBZz/pUsbrJ/DzQkkPd7EQNFgxvEO58UCwayj51lcQ6p9Ga8cFP4Uf7jY2
6noCIPaQ/GvrlWeQLMO5yi7FD1X4b9ecdBKAGCdkH83LB6fXQhcp1J/DoTve
3AwvLyxxlDBd0kkE8bzrM0+leMB01d4YZ5MEvEKWfHs63DD0hGna6k4yXE3N
+3DvJhesKtN7BJWlwDChMf/rdE6wpWDl+vs7FQzZXAtxhRyg9WtIIFclHWoD
Hi0UipyDSI5xebWsDHCQSw1qbmWHPv1xykaaLHiRdb/i4vV/Phd2r3Y98QXU
bXZcdONiA5PwoYlrydlAgve38tIiC8gvllpLeuSAKws1vf57ZqCfifw4apQL
P7bmZxPzmeCpmtvMtHIemNIO7oemMELFWA7zmuxLmDHzILdNYYDb2koyCUr5
8DLKgCz1JT2k8lCmeRkWwJ1bmckJjXSAPBkC5TwL4TA71/H9T1qgj12IT8oq
AjdXQ/bnVLSwFOvcpf/jFQzhlfyN1qQBr6DQAh7RYvgY7PzS/DQ1bJ4x/jYf
UwLdBBH2O3lUIIUpNvoflUIi2Ugmgx4lsPA+elETVv5vftgUfxKcgv/UbkR+
iq0A82gmxsgecsgST4+jdKyEvN0v+eo5ZGDiL3yTV+MNXBRUsXZ+QAo997Ti
MiTfAm4w+6psMAlMJP5375RQFWhdtXhDHUwMHrWMdKfEq+F3Fdkrs/tEcJ3h
15gSVgOEWzdjrmUSwm7/xd+UwbVAdXZavKuMANwwlbsU7XUQZpQ1XPIZH/5m
j/ILcDSAm2DEdMAuHmjHCy87Pn4HL3Fsgo9E8CBHxyn6I20TWI2S7qeMHqPB
IBXygNfNcLW+1tzD7QjlFFOJ9Ii+B0a99OD7tIdoIMaLW4KmFTbOF8/ieg4Q
ohkoosNrA2OC+scpifsoqbtigPOoDWT8Ujjavf4gFa61H4xkHfBio7viyZU9
FPjrt2UVVydMaDfqypjvou+qREzdul0QE10W9dtmB1mTjzlJRH6Aj0czD075
bCMhg6mknr6PEEvKs/wrYQsxfbJgfyLSA5VDgcp9rZvoHfOkQ3D6J7gbk3j9
wt8NdO4DQ0cqRy8I/cHLfA4b6GPArbPk9X2wyaXfdPnxOgpNFOQJOT8AF5sI
7hL2raHBmE9iBiyDwFSanqfw7B9Hl4t25JJ9AZ2bu//ddP2N2nSGy4VJhiCb
x8Hls9EKkv54zeAF7TB8hxqbeO1lpBuk8LtdZARGJoStTgz/cTbdwelr5qNA
kW9pdcN58Z8s3SF0fPIVhOPN+OSjF9COjmRKxtg3qHNZGO5unEfnwrVaSRXG
gFDr0ZOMwzn0WC5UILdoHC517n2S0JlD3PUm/KFiP8BXrVGaPncWnR4Z0Sv/
MAlVt1x9f5DMIjL2g1RZ5V8w70lwVTZwBumw3wzx48RBKEO0+8fNaSRikCuu
QjsF+Zvfxy8FTyPq9zQ8iHoaXng8McimmEYrD5jmpc/MwOnPBBlhBVOojY9F
aFJ2Fqw/yP/+pj+FuDW6l6jt5mAzNpY45QiHavE5SnPS5sG15uOlpjocMvcU
2wyeW4CWNweWVndwiM16bTRGYwmirpOGPzbEIXu1npbR6mVYVwubfSqEQwpv
NOzclH7DoRG31xtqHPp4uvqT/egqLCy75Zni41CGfpf8rvo66Kx4mR0c/0Im
Be6SuYIb8Npy570WOQ6F6wDhJOsmpH72zKD4x/2mruoXLFm24ObDPhtpbRzC
C1QS7eXdBlbBZ547oTh0C99L+QR2wEbdH5W34xBT9PmSFrddSOVKGuM6O4VS
Lu4mzOfvQcWxh4NezBRSSuwqsN38A4E/BwJLaKZRfmsmK7PJAZDrebyTqJhG
ytuKq3Ttf0FpxPNeyM0ZpPXOK+uqzhHcekS4Oqw/iwhN+r6fmT0Gl+mvjs/N
5tCLLxHiDXp4WAHXW02+h/OIuYQ/YkgSH2MWVt2/sbmArF9wzIdxE2CWbgkc
ehlLiLo67pk/FyH2U0eM7vXTFXSY/eTvdXEizJrcPBh/ahVFSAeucOsSY3dY
KsN3+tcRnv503FdPEoxYdrS98vomcpPDe3I1nxTb1Pd4fdV0G6nqCHxMXCbD
QrdsOOozdhF/SwWbnToFVhmoStxut4/YCvWXKkpPYeOX2EKfNR0i2hW3tigR
KowmpSdUyAMPUgXQp42m0xj1d92Chn0CKLMz0CaWocHqJ6YLevhIgKJeJ/EO
HS12tWSNeJ6HAsSJV0wIjmkxkw+WvuQK1JBLd1FZbpcOa9Tl2G75SQcZjOlc
3X/pMc1Y5npmDmaIyFUj96VmxGTpSvRzatkhxGusZkeKCTOxo78kzsINcTsR
NGedmDHaEJtbqgICEFw6/6ylgAW73ZT0sfyMOPzXtZ7QfMCKVbOqi8gvygDB
6KMHJPZnsDfJ+HoR/YqwHSKPezzGjnW9zPj71UkNbiOCV1au57BhtxPJb806
oHnJh7qemBN7JnX/L4uLKYhL9/71m+LEwhxyzPinrOH4K+v8Yg8XNs7jHEnP
9i/nmT4Qy2jhxrSPve791+cBDxQHOvBaeTB+arUzfgpBIC4y88G1nxfjzlL4
kxkfAXxfLBq/LfFhhbEK+C5q8UAeZDVbTSeAcbLy602MpkNQZU44m6YgxiDO
It/+vAhCVezw3G4LYSRXeMheXqsBebkrXWqVwhi+qM6yPWMn/OL0nFrtFsF2
2pIUaf2GgYzzItlIkii2gCV2v7Cegd6y5st/q0SxEq1gP7EH20DLf32c0E8E
Yz6RbrS9SYQlKM+qTO0LYMdCKi66PPRYPP6KXzU/N9bCtDjOU8mBiQWOU+KE
mTGdygk7TJIfy/bVEPieRY79MWOJM4oWxhIYNsMkzh6AZdjeEBYsimX2Z3Pl
LC6C/2JdwblGUcwsh0DzYPI7LD6zrx5mF8V+Dl23rbre8y8fyBxMMYlg7kwd
/Zc73sGAuanp0oIQdo2I8B4zVxmYpVL1P6wQxHjuM/l5/cqGwMNrfVdDBDBR
ULZsD0uA2YhQtqdG/NjsRJNbpnIUdDm5WDRI8GHWw6lxPrdDwX2wUa+PnReT
f90nPbXlDTcuJ+E2mXiw3ctaKs0XrkFapoLh8llu7IKY2YuNXlvItTq9qifF
haXXfd5uXroEH7o+CT435sSURXQ3WakMgCXZVjpw9xzW+Vtd+We6Blh8oCn0
tj+LydRs+1mOqoDRR+JuctwZ7IeKbPQDIjkIrlGTVPRjw4ZjCM4N/OPZ31z6
xaRsrNj4uKSGo4EQNOJKdsIGmbGa5FOska95QPV72Gx7KhO2se+1hqPkgORi
B50tb0bsPH+NVfwvFiBUTniBWTFgZAd3dL3kGEA92KJ8zpAe2yalYQ1/SQNf
BKt4hE3pMMpIytvZjJRwjsbdh8aHFtMw4msj2iSFJazHtzjj35z6rNJPZRHB
bd24ivVcauzG6PVFld/4oOJzk3KH4zSm5pwb2Ol7gug/z2cHlFNi5o0EAleG
/yJMtvhqgvEpjIV9uOnZ0B/035Ihnh8BBVZVV9LPbrqLHgyQ3dHrIMO+jZy7
+UZ+G+GxjZRdTiTFIn+1+6p5byIaZaLUcT8SLH1IAb93bR2dPP8qJeRAjMkG
kcYPG64hjZTlhSQbIqzU7f1ngbO/UfMhn0KkIyG2+WalU0VpGb1ot1K1DCDA
gseOHxRnLCLaJAfvsOf42EnBis8l+QXUkxkv4N+Eh4mZ3m/dIJhH53tkO21x
J6BXaG5Z+WcWKS/7VjhdOQa/NUwBn34WvSgp9qNaOASaxzM/OA1mUNyfTH6/
B3+Bhdve7ELeNFqyJXn0XvYAzpnmceDTTaOg0DOBPDt/4GfwI57mpCnUh6+j
9K19D+6sujXxS0yh9vsuNTw5u/BeUahT8zsOpb2JmjeN3YFwhszlOwk4FGr0
M7Exchs2BJ2/utvgkMWtKZ3mR1twtvs6z5w0Dn2wtPFvTtuEuPKaP+uMOHRK
/CyPcO0G3ChtvVxPhENkmyZp/pPr0HbQv/f//xkv8UueYadZh+JbSWU/CXDI
Nv9Xu3LyKsTazT+TocWhl5EfIsm5fsP6inA33z+fjbom+LmmcRmaWSrD3HVx
yGyu4JH79SW4Ie7W0uWHQyOKPdyX+Rch+yBlkrIIh6yrHmtWbs5Dk9KXcI4Z
HHo2OXmjpXcO6ur8bq8KTqFAo2We3ppZuLpBfdU/YAplfFtnlyidgVSKqOsN
n6cQj73LGbWKaYh+7sPdLzKNPpmI6bq3TIHYDXyn3oRpxMUcIc00hoOgLSKB
MaIZJO8d/b3m5BcQ81zZ47w7gzR3ObW6JH6By5F35DeCWfRTmOltzNAk8OtT
ryrHzyLurPJ5f+sfcPjF91GiwBziSfs977w1Dlc0E8PFu+eQUfgU6+3MMfg2
PKR91X8eWUtF1S5bfIeFJpLsCNEFFM55PWKe6xs45jXEE64tIO/jnKKqg1FQ
udBqqt+0iFZeBXNk4kbAt+ZU4pfkJXTUwtu7OTIMAvtniFnuLiNRgkEVhq9D
QJdl8TXbdwV9zjnSdZj5AjPfsE/H/r+R8yU9HZ2jQVhNVqT8/GAVndB/IFPm
GoR4KWWWooI15MRSqVZpNACOYmfSuNzX0WPRy9HmNP0QXVfSJHhqAwn88Lxk
9bwX8AUdZ7vfbiCENXtFCn8GujDluzecN9EjxvLUv4M9IPM2eieYcwud+0tt
MP+oG7i5ZHoCdrdQaNKLtxPyHyGawlys4Ns24r8yWq6/1wXgKOn16sMOkgka
Wjf80AnZ558ci3XsIp3bq3EUhR1wJ1Dz9FzfHsLPzOMrSWwHPN097+cLf9Az
AvVE72dtQMDXoYpPd4CqnCbyMzNawU8XnAn1/6IG0/K8u2/fQ1P4r6HbyYfI
PLeQ8VdJCzS+cbS22TlCA0aTo2nkzTBswXn6hcs/fXGhbyIObQQjjcAffAF4
MFn40eKI4B3Yj4VDizo+6Ek8yPbLrIfjkAcG5ewEEJ9nneaqWwd9TuG1T/EJ
QV/dz3marBbwjAPvUG0RQnfTm7cnX6uh5xLei94NIng8oJ/4o6YK7vyuMIg7
JgZFHRGpipdvwSkyeZWSjRQsPkXzVmS/AXaDInlmTTLIP3OFn/N1JVz6wcnx
8B451LsH1Ji8r4CPYrudqJcCSiKIk6Q6y+HAsNRRTJQSzuDFp5dylsH2hf/o
zLKowGqkWm7paQko31a/W81LDaZinf2tzMWwFfmeQ9GOBlw7xgWEKl+BQcLO
lPUFWlC2t2M5818R/HzWlWp5jg5YYMovm60QjiS/Z4xT04OEpvjo8EI+uKjt
vHl8mgEuuS8xfu16CebMWKrIGUawOdhg//Y2D+p3y4z85Zgg/JN+Kl15Lszy
zuuet2eG678iy7tqc8B6l6dBI4MFbETbSjV7swENtuRELbCCIcV5zu4fL0CF
Ti9kWesMtBD0rRAqZMGOnnGxdx07TO+e76QpygD89TdXOdA5+Hp7jaxbNB02
RLWkab9zAIEdrda5zlQQ5C0JU+jkBFXl9/invVJACe7k1r3igmOzdZlM0WQY
6e4YqkzjBp6dkJX5/UTglyqJHEjhATaCw4nTX5/D+fnV+O6XvLCc7quu0p4A
8eR3+Rxb+CDvz9RGRdMzuLVhPu+8yA8aX3zIX3c+BSUbF5IiHkEoYbj31W8s
Hm4t+rPQegqB5KWv+qO7T2D3t+GpmP+/v77OMTZg9Bh6rosV0quIAr35bYLX
zbHAQYCN1bWKAbXASqiGWgw4/fXkjb0iAdcF1ScffH8EGXjMmxP3JeFm3Mqi
V8RDkPlMytB8XQraCGesqCAKdqyVf5NbSwNT2vR/N049gBtzN3u8LWTgYg7T
etV8JHhnsIiXOJyHrSdrBAxDEXAVlYkGhMrCLfun9M2fw4Fcs1QzO18OYp2L
Hx8MhcG83fm840l5AN/1NfqFe9CbzDvhJXQBxO3X6GzJ7oETXbHA8n1FKDCl
qA9wvQO6sQl3nHaUYF7g/gDHaCiUgUHjbJAKlIR1Nz63DAGmP5sN73YQ8G7d
TZMjuQUff/z8tK2GQXttrb1MRxBE5K1syjKqQlvwuFnr00AoH6o1FNxUheq+
lgQejwAoEvbMMxtTgztVBQ5Zlv6QS35dSbdPHaoHNJMjjP3gi9L1saI+DegT
rkmQNPeFA/sHQlQTmvDGOPgVoYsPlHreyOLc04LQW9N3XMK9oSWrVzOV8yJ8
mqqg6n3lBYxHhAriVjrw4kK4nGWtJ1QPKrbm5ehCMY1THaGEB3wsULzYe6AH
LJl3g4vrb0D9ymfvu84GkNFM+fbqZXdYPuzOzpwyBOZfl/UxIjf45UtW+PiC
McTG/0m53eYKH9NM6g9OmcCA8jMenfhrcK09pIFp0QR0K0cCcTdc4Fn6O1Hv
QVM4xzf0LsHCGd73vb2d2mkG3/q8RMuMnCCjjkZFsOsSMCasdT+65Agj9K9+
tg2Z//Mpu+hYZwc4XAs6pl67DL3okf3ZcHsos7x26T2LJUgHrfGXvLID2r9d
ewkmVlBheNPatfYqnLPBu6mfZg33CzzsHSVs4cpArWfN1hUoYfwebtxgA9rp
cFRh+x98o7wpqmdxBfpeUuDYJ2zhc8GnO17E1tCRmfvSV84Oms1CCxfbLcGx
RSKKnNweZpp+tGw8tQDJ4JRXpnP2IHy8FdTpcRnkJDo9v/U5AJvoqkuxlTkc
OlbTSbU7gne18sK+ySU4216Fbbc7QX5awDiZhRnofQOB1kFniGsWk1dwNYXA
/mhOrd8uwJMjO7ITaQLbj9+YyzC7ws1zM5sVJcZQQF7mhRlfh+1TgkdNTUaQ
3p+0pJDqBl81LFyJ5Qwh+/lP7eVNd2gok6NSbdWHL1L894Rsb8KUBaHtHVs9
WHs7m/Jj3AOuyctMTlPqwhob1Y/bcl5gwl3yNPvTRch9h6yUyb1h6xal/Eyq
NiTNb4SWzXnDa74O09UALUhjl8J36vcBmxzhOCoHTeC7pqr+u90X7r7nFn5q
rQFqgyUjPzv8wPhJI3H/VXXgSmXumfriDwEx5g3i3mogmnZlKHs1AHp9PHrZ
HqsCh9oa1sUSBPUpx64n1RhM5ETfojUNBh0K2Z7SAYDLzzhF9dNvgcRj2gRN
HQT3p2PMsJ0Q2G5KL+4eVoaj2MS6Drvb0IyGmQ18lCC/I2qxc/IOUCyf9/7D
qQhGdDgtVoV7UBCfPr3zUwEeU9d6n1CEgd4Z279+ZfLgJVxykLkQBpw7iYbv
YuTAx9ZnP2wwHG53NZMwBMpCzH884he6IsA4acrmk+d5uBu4pGP7IRLSX3b3
KPvLwOTXU7XJI/fhokj52f4H0hBGJWEwvPwAguyLfqgXSYEMn/H1eeqHEFtR
wq8xLAlyNDW4KLVHcAJMVpcoJOEPXepTz8ho+CJ/RXInQRws5frErUdj4Kep
wnQonxiQLby0YL4QB9kXHim5fBQBosSZ/PDSx6DnLUs+HSIMhOYa+0ps8UC5
f2DJB0Jg8/1jp+d8PLw4U9/gRisI2i22sj+an8IEQ8UFwk1+6M29eJ4k5xk4
c0/ex37xwVR9SaHH4wQYMOXTDBznhXcszxxfRT0HbK6smGqaBzIIfU6M4hIh
ZNrD0GuXG56mZeoevkiCckslSkpGbvjv2VCN6ftkmLQLibdAXIBRBb4gXUuB
qvfPQ0a8OaHWrPrVgGga8Caq69DZcoBadEHAtVvpsN8nWrWxdBZKVnwC0r9l
gLVr9X3PR+yQIlDhqX4xCyg5YxbrFM6AayJBi1zPC2h4WDD0d48V5Pmk+cvL
syE/n84hoIsF5t4l374SmQNVpDwt/nnMwLBUY/fCMRfWp2zztR8zgeKvDxHH
BnnAEok5Yw8YIWlW5iqFxktYat8d64hmAJ4W36HLWvlQI0BJr5xOD4KXVN/f
Ni8A0pgZUfpaOpCQahzi9ykE4TQbx/YftCDd1T3+N6MIcph+PvtwmhaEXFJd
K0ZfQR3fhekcHRq4Gcx5QMxZDAMzKnzvzlBDw/abyZbgErh1unqWqoYKlqUN
+8pnSqF8fTrbyZ4Szjf4R1TZl8OAbuv9bfZTYG5Ynvg1qAJySedO7cyTA02/
mHaPbiUcFhL3l7aSAckFeV1pgTfwkA33n8crUljZZR99evotnI59FPIoiwQw
oYyQQPwq+NMjSGafTQyvVXfoA/CqgS+j2flKGRE8nPfv5aWsAcX0lIfTHwih
WP2miBBfLbzRML3mvUIA0qeuV4ro1wGzf5TZ3TMEsCW/FTERVg/rlURxcZfw
QTkn5p/ENkB5elwhfzIeuFmarF5kbwRCOYnjks4T5H1+911CeBPIjc43XfU4
RrEDv2TrDpohv73ZIk3gCM2KXnvWo/Ye+Cm0whLW/6I2hQBLKrpW4FMV/hL/
8QB58cU55i23wur5Vampsn3kctNAmWqgDaLW1r58z/2D1OqKDkZb2iHN8Mfb
b3l7CPPj83r2rgM6r5RKalXuon3vjoXh9k6o68u9EtezgwTVktuw713wQTxw
m29tG230XKQPPfwAa80U49HnttG3hruv5cW7gTH8lAdYbqGtXbxOUc8eOE0j
JtibvokifJz6z7z/BPRspdC2sIHOP2wlGuLqhXE/CpVqtIESSe7I8iX2AXp9
RRwy11HVfKnkrXMD8PdTPUXN6hq60y736fvRAMgQe4Nt9SqSeMGqYbI4CO/Y
R+Ky4n4jkjGtkijcF6C6TFP1KmAFOc5ovBWbH4JkNeLuFs9l5KjNR3h8MAxd
n7r7xIKWUFRDHu7d2VFgqOEe0X2yiGbkGDvkjb/CVaYm89CqBbRNI/ZGJ+Eb
nG5vs5GYn0cxP5lYx+a/w/m/I+a/+OfR05vzId8Mx4EztmGM1ncOOTtamWt3
T8DMsxtnLn+aRVd5DI4kLSfhoVS+g6bELAqi9KarOvwJ7mN3dh9kzSC85ez2
w/FfsHYU5N3N8o8Tr/yn+qITB7lh7hrdmdPoxndjo/l3U8BC0RqtLzaNDEI1
ZCJbpuH5vMA3vg9TaN5FTkxicAaSfql+Ou8+hTpsVrZebcwCQS0NvxPrFMJT
FnBp55oHratyIhWDOCSjHj9i4rAAzQQnuhzP/9WRmzNKVYtApRGH12+HQx9P
nVfwZFkGNtxv+nl5HDIpKdVYebICc9jTohJWHHpC9efSuzOr4G5W3+hNgkPx
HhltfxrXoJwvUKbkH8e3GylmOTesA9dTooez/zjewzO9Qi53A0jEBdMG6XEI
L0iX53nSJhwt1XNoSuPQFaPCYZGULajq/GOneRWHIlQLM6oLtyF2ObWNOgOH
KDgT8zc6d+Dcj+f4LEs4lB/VolK6tQvp6lYWknpT6Lbjql2T1B941fw63L11
CrX/IE4gDtuHskYtVkejaTReHTTsO3UAiQJ/Kvn+TKODPb9hQotDiF3wZ3Br
mUEGw45HzT+PgPxlLUfNq1nEsY/3993tEwhR44262TiHnqd5m9Km4mFrNLyk
lsfzaHT90yb9XXxs9tOwqm/gIqr5LO4V7U2AuT+YXCSTXkYbSY1enN6EmBbH
IWam+BuFRS08ib1DhOE0z+5zZK8hZrY0gsdpxNh30rya60obqNfNkXStkwR7
Scg6/2x5E6kOPx6JxCfDpBxyErzXt9FWjsllCUNy7IWOyPWF//aQkROjxEQJ
BXYu/hbNoOEBcplo+RpxjhKb1BUtr5k5Qn/zH70Re0mFHanrR8fz44NJiND2
KqLGaDOsdhSnCCGbvbd9J5AGk3M/1d1tQAqKp44TRGxoMXKXZdLz2aeAe1BW
+50+Heb1XHVm8xkNsFQp5hnp0mP96mc1BHkZYMfLoDXDnAEbkeAZvdXHAhqn
+3XsPBkxXgpv4ubDc2Cj17hjn8KEJXzmukOVzwNhtz8u+w4yY3vyrUoGBkKQ
8feBgu8ZVsya/dHJRLwk2AwyMF8MZMNSSsY6TujkIIqIgmRu9gx2VYxk8+WO
ChCNi0YMGpzFwt59ormqqQF+PVy0vR/OYYWbDhe+L+vBwrc5+SvCnJhDDEeS
TLIZ+PU7DNYecGIVI1EvkslsoE1mRebmCBcW9gHV8gY7wV3uq7j5Bm7s7LWq
W0txHpBP1MX9sJgHc3bAe0RuGghX6kV1Egp5MW2Zx4bvLoQDVvQtg7mcD1sa
kHPOl4kDztzczepWfizfTaK4G/+fL3s8FJGbFMBCZ5JXObVeQsizw74yfCGs
ZcIeSadVwoFk1l4PnzD2h2vAcMizBeSt7E2Qigg2yNmTmz/+GZo7nP1TRUWx
X915prPC40D1aDWxtlEUI9evfIZolyBC7C9ry31RbJFyRNuHbx+ePThJxOGE
sfqpCWfpFlLs5OK6+KyAAJZZxXZHn5AR8z/jJX4QxIU1jctFRjz8dw53XdY1
y5kwZgq+DG1Xfmy3BzkW4lNgP3sNj8cChTETQ9Uj/bq/ECyjoznkIIrdWnff
1+5YgayPQfz3O0SxwYJqZ7uVH2DcsWLJriuKpT/2cc0s7YcOYwuKRCcRLGCP
NS9GohUWRcsK542FsWsDdlfkhd9Ck9u9pDQxIey99pir5N982N+PEo4kF8RW
vjyJoVhJhfLXA/4Ny/xYpJKgLo3rE3CXZzz14Csf9ptYimbrQQQw+drYG/bx
Yid6QUPis0EwHjnpGz3Ag33jsPyagHmBUOx/+AqT3NiGxnKPfLUzaJSK1zPv
cWF7zCt1Tjn/gZ1lmuRnNi6sDF+pfu/lJXApNT2zdJETG46Upvlw2QAUJNu/
4RNwYLo8FwWOVDTBtktqE90/i7mE9CuYGANsnO1YK2Fjxy4/jLcfC5YH5mys
wLeVDXvCJUjOPi0FTDcWXrcFsWKn8LXCjcpEIC8A2xgEFsyh9TyINfJB1l2K
IxwjM1auedDlacgFM73+o0oHjNjwbWMx3O8zQNI0/VNyhQG7PtwZ1vqFCVrF
rj1hW6bHDCvSHob+ooPvi6xC1rt0mPpZp2SaJGpgfTdx85+xY1Qr2utXaing
OLxO474ELRYRn6f33wgJZPrgAixsaLDTdHb00dWEoEhxnJfCT42Bxtauoyg+
vJ2LaesrpMKsH1LMxkkfoxvF0lpOSpRY7LQw93bXARIuxHsY+IsC82rMdBVa
30PVhv1lUknkGNt7yaeH8Tsov9GPs+sKGTZUZRj+8dkW4n5DLe4jSYrdnXQe
bZneQESxos6h9CQYZ35041f/dcSjWqd0nogYG79xw/NTyCra8d7K3MAnwqRS
lea2nVcQRY5ULAMlIfZd9sLnD+lLyJq1to6ImwCzOWbTTKFdRDEmUdxS6viY
SqOD0qPUecQ6XhhHbYGHvfv82rXQeg5Flr7sZl47hqu/m7bM9GdRLDp/a0v7
CGqyKS3uXZtBhiuKC261f+H+N02dyIJp9LtnNkJH+QBkPXPdSoimER6+BaXb
yB/wTFuV5L0zhR4kRjvVhu1ByEUXr4/UU6gqabVOBNuFnOyK0j81/3zJZ/l8
H/UOUAwXlT/xxqGF1brTVWtbcDv7cmeXCg41+OtSnUxuwvJ+tzQ3Gw45MGhz
TExsQFFy8/5NYhz644lvFLmwDix7ydPF/3zybmzhviL+OkSG/i8eA+H81CgL
BeE+RYrh9ZlM7j+ykGfi6RfhPvVcnYokruw/RHCSCME24T6eM8Z10yXrP6Cd
x0owYeE+Bjg4unmy6T8ayPyy65bhPrY9z/b2Uug/De+qLMTX4T5OBrMLPQbn
P+P/yzqcI+I++0u/GErL5T8PmgdFbHriPldtLokroeQ/PuQV4Dzc4j7Yyung
+objP9tDfW8nSeM+relRNd574j+aqDr6VMHjPohlo44Hf+E/boxQ6ftE5D4X
bcYqs4/gPxy6VhVi1OQ+tZRI5lFa3z/H89h82G/lPgJJgTlyrd0/GArmp78X
5j5XzvQTfhfcP5XqevmBzOY+0apY8jmX2j+ywc+cmY7nPlrVySt/K9k/+Pgh
m4le6D649h5QMtPXP2GmVQbnPOk+QWM1+EyN1j+JabiuTSrqPserLj/QWNU/
YpZvrGsn6z6EyuvozzTUP7FAg/v5NOw+dagwBmog0z8twirvvlPtPqDvojPI
GtI/KbRM7pKE7j5zqz53IiPRP94ebqlWyO8+2m1d3rY40D8kQudHAZDwPpP+
/l+mtc4/CxGaUktG8T7TiNyIkxHNPz8aZFuVB/I+YQCT3PODyz/NOY7/cdTy
Po18MlWTC8o/ACMxFn2t8z4hjhJaTqfIP0p/bjVek/Q+y7PWWBRWxz833Eze
wob1PlV5bVvdFsY/YmRJxmiI9j7fIjGvtujEP1g/3MsSmfc+ZDZHu7PKwz/I
m+nClLn4Pt3BOur5u8I/q53Sesvq+T7/uSJFt7vBP01mBGahLfs+0rIIfyXJ
wD/bDosjEYP8Ps4DoaUVx78/TE3JOR7s/T4AUGJJZxS+Px+CiTrjaf8+RIdH
YfV4vD/MD7kHwX4AP0pIMJp987o/DIU+xBpUAT/ScHiT1oK5P4wg+GaiNQI/
3YA5EOIluD9XbZ/OBSQDP1do2FuS27Y/KNWWLP4fBD9gWBU36qK1P8AmaydL
KgU/RidB2fR6tD80hMo/vkMGP/VDsg7SYrM/7x2d5C1tBz+H/wemplmyP+C1
KgmApwg/ITbCPKZesT+XpZaOp/MJP6B0ekUPcbA/HmnIVA==
       "]]},
     Annotation[#, "Charting`Private`Tag$25844#4"]& ]}, {}},
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox["\"x\"", HoldForm], TraditionalForm], 
    FormBox[
     TagBox["\"y\"", HoldForm], TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{886.5, 596.},
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "ScalingFunctions" -> 
    None},
  PlotRange->{{0, 10}, {0, 10}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.888301030336822*^9, 3.888301114960032*^9}, 
   3.888301173925928*^9, {3.888301205127512*^9, 3.888301234454039*^9}, 
   3.8883109477529917`*^9, 3.888385574889071*^9, 3.888385742193818*^9, 
   3.888385831174666*^9, {3.888401369404501*^9, 3.888401409241605*^9}, 
   3.888401478708088*^9, {3.888401738446601*^9, 3.8884017898472633`*^9}, {
   3.888402629567595*^9, 3.88840274794925*^9}, 3.888402868242173*^9, {
   3.888402904739884*^9, 3.8884029210149517`*^9}, 3.888402952812084*^9, {
   3.88840298558711*^9, 3.888403016305736*^9}, {3.888403053713262*^9, 
   3.888403098092869*^9}, {3.888403191510972*^9, 3.888403249763896*^9}, 
   3.888481303567102*^9, {3.888490173266493*^9, 3.88849050612042*^9}, {
   3.8884906167614727`*^9, 3.8884906712607317`*^9}, {3.888490728706017*^9, 
   3.888490731862463*^9}, 3.888490808423709*^9, {3.88849133212434*^9, 
   3.8884913887580223`*^9}, 3.8884914918843403`*^9, {3.8884918090132113`*^9, 
   3.888491831233534*^9}, 3.888491881031196*^9, {3.888491970196293*^9, 
   3.888491996987602*^9}, 3.888492060499682*^9, 3.888492152798731*^9, 
   3.888492213201564*^9, 3.8884922711816063`*^9, 3.888492353990204*^9, {
   3.88849249727351*^9, 3.888492517808079*^9}, {3.888492839624271*^9, 
   3.888493034000228*^9}},
 CellLabel->
  "Out[104]=",ExpressionUUID->"91ef7604-7f74-4fb5-8c90-d30403e50e3a"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1440., 782.25},
WindowMargins->{{1440, Automatic}, {0, Automatic}},
TaggingRules-><|"TryRealOnly" -> False|>,
FrontEndVersion->"13.1 for Linux x86 (64-bit) (June 16, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"09e6c285-f7ff-46e3-a8cf-7502be34a98b"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 162, 3, 98, "Title",ExpressionUUID->"4f8dd6d0-bdcb-4e22-8002-cec151dc518d"],
Cell[CellGroupData[{
Cell[767, 29, 290, 6, 68, "Section",ExpressionUUID->"934bac1c-9c7c-4aaf-8375-244abd6c5bbe"],
Cell[1060, 37, 910, 27, 93, "Input",ExpressionUUID->"4f2b3283-30ed-4a70-be21-a08102c8b296"],
Cell[1973, 66, 711, 20, 73, "Input",ExpressionUUID->"80a92158-4335-4178-8e6e-ef7d7e9ab438"],
Cell[CellGroupData[{
Cell[2709, 90, 2222, 57, 115, "Input",ExpressionUUID->"10ab93a6-55c7-40af-88f0-28f4b690b097"],
Cell[4934, 149, 2381, 48, 626, "Output",ExpressionUUID->"850b1b38-0f18-421f-9407-43dbbecec5f1"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[7364, 203, 294, 6, 75, "Section",ExpressionUUID->"baa56de3-431e-4ef1-bafa-11fe058a1dbb"],
Cell[7661, 211, 1066, 28, 73, "Input",ExpressionUUID->"a1875164-ac45-472d-8739-d7ae5793612b"],
Cell[CellGroupData[{
Cell[8752, 243, 595, 16, 52, "Input",ExpressionUUID->"3c910a45-46ea-44f4-8300-154a37136f60"],
Cell[9350, 261, 661, 20, 55, "Output",ExpressionUUID->"908c68f3-ca9b-4f94-b638-c76da09ed1f2"]
}, Open  ]],
Cell[10026, 284, 915, 29, 51, "Input",ExpressionUUID->"2527b036-8a35-4803-aa90-f57f6c7210f4"],
Cell[10944, 315, 955, 21, 52, "Input",ExpressionUUID->"6bbb93db-9be2-440e-bc00-a260b4f33e6d"],
Cell[CellGroupData[{
Cell[11924, 340, 1426, 34, 75, "Input",ExpressionUUID->"724a626f-8f7a-40fa-9279-fb024d12a3c6"],
Cell[13353, 376, 1708, 41, 72, "Output",ExpressionUUID->"c6fdd1c6-2200-44aa-bbbd-5481c615b3b9"]
}, Open  ]],
Cell[15076, 420, 3980, 87, 73, "Input",ExpressionUUID->"98391c92-751f-4913-a7df-e13d3b9cf583"],
Cell[CellGroupData[{
Cell[19081, 511, 1356, 26, 54, "Input",ExpressionUUID->"79976a66-8e8b-4e03-9a78-1cb5b7e7156e"],
Cell[20440, 539, 7554, 215, 151, "Output",ExpressionUUID->"f9f1f653-c422-4875-bdf6-f7ec75b70a7c"]
}, Open  ]],
Cell[28009, 757, 672, 19, 73, "Input",ExpressionUUID->"7c14175f-1b58-4be5-b371-72a2f40bd6cd"],
Cell[CellGroupData[{
Cell[28706, 780, 1017, 28, 29, "Input",ExpressionUUID->"770db4d9-3641-48af-a5b1-738640a46834"],
Cell[29726, 810, 2001, 40, 533, "Output",ExpressionUUID->"ca2d3fe5-f89b-4f0f-af6d-6b41a94e010a"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[31776, 856, 285, 6, 68, "Section",ExpressionUUID->"1986ee19-e1e4-40ed-ad83-0a8b363a8d07"],
Cell[CellGroupData[{
Cell[32086, 866, 267, 5, 53, "Subsection",ExpressionUUID->"f0afda35-ef1e-49d2-a869-54c3757c6752"],
Cell[32356, 873, 1116, 29, 73, "Input",ExpressionUUID->"1b61d005-30c6-4387-a72d-e7cb1b20bebd"],
Cell[CellGroupData[{
Cell[33497, 906, 594, 16, 52, "Input",ExpressionUUID->"e5bb7e66-b80f-4782-8394-c56e1d4025dc"],
Cell[34094, 924, 1189, 32, 58, "Output",ExpressionUUID->"1eb3ebb7-b9d8-4489-add1-1d21605f777d"]
}, Open  ]],
Cell[35298, 959, 1351, 44, 71, "Input",ExpressionUUID->"c7094358-c68c-4901-99e8-e89144fef781"],
Cell[36652, 1005, 930, 21, 52, "Input",ExpressionUUID->"0580e945-1232-43c3-be44-c0b4ef8b727b"],
Cell[CellGroupData[{
Cell[37607, 1030, 1425, 34, 75, "Input",ExpressionUUID->"8fd7f574-1f97-40cf-bc9e-54b8c4370a45"],
Cell[39035, 1066, 1352, 38, 72, "Output",ExpressionUUID->"5cbc6a90-4cf1-4360-8e54-e3d0b66128ef"]
}, Open  ]],
Cell[40402, 1107, 3956, 87, 73, "Input",ExpressionUUID->"87fd21d2-bbe9-4ae8-8918-6a1eb12816e2"],
Cell[CellGroupData[{
Cell[44383, 1198, 1356, 26, 54, "Input",ExpressionUUID->"9d3b3f8b-a93f-44a2-ac91-8b32bc629dce"],
Cell[45742, 1226, 14100, 386, 228, "Output",ExpressionUUID->"71d529e7-b9da-472a-a00e-d6fbb80a716f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[59879, 1617, 952, 25, 54, "Input",ExpressionUUID->"884bd2e3-9eea-4b8f-ab3a-3ff3e667d6ef"],
Cell[60834, 1644, 525, 11, 28, "Message",ExpressionUUID->"2fc22cdb-89a9-480e-992d-23c60b63e440"],
Cell[61362, 1657, 825, 22, 61, "Output",ExpressionUUID->"ff0fec5c-8470-4f6d-87ac-56a14252db27"]
}, Open  ]],
Cell[CellGroupData[{
Cell[62224, 1684, 290, 6, 29, "Input",ExpressionUUID->"3dc31020-6606-434d-8a47-10029c332d3c"],
Cell[62517, 1692, 520, 13, 61, "Output",ExpressionUUID->"cccd4140-c78d-4487-a1dc-2061b60e3eeb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[63074, 1710, 1428, 29, 73, "Input",ExpressionUUID->"7e6aa430-e5f6-463e-803b-65f511f27630"],
Cell[64505, 1741, 573, 8, 33, "Output",ExpressionUUID->"6e0e97d1-6e57-4b6c-a0fa-3ae5aaa7142e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[65115, 1754, 1201, 28, 73, "Input",ExpressionUUID->"3c5a6619-e270-47c9-97b7-8deb3012b6f3"],
Cell[66319, 1784, 321, 6, 33, "Output",ExpressionUUID->"0475152e-ebe3-40a3-a946-bda42399ebe7"]
}, Open  ]],
Cell[66655, 1793, 786, 19, 73, "Input",ExpressionUUID->"34729365-4981-40bb-8a41-4786488d412d"],
Cell[CellGroupData[{
Cell[67466, 1816, 1418, 34, 51, "Input",ExpressionUUID->"16ecb7b2-b31a-40df-9768-3b60ff08bc26"],
Cell[68887, 1852, 2230, 44, 578, "Output",ExpressionUUID->"73135a20-09a1-48d4-83e9-c5a145722d1a"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[71166, 1902, 230, 4, 54, "Subsection",ExpressionUUID->"8e3ce21e-65db-4c6c-93a7-5dc1a0db2e64"],
Cell[71399, 1908, 1741, 45, 94, "Input",ExpressionUUID->"d0766ccf-708a-4528-8ab9-182d61e51ef3"],
Cell[CellGroupData[{
Cell[73165, 1957, 962, 22, 52, "Input",ExpressionUUID->"73ac217e-fd2f-4419-8e84-b3864ed42f7b"],
Cell[74130, 1981, 450, 10, 28, "Message",ExpressionUUID->"d8dbda3c-baba-40f5-8bbf-8eea62a86699"],
Cell[74583, 1993, 2847, 91, 114, "Output",ExpressionUUID->"d320ff44-4e46-484e-a4b0-552523fae01e"]
}, Open  ]],
Cell[77445, 2087, 3949, 121, 155, "Input",ExpressionUUID->"32a02369-c4ba-4ff0-b16a-9768bfe6f69d"],
Cell[81397, 2210, 801, 19, 52, "Input",ExpressionUUID->"5c57a213-ead3-45f6-ac32-19c522d26674"],
Cell[CellGroupData[{
Cell[82223, 2233, 1727, 44, 75, "Input",ExpressionUUID->"85982ac0-3f65-475b-a652-21f957fdb221"],
Cell[83953, 2279, 2664, 70, 103, "Output",ExpressionUUID->"e295ffb8-1a21-49ce-bdf4-6f6fe1a45560"]
}, Open  ]],
Cell[86632, 2352, 4336, 97, 73, "Input",ExpressionUUID->"710bc041-6d6d-4ed4-ac54-4be349df37cb"],
Cell[CellGroupData[{
Cell[90993, 2453, 1356, 26, 54, "Input",ExpressionUUID->"9cb904e4-b4b9-44d8-989d-63a1e02c3035"],
Cell[92352, 2481, 70454, 1802, 636, "Output",ExpressionUUID->"7f2ee0e9-9b20-42b2-93c1-bcb6b06e09c1"]
}, Open  ]],
Cell[162821, 4286, 865, 20, 71, "Input",ExpressionUUID->"98cc73a0-c2ab-4a12-9694-9eeb54f24e4c"],
Cell[CellGroupData[{
Cell[163711, 4310, 2043, 46, 51, "Input",ExpressionUUID->"178e33f8-ea4e-4708-afa2-4876b8dc892a"],
Cell[165757, 4358, 2421, 48, 613, "Output",ExpressionUUID->"b0f4a9bb-6717-40bd-94ad-01f865fcdf78"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[168227, 4412, 267, 4, 54, "Subsection",ExpressionUUID->"fd2fd6be-667a-40f0-bbfc-6481b4edbcb9"],
Cell[CellGroupData[{
Cell[168519, 4420, 158, 3, 45, "Subsubsection",ExpressionUUID->"a6ec4fb6-a982-48fa-8f9b-58907ff08a76"],
Cell[168680, 4425, 291, 7, 52, "Input",ExpressionUUID->"78c7d805-f295-4d90-8b0a-3fd9f64510ae"],
Cell[168974, 4434, 2227, 62, 94, "Input",ExpressionUUID->"9dad91ad-8503-47ce-ae6e-ff5e69544d47"],
Cell[171204, 4498, 511, 11, 71, "Input",ExpressionUUID->"65d3313b-888a-4a5c-85e7-9daed3c85483"],
Cell[CellGroupData[{
Cell[171740, 4513, 1502, 32, 33, "Input",ExpressionUUID->"6c528d2a-2ad6-4a99-8f60-0644a705f277"],
Cell[173245, 4547, 638, 13, 28, "Message",ExpressionUUID->"eab4775f-7294-4647-b328-c721756ca3e8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[173920, 4565, 2389, 53, 133, "Input",ExpressionUUID->"b8fdb4d0-0082-45c8-aa67-03c0ff53d9e6"],
Cell[176312, 4620, 846, 15, 28, "Message",ExpressionUUID->"7d64269d-b0f4-4150-a567-055c769b5aa3"],
Cell[177161, 4637, 848, 15, 28, "Message",ExpressionUUID->"07864df8-de60-493e-b3af-415ab7e6a3d9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[178046, 4657, 2307, 50, 75, "Input",ExpressionUUID->"ec24f521-d53e-4f26-859c-99cc64d6c35e"],
Cell[180356, 4709, 728, 15, 28, "Message",ExpressionUUID->"d2ffeab1-44a8-46e1-938c-e306c84434f1"],
Cell[181087, 4726, 728, 15, 28, "Message",ExpressionUUID->"108cc906-4d8e-4e07-830a-96f142c7bd57"],
Cell[181818, 4743, 728, 15, 28, "Message",ExpressionUUID->"98e63814-0e8f-49a4-8674-42549ad05e27"],
Cell[182549, 4760, 687, 14, 28, "Message",ExpressionUUID->"951c974a-491b-4a72-b18f-6d18dd4686fd"],
Cell[183239, 4776, 197208, 3260, 521, "Output",ExpressionUUID->"601cbf5b-14e1-458f-9aed-afa7fef82588"]
}, Open  ]],
Cell[CellGroupData[{
Cell[380484, 8041, 1088, 31, 33, "Input",ExpressionUUID->"2f93e765-2e8e-4eb3-abf9-3b2e57b52786"],
Cell[381575, 8074, 532, 11, 28, "Message",ExpressionUUID->"c08842e9-3bf5-463b-b07b-11f59025fa87"],
Cell[382110, 8087, 532, 11, 28, "Message",ExpressionUUID->"08444f42-9559-40e8-94c2-9a9b143cda55"],
Cell[382645, 8100, 532, 11, 28, "Message",ExpressionUUID->"aaf0e7f1-574d-47e1-9a21-42e4a5ffa5bf"],
Cell[383180, 8113, 491, 10, 28, "Message",ExpressionUUID->"6dbba715-5e93-4d1f-96ad-8f43acf0b9e3"],
Cell[383674, 8125, 217754, 3594, 377, "Output",ExpressionUUID->"051649ec-7214-46cb-8833-040eec6f792d"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[601477, 11725, 160, 3, 45, "Subsubsection",ExpressionUUID->"6046c041-9359-4644-94e0-6eb150ec0681"],
Cell[601640, 11730, 290, 7, 52, "Input",ExpressionUUID->"439898a9-adff-433c-9a99-5e2829c5b1fb"],
Cell[601933, 11739, 2227, 62, 94, "Input",ExpressionUUID->"eac1cf62-20a9-4ec0-9760-555018b4758f"],
Cell[604163, 11803, 630, 13, 127, "Input",ExpressionUUID->"6183e03b-48c0-4a58-9977-ec64b86f0299"],
Cell[CellGroupData[{
Cell[604818, 11820, 1502, 41, 209, "Input",ExpressionUUID->"bed6439b-e432-4d8d-965e-45ca3e7502e1"],
Cell[606323, 11863, 200, 3, 33, "Output",ExpressionUUID->"2b740c4c-1434-4b19-89de-fceeb9eec5bf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[606560, 11871, 800, 21, 83, "Input",ExpressionUUID->"55aea93f-a9dc-4212-ba42-571925aa3c9e"],
Cell[607363, 11894, 167, 2, 33, "Output",ExpressionUUID->"3c01e317-ab05-47ce-aaf0-d3312797826b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[607567, 11901, 1364, 36, 67, "Input",ExpressionUUID->"7f25c6af-45b0-494b-8426-e67e76ce5beb"],
Cell[608934, 11939, 283, 5, 36, "Output",ExpressionUUID->"cb392165-bcd6-438f-956f-522ccb72d089"]
}, Open  ]],
Cell[CellGroupData[{
Cell[609254, 11949, 1289, 35, 67, "Input",ExpressionUUID->"354ac916-3e31-4c8e-8917-36610b09ed01"],
Cell[610546, 11986, 259, 5, 36, "Output",ExpressionUUID->"81d96ecf-336f-41c1-8760-afffecb23d93"]
}, Open  ]],
Cell[CellGroupData[{
Cell[610842, 11996, 829, 22, 83, "Input",ExpressionUUID->"2db41329-f19b-49c8-900e-34326dcabed6"],
Cell[611674, 12020, 184, 3, 33, "Output",ExpressionUUID->"9ccff50b-6443-4d54-9eda-259d44882d42"]
}, Open  ]],
Cell[CellGroupData[{
Cell[611895, 12028, 1285, 36, 67, "Input",ExpressionUUID->"a47499e5-770f-4752-8c60-3200949ff98a"],
Cell[613183, 12066, 261, 4, 36, "Output",ExpressionUUID->"052ba672-210f-48a8-b59a-f8ad23ef0624"]
}, Open  ]],
Cell[CellGroupData[{
Cell[613481, 12075, 1284, 36, 67, "Input",ExpressionUUID->"3b862597-a753-4ed8-9970-60bc0bc0f778"],
Cell[614768, 12113, 260, 4, 36, "Output",ExpressionUUID->"20d263df-1275-454b-a295-72f7d398e682"]
}, Open  ]],
Cell[CellGroupData[{
Cell[615065, 12122, 1599, 33, 33, "Input",ExpressionUUID->"58522eef-22b3-4b87-811a-852aec920e79"],
Cell[616667, 12157, 810, 15, 28, "Message",ExpressionUUID->"b828da22-7cce-4a96-8238-e3b9bf210c8c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[617514, 12177, 3038, 70, 174, "Input",ExpressionUUID->"51bf51ec-b710-484e-b49d-a6b504bafda0"],
Cell[620555, 12249, 491, 10, 28, "Message",ExpressionUUID->"06f62cf8-ca79-4c83-8a74-1c9bdbb0e459"],
Cell[621049, 12261, 488, 10, 28, "Message",ExpressionUUID->"95813798-a44b-4dcb-a824-243f77d512d6"],
Cell[621540, 12273, 491, 10, 28, "Message",ExpressionUUID->"34f5313c-0b91-48e2-b34a-4480b523c623"]
}, Open  ]],
Cell[CellGroupData[{
Cell[622068, 12288, 2368, 50, 33, "Input",ExpressionUUID->"e0891166-4fd0-4abc-ac29-1aa17e343851"],
Cell[624439, 12340, 508, 11, 28, "Message",ExpressionUUID->"bb17be4b-5a95-42fe-8799-bc4df7de32a6"],
Cell[624950, 12353, 510, 11, 28, "Message",ExpressionUUID->"d325736a-c0ba-4c6d-9742-f6bd2c4cf31b"],
Cell[625463, 12366, 508, 11, 28, "Message",ExpressionUUID->"06be90a0-7876-4267-a664-de1f83babb8a"],
Cell[625974, 12379, 469, 10, 28, "Message",ExpressionUUID->"f95d37f5-491b-45ea-91f8-12d14ce9d422"],
Cell[626446, 12391, 503, 11, 28, "Message",ExpressionUUID->"ecf5fbbc-56a2-4e4f-9026-10b4dede9d59"],
Cell[626952, 12404, 505, 11, 28, "Message",ExpressionUUID->"d548d39c-197a-4449-a09b-79f9de291d1c"],
Cell[627460, 12417, 505, 11, 28, "Message",ExpressionUUID->"67e760e0-395f-43b5-a652-3fd6ce57a355"],
Cell[627968, 12430, 467, 10, 28, "Message",ExpressionUUID->"bb281a88-ea71-4ed9-8943-398ace15258b"],
Cell[628438, 12442, 52626, 893, 613, "Output",ExpressionUUID->"8ec25ace-e38b-4e49-a4ca-c5d4a77f6f1a"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[681103, 13340, 187, 3, 54, "Subsection",ExpressionUUID->"47f78b07-c67f-4402-9b0c-31942edb48ad"],
Cell[CellGroupData[{
Cell[681315, 13347, 289, 5, 37, "Subsection",ExpressionUUID->"36fe4927-a259-44b2-bb40-eb0c3ec25870"],
Cell[681607, 13354, 1842, 49, 73, "Input",ExpressionUUID->"b1023052-e6a4-4fb1-81f8-154e39d913ab"],
Cell[CellGroupData[{
Cell[683474, 13407, 806, 22, 73, "Input",ExpressionUUID->"bf240767-9b97-404e-9aa6-6613b97b70c3"],
Cell[684283, 13431, 1469, 39, 61, "Output",ExpressionUUID->"3aab72a6-73a4-40c4-bcda-72c0ff614d01"]
}, Open  ]],
Cell[685767, 13473, 1449, 45, 71, "Input",ExpressionUUID->"f3c7a816-de55-44f8-b45a-d426ba1c5d58"],
Cell[687219, 13520, 931, 21, 52, "Input",ExpressionUUID->"a89eea58-6b69-4f50-b613-689ed3addc88"],
Cell[CellGroupData[{
Cell[688175, 13545, 1524, 36, 75, "Input",ExpressionUUID->"ba688f16-53fd-40cc-b75c-96ff66b4d37f"],
Cell[689702, 13583, 2782, 83, 92, "Output",ExpressionUUID->"2fbc4d2e-beab-47f6-9628-0b7c0b596eab"]
}, Open  ]],
Cell[692499, 13669, 4056, 88, 73, "Input",ExpressionUUID->"fb5bd9b3-72e6-4259-a865-395c06be888a"],
Cell[CellGroupData[{
Cell[696580, 13761, 1990, 46, 77, "Input",ExpressionUUID->"203d6844-ad36-4371-8937-1f01aca93b62"],
Cell[698573, 13809, 34865, 838, 235, "Output",ExpressionUUID->"74fd4acd-fc84-410d-9892-b12a8235c41c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[733475, 14652, 952, 25, 54, "Input",ExpressionUUID->"a4c361d0-8f48-4568-80e3-90bb1d301433"],
Cell[734430, 14679, 523, 11, 28, "Message",ExpressionUUID->"68faf1de-f08f-4590-98ae-34fd8b6f5b72"],
Cell[734956, 14692, 825, 22, 61, "Output",ExpressionUUID->"ad819a13-9ae4-48d8-b0df-0bfb4c4c0802"]
}, Open  ]],
Cell[CellGroupData[{
Cell[735818, 14719, 290, 6, 29, "Input",ExpressionUUID->"6f01469b-dc2c-4f35-8e07-66f895a6fb83"],
Cell[736111, 14727, 518, 13, 61, "Output",ExpressionUUID->"aac7be21-23b8-4087-8c6c-222000bc1b73"]
}, Open  ]],
Cell[CellGroupData[{
Cell[736666, 14745, 1055, 22, 52, "Input",ExpressionUUID->"fd052ac9-e85d-485e-96bf-5a80f6fe8066"],
Cell[737724, 14769, 575, 8, 33, "Output",ExpressionUUID->"b2b78cda-bbe8-454b-a285-71061150aaca"]
}, Open  ]],
Cell[CellGroupData[{
Cell[738336, 14782, 812, 19, 52, "Input",ExpressionUUID->"0b36032e-de44-444f-93b0-cdb84a2b68ad"],
Cell[739151, 14803, 321, 6, 33, "Output",ExpressionUUID->"07c69b8f-21ef-4302-ba81-b24f9e8afa70"]
}, Open  ]],
Cell[739487, 14812, 888, 21, 73, "Input",ExpressionUUID->"fec470ac-a915-4e98-9c26-9ccab6f0c4f1"],
Cell[CellGroupData[{
Cell[740400, 14837, 1512, 35, 51, "Input",ExpressionUUID->"6a2001da-6860-4a9a-b4e5-b85e4ccc40ef"],
Cell[741915, 14874, 2250, 44, 578, "Output",ExpressionUUID->"01cc928b-12ad-45bd-b956-4d7ca85eb229"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[744214, 14924, 250, 4, 54, "Subsection",ExpressionUUID->"353a32bb-5c1a-4e89-9e55-16e9eb350d2c"],
Cell[744467, 14930, 455, 9, 32, "Input",ExpressionUUID->"6546fc09-37b2-480e-b5e2-47b302487c5b"],
Cell[744925, 14941, 3829, 125, 72, "Input",ExpressionUUID->"8fd43000-0ebc-4665-99c1-a7637697916d"],
Cell[CellGroupData[{
Cell[748779, 15070, 1110, 24, 52, "Input",ExpressionUUID->"f69a916a-b9de-4111-96d0-c8a296b47164"],
Cell[749892, 15096, 357, 9, 28, "Message",ExpressionUUID->"5b95d598-92cb-4efc-99aa-77f2e294d078"],
Cell[750252, 15107, 32223, 786, 890, "Output",ExpressionUUID->"38786507-c557-4fdc-9805-350691fe66ae"]
}, Open  ]],
Cell[782490, 15896, 6092, 185, 238, "Input",ExpressionUUID->"1a578804-d0f2-47a1-b99d-570a1ef1d8df"],
Cell[788585, 16083, 982, 22, 52, "Input",ExpressionUUID->"44587aee-2805-4cbd-96b7-36a20cce1553"],
Cell[789570, 16107, 1842, 46, 75, "Input",ExpressionUUID->"1e04dba9-850d-45ab-9e06-91a10e027985"],
Cell[791415, 16155, 4528, 100, 73, "Input",ExpressionUUID->"c41fa91d-a3b7-4372-98a6-7648072fc94e"],
Cell[795946, 16257, 1442, 28, 54, "Input",ExpressionUUID->"0b41004e-102b-402d-9a16-bae9237c4c17"],
Cell[797391, 16287, 1011, 22, 71, "Input",ExpressionUUID->"4e2fcfd1-1f24-4821-bc14-5a85897734b5"],
Cell[CellGroupData[{
Cell[798427, 16313, 2087, 46, 51, "Input",ExpressionUUID->"928062ff-6a75-46b2-9a0b-9359552deda3"],
Cell[800517, 16361, 2416, 48, 613, "Output",ExpressionUUID->"5f4d9327-0526-4bd8-bdb5-9e207ee3857c"],
Cell[802936, 16411, 455, 9, 28, "Message",ExpressionUUID->"0e56a68f-6b68-446a-87ef-312a6abf6a26"],
Cell[803394, 16422, 457, 9, 28, "Message",ExpressionUUID->"c739bbb0-d7fe-4d1a-802a-99a0f83c96d7"],
Cell[803854, 16433, 456, 10, 28, "Message",ExpressionUUID->"c10e409d-053e-4686-819a-a7b79a3cf3db"],
Cell[804313, 16445, 456, 10, 28, "Message",ExpressionUUID->"ad8e4ea1-5378-4620-8238-ccd6b9117579"],
Cell[804772, 16457, 452, 9, 28, "Message",ExpressionUUID->"206f2bcf-8059-4598-bb57-87e855c65e72"],
Cell[805227, 16468, 414, 8, 28, "Message",ExpressionUUID->"8448b01e-1fa6-4ec8-97b8-c63bb58d319f"],
Cell[805644, 16478, 454, 9, 28, "Message",ExpressionUUID->"bf4d17fd-9971-4779-9e08-e9f7bd9f2a29"],
Cell[806101, 16489, 414, 8, 28, "Message",ExpressionUUID->"35ebf5a6-c34b-4a23-a2df-60f027f5596a"],
Cell[806518, 16499, 458, 10, 28, "Message",ExpressionUUID->"ff1427ae-9050-4bcb-8b05-ec7446564f13"],
Cell[806979, 16511, 456, 10, 28, "Message",ExpressionUUID->"7582a9ac-d281-4904-b852-cc9ec0f37828"],
Cell[807438, 16523, 453, 9, 28, "Message",ExpressionUUID->"eb9ae5f5-48ad-44f0-91c2-86234b0ce08a"],
Cell[807894, 16534, 453, 9, 28, "Message",ExpressionUUID->"1260fca0-f1d0-4d09-bcf3-6fcf71e821ec"],
Cell[808350, 16545, 452, 9, 28, "Message",ExpressionUUID->"68e7622d-72c8-4dd2-92b2-55bfea5d98a3"],
Cell[808805, 16556, 414, 8, 28, "Message",ExpressionUUID->"1c53cad9-3dab-4384-8727-d0a98d418758"],
Cell[809222, 16566, 450, 9, 28, "Message",ExpressionUUID->"2cc8a812-109d-4175-87c4-2f7b6e538926"],
Cell[809675, 16577, 414, 8, 28, "Message",ExpressionUUID->"f660e304-c9e8-41e7-9023-ceb8a8d82764"]
}, Open  ]],
Cell[CellGroupData[{
Cell[810126, 16590, 160, 3, 45, "Subsubsection",ExpressionUUID->"557a7af8-eefe-4976-b764-250cd81c3bf7"],
Cell[810289, 16595, 290, 7, 52, "Input",ExpressionUUID->"66fb95ef-00c0-41f0-801b-21fbaa7b08eb"],
Cell[810582, 16604, 5774, 170, 115, "Input",ExpressionUUID->"72224f27-d9b0-40cd-a383-1ce294b25bca"],
Cell[816359, 16776, 734, 16, 71, "Input",ExpressionUUID->"53ff1a90-32ce-45fa-9ca7-7a279eb10699"],
Cell[CellGroupData[{
Cell[817118, 16796, 600, 15, 71, "Input",ExpressionUUID->"d4ac17c2-3498-4af4-a4fd-66f154f7e56f"],
Cell[817721, 16813, 220, 4, 48, "Output",ExpressionUUID->"a52321b9-99a9-45da-ad85-41ef415d3d59"]
}, Open  ]],
Cell[CellGroupData[{
Cell[817978, 16822, 800, 25, 67, "Input",ExpressionUUID->"eb4b2b73-21a3-42c9-a39a-4a9b8bd43f3f"],
Cell[818781, 16849, 217, 3, 33, "Output",ExpressionUUID->"303e10b1-5b86-4b30-babe-4f792739e6d2"]
}, Open  ]],
Cell[819013, 16855, 1723, 49, 94, "Input",ExpressionUUID->"7a951577-d442-4764-97f2-be4c6f8662fd"],
Cell[CellGroupData[{
Cell[820761, 16908, 2186, 42, 33, "Input",ExpressionUUID->"234606cd-0c56-4b5c-a2b8-d4433ae98476"],
Cell[822950, 16952, 1152, 20, 28, "Message",ExpressionUUID->"da9a9a2f-54b7-4a45-92e2-5147a32cf825"]
}, Open  ]],
Cell[CellGroupData[{
Cell[824139, 16977, 4282, 94, 216, "Input",ExpressionUUID->"ab279bd6-3b53-497d-aab0-1f69cd520970"],
Cell[828424, 17073, 521, 11, 28, "Message",ExpressionUUID->"aae3ad5a-7ec8-40a4-b45b-2c4596c1f105"],
Cell[828948, 17086, 513, 12, 28, "Message",ExpressionUUID->"1554fa04-03a6-4a72-ab28-198b9199983c"],
Cell[829464, 17100, 524, 12, 28, "Message",ExpressionUUID->"902d3412-7819-46fc-8743-06508bc4caa2"],
Cell[829991, 17114, 519, 11, 28, "Message",ExpressionUUID->"6150bea2-d6bd-4d87-974c-db1171da9771"],
Cell[830513, 17127, 524, 12, 28, "Message",ExpressionUUID->"5c64a448-6f2f-4664-806b-048263f200fc"],
Cell[831040, 17141, 524, 12, 28, "Message",ExpressionUUID->"0de3d4b2-c647-4ee8-988b-258a3338f2a6"],
Cell[831567, 17155, 524, 12, 28, "Message",ExpressionUUID->"62887be8-ce38-4372-b3e6-1769c110ecda"]
}, Open  ]],
Cell[CellGroupData[{
Cell[832128, 17172, 3137, 63, 55, "Input",ExpressionUUID->"d1867a21-95d4-4ef5-8a6a-6f8b494e6afd"],
Cell[835268, 17237, 651, 13, 28, "Message",ExpressionUUID->"c80d1290-2377-4e37-8835-996a3a7eff79"],
Cell[835922, 17252, 653, 13, 28, "Message",ExpressionUUID->"1ab11b52-d653-4f10-8de6-036acdb9d7bb"],
Cell[836578, 17267, 651, 13, 28, "Message",ExpressionUUID->"0ff58bad-d74f-4460-987f-482b131ff305"],
Cell[837232, 17282, 612, 12, 28, "Message",ExpressionUUID->"aa300f3d-6914-4d80-8bd6-249d5a3bceeb"],
Cell[837847, 17296, 44333, 759, 613, "Output",ExpressionUUID->"3c79622b-59f9-4905-b7b1-20874f6eac71"]
}, Open  ]],
Cell[CellGroupData[{
Cell[882217, 18060, 243, 4, 29, "Input",ExpressionUUID->"72dee9e4-f7ba-4e38-934b-622cb8f77c21"],
Cell[882463, 18066, 43682, 754, 472, "Output",ExpressionUUID->"eb46f1ec-2b00-447e-bfd7-64083fc9cede"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[926194, 18826, 163, 3, 45, "Subsubsection",ExpressionUUID->"e52670d0-9a65-4133-b8fd-2f147517e8d0"],
Cell[926360, 18831, 1398, 36, 73, "Input",ExpressionUUID->"574d39ae-8f07-46d0-a1d2-8ea6d37e64dc"],
Cell[927761, 18869, 417, 10, 92, "Input",ExpressionUUID->"8a920543-6dde-4fca-8a6c-43b80401f658"],
Cell[CellGroupData[{
Cell[928203, 18883, 2272, 43, 33, "Input",ExpressionUUID->"ad45994c-d5a4-4597-9f51-67b60d57be9b"],
Cell[930478, 18928, 397, 9, 28, "Message",ExpressionUUID->"1f067590-2339-451c-87f5-62265664e1e4"]
}, Open  ]],
Cell[930890, 18940, 3010, 54, 92, "Input",ExpressionUUID->"b5e90771-a6e4-4a36-94b7-1d190f3d3f12"],
Cell[CellGroupData[{
Cell[933925, 18998, 3016, 61, 33, "Input",ExpressionUUID->"47b7363f-7298-4111-953d-11babe656180"],
Cell[936944, 19061, 263613, 4342, 613, "Output",ExpressionUUID->"91ef7604-7f74-4fb5-8c90-d30403e50e3a"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

