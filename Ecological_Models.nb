(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    768060,      14633]
NotebookOptionsPosition[    753132,      14417]
NotebookOutlinePosition[    753570,      14434]
CellTagsIndexPosition[    753527,      14431]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Ecological Models", "Title",
 CellChangeTimes->{{3.887783532393198*^9, 
  3.8877835364706507`*^9}},ExpressionUUID->"4f8dd6d0-bdcb-4e22-8002-\
cec151dc518d"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Predator - Prey system", "Section",
 FontColor->RGBColor[
  0.7607843137254902, 0.29411764705882354`, 0.08235294117647059]]], "Section",\

 CellChangeTimes->{{3.887794370414534*^9, 
  3.8877943817005157`*^9}},ExpressionUUID->"934bac1c-9c7c-4aaf-8375-\
244abd6c5bbe"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Dynamical", " ", "system", " ", "for", " ", "a", " ", "prey", 
     RowBox[{"(", "x", ")"}]}], "-", 
    RowBox[{"predator", 
     RowBox[{"(", "y", ")"}], " ", "system"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"de1", ":=", 
    RowBox[{
     RowBox[{"x", "'"}], "=", 
     RowBox[{
      RowBox[{"a", "*", "x"}], "-", 
      RowBox[{"b", "*", "x", "*", "y"}]}]}]}], "\[IndentingNewLine]", 
   RowBox[{"de2", ":=", 
    RowBox[{
     RowBox[{"y", "'"}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "c"}], "*", "y"}], "+", 
      RowBox[{"d", "*", "x", "*", "y"}]}]}]}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.887717609462604*^9, 3.8877176484521923`*^9}, {
  3.8877811369759207`*^9, 3.887781169078684*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"4f2b3283-30ed-4a70-be21-a08102c8b296"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Define", " ", "the", " ", "differential", " ", "equations", " ", "in", 
    " ", "terms", " ", "of", " ", "their", " ", "variables"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Prey", "[", 
      RowBox[{"a_", ",", "b_"}], "]"}], "=", "de1"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Predator", "[", 
      RowBox[{"c_", ",", "d_"}], "]"}], "=", "de2"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.8877176526600943`*^9, 3.887717690874249*^9}, {
  3.8877811773912907`*^9, 3.887781199966773*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"80a92158-4335-4178-8e6e-ef7d7e9ab438"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Plot", " ", "the", " ", "prey"}], "-", 
    RowBox[{"predator", " ", "dynamical", " ", "system"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Assumed", " ", "a"}], ",", " ", "b", ",", " ", "c", ",", " ", 
    RowBox[{"d", " ", ">", " ", "0"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"In", " ", "this", " ", "system"}], ",", " ", 
    RowBox[{
     RowBox[{
     "there", " ", "is", " ", "no", " ", "assumption", " ", "on", " ", "the", 
      " ", 
      RowBox[{"Prey", "'"}], "s", " ", "food", " ", "source"}], " ", "->", 
     " ", 
     RowBox[{"assumed", " ", "unlimited"}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Manipulate", "[", 
   RowBox[{
    RowBox[{"StreamPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Prey", "[", 
         RowBox[{"a", ",", "b"}], "]"}], ",", 
        RowBox[{"Predator", "[", 
         RowBox[{"c", ",", "d"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", "10"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", "0", ",", "10"}], "}"}], ",", 
      RowBox[{"FrameLabel", "->", 
       RowBox[{"{", 
        RowBox[{"\"\<Prey\>\"", ",", "\"\<Predator\>\""}], "}"}]}]}], "]"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", "0", ",", "10", ",", 
      RowBox[{"Appearance", "->", "\"\<Open\>\""}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"b", ",", "0", ",", "10", ",", 
      RowBox[{"Appearance", "->", "\"\<Open\>\""}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"c", ",", "0", ",", "10", ",", 
      RowBox[{"Appearance", "->", "\"\<Open\>\""}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"d", ",", "0", ",", "10", ",", 
      RowBox[{"Appearance", "->", "\"\<Open\>\""}]}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.887717697850222*^9, 3.887717748754854*^9}, {
  3.887717799845435*^9, 3.887717802690984*^9}, {3.887781045210868*^9, 
  3.887781064224286*^9}, {3.88778110286388*^9, 3.88778116259156*^9}, {
  3.8877812018870564`*^9, 3.8877812131831503`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"10ab93a6-55c7-40af-88f0-28f4b690b097"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 0, $CellContext`b$$ = 
    0, $CellContext`c$$ = 0, $CellContext`d$$ = 0, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`a$$], 0, 10}, {
      Hold[$CellContext`b$$], 0, 10}, {
      Hold[$CellContext`c$$], 0, 10}, {
      Hold[$CellContext`d$$], 0, 10}}, Typeset`size$$ = {
    360., {178., 182.3515625}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`a$$ = 0, $CellContext`b$$ = 
        0, $CellContext`c$$ = 0, $CellContext`d$$ = 0}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> StreamPlot[{
         $CellContext`Prey[$CellContext`a$$, $CellContext`b$$], 
         $CellContext`Predator[$CellContext`c$$, $CellContext`d$$]}, \
{$CellContext`x, 0, 10}, {$CellContext`y, 0, 10}, 
        FrameLabel -> {"Prey", "Predator"}], 
      "Specifications" :> {{$CellContext`a$$, 0, 10, Appearance -> 
         "Open"}, {$CellContext`b$$, 0, 10, Appearance -> 
         "Open"}, {$CellContext`c$$, 0, 10, Appearance -> 
         "Open"}, {$CellContext`d$$, 0, 10, Appearance -> "Open"}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{406., {300.6875, 306.3125}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.8877177497423773`*^9, 3.887717806199462*^9, {3.887781033088161*^9, 
   3.887781064719802*^9}, 3.887795459242052*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"54e0b0a2-e42d-423d-a3fa-e48069b7be9e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Application to Cosmology", "Chapter",
 FontColor->RGBColor[
  0.7607843137254902, 0.29411764705882354`, 0.08235294117647059]]], "Section",\

 CellChangeTimes->{{3.8877835489666653`*^9, 
  3.8877835541991367`*^9}},ExpressionUUID->"baa56de3-431e-4ef1-bafa-\
11fe058a1dbb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Define", " ", "the", " ", "dynamical", " ", "system", " ", "for", " ", 
    "coupled", " ", "dark", " ", "matter", " ", 
    RowBox[{"(", "z", ")"}], " ", "and", " ", "dark", " ", "energy", " ", 
    RowBox[{"(", "x", ")"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"dex", ":=", 
    RowBox[{
     RowBox[{"x", "'"}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "3"}], "*", "x", "*", 
       RowBox[{"(", 
        RowBox[{"1", "+", "wx"}], ")"}]}], "-", 
      RowBox[{"q", "*", "x", "*", "z"}]}]}]}], "\[IndentingNewLine]", 
   RowBox[{"dez", ":=", 
    RowBox[{
     RowBox[{"z", "'"}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "3"}], "*", "z"}], " ", "+", " ", 
      RowBox[{"q", "*", "x", "*", "z"}]}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.88778352760754*^9, 3.887783529359799*^9}, {
  3.8877836089673634`*^9, 3.887783636614414*^9}, {3.8877945671764097`*^9, 
  3.8877945681823*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"a1875164-ac45-472d-8739-d7ae5793612b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Find", " ", "the", " ", "fixed", " ", "points", " ", "of", " ", "the", 
    " ", "system"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"FPs", "=", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"dex", "==", "0"}], ",", 
       RowBox[{"dez", "==", "0"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "z"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.887783835950109*^9, 3.8877838945109367`*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"3c910a45-46ea-44f4-8300-154a37136f60"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "0"}], ",", 
     RowBox[{"z", "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", 
      FractionBox["3", "q"]}], ",", 
     RowBox[{"z", "\[Rule]", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"3", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", "wx"}], ")"}]}], "q"]}]}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.887783886343814*^9, 3.887783894791018*^9}, 
   3.8877954596027327`*^9, 3.888388004573082*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"908c68f3-ca9b-4f94-b638-c76da09ed1f2"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"FP", "[", "1", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "/.", 
      RowBox[{"FPs", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ",", 
     RowBox[{"z", "/.", 
      RowBox[{"FPs", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "2"}], "]"}], "]"}]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FP", "[", "2", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "/.", 
      RowBox[{"FPs", "[", 
       RowBox[{"[", 
        RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ",", 
     RowBox[{"z", "/.", 
      RowBox[{"FPs", "[", 
       RowBox[{"[", 
        RowBox[{"2", ",", "2"}], "]"}], "]"}]}]}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.888387992800191*^9, 3.888387994336494*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"2527b036-8a35-4803-aa90-f57f6c7210f4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Put", " ", "fixed", " ", "points", " ", "into", " ", "a", " ", "table"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"FPs", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"FP", "[", "i", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "2"}], "}"}]}], "]"}]}], ";"}]}]], "Input",\

 CellChangeTimes->{{3.8672143768787384`*^9, 3.8672144154966393`*^9}, {
   3.867224467122445*^9, 3.8672244725038586`*^9}, {3.868024836545911*^9, 
   3.868024837240116*^9}, 3.868958478845225*^9, 3.869126991902952*^9, 
   3.882269611642425*^9, {3.884941331752728*^9, 3.884941333151639*^9}, 
   3.887977524370623*^9, {3.8880648874787903`*^9, 3.888064887583043*^9}, {
   3.8883866629648542`*^9, 3.8883866668787622`*^9}, {3.888387685986022*^9, 
   3.888387686065666*^9}, 3.8883879975772333`*^9},
 CellLabel->"In[21]:=",ExpressionUUID->"6bbb93db-9be2-440e-bc00-a260b4f33e6d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Find", " ", "the", " ", "4", "D", " ", "Jacobian", " ", "matrix", " ", 
    "for", " ", "general", " ", "system", " ", "of", " ", 
    RowBox[{"equations", ".", " ", 
     RowBox[{"D", "[", "]"}]}], " ", "differentiates", " ", "each", " ", 
    "expression"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"J", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{"dex", ",", "x"}], "]"}], ",", 
          RowBox[{"D", "[", 
           RowBox[{"dex", ",", "z"}], "]"}]}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{"dez", ",", "x"}], "]"}], ",", 
          RowBox[{"D", "[", 
           RowBox[{"dez", ",", "z"}], "]"}]}], "}"}]}], "}"}], "]"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{"J", "//", "MatrixForm"}]}]}]], "Input",
 CellChangeTimes->{{3.8672146504912844`*^9, 3.867214712242198*^9}, {
  3.868944173552453*^9, 3.8689441811471653`*^9}, {3.883803822024252*^9, 
  3.88380382370331*^9}, {3.8849413374850473`*^9, 3.884941360072496*^9}, {
  3.888064788786353*^9, 3.888064809682465*^9}, {3.888386676661456*^9, 
  3.888386680406108*^9}, {3.8883878754897747`*^9, 3.8883878820335407`*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"724a626f-8f7a-40fa-9279-fb024d12a3c6"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"-", "3"}], "-", 
       RowBox[{"3", " ", "wx"}], "-", 
       RowBox[{"q", " ", "z"}]}], 
      RowBox[{
       RowBox[{"-", "q"}], " ", "x"}]},
     {
      RowBox[{"q", " ", "z"}], 
      RowBox[{
       RowBox[{"-", "3"}], "+", 
       RowBox[{"q", " ", "x"}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.884941390016919*^9, 3.884941450774749*^9, 
  3.884951190746726*^9, 3.8849512243211927`*^9, 3.8849512959086*^9, 
  3.8849513770966473`*^9, 3.884951420088645*^9, 3.884951801152663*^9, 
  3.8856222380041313`*^9, 3.885622503437155*^9, 3.885622645722885*^9, 
  3.8856396859627447`*^9, 3.885641687124854*^9, 3.885641923813918*^9, 
  3.88587511869125*^9, 3.885876467769642*^9, 3.885876603385765*^9, 
  3.885877104064621*^9, 3.8858771736928043`*^9, 3.88587958359562*^9, 
  3.885881073673758*^9, 3.885983970789137*^9, 3.8873508071776*^9, 
  3.887360789290834*^9, 3.8874370788470163`*^9, 3.887437220357789*^9, 
  3.887439218237136*^9, 3.8879775365170116`*^9, 3.8880648891890306`*^9, 
  3.888310946981617*^9, 3.88838491217284*^9, 3.8883858276275377`*^9, 
  3.88838669514375*^9, 3.888386761641879*^9, 3.888387939714788*^9, 
  3.888388007643704*^9},
 CellLabel->
  "Out[23]//MatrixForm=",ExpressionUUID->"c6fdd1c6-2200-44aa-bbbd-\
5481c615b3b9"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Find", " ", "the", " ", "Jacobian", " ", "and", " ", "eigenvalues", " ", 
    "for", " ", "each", " ", "fixed", " ", "point"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"FPTable", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"FPs", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "//", "MatrixForm"}], ",", 
        RowBox[{
         RowBox[{"Simplify", "[", 
          RowBox[{"J", "/.", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"x", "->", 
              RowBox[{"FPs", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "1"}], "]"}], "]"}]}], ",", 
             RowBox[{"z", "->", 
              RowBox[{"FPs", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "2"}], "]"}], "]"}]}]}], "}"}]}], "]"}], "//",
          "MatrixForm"}], ",", 
        RowBox[{
         RowBox[{"Eigenvalues", "[", 
          RowBox[{"J", "/.", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"x", "->", 
              RowBox[{"FPs", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "1"}], "]"}], "]"}]}], ",", 
             RowBox[{"z", "->", 
              RowBox[{"FPs", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "2"}], "]"}], "]"}]}]}], "}"}]}], "]"}], "//",
          "MatrixForm"}], ",", 
        RowBox[{
         RowBox[{"Eigenvectors", "[", 
          RowBox[{"J", "/.", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"x", "->", 
              RowBox[{"FPs", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "1"}], "]"}], "]"}]}], ",", 
             RowBox[{"z", "->", 
              RowBox[{"FPs", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "2"}], "]"}], "]"}]}]}], "}"}]}], "]"}], "//",
          "MatrixForm"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "2"}], "}"}]}], "]"}]}], ";"}]}]], "Input",\

 CellChangeTimes->{{3.867225318077546*^9, 3.8672254169870214`*^9}, {
   3.867225448024709*^9, 3.8672254542249594`*^9}, {3.8672255001121364`*^9, 
   3.8672255191902294`*^9}, {3.8672255581112022`*^9, 
   3.8672255642188787`*^9}, {3.8672255973534174`*^9, 
   3.8672256274971313`*^9}, {3.8672256839287667`*^9, 
   3.8672256945159383`*^9}, {3.867225730109685*^9, 3.867225738455241*^9}, {
   3.8672257699330273`*^9, 3.867225778278576*^9}, {3.867225811278432*^9, 
   3.86722581683035*^9}, {3.867225903530884*^9, 3.8672259267803965`*^9}, {
   3.867225979984497*^9, 3.867225987304329*^9}, 3.867226143110686*^9, {
   3.867227332365857*^9, 3.867227342142587*^9}, {3.867407053817068*^9, 
   3.8674070581695633`*^9}, {3.8680242099370823`*^9, 3.868024213440816*^9}, {
   3.868024365757309*^9, 3.8680243705990753`*^9}, {3.8680245930712137`*^9, 
   3.8680246064401407`*^9}, {3.8680247507314663`*^9, 3.868024752328637*^9}, {
   3.8689441880925694`*^9, 3.8689441917923965`*^9}, 3.868956001836708*^9, 
   3.8689590190222435`*^9, {3.869126738407119*^9, 3.8691267437236*^9}, 
   3.869126782049677*^9, {3.869127818860439*^9, 3.869127857050398*^9}, 
   3.8691279323005037`*^9, 3.869128019515766*^9, {3.8691294821423035`*^9, 
   3.869129491277402*^9}, {3.869197845521573*^9, 3.869197845678837*^9}, {
   3.87163244715317*^9, 3.8716324493928595`*^9}, {3.8716327635423284`*^9, 
   3.8716327651125145`*^9}, 3.8777566945081463`*^9, {3.8777569014323*^9, 
   3.877756902992178*^9}, 3.882269477299637*^9, 3.8822696146808777`*^9, {
   3.884941367280037*^9, 3.884941402363988*^9}, {3.884941530288258*^9, 
   3.884941535802528*^9}, {3.8849416037112207`*^9, 3.88494162633784*^9}, 
   3.88797755141038*^9, {3.8880648989189*^9, 3.888064918294055*^9}, {
   3.888386700285853*^9, 3.888386700909945*^9}, {3.888387946270321*^9, 
   3.888387946657957*^9}, 3.8883880011953497`*^9},
 CellLabel->"In[24]:=",ExpressionUUID->"98391c92-751f-4913-a7df-e13d3b9cf583"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Use", " ", "TableForm", " ", "to", " ", "display", " ", "the", " ", 
    "fixed", " ", "points", " ", "with", " ", "their", " ", "Jacobian", " ", 
    "matrix", " ", "and", " ", "eigenvalues"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"FPTable", "=", 
   RowBox[{"TableForm", "[", 
    RowBox[{"FPTable", ",", 
     RowBox[{"TableHeadings", "->", 
      RowBox[{"{", 
       RowBox[{"None", ",", 
        RowBox[{"{", 
         RowBox[{
         "\"\<Fixed Point\>\"", ",", "\"\<Jacobian\>\"", ",", 
          "\"\<Eigenvalues\>\"", ",", "\"\<Eigenvectors\>\""}], "}"}]}], 
       "}"}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8674732571734056`*^9, 3.8674733087235513`*^9}, {
   3.8680240454027176`*^9, 3.8680240517453375`*^9}, {3.868944198427647*^9, 
   3.8689442010925846`*^9}, {3.8691296342126307`*^9, 3.869129635352618*^9}, {
   3.8691296836226945`*^9, 3.8691297054374857`*^9}, 3.8691297421488905`*^9, {
   3.8691297832126884`*^9, 3.869129802932803*^9}, {3.8777567702425528`*^9, 
   3.8777567889867887`*^9}, {3.877756859522192*^9, 3.8777568704743633`*^9}, {
   3.877756944239081*^9, 3.8777569721182117`*^9}, {3.883803874115755*^9, 
   3.8838039117033367`*^9}, {3.884941538839074*^9, 3.884941542102433*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"79976a66-8e8b-4e03-9a78-1cb5b7e7156e"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      TagBox["\<\"Fixed Point\"\>",
       HoldForm], 
      TagBox["\<\"Jacobian\"\>",
       HoldForm], 
      TagBox["\<\"Eigenvalues\"\>",
       HoldForm], 
      TagBox["\<\"Eigenvectors\"\>",
       HoldForm]},
     {
      TagBox[
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {
           RowBox[{
            RowBox[{"-", "3"}], " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", "wx"}], ")"}]}], "0"},
          {"0", 
           RowBox[{"-", "3"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            RowBox[{"-", "3"}]},
           {
            RowBox[{"3", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "-", "wx"}], ")"}]}]}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "1"},
          {"1", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]]},
     {
      TagBox[
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            FractionBox["3", "q"]},
           {
            RowBox[{"-", 
             FractionBox[
              RowBox[{"3", " ", 
               RowBox[{"(", 
                RowBox[{"1", "+", "wx"}], ")"}]}], "q"]}]}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", 
           RowBox[{"-", "3"}]},
          {
           RowBox[{
            RowBox[{"-", "3"}], " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", "wx"}], ")"}]}], "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            RowBox[{
             RowBox[{"-", "3"}], " ", 
             SqrtBox[
              RowBox[{"1", "+", "wx"}]]}]},
           {
            RowBox[{"3", " ", 
             SqrtBox[
              RowBox[{"1", "+", "wx"}]]}]}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {
           FractionBox["1", 
            SqrtBox[
             RowBox[{"1", "+", "wx"}]]], "1"},
          {
           RowBox[{"-", 
            FractionBox["1", 
             SqrtBox[
              RowBox[{"1", "+", "wx"}]]]}], "1"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{
     "Columns" -> {{False}}, "Rows" -> {False, True, {False}, False}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   {None, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {
     None, {"Fixed Point", "Jacobian", "Eigenvalues", 
       "Eigenvectors"}}]]]], "Output",
 CellChangeTimes->{
  3.884941454690998*^9, {3.884941542933641*^9, 3.884941546476881*^9}, {
   3.884941605209611*^9, 3.884941629149145*^9}, 3.88495119079465*^9, 
   3.88495122436862*^9, 3.8849512959610043`*^9, 3.884951377134953*^9, 
   3.8849514201387043`*^9, 3.8849518012042103`*^9, 3.88562223805123*^9, 
   3.885622503492572*^9, 3.8856226457884483`*^9, 3.8856396860561047`*^9, 
   3.8856416872205048`*^9, 3.88564192395665*^9, 3.885875118753622*^9, 
   3.885876467829794*^9, 3.88587660344481*^9, 3.885877104125065*^9, 
   3.8858771737497377`*^9, 3.885879583665038*^9, 3.8858810737327747`*^9, 
   3.885983970859274*^9, 3.8873508072443657`*^9, 3.887360789363636*^9, 
   3.8874370789522543`*^9, 3.8874372204501667`*^9, 3.8874392183274717`*^9, 
   3.887977553478746*^9, 3.888064921266267*^9, 3.888310947009956*^9, 
   3.888384915379505*^9, 3.888385827648429*^9, 3.888386703120358*^9, 
   3.888386763050202*^9, 3.8883879486553*^9, 3.888388009936681*^9},
 CellLabel->
  "Out[25]//TableForm=",ExpressionUUID->"f9f1f653-c422-4875-bdf6-\
f7ec75b70a7c"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Define", " ", "the", " ", "differential", " ", "equations", " ", "in", 
    " ", "terms", " ", "of", " ", "their", " ", "variables"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"DE", "[", 
      RowBox[{"wx_", ",", "q_"}], "]"}], "=", "dex"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"DM", "[", "q_", "]"}], "=", "dez"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.887783657511712*^9, 3.887783686624045*^9}, {
  3.887783776422574*^9, 3.887783778430128*^9}},
 CellLabel->
  "In[184]:=",ExpressionUUID->"7c14175f-1b58-4be5-b371-72a2f40bd6cd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"StreamPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"DE", "[", 
        RowBox[{"wx", ",", "q"}], "]"}], ",", 
       RowBox[{"DM", "[", "q", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"z", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"FrameLabel", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<x\>\"", ",", "\"\<z\>\""}], "}"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"q", ",", "0", ",", "20", ",", 
     RowBox[{"Appearance", "->", "\"\<Open\>\""}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"wx", ",", 
     RowBox[{"-", "2"}], ",", "2", ",", 
     RowBox[{"Appearance", "->", "\"\<Open\>\""}]}], "}"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.88780538479677*^9, 3.887805484355207*^9}, {
  3.887805564447641*^9, 3.887805565013872*^9}},
 CellLabel->
  "In[187]:=",ExpressionUUID->"770db4d9-3641-48af-a5b1-738640a46834"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`q$$ = Rational[11, 2], $CellContext`wx$$ = 
    Rational[-3, 2], Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`q$$], 0, 20}, {
      Hold[$CellContext`wx$$], -2, 2}}, Typeset`size$$ = {
    360., {176., 181.2578125}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`q$$ = 0, $CellContext`wx$$ = -2}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> StreamPlot[{
         $CellContext`DE[$CellContext`wx$$, $CellContext`q$$], 
         $CellContext`DM[$CellContext`q$$]}, {$CellContext`x, 0, 
         1}, {$CellContext`z, 0, 1}, FrameLabel -> {"x", "z"}], 
      "Specifications" :> {{$CellContext`q$$, 0, 20, Appearance -> 
         "Open"}, {$CellContext`wx$$, -2, 2, Appearance -> "Open"}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{406., {254.1875, 259.8125}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.887805450105678*^9, 3.887805500580658*^9}, 
   3.887805565373466*^9},
 CellLabel->
  "Out[187]=",ExpressionUUID->"ca2d3fe5-f89b-4f0f-af6d-6b41a94e010a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Modified Energy Density System",
 FontColor->RGBColor[
  0.7607843137254902, 0.29411764705882354`, 0.08235294117647059]]], "Section",\

 CellChangeTimes->{{3.887794485950898*^9, 
  3.887794492608836*^9}},ExpressionUUID->"1986ee19-e1e4-40ed-ad83-\
0a8b363a8d07"],

Cell[CellGroupData[{

Cell["x - z Phase Space", "Subsection",
 CellChangeTimes->{{3.888396757108968*^9, 
  3.8883967792116327`*^9}},ExpressionUUID->"f0afda35-ef1e-49d2-a869-\
54c3757c6752"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Define", " ", "the", " ", "dynamical", " ", "system", " ", "for", " ", 
    "coupled", " ", "dark", " ", "matter", " ", 
    RowBox[{"(", "z", ")"}], " ", "and", " ", "dark", " ", "energy", " ", 
    RowBox[{"(", "x", ")"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"dex", ":=", 
    RowBox[{
     RowBox[{"x", "'"}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "3"}], "*", "x", "*", 
       RowBox[{"(", 
        RowBox[{"1", "+", "wx", "+", 
         RowBox[{"\[Epsilon]", "*", "x"}]}], ")"}]}], "-", 
      RowBox[{"q", "*", "x", "*", "z"}]}]}]}], "\[IndentingNewLine]", 
   RowBox[{"dez", ":=", 
    RowBox[{
     RowBox[{"z", "'"}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "3"}], "*", "z"}], " ", "+", " ", 
      RowBox[{"q", "*", "x", "*", "z"}]}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.88778352760754*^9, 3.887783529359799*^9}, {
  3.8877836089673634`*^9, 3.887783636614414*^9}, {3.8877945671764097`*^9, 
  3.887794595132979*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"1b61d005-30c6-4387-a72d-e7cb1b20bebd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Find", " ", "the", " ", "fixed", " ", "points", " ", "of", " ", "the", 
    " ", "system"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"FPs", "=", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"dex", "==", "0"}], ",", 
       RowBox[{"dez", "==", "0"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "z"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.887783835950109*^9, 3.8877838945109367`*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"e5bb7e66-b80f-4782-8394-c56e1d4025dc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", 
      FractionBox["3", "q"]}], ",", 
     RowBox[{"z", "\[Rule]", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"3", " ", 
         RowBox[{"(", 
          RowBox[{"q", "+", 
           RowBox[{"q", " ", "wx"}], "+", 
           RowBox[{"3", " ", "\[Epsilon]"}]}], ")"}]}], 
        SuperscriptBox["q", "2"]]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "0"}], ",", 
     RowBox[{"z", "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"1", "+", "wx"}], "\[Epsilon]"]}]}], ",", 
     RowBox[{"z", "\[Rule]", "0"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.887783886343814*^9, 3.887783894791018*^9}, 
   3.887794602662032*^9, 3.887795460207513*^9, 3.887796811979241*^9, 
   3.88838793728578*^9, 3.888393308727167*^9, 3.888399217107098*^9, 
   3.888401640037324*^9, 3.888402175991043*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"084f85a9-cd7e-4efd-a1b9-480aff84470f"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"FP", "[", "1", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "/.", 
      RowBox[{"FPs", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ",", 
     RowBox[{"z", "/.", 
      RowBox[{"FPs", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "2"}], "]"}], "]"}]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FP", "[", "2", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "/.", 
      RowBox[{"FPs", "[", 
       RowBox[{"[", 
        RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ",", 
     RowBox[{"z", "/.", 
      RowBox[{"FPs", "[", 
       RowBox[{"[", 
        RowBox[{"2", ",", "2"}], "]"}], "]"}]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FP", "[", "3", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "/.", 
      RowBox[{"FPs", "[", 
       RowBox[{"[", 
        RowBox[{"3", ",", "1"}], "]"}], "]"}]}], ",", 
     RowBox[{"z", "/.", 
      RowBox[{"FPs", "[", 
       RowBox[{"[", 
        RowBox[{"3", ",", "2"}], "]"}], "]"}]}]}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.887794606869719*^9, 3.887794612900786*^9}, {
  3.888387673082815*^9, 3.8883876780179157`*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"c7094358-c68c-4901-99e8-e89144fef781"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Put", " ", "fixed", " ", "points", " ", "into", " ", "a", " ", "table"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"FPs", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"FP", "[", "i", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "3"}], "}"}]}], "]"}]}], ";"}]}]], "Input",\

 CellChangeTimes->{{3.8672143768787384`*^9, 3.8672144154966393`*^9}, {
   3.867224467122445*^9, 3.8672244725038586`*^9}, {3.868024836545911*^9, 
   3.868024837240116*^9}, 3.868958478845225*^9, 3.869126991902952*^9, 
   3.882269611642425*^9, {3.884941331752728*^9, 3.884941333151639*^9}, 
   3.887977524370623*^9, {3.8880648874787903`*^9, 3.888064887583043*^9}, {
   3.8883866629648542`*^9, 3.8883866668787622`*^9}, {3.888387685986022*^9, 
   3.888387686065666*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"0580e945-1232-43c3-be44-c0b4ef8b727b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Find", " ", "the", " ", "4", "D", " ", "Jacobian", " ", "matrix", " ", 
    "for", " ", "general", " ", "system", " ", "of", " ", 
    RowBox[{"equations", ".", " ", 
     RowBox[{"D", "[", "]"}]}], " ", "differentiates", " ", "each", " ", 
    "expression"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"J", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{"dex", ",", "x"}], "]"}], ",", 
          RowBox[{"D", "[", 
           RowBox[{"dex", ",", "z"}], "]"}]}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{"dez", ",", "x"}], "]"}], ",", 
          RowBox[{"D", "[", 
           RowBox[{"dez", ",", "z"}], "]"}]}], "}"}]}], "}"}], "]"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{"J", "//", "MatrixForm"}]}]}]], "Input",
 CellChangeTimes->{{3.8672146504912844`*^9, 3.867214712242198*^9}, {
  3.868944173552453*^9, 3.8689441811471653`*^9}, {3.883803822024252*^9, 
  3.88380382370331*^9}, {3.8849413374850473`*^9, 3.884941360072496*^9}, {
  3.888064788786353*^9, 3.888064809682465*^9}, {3.888386676661456*^9, 
  3.888386680406108*^9}, {3.8883878754897747`*^9, 3.8883878820335407`*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"8fd7f574-1f97-40cf-bc9e-54b8c4370a45"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"-", "3"}], "-", 
       RowBox[{"3", " ", "wx"}], "-", 
       RowBox[{"q", " ", "z"}], "-", 
       RowBox[{"6", " ", "x", " ", "\[Epsilon]"}]}], 
      RowBox[{
       RowBox[{"-", "q"}], " ", "x"}]},
     {
      RowBox[{"q", " ", "z"}], 
      RowBox[{
       RowBox[{"-", "3"}], "+", 
       RowBox[{"q", " ", "x"}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGBQB+JZXQc4P3x847jvVIQgiNZ7ev3SFyBt5s51HUQ7CP+9
D6L3iCu/AtF615reg+h5j1TkvwLpG4oHqm0+v3HU+ft2Doh+oLh9HYg+d24f
gyuI/vf4F4iex10l4Qakd8hd+7odSL9YUDFvB5A2iMhZD6ITBJnegegS7W3f
QHQQ/2flXUA6t9/0Hoie4xAp8xZIP1v3tKnj2xvHZr+VSb1A+pDU7UWbgDRT
cfcWED1vmvu6zUA6plugY9f3N45dPGr6T4F0RmZ8SOwPoL3trEWNQPqUSMkT
ED1r5pOAJiDt1mUSCaK775e9AdGTpT52twLpp4nL8zqA9EFG9bmdQDpItuIB
iAYAHUu9dQ==
  "],
 CellLabel->
  "Out[9]//MatrixForm=",ExpressionUUID->"9fad4d84-4613-465e-9b89-\
a99210600673"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Find", " ", "the", " ", "Jacobian", " ", "and", " ", "eigenvalues", " ", 
    "for", " ", "each", " ", "fixed", " ", "point"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"FPTable", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"FPs", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "//", "MatrixForm"}], ",", 
        RowBox[{
         RowBox[{"Simplify", "[", 
          RowBox[{"J", "/.", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"x", "->", 
              RowBox[{"FPs", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "1"}], "]"}], "]"}]}], ",", 
             RowBox[{"z", "->", 
              RowBox[{"FPs", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "2"}], "]"}], "]"}]}]}], "}"}]}], "]"}], "//",
          "MatrixForm"}], ",", 
        RowBox[{
         RowBox[{"Eigenvalues", "[", 
          RowBox[{"J", "/.", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"x", "->", 
              RowBox[{"FPs", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "1"}], "]"}], "]"}]}], ",", 
             RowBox[{"z", "->", 
              RowBox[{"FPs", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "2"}], "]"}], "]"}]}]}], "}"}]}], "]"}], "//",
          "MatrixForm"}], ",", 
        RowBox[{
         RowBox[{"Eigenvectors", "[", 
          RowBox[{"J", "/.", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"x", "->", 
              RowBox[{"FPs", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "1"}], "]"}], "]"}]}], ",", 
             RowBox[{"z", "->", 
              RowBox[{"FPs", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "2"}], "]"}], "]"}]}]}], "}"}]}], "]"}], "//",
          "MatrixForm"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "3"}], "}"}]}], "]"}]}], ";"}]}]], "Input",\

 CellChangeTimes->{{3.867225318077546*^9, 3.8672254169870214`*^9}, {
   3.867225448024709*^9, 3.8672254542249594`*^9}, {3.8672255001121364`*^9, 
   3.8672255191902294`*^9}, {3.8672255581112022`*^9, 
   3.8672255642188787`*^9}, {3.8672255973534174`*^9, 
   3.8672256274971313`*^9}, {3.8672256839287667`*^9, 
   3.8672256945159383`*^9}, {3.867225730109685*^9, 3.867225738455241*^9}, {
   3.8672257699330273`*^9, 3.867225778278576*^9}, {3.867225811278432*^9, 
   3.86722581683035*^9}, {3.867225903530884*^9, 3.8672259267803965`*^9}, {
   3.867225979984497*^9, 3.867225987304329*^9}, 3.867226143110686*^9, {
   3.867227332365857*^9, 3.867227342142587*^9}, {3.867407053817068*^9, 
   3.8674070581695633`*^9}, {3.8680242099370823`*^9, 3.868024213440816*^9}, {
   3.868024365757309*^9, 3.8680243705990753`*^9}, {3.8680245930712137`*^9, 
   3.8680246064401407`*^9}, {3.8680247507314663`*^9, 3.868024752328637*^9}, {
   3.8689441880925694`*^9, 3.8689441917923965`*^9}, 3.868956001836708*^9, 
   3.8689590190222435`*^9, {3.869126738407119*^9, 3.8691267437236*^9}, 
   3.869126782049677*^9, {3.869127818860439*^9, 3.869127857050398*^9}, 
   3.8691279323005037`*^9, 3.869128019515766*^9, {3.8691294821423035`*^9, 
   3.869129491277402*^9}, {3.869197845521573*^9, 3.869197845678837*^9}, {
   3.87163244715317*^9, 3.8716324493928595`*^9}, {3.8716327635423284`*^9, 
   3.8716327651125145`*^9}, 3.8777566945081463`*^9, {3.8777569014323*^9, 
   3.877756902992178*^9}, 3.882269477299637*^9, 3.8822696146808777`*^9, {
   3.884941367280037*^9, 3.884941402363988*^9}, {3.884941530288258*^9, 
   3.884941535802528*^9}, {3.8849416037112207`*^9, 3.88494162633784*^9}, 
   3.88797755141038*^9, {3.8880648989189*^9, 3.888064918294055*^9}, {
   3.888386700285853*^9, 3.888386700909945*^9}, {3.888387946270321*^9, 
   3.888387946657957*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"87fd21d2-bbe9-4ae8-8918-6a1eb12816e2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Use", " ", "TableForm", " ", "to", " ", "display", " ", "the", " ", 
    "fixed", " ", "points", " ", "with", " ", "their", " ", "Jacobian", " ", 
    "matrix", " ", "and", " ", "eigenvalues"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"FPTable", "=", 
   RowBox[{"TableForm", "[", 
    RowBox[{"FPTable", ",", 
     RowBox[{"TableHeadings", "->", 
      RowBox[{"{", 
       RowBox[{"None", ",", 
        RowBox[{"{", 
         RowBox[{
         "\"\<Fixed Point\>\"", ",", "\"\<Jacobian\>\"", ",", 
          "\"\<Eigenvalues\>\"", ",", "\"\<Eigenvectors\>\""}], "}"}]}], 
       "}"}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8674732571734056`*^9, 3.8674733087235513`*^9}, {
   3.8680240454027176`*^9, 3.8680240517453375`*^9}, {3.868944198427647*^9, 
   3.8689442010925846`*^9}, {3.8691296342126307`*^9, 3.869129635352618*^9}, {
   3.8691296836226945`*^9, 3.8691297054374857`*^9}, 3.8691297421488905`*^9, {
   3.8691297832126884`*^9, 3.869129802932803*^9}, {3.8777567702425528`*^9, 
   3.8777567889867887`*^9}, {3.877756859522192*^9, 3.8777568704743633`*^9}, {
   3.877756944239081*^9, 3.8777569721182117`*^9}, {3.883803874115755*^9, 
   3.8838039117033367`*^9}, {3.884941538839074*^9, 3.884941542102433*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"9d3b3f8b-a93f-44a2-ac91-8b32bc629dce"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      TagBox["\<\"Fixed Point\"\>",
       HoldForm], 
      TagBox["\<\"Jacobian\"\>",
       HoldForm], 
      TagBox["\<\"Eigenvalues\"\>",
       HoldForm], 
      TagBox["\<\"Eigenvectors\"\>",
       HoldForm]},
     {
      TagBox[
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            FractionBox["3", "q"]},
           {
            RowBox[{"-", 
             FractionBox[
              RowBox[{"3", " ", 
               RowBox[{"(", 
                RowBox[{"q", "+", 
                 RowBox[{"q", " ", "wx"}], "+", 
                 RowBox[{"3", " ", "\[Epsilon]"}]}], ")"}]}], 
              SuperscriptBox["q", "2"]]}]}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {
           RowBox[{"-", 
            FractionBox[
             RowBox[{"9", " ", "\[Epsilon]"}], "q"]}], 
           RowBox[{"-", "3"}]},
          {
           RowBox[{"-", 
            FractionBox[
             RowBox[{"3", " ", 
              RowBox[{"(", 
               RowBox[{"q", "+", 
                RowBox[{"q", " ", "wx"}], "+", 
                RowBox[{"3", " ", "\[Epsilon]"}]}], ")"}]}], "q"]}], "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            FractionBox[
             RowBox[{"3", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "3"}], " ", "q", " ", "\[Epsilon]"}], "-", 
                RowBox[{"q", " ", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{"4", " ", 
                    SuperscriptBox["q", "2"]}], "+", 
                   RowBox[{"4", " ", 
                    SuperscriptBox["q", "2"], " ", "wx"}], "+", 
                   RowBox[{"12", " ", "q", " ", "\[Epsilon]"}], "+", 
                   RowBox[{"9", " ", 
                    SuperscriptBox["\[Epsilon]", "2"]}]}]]}]}], ")"}]}], 
             RowBox[{"2", " ", 
              SuperscriptBox["q", "2"]}]]},
           {
            FractionBox[
             RowBox[{"3", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "3"}], " ", "q", " ", "\[Epsilon]"}], "+", 
                RowBox[{"q", " ", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{"4", " ", 
                    SuperscriptBox["q", "2"]}], "+", 
                   RowBox[{"4", " ", 
                    SuperscriptBox["q", "2"], " ", "wx"}], "+", 
                   RowBox[{"12", " ", "q", " ", "\[Epsilon]"}], "+", 
                   RowBox[{"9", " ", 
                    SuperscriptBox["\[Epsilon]", "2"]}]}]]}]}], ")"}]}], 
             RowBox[{"2", " ", 
              SuperscriptBox["q", "2"]}]]}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {
           RowBox[{"-", 
            FractionBox[
             RowBox[{
              RowBox[{
               RowBox[{"-", "3"}], " ", "\[Epsilon]"}], "-", 
              SqrtBox[
               RowBox[{
                RowBox[{"4", " ", 
                 SuperscriptBox["q", "2"]}], "+", 
                RowBox[{"4", " ", 
                 SuperscriptBox["q", "2"], " ", "wx"}], "+", 
                RowBox[{"12", " ", "q", " ", "\[Epsilon]"}], "+", 
                RowBox[{"9", " ", 
                 SuperscriptBox["\[Epsilon]", "2"]}]}]]}], 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{"q", "+", 
                RowBox[{"q", " ", "wx"}], "+", 
                RowBox[{"3", " ", "\[Epsilon]"}]}], ")"}]}]]}], "1"},
          {
           RowBox[{"-", 
            FractionBox[
             RowBox[{
              RowBox[{
               RowBox[{"-", "3"}], " ", "\[Epsilon]"}], "+", 
              SqrtBox[
               RowBox[{
                RowBox[{"4", " ", 
                 SuperscriptBox["q", "2"]}], "+", 
                RowBox[{"4", " ", 
                 SuperscriptBox["q", "2"], " ", "wx"}], "+", 
                RowBox[{"12", " ", "q", " ", "\[Epsilon]"}], "+", 
                RowBox[{"9", " ", 
                 SuperscriptBox["\[Epsilon]", "2"]}]}]]}], 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{"q", "+", 
                RowBox[{"q", " ", "wx"}], "+", 
                RowBox[{"3", " ", "\[Epsilon]"}]}], ")"}]}]]}], "1"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]]},
     {
      TagBox[
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {
           RowBox[{
            RowBox[{"-", "3"}], " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", "wx"}], ")"}]}], "0"},
          {"0", 
           RowBox[{"-", "3"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            RowBox[{"-", "3"}]},
           {
            RowBox[{"3", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "-", "wx"}], ")"}]}]}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "1"},
          {"1", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]]},
     {
      TagBox[
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            RowBox[{"-", 
             FractionBox[
              RowBox[{"1", "+", "wx"}], "\[Epsilon]"]}]},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {
           RowBox[{"3", " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", "wx"}], ")"}]}], 
           FractionBox[
            RowBox[{"q", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", "wx"}], ")"}]}], "\[Epsilon]"]},
          {"0", 
           RowBox[{
            RowBox[{"-", "3"}], "-", 
            FractionBox[
             RowBox[{"q", " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", "wx"}], ")"}]}], "\[Epsilon]"]}]}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            RowBox[{"3", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", "wx"}], ")"}]}]},
           {
            RowBox[{"-", 
             FractionBox[
              RowBox[{"q", "+", 
               RowBox[{"q", " ", "wx"}], "+", 
               RowBox[{"3", " ", "\[Epsilon]"}]}], "\[Epsilon]"]}]}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"1", "0"},
          {
           RowBox[{"-", 
            FractionBox[
             RowBox[{"q", " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", "wx"}], ")"}]}], 
             RowBox[{"q", "+", 
              RowBox[{"q", " ", "wx"}], "+", 
              RowBox[{"6", " ", "\[Epsilon]"}], "+", 
              RowBox[{"3", " ", "wx", " ", "\[Epsilon]"}]}]]}], "1"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{
     "Columns" -> {{False}}, "Rows" -> {False, True, {False}, False}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   {None, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {
     None, {"Fixed Point", "Jacobian", "Eigenvalues", 
       "Eigenvectors"}}]]]], "Output",
 CellChangeTimes->{
  3.884941454690998*^9, {3.884941542933641*^9, 3.884941546476881*^9}, {
   3.884941605209611*^9, 3.884941629149145*^9}, 3.88495119079465*^9, 
   3.88495122436862*^9, 3.8849512959610043`*^9, 3.884951377134953*^9, 
   3.8849514201387043`*^9, 3.8849518012042103`*^9, 3.88562223805123*^9, 
   3.885622503492572*^9, 3.8856226457884483`*^9, 3.8856396860561047`*^9, 
   3.8856416872205048`*^9, 3.88564192395665*^9, 3.885875118753622*^9, 
   3.885876467829794*^9, 3.88587660344481*^9, 3.885877104125065*^9, 
   3.8858771737497377`*^9, 3.885879583665038*^9, 3.8858810737327747`*^9, 
   3.885983970859274*^9, 3.8873508072443657`*^9, 3.887360789363636*^9, 
   3.8874370789522543`*^9, 3.8874372204501667`*^9, 3.8874392183274717`*^9, 
   3.887977553478746*^9, 3.888064921266267*^9, 3.888310947009956*^9, 
   3.888384915379505*^9, 3.888385827648429*^9, 3.888386703120358*^9, 
   3.888386763050202*^9, 3.8883879486553*^9, 3.8883933143100967`*^9, 
   3.888399223590488*^9, 3.888401642021921*^9, 3.888402182920209*^9},
 CellLabel->
  "Out[11]//TableForm=",ExpressionUUID->"de53e7d6-261e-406a-961d-\
0698253f7a89"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Find", " ", "condition", " ", "for", " ", "first", " ", "fixed", " ", 
    "point", " ", "to", " ", "be", " ", "complex"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"wxCond", "=", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"4", " ", 
        SuperscriptBox["q", "2"]}], "+", 
       RowBox[{"4", " ", 
        SuperscriptBox["q", "2"], " ", "wx"}], "+", 
       RowBox[{"12", " ", "q", " ", "\[Epsilon]"}], "+", 
       RowBox[{"9", " ", 
        SuperscriptBox["\[Epsilon]", "2"]}]}], "==", "0"}], ",", 
     RowBox[{"{", 
      RowBox[{"q", ",", "\[Epsilon]", ",", "wx"}], "}"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.888394762343412*^9, 3.888394773774496*^9}, {
  3.888396078984737*^9, 3.8883961420811*^9}, {3.888396504286385*^9, 
  3.888396504430975*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"884bd2e3-9eea-4b8f-ab3a-3ff3e667d6ef"],

Cell[BoxData[
 TemplateBox[{
  "Solve", "svars", 
   "\"Equations may not give solutions for all \\\"solve\\\" variables.\"", 2,
    12, 1, 18332645112968276501, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.888394774155014*^9, 3.888396143399876*^9, 
  3.8883992249362507`*^9, 3.8884016427625504`*^9, 3.888402184711317*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"abee2519-9a6c-4ba1-aa7d-7f55bdea53ff"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"wx", "\[Rule]", 
     RowBox[{"-", 
      FractionBox[
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "q"}], "+", 
          RowBox[{"3", " ", "\[Epsilon]"}]}], ")"}], "2"], 
       RowBox[{"4", " ", 
        SuperscriptBox["q", "2"]}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"q", "\[Rule]", "0"}], ",", 
     RowBox[{"\[Epsilon]", "\[Rule]", "0"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.888394756050598*^9, 3.888394774163561*^9}, 
   3.888396143408059*^9, 3.888399224945829*^9, 3.888401642767928*^9, 
   3.888402184718754*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"e7fab54d-3f62-4589-b87f-2331aff05c4c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"wxCondition", "=", 
  RowBox[{"wx", "/.", 
   RowBox[{"wxCond", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.888396130198745*^9, 3.8883961823042192`*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"3dc31020-6606-434d-8a47-10029c332d3c"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", " ", "q"}], "+", 
      RowBox[{"3", " ", "\[Epsilon]"}]}], ")"}], "2"], 
   RowBox[{"4", " ", 
    SuperscriptBox["q", "2"]}]]}]], "Output",
 CellChangeTimes->{3.888396156964006*^9, 3.8883992256993856`*^9, 
  3.888401643171076*^9, 3.888402188185144*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"9af4fb67-150b-437f-82af-b36ed7989012"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Maximum", " ", "value", " ", "wx", " ", "can", " ", "be", " ", "for", 
     " ", "positive", " ", "values", " ", "of", " ", "\[Epsilon]", " ", "and",
      " ", "q"}], " ", "->", " ", 
    RowBox[{
     RowBox[{"Fig", ".", " ", "9"}], "a"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"wxMax1", "=", 
   RowBox[{"wxCondition", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Epsilon]", "->", "0.01"}], ",", 
      RowBox[{"q", "->", ".1"}]}], "}"}]}]}]}]], "Input",
 CellChangeTimes->{{3.888396188889471*^9, 3.888396250405672*^9}, {
   3.88839643679565*^9, 3.888396450454376*^9}, {3.888396727271161*^9, 
   3.8883967415997477`*^9}, {3.888399256797667*^9, 3.888399256939949*^9}, {
   3.888399289589098*^9, 3.888399289763579*^9}, {3.888399577693181*^9, 
   3.8883995786429*^9}, {3.888401648075615*^9, 3.888401649793898*^9}, {
   3.888402031568365*^9, 3.8884020345601187`*^9}, 3.888402134705879*^9},
 CellLabel->"In[14]:=",ExpressionUUID->"7e6aa430-e5f6-463e-803b-65f511f27630"],

Cell[BoxData[
 RowBox[{"-", "1.3224999999999998`"}]], "Output",
 CellChangeTimes->{{3.888396190207408*^9, 3.888396209127961*^9}, 
   3.888396239726666*^9, {3.8883964375626917`*^9, 3.888396450864183*^9}, {
   3.888396728048736*^9, 3.8883967418597927`*^9}, {3.8883992274665537`*^9, 
   3.888399257225938*^9}, 3.888399290221753*^9, 3.88839957935618*^9, {
   3.888401643580565*^9, 3.8884016502292147`*^9}, 3.888402189258237*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"d3f2b29b-e51d-41f6-b304-702f7e698d27"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Maximum", " ", "value", " ", "wx", " ", "can", " ", "be", " ", "for", " ",
     "positive", " ", "q", " ", "and", " ", "negative", " ", "\[Epsilon]", 
    " ", "to", " ", "reproduce", " ", 
    RowBox[{"Fig", ".", " ", "9"}], "b"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"wxMax2", "=", 
   RowBox[{"wxCondition", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Epsilon]", "->", 
       RowBox[{"-", "0.25"}]}], ",", 
      RowBox[{"q", "->", "1"}]}], "}"}]}]}]}]], "Input",
 CellChangeTimes->{
  3.888402050823923*^9, {3.888402122087219*^9, 3.888402154303185*^9}, {
   3.888402254186022*^9, 3.888402299126996*^9}, {3.888402340136343*^9, 
   3.888402363294355*^9}},ExpressionUUID->"3c5a6619-e270-47c9-97b7-\
8deb3012b6f3"],

Cell[BoxData[
 RowBox[{"-", "0.390625`"}]], "Output",
 CellChangeTimes->{
  3.888402190613138*^9, {3.888402270289102*^9, 3.888402300441293*^9}, 
   3.888402342455991*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"06ef4c47-6d2f-4c87-9f8c-ed32546ea3a6"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Define", " ", "the", " ", "differential", " ", "equations", " ", "in", 
    " ", "terms", " ", "of", " ", "their", " ", "variables"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"DE", "[", 
      RowBox[{"wx_", ",", "q_", ",", "\[Epsilon]_"}], "]"}], "=", "dex"}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"DM", "[", "q_", "]"}], "=", "dez"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.887783657511712*^9, 3.887783686624045*^9}, {
  3.887783776422574*^9, 3.887783778430128*^9}, {3.887794618325459*^9, 
  3.887794623663451*^9}, {3.887795001836006*^9, 3.8877950042740183`*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"34729365-4981-40bb-8a41-4786488d412d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"StreamPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"DE", "[", 
        RowBox[{"wx", ",", "q", ",", "\[Epsilon]"}], "]"}], ",", 
       RowBox[{"DM", "[", "q", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"z", ",", "0", ",", "3"}], "}"}], ",", 
     RowBox[{"FrameLabel", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<x\>\"", ",", "\"\<z\>\""}], "}"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"q", ",", "0", ",", "20", ",", 
     RowBox[{"Appearance", "->", "\"\<Open\>\""}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"wx", ",", 
     RowBox[{"-", "10"}], ",", "10", ",", 
     RowBox[{"Appearance", "->", "\"\<Open\>\""}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", ",", 
     RowBox[{"-", "2"}], ",", "2", ",", 
     RowBox[{"Appearance", "->", "\"\<Open\>\""}]}], "}"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.887805603837902*^9, 3.887805618135332*^9}, {
   3.888393765223463*^9, 3.888393765445427*^9}, {3.888393814103344*^9, 
   3.8883938142928047`*^9}, 3.8883940451420193`*^9, {3.888395081831902*^9, 
   3.8883950835654793`*^9}, {3.888395832251377*^9, 3.888395833249305*^9}, {
   3.8884016724295807`*^9, 3.888401692459043*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"16ecb7b2-b31a-40df-9768-3b60ff08bc26"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`q$$ = 
    1., $CellContext`wx$$ = -0.6, $CellContext`\[Epsilon]$$ = -0.25, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`q$$], 0, 20}, {
      Hold[$CellContext`wx$$], -10, 10}, {
      Hold[$CellContext`\[Epsilon]$$], -2, 2}}, Typeset`size$$ = {
    360., {176., 181.2578125}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`q$$ = 
        0, $CellContext`wx$$ = -10, $CellContext`\[Epsilon]$$ = -2}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> StreamPlot[{
         $CellContext`DE[$CellContext`wx$$, $CellContext`q$$, $CellContext`\
\[Epsilon]$$], 
         $CellContext`DM[$CellContext`q$$]}, {$CellContext`x, 0, 
         5}, {$CellContext`z, 0, 3}, FrameLabel -> {"x", "z"}], 
      "Specifications" :> {{$CellContext`q$$, 0, 20, Appearance -> 
         "Open"}, {$CellContext`wx$$, -10, 10, Appearance -> 
         "Open"}, {$CellContext`\[Epsilon]$$, -2, 2, Appearance -> "Open"}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{406., {276.6875, 282.3125}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.8884022048771677`*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"e932317f-1b54-4270-9d5d-80fb87670732"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["x - y - z Phase Space", "Subsection",
 CellChangeTimes->{{3.888396757108968*^9, 
  3.888396789868569*^9}},ExpressionUUID->"8e3ce21e-65db-4c6c-93a7-\
5dc1a0db2e64"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Define", " ", "the", " ", "dynamical", " ", "system", " ", "for", " ", 
    "coupled", " ", "dark", " ", "matter", " ", 
    RowBox[{"(", "z", ")"}], " ", "and", " ", "dark", " ", "energy", " ", 
    RowBox[{"(", "x", ")"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"de1", ":=", 
    RowBox[{
     RowBox[{"x", "'"}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "3"}], "*", "y", "*", "x", "*", 
       RowBox[{"(", 
        RowBox[{"1", "+", "wx", "+", 
         RowBox[{"\[Epsilon]", "*", "x"}]}], ")"}]}], "-", 
      RowBox[{"q", "*", "x", "*", "y", "*", "z"}]}]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"de2", ":=", 
    RowBox[{
     RowBox[{"y", "'"}], "=", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"y", "^", "2"}]}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "/", "6"}], ")"}], "*", 
       RowBox[{"(", 
        RowBox[{"x", "+", "z", "+", 
         RowBox[{"3", "*", "wx", "*", "x"}], "+", 
         RowBox[{"3", "*", "\[Epsilon]", "*", 
          RowBox[{"x", "^", "2"}]}]}], ")"}]}]}]}]}], "\[IndentingNewLine]", 
   RowBox[{"de3", ":=", 
    RowBox[{
     RowBox[{"z", "'"}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "3"}], "*", "y", "*", "z"}], " ", "+", " ", 
      RowBox[{"q", "*", "x", "*", "y", "*", "z"}]}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.88778352760754*^9, 3.887783529359799*^9}, {
   3.8877836089673634`*^9, 3.887783636614414*^9}, {3.8877945671764097`*^9, 
   3.887794595132979*^9}, {3.888396808293858*^9, 3.888396825550391*^9}, 
   3.8883968634213047`*^9, {3.888398235465941*^9, 3.888398279401182*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"d0766ccf-708a-4528-8ab9-182d61e51ef3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Find", " ", "the", " ", "fixed", " ", "points", " ", "of", " ", "the", 
    " ", "system"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"FPs", "=", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"de1", "==", "0"}], ",", 
       RowBox[{"de2", "==", "0"}], ",", 
       RowBox[{"de3", "==", "0"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.867924266311984*^9, 3.867924270493926*^9}, 
   3.868943807877423*^9, {3.878639758179953*^9, 3.878639761499497*^9}, 
   3.878651528972577*^9, {3.8786516021307096`*^9, 3.878651604117207*^9}, 
   3.87871921821413*^9, {3.878816579965701*^9, 3.878816656202022*^9}, {
   3.878816724091421*^9, 3.8788167242418823`*^9}, {3.886593925365925*^9, 
   3.886593929997612*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"73ac217e-fd2f-4419-8e84-b3864ed42f7b"],

Cell[BoxData[
 TemplateBox[{
  "Solve", "svars", 
   "\"Equations may not give solutions for all \\\"solve\\\" variables.\"", 2,
    26, 2, 18332645112968276501, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.888398965062175*^9, 3.8883993915508966`*^9, 
  3.888402418574647*^9},
 CellLabel->
  "During evaluation of \
In[26]:=",ExpressionUUID->"028e6d87-e24e-418a-88be-9c0724db7aab"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"y", "\[Rule]", "0"}], ",", 
     RowBox[{"z", "\[Rule]", 
      RowBox[{
       RowBox[{"-", "x"}], "-", 
       RowBox[{"3", " ", "wx", " ", "x"}], "-", 
       RowBox[{"3", " ", 
        SuperscriptBox["x", "2"], " ", "\[Epsilon]"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "0"}], ",", 
     RowBox[{"y", "\[Rule]", "0"}], ",", 
     RowBox[{"z", "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", 
      FractionBox["3", "q"]}], ",", 
     RowBox[{"y", "\[Rule]", 
      RowBox[{"-", 
       FractionBox[
        SqrtBox[
         RowBox[{
          RowBox[{
           RowBox[{"-", "q"}], " ", "wx"}], "-", 
          RowBox[{"3", " ", "\[Epsilon]"}]}]], "q"]}]}], ",", 
     RowBox[{"z", "\[Rule]", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"3", " ", 
         RowBox[{"(", 
          RowBox[{"q", "+", 
           RowBox[{"q", " ", "wx"}], "+", 
           RowBox[{"3", " ", "\[Epsilon]"}]}], ")"}]}], 
        SuperscriptBox["q", "2"]]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", 
      FractionBox["3", "q"]}], ",", 
     RowBox[{"y", "\[Rule]", 
      FractionBox[
       SqrtBox[
        RowBox[{
         RowBox[{
          RowBox[{"-", "q"}], " ", "wx"}], "-", 
         RowBox[{"3", " ", "\[Epsilon]"}]}]], "q"]}], ",", 
     RowBox[{"z", "\[Rule]", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"3", " ", 
         RowBox[{"(", 
          RowBox[{"q", "+", 
           RowBox[{"q", " ", "wx"}], "+", 
           RowBox[{"3", " ", "\[Epsilon]"}]}], ")"}]}], 
        SuperscriptBox["q", "2"]]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", 
      FractionBox[
       RowBox[{
        RowBox[{"-", "1"}], "-", "wx"}], "\[Epsilon]"]}], ",", 
     RowBox[{"y", "\[Rule]", 
      RowBox[{"-", 
       FractionBox[
        SqrtBox[
         RowBox[{
          RowBox[{"-", "1"}], "-", "wx"}]], 
        RowBox[{
         SqrtBox["3"], " ", 
         SqrtBox["\[Epsilon]"]}]]}]}], ",", 
     RowBox[{"z", "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", 
      FractionBox[
       RowBox[{
        RowBox[{"-", "1"}], "-", "wx"}], "\[Epsilon]"]}], ",", 
     RowBox[{"y", "\[Rule]", 
      FractionBox[
       SqrtBox[
        RowBox[{
         RowBox[{"-", "1"}], "-", "wx"}]], 
       RowBox[{
        SqrtBox["3"], " ", 
        SqrtBox["\[Epsilon]"]}]]}], ",", 
     RowBox[{"z", "\[Rule]", "0"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.888398965071862*^9, 3.888399391560218*^9, 
  3.888402418582501*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"83991068-c4f5-45c6-8642-4144771645f1"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Remove", " ", "arrows", " ", "from", " ", "fixed", " ", "points", " ", 
    "and", " ", "put", " ", "them", " ", "into", " ", "a", " ", "common", " ",
     "variable", " ", "name"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"FP", "[", "1", "]"}], "=", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"y", "/.", 
        RowBox[{"FPs", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ",", 
       RowBox[{"z", "/.", 
        RowBox[{"FPs", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "2"}], "]"}], "]"}]}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"FP", "[", "2", "]"}], "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"x", "/.", 
        RowBox[{"FPs", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ",", 
       RowBox[{"y", "/.", 
        RowBox[{"FPs", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "2"}], "]"}], "]"}]}], ",", 
       RowBox[{"z", "/.", 
        RowBox[{"FPs", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "3"}], "]"}], "]"}]}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"FP", "[", "3", "]"}], "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"x", "/.", 
        RowBox[{"FPs", "[", 
         RowBox[{"[", 
          RowBox[{"3", ",", "1"}], "]"}], "]"}]}], ",", 
       RowBox[{"y", "/.", 
        RowBox[{"FPs", "[", 
         RowBox[{"[", 
          RowBox[{"3", ",", "2"}], "]"}], "]"}]}], ",", 
       RowBox[{"z", "/.", 
        RowBox[{"FPs", "[", 
         RowBox[{"[", 
          RowBox[{"3", ",", "3"}], "]"}], "]"}]}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"FP", "[", "4", "]"}], "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"x", "/.", 
        RowBox[{"FPs", "[", 
         RowBox[{"[", 
          RowBox[{"4", ",", "1"}], "]"}], "]"}]}], ",", 
       RowBox[{"y", "/.", 
        RowBox[{"FPs", "[", 
         RowBox[{"[", 
          RowBox[{"4", ",", "2"}], "]"}], "]"}]}], ",", 
       RowBox[{"z", "/.", 
        RowBox[{"FPs", "[", 
         RowBox[{"[", 
          RowBox[{"4", ",", "3"}], "]"}], "]"}]}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"FP", "[", "5", "]"}], "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"x", "/.", 
        RowBox[{"FPs", "[", 
         RowBox[{"[", 
          RowBox[{"5", ",", "1"}], "]"}], "]"}]}], ",", 
       RowBox[{"y", "/.", 
        RowBox[{"FPs", "[", 
         RowBox[{"[", 
          RowBox[{"5", ",", "2"}], "]"}], "]"}]}], ",", 
       RowBox[{"z", "/.", 
        RowBox[{"FPs", "[", 
         RowBox[{"[", 
          RowBox[{"5", ",", "3"}], "]"}], "]"}]}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"FP", "[", "6", "]"}], "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"x", "/.", 
        RowBox[{"FPs", "[", 
         RowBox[{"[", 
          RowBox[{"6", ",", "1"}], "]"}], "]"}]}], ",", 
       RowBox[{"y", "/.", 
        RowBox[{"FPs", "[", 
         RowBox[{"[", 
          RowBox[{"6", ",", "2"}], "]"}], "]"}]}], ",", 
       RowBox[{"z", "/.", 
        RowBox[{"FPs", "[", 
         RowBox[{"[", 
          RowBox[{"6", ",", "3"}], "]"}], "]"}]}]}], "}"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBWIQfUF/D7/8hTeOarc4xEG0k3GlNIheMn+hHIiewdKs
D6KNL602A9GpOydWguiW3QrVIPrIp4p6EH1J6kw/iA7jt5kKooU/bgPTE9Ie
zQfRbpXVC0F0TYP3ZhCddPI3mL7o+u0ciD7nd+Mu2B0+Vx7kXH7jKGZ4FUw/
u3FFsgRI/zSYqwCiQ+032F1/88axvMzPBURvuLbCA0Qn+Aong+gHslcLQbTB
J91SEO3vk9l/5P0bx77rbyeD6F13NnCpfHjjyHZWkRtEsxt384PoiiU/wfS3
rhNP33984zhPTILpA5B+OfsnH4gOmS3FD6Ivrd7esOv7G8flUVZtINpd4GJg
x483jlKie4NANADbx7p8
  "],
 CellLabel->"In[27]:=",ExpressionUUID->"32a02369-c4ba-4ff0-b16a-9768bfe6f69d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Put", " ", "fixed", " ", "points", " ", "into", " ", "a", " ", "table"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"FPs", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"FP", "[", "i", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "6"}], "}"}]}], "]"}]}], ";"}]}]], "Input",\

 CellChangeTimes->{{3.8672143768787384`*^9, 3.8672144154966393`*^9}, {
   3.867224467122445*^9, 3.8672244725038586`*^9}, {3.868024836545911*^9, 
   3.868024837240116*^9}, 3.868958478845225*^9, 3.869126991902952*^9, 
   3.882269611642425*^9, {3.884941331752728*^9, 3.884941333151639*^9}, 
   3.887977524370623*^9, 3.888399011757017*^9},
 CellLabel->"In[33]:=",ExpressionUUID->"5c57a213-ead3-45f6-ac32-19c522d26674"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Find", " ", "the", " ", "4", "D", " ", "Jacobian", " ", "matrix", " ", 
    "for", " ", "general", " ", "system", " ", "of", " ", 
    RowBox[{"equations", ".", " ", 
     RowBox[{"D", "[", "]"}]}], " ", "differentiates", " ", "each", " ", 
    "expression"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"J", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{"de1", ",", "x"}], "]"}], ",", 
          RowBox[{"D", "[", 
           RowBox[{"de1", ",", "y"}], "]"}], ",", 
          RowBox[{"D", "[", 
           RowBox[{"de1", ",", "z"}], "]"}]}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{"de2", ",", "x"}], "]"}], ",", 
          RowBox[{"D", "[", 
           RowBox[{"de2", ",", "y"}], "]"}], ",", 
          RowBox[{"D", "[", 
           RowBox[{"de2", ",", "z"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{"de3", ",", "x"}], "]"}], ",", 
          RowBox[{"D", "[", 
           RowBox[{"de3", ",", "y"}], "]"}], ",", 
          RowBox[{"D", "[", 
           RowBox[{"de3", ",", "z"}], "]"}]}], "}"}]}], "}"}], "]"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{"J", "//", "MatrixForm"}]}]}]], "Input",
 CellChangeTimes->{{3.8672146504912844`*^9, 3.867214712242198*^9}, {
  3.868944173552453*^9, 3.8689441811471653`*^9}, {3.883803822024252*^9, 
  3.88380382370331*^9}, {3.8849413374850473`*^9, 3.884941360072496*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"85982ac0-3f65-475b-a652-21f957fdb221"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"-", "y"}], " ", 
       RowBox[{"(", 
        RowBox[{"3", "+", 
         RowBox[{"3", " ", "wx"}], "+", 
         RowBox[{"q", " ", "z"}], "+", 
         RowBox[{"6", " ", "x", " ", "\[Epsilon]"}]}], ")"}]}], 
      RowBox[{
       RowBox[{"-", "x"}], " ", 
       RowBox[{"(", 
        RowBox[{"3", "+", 
         RowBox[{"3", " ", "wx"}], "+", 
         RowBox[{"q", " ", "z"}], "+", 
         RowBox[{"3", " ", "x", " ", "\[Epsilon]"}]}], ")"}]}], 
      RowBox[{
       RowBox[{"-", "q"}], " ", "x", " ", "y"}]},
     {
      RowBox[{
       FractionBox["1", "6"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "-", 
         RowBox[{"3", " ", "wx"}], "-", 
         RowBox[{"6", " ", "x", " ", "\[Epsilon]"}]}], ")"}]}], 
      RowBox[{
       RowBox[{"-", "2"}], " ", "y"}], 
      RowBox[{"-", 
       FractionBox["1", "6"]}]},
     {
      RowBox[{"q", " ", "y", " ", "z"}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "3"}], "+", 
         RowBox[{"q", " ", "x"}]}], ")"}], " ", "z"}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "3"}], "+", 
         RowBox[{"q", " ", "x"}]}], ")"}], " ", "y"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.884941390016919*^9, 3.884941450774749*^9, 
  3.884951190746726*^9, 3.8849512243211927`*^9, 3.8849512959086*^9, 
  3.8849513770966473`*^9, 3.884951420088645*^9, 3.884951801152663*^9, 
  3.8856222380041313`*^9, 3.885622503437155*^9, 3.885622645722885*^9, 
  3.8856396859627447`*^9, 3.885641687124854*^9, 3.885641923813918*^9, 
  3.88587511869125*^9, 3.885876467769642*^9, 3.885876603385765*^9, 
  3.885877104064621*^9, 3.8858771736928043`*^9, 3.88587958359562*^9, 
  3.885881073673758*^9, 3.885983970789137*^9, 3.8873508071776*^9, 
  3.887360789290834*^9, 3.8874370788470163`*^9, 3.887437220357789*^9, 
  3.887439218237136*^9, 3.8879775365170116`*^9, 3.888066039572747*^9, 
  3.888310946021986*^9, 3.8883858290574636`*^9, 3.888386214138685*^9, 
  3.888399168314846*^9, 3.8883993944940453`*^9, 3.888402421435525*^9},
 CellLabel->
  "Out[35]//MatrixForm=",ExpressionUUID->"8b1154b7-df5f-4ce0-bc6d-\
99cca33b590e"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Find", " ", "the", " ", "Jacobian", " ", "and", " ", "eigenvalues", " ", 
    "for", " ", "each", " ", "fixed", " ", "point"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"FPTable", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"FPs", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "//", "MatrixForm"}], ",", 
        RowBox[{
         RowBox[{"Simplify", "[", 
          RowBox[{"J", "/.", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"x", "->", 
              RowBox[{"FPs", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "1"}], "]"}], "]"}]}], ",", 
             RowBox[{"y", "->", 
              RowBox[{"FPs", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "2"}], "]"}], "]"}]}], ",", 
             RowBox[{"z", "->", 
              RowBox[{"FPs", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "3"}], "]"}], "]"}]}]}], "}"}]}], "]"}], "//",
          "MatrixForm"}], ",", 
        RowBox[{
         RowBox[{"Eigenvalues", "[", 
          RowBox[{"J", "/.", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"x", "->", 
              RowBox[{"FPs", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "1"}], "]"}], "]"}]}], ",", 
             RowBox[{"y", "->", 
              RowBox[{"FPs", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "2"}], "]"}], "]"}]}], ",", 
             RowBox[{"z", "->", 
              RowBox[{"FPs", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "3"}], "]"}], "]"}]}]}], "}"}]}], "]"}], "//",
          "MatrixForm"}], ",", 
        RowBox[{
         RowBox[{"Eigenvectors", "[", 
          RowBox[{"J", "/.", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"x", "->", 
              RowBox[{"FPs", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "1"}], "]"}], "]"}]}], ",", 
             RowBox[{"y", "->", 
              RowBox[{"FPs", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "2"}], "]"}], "]"}]}], ",", 
             RowBox[{"z", "->", 
              RowBox[{"FPs", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "3"}], "]"}], "]"}]}]}], "}"}]}], "]"}], "//",
          "MatrixForm"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "6"}], "}"}]}], "]"}]}], ";"}]}]], "Input",\

 CellChangeTimes->{{3.867225318077546*^9, 3.8672254169870214`*^9}, {
   3.867225448024709*^9, 3.8672254542249594`*^9}, {3.8672255001121364`*^9, 
   3.8672255191902294`*^9}, {3.8672255581112022`*^9, 
   3.8672255642188787`*^9}, {3.8672255973534174`*^9, 
   3.8672256274971313`*^9}, {3.8672256839287667`*^9, 
   3.8672256945159383`*^9}, {3.867225730109685*^9, 3.867225738455241*^9}, {
   3.8672257699330273`*^9, 3.867225778278576*^9}, {3.867225811278432*^9, 
   3.86722581683035*^9}, {3.867225903530884*^9, 3.8672259267803965`*^9}, {
   3.867225979984497*^9, 3.867225987304329*^9}, 3.867226143110686*^9, {
   3.867227332365857*^9, 3.867227342142587*^9}, {3.867407053817068*^9, 
   3.8674070581695633`*^9}, {3.8680242099370823`*^9, 3.868024213440816*^9}, {
   3.868024365757309*^9, 3.8680243705990753`*^9}, {3.8680245930712137`*^9, 
   3.8680246064401407`*^9}, {3.8680247507314663`*^9, 3.868024752328637*^9}, {
   3.8689441880925694`*^9, 3.8689441917923965`*^9}, 3.868956001836708*^9, 
   3.8689590190222435`*^9, {3.869126738407119*^9, 3.8691267437236*^9}, 
   3.869126782049677*^9, {3.869127818860439*^9, 3.869127857050398*^9}, 
   3.8691279323005037`*^9, 3.869128019515766*^9, {3.8691294821423035`*^9, 
   3.869129491277402*^9}, {3.869197845521573*^9, 3.869197845678837*^9}, {
   3.87163244715317*^9, 3.8716324493928595`*^9}, {3.8716327635423284`*^9, 
   3.8716327651125145`*^9}, 3.8777566945081463`*^9, {3.8777569014323*^9, 
   3.877756902992178*^9}, 3.882269477299637*^9, 3.8822696146808777`*^9, {
   3.884941367280037*^9, 3.884941402363988*^9}, {3.884941530288258*^9, 
   3.884941535802528*^9}, {3.8849416037112207`*^9, 3.88494162633784*^9}, 
   3.88797755141038*^9, 3.888399019710622*^9, 3.888399761978408*^9},
 CellLabel->"In[36]:=",ExpressionUUID->"710bc041-6d6d-4ed4-ac54-4be349df37cb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Use", " ", "TableForm", " ", "to", " ", "display", " ", "the", " ", 
    "fixed", " ", "points", " ", "with", " ", "their", " ", "Jacobian", " ", 
    "matrix", " ", "and", " ", "eigenvalues"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"FPTable", "=", 
   RowBox[{"TableForm", "[", 
    RowBox[{"FPTable", ",", 
     RowBox[{"TableHeadings", "->", 
      RowBox[{"{", 
       RowBox[{"None", ",", 
        RowBox[{"{", 
         RowBox[{
         "\"\<Fixed Point\>\"", ",", "\"\<Jacobian\>\"", ",", 
          "\"\<Eigenvalues\>\"", ",", "\"\<Eigenvectors\>\""}], "}"}]}], 
       "}"}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8674732571734056`*^9, 3.8674733087235513`*^9}, {
   3.8680240454027176`*^9, 3.8680240517453375`*^9}, {3.868944198427647*^9, 
   3.8689442010925846`*^9}, {3.8691296342126307`*^9, 3.869129635352618*^9}, {
   3.8691296836226945`*^9, 3.8691297054374857`*^9}, 3.8691297421488905`*^9, {
   3.8691297832126884`*^9, 3.869129802932803*^9}, {3.8777567702425528`*^9, 
   3.8777567889867887`*^9}, {3.877756859522192*^9, 3.8777568704743633`*^9}, {
   3.877756944239081*^9, 3.8777569721182117`*^9}, {3.883803874115755*^9, 
   3.8838039117033367`*^9}, {3.884941538839074*^9, 3.884941542102433*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"9cb904e4-b4b9-44d8-989d-63a1e02c3035"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      TagBox["\<\"Fixed Point\"\>",
       HoldForm], 
      TagBox["\<\"Jacobian\"\>",
       HoldForm], 
      TagBox["\<\"Eigenvalues\"\>",
       HoldForm], 
      TagBox["\<\"Eigenvectors\"\>",
       HoldForm]},
     {
      TagBox[
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"x"},
           {"0"},
           {
            RowBox[{
             RowBox[{"-", "x"}], "-", 
             RowBox[{"3", " ", "wx", " ", "x"}], "-", 
             RowBox[{"3", " ", 
              SuperscriptBox["x", "2"], " ", "\[Epsilon]"}]}]}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", 
           RowBox[{"x", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"3", " ", "wx", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 RowBox[{"q", " ", "x"}]}], ")"}]}], "-", 
              RowBox[{"3", " ", 
               RowBox[{"(", 
                RowBox[{"1", "+", 
                 RowBox[{"x", " ", "\[Epsilon]"}]}], ")"}]}], "+", 
              RowBox[{"q", " ", "x", " ", 
               RowBox[{"(", 
                RowBox[{"1", "+", 
                 RowBox[{"3", " ", "x", " ", "\[Epsilon]"}]}], ")"}]}]}], 
             ")"}]}], "0"},
          {
           RowBox[{
            FractionBox["1", "6"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "-", 
              RowBox[{"3", " ", "wx"}], "-", 
              RowBox[{"6", " ", "x", " ", "\[Epsilon]"}]}], ")"}]}], "0", 
           RowBox[{"-", 
            FractionBox["1", "6"]}]},
          {"0", 
           RowBox[{
            RowBox[{"-", "x"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "3"}], "+", 
              RowBox[{"q", " ", "x"}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"3", " ", "wx"}], "+", 
              RowBox[{"3", " ", "x", " ", "\[Epsilon]"}]}], ")"}]}], "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {
            RowBox[{"-", 
             FractionBox[
              RowBox[{"\[ImaginaryI]", " ", 
               SqrtBox["x"], " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{"-", "wx"}], "-", 
                 RowBox[{"3", " ", 
                  SuperscriptBox["wx", "2"]}], "+", 
                 RowBox[{"q", " ", "wx", " ", "x"}], "+", 
                 RowBox[{"3", " ", "q", " ", 
                  SuperscriptBox["wx", "2"], " ", "x"}], "-", 
                 RowBox[{"4", " ", "x", " ", "\[Epsilon]"}], "-", 
                 RowBox[{"9", " ", "wx", " ", "x", " ", "\[Epsilon]"}], "+", 
                 RowBox[{"2", " ", "q", " ", 
                  SuperscriptBox["x", "2"], " ", "\[Epsilon]"}], "+", 
                 RowBox[{"9", " ", "q", " ", "wx", " ", 
                  SuperscriptBox["x", "2"], " ", "\[Epsilon]"}], "-", 
                 RowBox[{"6", " ", 
                  SuperscriptBox["x", "2"], " ", 
                  SuperscriptBox["\[Epsilon]", "2"]}], "+", 
                 RowBox[{"6", " ", "q", " ", 
                  SuperscriptBox["x", "3"], " ", 
                  SuperscriptBox["\[Epsilon]", "2"]}]}]]}], 
              SqrtBox["2"]]}]},
           {
            FractionBox[
             RowBox[{"\[ImaginaryI]", " ", 
              SqrtBox["x"], " ", 
              SqrtBox[
               RowBox[{
                RowBox[{"-", "wx"}], "-", 
                RowBox[{"3", " ", 
                 SuperscriptBox["wx", "2"]}], "+", 
                RowBox[{"q", " ", "wx", " ", "x"}], "+", 
                RowBox[{"3", " ", "q", " ", 
                 SuperscriptBox["wx", "2"], " ", "x"}], "-", 
                RowBox[{"4", " ", "x", " ", "\[Epsilon]"}], "-", 
                RowBox[{"9", " ", "wx", " ", "x", " ", "\[Epsilon]"}], "+", 
                RowBox[{"2", " ", "q", " ", 
                 SuperscriptBox["x", "2"], " ", "\[Epsilon]"}], "+", 
                RowBox[{"9", " ", "q", " ", "wx", " ", 
                 SuperscriptBox["x", "2"], " ", "\[Epsilon]"}], "-", 
                RowBox[{"6", " ", 
                 SuperscriptBox["x", "2"], " ", 
                 SuperscriptBox["\[Epsilon]", "2"]}], "+", 
                RowBox[{"6", " ", "q", " ", 
                 SuperscriptBox["x", "3"], " ", 
                 SuperscriptBox["\[Epsilon]", "2"]}]}]]}], 
             SqrtBox["2"]]}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {
           RowBox[{"-", 
            FractionBox["1", 
             RowBox[{"1", "+", 
              RowBox[{"3", " ", "wx"}], "+", 
              RowBox[{"6", " ", "x", " ", "\[Epsilon]"}]}]]}], "0", "1"},
          {
           RowBox[{"-", 
            FractionBox[
             RowBox[{
              RowBox[{"-", "3"}], "-", 
              RowBox[{"3", " ", "wx"}], "+", 
              RowBox[{"q", " ", "x"}], "+", 
              RowBox[{"3", " ", "q", " ", "wx", " ", "x"}], "-", 
              RowBox[{"3", " ", "x", " ", "\[Epsilon]"}], "+", 
              RowBox[{"3", " ", "q", " ", 
               SuperscriptBox["x", "2"], " ", "\[Epsilon]"}]}], 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", 
                RowBox[{"q", " ", "x"}]}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"3", " ", "wx"}], "+", 
                RowBox[{"3", " ", "x", " ", "\[Epsilon]"}]}], ")"}]}]]}], 
           FractionBox[
            RowBox[{"\[ImaginaryI]", " ", 
             SqrtBox[
              RowBox[{
               RowBox[{"-", "wx"}], "-", 
               RowBox[{"3", " ", 
                SuperscriptBox["wx", "2"]}], "+", 
               RowBox[{"q", " ", "wx", " ", "x"}], "+", 
               RowBox[{"3", " ", "q", " ", 
                SuperscriptBox["wx", "2"], " ", "x"}], "-", 
               RowBox[{"4", " ", "x", " ", "\[Epsilon]"}], "-", 
               RowBox[{"9", " ", "wx", " ", "x", " ", "\[Epsilon]"}], "+", 
               RowBox[{"2", " ", "q", " ", 
                SuperscriptBox["x", "2"], " ", "\[Epsilon]"}], "+", 
               RowBox[{"9", " ", "q", " ", "wx", " ", 
                SuperscriptBox["x", "2"], " ", "\[Epsilon]"}], "-", 
               RowBox[{"6", " ", 
                SuperscriptBox["x", "2"], " ", 
                SuperscriptBox["\[Epsilon]", "2"]}], "+", 
               RowBox[{"6", " ", "q", " ", 
                SuperscriptBox["x", "3"], " ", 
                SuperscriptBox["\[Epsilon]", "2"]}]}]]}], 
            RowBox[{
             SqrtBox["2"], " ", 
             SqrtBox["x"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "3"}], "+", 
               RowBox[{"q", " ", "x"}]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"3", " ", "wx"}], "+", 
               RowBox[{"3", " ", "x", " ", "\[Epsilon]"}]}], ")"}]}]], "1"},
          {
           RowBox[{"-", 
            FractionBox[
             RowBox[{
              RowBox[{"-", "3"}], "-", 
              RowBox[{"3", " ", "wx"}], "+", 
              RowBox[{"q", " ", "x"}], "+", 
              RowBox[{"3", " ", "q", " ", "wx", " ", "x"}], "-", 
              RowBox[{"3", " ", "x", " ", "\[Epsilon]"}], "+", 
              RowBox[{"3", " ", "q", " ", 
               SuperscriptBox["x", "2"], " ", "\[Epsilon]"}]}], 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", 
                RowBox[{"q", " ", "x"}]}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"3", " ", "wx"}], "+", 
                RowBox[{"3", " ", "x", " ", "\[Epsilon]"}]}], ")"}]}]]}], 
           RowBox[{"-", 
            FractionBox[
             RowBox[{"\[ImaginaryI]", " ", 
              SqrtBox[
               RowBox[{
                RowBox[{"-", "wx"}], "-", 
                RowBox[{"3", " ", 
                 SuperscriptBox["wx", "2"]}], "+", 
                RowBox[{"q", " ", "wx", " ", "x"}], "+", 
                RowBox[{"3", " ", "q", " ", 
                 SuperscriptBox["wx", "2"], " ", "x"}], "-", 
                RowBox[{"4", " ", "x", " ", "\[Epsilon]"}], "-", 
                RowBox[{"9", " ", "wx", " ", "x", " ", "\[Epsilon]"}], "+", 
                RowBox[{"2", " ", "q", " ", 
                 SuperscriptBox["x", "2"], " ", "\[Epsilon]"}], "+", 
                RowBox[{"9", " ", "q", " ", "wx", " ", 
                 SuperscriptBox["x", "2"], " ", "\[Epsilon]"}], "-", 
                RowBox[{"6", " ", 
                 SuperscriptBox["x", "2"], " ", 
                 SuperscriptBox["\[Epsilon]", "2"]}], "+", 
                RowBox[{"6", " ", "q", " ", 
                 SuperscriptBox["x", "3"], " ", 
                 SuperscriptBox["\[Epsilon]", "2"]}]}]]}], 
             RowBox[{
              SqrtBox["2"], " ", 
              SqrtBox["x"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", 
                RowBox[{"q", " ", "x"}]}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"3", " ", "wx"}], "+", 
                RowBox[{"3", " ", "x", " ", "\[Epsilon]"}]}], ")"}]}]]}], 
           "1"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]]},
     {
      TagBox[
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0"},
          {
           RowBox[{
            FractionBox["1", "6"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "-", 
              RowBox[{"3", " ", "wx"}]}], ")"}]}], "0", 
           RowBox[{"-", 
            FractionBox["1", "6"]}]},
          {"0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {
           RowBox[{"-", 
            FractionBox["1", 
             RowBox[{"1", "+", 
              RowBox[{"3", " ", "wx"}]}]]}], "0", "1"},
          {"0", "1", "0"},
          {"0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]]},
     {
      TagBox[
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            FractionBox["3", "q"]},
           {
            RowBox[{"-", 
             FractionBox[
              SqrtBox[
               RowBox[{
                RowBox[{
                 RowBox[{"-", "q"}], " ", "wx"}], "-", 
                RowBox[{"3", " ", "\[Epsilon]"}]}]], "q"]}]},
           {
            RowBox[{"-", 
             FractionBox[
              RowBox[{"3", " ", 
               RowBox[{"(", 
                RowBox[{"q", "+", 
                 RowBox[{"q", " ", "wx"}], "+", 
                 RowBox[{"3", " ", "\[Epsilon]"}]}], ")"}]}], 
              SuperscriptBox["q", "2"]]}]}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {
           FractionBox[
            RowBox[{"9", " ", 
             SqrtBox[
              RowBox[{
               RowBox[{
                RowBox[{"-", "q"}], " ", "wx"}], "-", 
               RowBox[{"3", " ", "\[Epsilon]"}]}]], " ", "\[Epsilon]"}], 
            SuperscriptBox["q", "2"]], "0", 
           FractionBox[
            RowBox[{"3", " ", 
             SqrtBox[
              RowBox[{
               RowBox[{
                RowBox[{"-", "q"}], " ", "wx"}], "-", 
               RowBox[{"3", " ", "\[Epsilon]"}]}]]}], "q"]},
          {
           RowBox[{"-", 
            FractionBox[
             RowBox[{"q", "+", 
              RowBox[{"3", " ", "q", " ", "wx"}], "+", 
              RowBox[{"18", " ", "\[Epsilon]"}]}], 
             RowBox[{"6", " ", "q"}]]}], 
           FractionBox[
            RowBox[{"2", " ", 
             SqrtBox[
              RowBox[{
               RowBox[{
                RowBox[{"-", "q"}], " ", "wx"}], "-", 
               RowBox[{"3", " ", "\[Epsilon]"}]}]]}], "q"], 
           RowBox[{"-", 
            FractionBox["1", "6"]}]},
          {
           FractionBox[
            RowBox[{"3", " ", 
             SqrtBox[
              RowBox[{
               RowBox[{
                RowBox[{"-", "q"}], " ", "wx"}], "-", 
               RowBox[{"3", " ", "\[Epsilon]"}]}]], " ", 
             RowBox[{"(", 
              RowBox[{"q", "+", 
               RowBox[{"q", " ", "wx"}], "+", 
               RowBox[{"3", " ", "\[Epsilon]"}]}], ")"}]}], 
            SuperscriptBox["q", "2"]], "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            FractionBox[
             RowBox[{"2", " ", 
              SqrtBox[
               RowBox[{
                RowBox[{
                 RowBox[{"-", "q"}], " ", "wx"}], "-", 
                RowBox[{"3", " ", "\[Epsilon]"}]}]]}], "q"]},
           {
            FractionBox[
             RowBox[{"3", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"3", " ", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "q"}], " ", "wx"}], "-", 
                   RowBox[{"3", " ", "\[Epsilon]"}]}]], " ", "\[Epsilon]"}], 
                "-", 
                SqrtBox[
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "4"}], " ", 
                   SuperscriptBox["q", "3"], " ", "wx"}], "-", 
                  RowBox[{"4", " ", 
                   SuperscriptBox["q", "3"], " ", 
                   SuperscriptBox["wx", "2"]}], "-", 
                  RowBox[{"12", " ", 
                   SuperscriptBox["q", "2"], " ", "\[Epsilon]"}], "-", 
                  RowBox[{"24", " ", 
                   SuperscriptBox["q", "2"], " ", "wx", " ", "\[Epsilon]"}], 
                  "-", 
                  RowBox[{"36", " ", "q", " ", 
                   SuperscriptBox["\[Epsilon]", "2"]}], "-", 
                  RowBox[{"9", " ", "q", " ", "wx", " ", 
                   SuperscriptBox["\[Epsilon]", "2"]}], "-", 
                  RowBox[{"27", " ", 
                   SuperscriptBox["\[Epsilon]", "3"]}]}]]}], ")"}]}], 
             RowBox[{"2", " ", 
              SuperscriptBox["q", "2"]}]]},
           {
            FractionBox[
             RowBox[{"3", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"3", " ", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "q"}], " ", "wx"}], "-", 
                   RowBox[{"3", " ", "\[Epsilon]"}]}]], " ", "\[Epsilon]"}], 
                "+", 
                SqrtBox[
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "4"}], " ", 
                   SuperscriptBox["q", "3"], " ", "wx"}], "-", 
                  RowBox[{"4", " ", 
                   SuperscriptBox["q", "3"], " ", 
                   SuperscriptBox["wx", "2"]}], "-", 
                  RowBox[{"12", " ", 
                   SuperscriptBox["q", "2"], " ", "\[Epsilon]"}], "-", 
                  RowBox[{"24", " ", 
                   SuperscriptBox["q", "2"], " ", "wx", " ", "\[Epsilon]"}], 
                  "-", 
                  RowBox[{"36", " ", "q", " ", 
                   SuperscriptBox["\[Epsilon]", "2"]}], "-", 
                  RowBox[{"9", " ", "q", " ", "wx", " ", 
                   SuperscriptBox["\[Epsilon]", "2"]}], "-", 
                  RowBox[{"27", " ", 
                   SuperscriptBox["\[Epsilon]", "3"]}]}]]}], ")"}]}], 
             RowBox[{"2", " ", 
              SuperscriptBox["q", "2"]}]]}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "1", "0"},
          {
           FractionBox[
            RowBox[{
             RowBox[{"4", " ", 
              SuperscriptBox["q", "2"], " ", "wx"}], "+", 
             RowBox[{"12", " ", "q", " ", "\[Epsilon]"}], "-", 
             RowBox[{"9", " ", "q", " ", "wx", " ", "\[Epsilon]"}], "-", 
             RowBox[{"27", " ", 
              SuperscriptBox["\[Epsilon]", "2"]}], "-", 
             RowBox[{"3", " ", 
              SqrtBox[
               RowBox[{
                RowBox[{
                 RowBox[{"-", "q"}], " ", "wx"}], "-", 
                RowBox[{"3", " ", "\[Epsilon]"}]}]], " ", 
              SqrtBox[
               RowBox[{
                RowBox[{
                 RowBox[{"-", "4"}], " ", 
                 SuperscriptBox["q", "3"], " ", "wx"}], "-", 
                RowBox[{"4", " ", 
                 SuperscriptBox["q", "3"], " ", 
                 SuperscriptBox["wx", "2"]}], "-", 
                RowBox[{"12", " ", 
                 SuperscriptBox["q", "2"], " ", "\[Epsilon]"}], "-", 
                RowBox[{"24", " ", 
                 SuperscriptBox["q", "2"], " ", "wx", " ", "\[Epsilon]"}], 
                "-", 
                RowBox[{"36", " ", "q", " ", 
                 SuperscriptBox["\[Epsilon]", "2"]}], "-", 
                RowBox[{"9", " ", "q", " ", "wx", " ", 
                 SuperscriptBox["\[Epsilon]", "2"]}], "-", 
                RowBox[{"27", " ", 
                 SuperscriptBox["\[Epsilon]", "3"]}]}]]}]}], 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "3"}], " ", 
                SuperscriptBox["q", "2"], " ", "wx"}], "-", 
               RowBox[{"3", " ", 
                SuperscriptBox["q", "2"], " ", 
                SuperscriptBox["wx", "2"]}], "-", 
               RowBox[{"9", " ", "q", " ", "\[Epsilon]"}], "-", 
               RowBox[{"21", " ", "q", " ", "wx", " ", "\[Epsilon]"}], "-", 
               RowBox[{"36", " ", 
                SuperscriptBox["\[Epsilon]", "2"]}], "+", 
               RowBox[{
                SqrtBox[
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "q"}], " ", "wx"}], "-", 
                  RowBox[{"3", " ", "\[Epsilon]"}]}]], " ", 
                SqrtBox[
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "4"}], " ", 
                   SuperscriptBox["q", "3"], " ", "wx"}], "-", 
                  RowBox[{"4", " ", 
                   SuperscriptBox["q", "3"], " ", 
                   SuperscriptBox["wx", "2"]}], "-", 
                  RowBox[{"12", " ", 
                   SuperscriptBox["q", "2"], " ", "\[Epsilon]"}], "-", 
                  RowBox[{"24", " ", 
                   SuperscriptBox["q", "2"], " ", "wx", " ", "\[Epsilon]"}], 
                  "-", 
                  RowBox[{"36", " ", "q", " ", 
                   SuperscriptBox["\[Epsilon]", "2"]}], "-", 
                  RowBox[{"9", " ", "q", " ", "wx", " ", 
                   SuperscriptBox["\[Epsilon]", "2"]}], "-", 
                  RowBox[{"27", " ", 
                   SuperscriptBox["\[Epsilon]", "3"]}]}]]}]}], ")"}]}]], 
           FractionBox[
            RowBox[{"q", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "2"}], " ", "q", " ", 
                SqrtBox[
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "q"}], " ", "wx"}], "-", 
                  RowBox[{"3", " ", "\[Epsilon]"}]}]]}], "-", 
               RowBox[{"6", " ", "q", " ", "wx", " ", 
                SqrtBox[
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "q"}], " ", "wx"}], "-", 
                  RowBox[{"3", " ", "\[Epsilon]"}]}]]}], "-", 
               RowBox[{"33", " ", 
                SqrtBox[
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "q"}], " ", "wx"}], "-", 
                  RowBox[{"3", " ", "\[Epsilon]"}]}]], " ", "\[Epsilon]"}], 
               "+", 
               SqrtBox[
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "4"}], " ", 
                  SuperscriptBox["q", "3"], " ", "wx"}], "-", 
                 RowBox[{"4", " ", 
                  SuperscriptBox["q", "3"], " ", 
                  SuperscriptBox["wx", "2"]}], "-", 
                 RowBox[{"12", " ", 
                  SuperscriptBox["q", "2"], " ", "\[Epsilon]"}], "-", 
                 RowBox[{"24", " ", 
                  SuperscriptBox["q", "2"], " ", "wx", " ", "\[Epsilon]"}], 
                 "-", 
                 RowBox[{"36", " ", "q", " ", 
                  SuperscriptBox["\[Epsilon]", "2"]}], "-", 
                 RowBox[{"9", " ", "q", " ", "wx", " ", 
                  SuperscriptBox["\[Epsilon]", "2"]}], "-", 
                 RowBox[{"27", " ", 
                  SuperscriptBox["\[Epsilon]", "3"]}]}]]}], ")"}]}], 
            RowBox[{"12", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "3"}], " ", 
                SuperscriptBox["q", "2"], " ", "wx"}], "-", 
               RowBox[{"3", " ", 
                SuperscriptBox["q", "2"], " ", 
                SuperscriptBox["wx", "2"]}], "-", 
               RowBox[{"9", " ", "q", " ", "\[Epsilon]"}], "-", 
               RowBox[{"21", " ", "q", " ", "wx", " ", "\[Epsilon]"}], "-", 
               RowBox[{"36", " ", 
                SuperscriptBox["\[Epsilon]", "2"]}], "+", 
               RowBox[{
                SqrtBox[
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "q"}], " ", "wx"}], "-", 
                  RowBox[{"3", " ", "\[Epsilon]"}]}]], " ", 
                SqrtBox[
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "4"}], " ", 
                   SuperscriptBox["q", "3"], " ", "wx"}], "-", 
                  RowBox[{"4", " ", 
                   SuperscriptBox["q", "3"], " ", 
                   SuperscriptBox["wx", "2"]}], "-", 
                  RowBox[{"12", " ", 
                   SuperscriptBox["q", "2"], " ", "\[Epsilon]"}], "-", 
                  RowBox[{"24", " ", 
                   SuperscriptBox["q", "2"], " ", "wx", " ", "\[Epsilon]"}], 
                  "-", 
                  RowBox[{"36", " ", "q", " ", 
                   SuperscriptBox["\[Epsilon]", "2"]}], "-", 
                  RowBox[{"9", " ", "q", " ", "wx", " ", 
                   SuperscriptBox["\[Epsilon]", "2"]}], "-", 
                  RowBox[{"27", " ", 
                   SuperscriptBox["\[Epsilon]", "3"]}]}]]}]}], ")"}]}]], 
           "1"},
          {
           RowBox[{"-", 
            FractionBox[
             RowBox[{
              RowBox[{"4", " ", 
               SuperscriptBox["q", "2"], " ", "wx"}], "+", 
              RowBox[{"12", " ", "q", " ", "\[Epsilon]"}], "-", 
              RowBox[{"9", " ", "q", " ", "wx", " ", "\[Epsilon]"}], "-", 
              RowBox[{"27", " ", 
               SuperscriptBox["\[Epsilon]", "2"]}], "+", 
              RowBox[{"3", " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "q"}], " ", "wx"}], "-", 
                 RowBox[{"3", " ", "\[Epsilon]"}]}]], " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "4"}], " ", 
                  SuperscriptBox["q", "3"], " ", "wx"}], "-", 
                 RowBox[{"4", " ", 
                  SuperscriptBox["q", "3"], " ", 
                  SuperscriptBox["wx", "2"]}], "-", 
                 RowBox[{"12", " ", 
                  SuperscriptBox["q", "2"], " ", "\[Epsilon]"}], "-", 
                 RowBox[{"24", " ", 
                  SuperscriptBox["q", "2"], " ", "wx", " ", "\[Epsilon]"}], 
                 "-", 
                 RowBox[{"36", " ", "q", " ", 
                  SuperscriptBox["\[Epsilon]", "2"]}], "-", 
                 RowBox[{"9", " ", "q", " ", "wx", " ", 
                  SuperscriptBox["\[Epsilon]", "2"]}], "-", 
                 RowBox[{"27", " ", 
                  SuperscriptBox["\[Epsilon]", "3"]}]}]]}]}], 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"3", " ", 
                 SuperscriptBox["q", "2"], " ", "wx"}], "+", 
                RowBox[{"3", " ", 
                 SuperscriptBox["q", "2"], " ", 
                 SuperscriptBox["wx", "2"]}], "+", 
                RowBox[{"9", " ", "q", " ", "\[Epsilon]"}], "+", 
                RowBox[{"21", " ", "q", " ", "wx", " ", "\[Epsilon]"}], "+", 
                RowBox[{"36", " ", 
                 SuperscriptBox["\[Epsilon]", "2"]}], "+", 
                RowBox[{
                 SqrtBox[
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "q"}], " ", "wx"}], "-", 
                   RowBox[{"3", " ", "\[Epsilon]"}]}]], " ", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "4"}], " ", 
                    SuperscriptBox["q", "3"], " ", "wx"}], "-", 
                   RowBox[{"4", " ", 
                    SuperscriptBox["q", "3"], " ", 
                    SuperscriptBox["wx", "2"]}], "-", 
                   RowBox[{"12", " ", 
                    SuperscriptBox["q", "2"], " ", "\[Epsilon]"}], "-", 
                   RowBox[{"24", " ", 
                    SuperscriptBox["q", "2"], " ", "wx", " ", "\[Epsilon]"}], 
                   "-", 
                   RowBox[{"36", " ", "q", " ", 
                    SuperscriptBox["\[Epsilon]", "2"]}], "-", 
                   RowBox[{"9", " ", "q", " ", "wx", " ", 
                    SuperscriptBox["\[Epsilon]", "2"]}], "-", 
                   RowBox[{"27", " ", 
                    SuperscriptBox["\[Epsilon]", "3"]}]}]]}]}], ")"}]}]]}], 
           FractionBox[
            RowBox[{"q", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "q", " ", 
                SqrtBox[
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "q"}], " ", "wx"}], "-", 
                  RowBox[{"3", " ", "\[Epsilon]"}]}]]}], "+", 
               RowBox[{"6", " ", "q", " ", "wx", " ", 
                SqrtBox[
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "q"}], " ", "wx"}], "-", 
                  RowBox[{"3", " ", "\[Epsilon]"}]}]]}], "+", 
               RowBox[{"33", " ", 
                SqrtBox[
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "q"}], " ", "wx"}], "-", 
                  RowBox[{"3", " ", "\[Epsilon]"}]}]], " ", "\[Epsilon]"}], 
               "+", 
               SqrtBox[
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "4"}], " ", 
                  SuperscriptBox["q", "3"], " ", "wx"}], "-", 
                 RowBox[{"4", " ", 
                  SuperscriptBox["q", "3"], " ", 
                  SuperscriptBox["wx", "2"]}], "-", 
                 RowBox[{"12", " ", 
                  SuperscriptBox["q", "2"], " ", "\[Epsilon]"}], "-", 
                 RowBox[{"24", " ", 
                  SuperscriptBox["q", "2"], " ", "wx", " ", "\[Epsilon]"}], 
                 "-", 
                 RowBox[{"36", " ", "q", " ", 
                  SuperscriptBox["\[Epsilon]", "2"]}], "-", 
                 RowBox[{"9", " ", "q", " ", "wx", " ", 
                  SuperscriptBox["\[Epsilon]", "2"]}], "-", 
                 RowBox[{"27", " ", 
                  SuperscriptBox["\[Epsilon]", "3"]}]}]]}], ")"}]}], 
            RowBox[{"12", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"3", " ", 
                SuperscriptBox["q", "2"], " ", "wx"}], "+", 
               RowBox[{"3", " ", 
                SuperscriptBox["q", "2"], " ", 
                SuperscriptBox["wx", "2"]}], "+", 
               RowBox[{"9", " ", "q", " ", "\[Epsilon]"}], "+", 
               RowBox[{"21", " ", "q", " ", "wx", " ", "\[Epsilon]"}], "+", 
               RowBox[{"36", " ", 
                SuperscriptBox["\[Epsilon]", "2"]}], "+", 
               RowBox[{
                SqrtBox[
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "q"}], " ", "wx"}], "-", 
                  RowBox[{"3", " ", "\[Epsilon]"}]}]], " ", 
                SqrtBox[
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "4"}], " ", 
                   SuperscriptBox["q", "3"], " ", "wx"}], "-", 
                  RowBox[{"4", " ", 
                   SuperscriptBox["q", "3"], " ", 
                   SuperscriptBox["wx", "2"]}], "-", 
                  RowBox[{"12", " ", 
                   SuperscriptBox["q", "2"], " ", "\[Epsilon]"}], "-", 
                  RowBox[{"24", " ", 
                   SuperscriptBox["q", "2"], " ", "wx", " ", "\[Epsilon]"}], 
                  "-", 
                  RowBox[{"36", " ", "q", " ", 
                   SuperscriptBox["\[Epsilon]", "2"]}], "-", 
                  RowBox[{"9", " ", "q", " ", "wx", " ", 
                   SuperscriptBox["\[Epsilon]", "2"]}], "-", 
                  RowBox[{"27", " ", 
                   SuperscriptBox["\[Epsilon]", "3"]}]}]]}]}], ")"}]}]], "1"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]]},
     {
      TagBox[
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            FractionBox["3", "q"]},
           {
            FractionBox[
             SqrtBox[
              RowBox[{
               RowBox[{
                RowBox[{"-", "q"}], " ", "wx"}], "-", 
               RowBox[{"3", " ", "\[Epsilon]"}]}]], "q"]},
           {
            RowBox[{"-", 
             FractionBox[
              RowBox[{"3", " ", 
               RowBox[{"(", 
                RowBox[{"q", "+", 
                 RowBox[{"q", " ", "wx"}], "+", 
                 RowBox[{"3", " ", "\[Epsilon]"}]}], ")"}]}], 
              SuperscriptBox["q", "2"]]}]}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {
           RowBox[{"-", 
            FractionBox[
             RowBox[{"9", " ", 
              SqrtBox[
               RowBox[{
                RowBox[{
                 RowBox[{"-", "q"}], " ", "wx"}], "-", 
                RowBox[{"3", " ", "\[Epsilon]"}]}]], " ", "\[Epsilon]"}], 
             SuperscriptBox["q", "2"]]}], "0", 
           RowBox[{"-", 
            FractionBox[
             RowBox[{"3", " ", 
              SqrtBox[
               RowBox[{
                RowBox[{
                 RowBox[{"-", "q"}], " ", "wx"}], "-", 
                RowBox[{"3", " ", "\[Epsilon]"}]}]]}], "q"]}]},
          {
           RowBox[{"-", 
            FractionBox[
             RowBox[{"q", "+", 
              RowBox[{"3", " ", "q", " ", "wx"}], "+", 
              RowBox[{"18", " ", "\[Epsilon]"}]}], 
             RowBox[{"6", " ", "q"}]]}], 
           RowBox[{"-", 
            FractionBox[
             RowBox[{"2", " ", 
              SqrtBox[
               RowBox[{
                RowBox[{
                 RowBox[{"-", "q"}], " ", "wx"}], "-", 
                RowBox[{"3", " ", "\[Epsilon]"}]}]]}], "q"]}], 
           RowBox[{"-", 
            FractionBox["1", "6"]}]},
          {
           RowBox[{"-", 
            FractionBox[
             RowBox[{"3", " ", 
              SqrtBox[
               RowBox[{
                RowBox[{
                 RowBox[{"-", "q"}], " ", "wx"}], "-", 
                RowBox[{"3", " ", "\[Epsilon]"}]}]], " ", 
              RowBox[{"(", 
               RowBox[{"q", "+", 
                RowBox[{"q", " ", "wx"}], "+", 
                RowBox[{"3", " ", "\[Epsilon]"}]}], ")"}]}], 
             SuperscriptBox["q", "2"]]}], "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            RowBox[{"-", 
             FractionBox[
              RowBox[{"2", " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "q"}], " ", "wx"}], "-", 
                 RowBox[{"3", " ", "\[Epsilon]"}]}]]}], "q"]}]},
           {
            FractionBox[
             RowBox[{"3", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "3"}], " ", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "q"}], " ", "wx"}], "-", 
                   RowBox[{"3", " ", "\[Epsilon]"}]}]], " ", "\[Epsilon]"}], 
                "-", 
                SqrtBox[
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "4"}], " ", 
                   SuperscriptBox["q", "3"], " ", "wx"}], "-", 
                  RowBox[{"4", " ", 
                   SuperscriptBox["q", "3"], " ", 
                   SuperscriptBox["wx", "2"]}], "-", 
                  RowBox[{"12", " ", 
                   SuperscriptBox["q", "2"], " ", "\[Epsilon]"}], "-", 
                  RowBox[{"24", " ", 
                   SuperscriptBox["q", "2"], " ", "wx", " ", "\[Epsilon]"}], 
                  "-", 
                  RowBox[{"36", " ", "q", " ", 
                   SuperscriptBox["\[Epsilon]", "2"]}], "-", 
                  RowBox[{"9", " ", "q", " ", "wx", " ", 
                   SuperscriptBox["\[Epsilon]", "2"]}], "-", 
                  RowBox[{"27", " ", 
                   SuperscriptBox["\[Epsilon]", "3"]}]}]]}], ")"}]}], 
             RowBox[{"2", " ", 
              SuperscriptBox["q", "2"]}]]},
           {
            FractionBox[
             RowBox[{"3", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "3"}], " ", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "q"}], " ", "wx"}], "-", 
                   RowBox[{"3", " ", "\[Epsilon]"}]}]], " ", "\[Epsilon]"}], 
                "+", 
                SqrtBox[
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "4"}], " ", 
                   SuperscriptBox["q", "3"], " ", "wx"}], "-", 
                  RowBox[{"4", " ", 
                   SuperscriptBox["q", "3"], " ", 
                   SuperscriptBox["wx", "2"]}], "-", 
                  RowBox[{"12", " ", 
                   SuperscriptBox["q", "2"], " ", "\[Epsilon]"}], "-", 
                  RowBox[{"24", " ", 
                   SuperscriptBox["q", "2"], " ", "wx", " ", "\[Epsilon]"}], 
                  "-", 
                  RowBox[{"36", " ", "q", " ", 
                   SuperscriptBox["\[Epsilon]", "2"]}], "-", 
                  RowBox[{"9", " ", "q", " ", "wx", " ", 
                   SuperscriptBox["\[Epsilon]", "2"]}], "-", 
                  RowBox[{"27", " ", 
                   SuperscriptBox["\[Epsilon]", "3"]}]}]]}], ")"}]}], 
             RowBox[{"2", " ", 
              SuperscriptBox["q", "2"]}]]}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "1", "0"},
          {
           FractionBox[
            RowBox[{
             RowBox[{"4", " ", 
              SuperscriptBox["q", "2"], " ", "wx"}], "+", 
             RowBox[{"12", " ", "q", " ", "\[Epsilon]"}], "-", 
             RowBox[{"9", " ", "q", " ", "wx", " ", "\[Epsilon]"}], "-", 
             RowBox[{"27", " ", 
              SuperscriptBox["\[Epsilon]", "2"]}], "-", 
             RowBox[{"3", " ", 
              SqrtBox[
               RowBox[{
                RowBox[{
                 RowBox[{"-", "q"}], " ", "wx"}], "-", 
                RowBox[{"3", " ", "\[Epsilon]"}]}]], " ", 
              SqrtBox[
               RowBox[{
                RowBox[{
                 RowBox[{"-", "4"}], " ", 
                 SuperscriptBox["q", "3"], " ", "wx"}], "-", 
                RowBox[{"4", " ", 
                 SuperscriptBox["q", "3"], " ", 
                 SuperscriptBox["wx", "2"]}], "-", 
                RowBox[{"12", " ", 
                 SuperscriptBox["q", "2"], " ", "\[Epsilon]"}], "-", 
                RowBox[{"24", " ", 
                 SuperscriptBox["q", "2"], " ", "wx", " ", "\[Epsilon]"}], 
                "-", 
                RowBox[{"36", " ", "q", " ", 
                 SuperscriptBox["\[Epsilon]", "2"]}], "-", 
                RowBox[{"9", " ", "q", " ", "wx", " ", 
                 SuperscriptBox["\[Epsilon]", "2"]}], "-", 
                RowBox[{"27", " ", 
                 SuperscriptBox["\[Epsilon]", "3"]}]}]]}]}], 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "3"}], " ", 
                SuperscriptBox["q", "2"], " ", "wx"}], "-", 
               RowBox[{"3", " ", 
                SuperscriptBox["q", "2"], " ", 
                SuperscriptBox["wx", "2"]}], "-", 
               RowBox[{"9", " ", "q", " ", "\[Epsilon]"}], "-", 
               RowBox[{"21", " ", "q", " ", "wx", " ", "\[Epsilon]"}], "-", 
               RowBox[{"36", " ", 
                SuperscriptBox["\[Epsilon]", "2"]}], "+", 
               RowBox[{
                SqrtBox[
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "q"}], " ", "wx"}], "-", 
                  RowBox[{"3", " ", "\[Epsilon]"}]}]], " ", 
                SqrtBox[
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "4"}], " ", 
                   SuperscriptBox["q", "3"], " ", "wx"}], "-", 
                  RowBox[{"4", " ", 
                   SuperscriptBox["q", "3"], " ", 
                   SuperscriptBox["wx", "2"]}], "-", 
                  RowBox[{"12", " ", 
                   SuperscriptBox["q", "2"], " ", "\[Epsilon]"}], "-", 
                  RowBox[{"24", " ", 
                   SuperscriptBox["q", "2"], " ", "wx", " ", "\[Epsilon]"}], 
                  "-", 
                  RowBox[{"36", " ", "q", " ", 
                   SuperscriptBox["\[Epsilon]", "2"]}], "-", 
                  RowBox[{"9", " ", "q", " ", "wx", " ", 
                   SuperscriptBox["\[Epsilon]", "2"]}], "-", 
                  RowBox[{"27", " ", 
                   SuperscriptBox["\[Epsilon]", "3"]}]}]]}]}], ")"}]}]], 
           RowBox[{"-", 
            FractionBox[
             RowBox[{"q", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "2"}], " ", "q", " ", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "q"}], " ", "wx"}], "-", 
                   RowBox[{"3", " ", "\[Epsilon]"}]}]]}], "-", 
                RowBox[{"6", " ", "q", " ", "wx", " ", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "q"}], " ", "wx"}], "-", 
                   RowBox[{"3", " ", "\[Epsilon]"}]}]]}], "-", 
                RowBox[{"33", " ", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "q"}], " ", "wx"}], "-", 
                   RowBox[{"3", " ", "\[Epsilon]"}]}]], " ", "\[Epsilon]"}], 
                "+", 
                SqrtBox[
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "4"}], " ", 
                   SuperscriptBox["q", "3"], " ", "wx"}], "-", 
                  RowBox[{"4", " ", 
                   SuperscriptBox["q", "3"], " ", 
                   SuperscriptBox["wx", "2"]}], "-", 
                  RowBox[{"12", " ", 
                   SuperscriptBox["q", "2"], " ", "\[Epsilon]"}], "-", 
                  RowBox[{"24", " ", 
                   SuperscriptBox["q", "2"], " ", "wx", " ", "\[Epsilon]"}], 
                  "-", 
                  RowBox[{"36", " ", "q", " ", 
                   SuperscriptBox["\[Epsilon]", "2"]}], "-", 
                  RowBox[{"9", " ", "q", " ", "wx", " ", 
                   SuperscriptBox["\[Epsilon]", "2"]}], "-", 
                  RowBox[{"27", " ", 
                   SuperscriptBox["\[Epsilon]", "3"]}]}]]}], ")"}]}], 
             RowBox[{"12", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "3"}], " ", 
                 SuperscriptBox["q", "2"], " ", "wx"}], "-", 
                RowBox[{"3", " ", 
                 SuperscriptBox["q", "2"], " ", 
                 SuperscriptBox["wx", "2"]}], "-", 
                RowBox[{"9", " ", "q", " ", "\[Epsilon]"}], "-", 
                RowBox[{"21", " ", "q", " ", "wx", " ", "\[Epsilon]"}], "-", 
                RowBox[{"36", " ", 
                 SuperscriptBox["\[Epsilon]", "2"]}], "+", 
                RowBox[{
                 SqrtBox[
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "q"}], " ", "wx"}], "-", 
                   RowBox[{"3", " ", "\[Epsilon]"}]}]], " ", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "4"}], " ", 
                    SuperscriptBox["q", "3"], " ", "wx"}], "-", 
                   RowBox[{"4", " ", 
                    SuperscriptBox["q", "3"], " ", 
                    SuperscriptBox["wx", "2"]}], "-", 
                   RowBox[{"12", " ", 
                    SuperscriptBox["q", "2"], " ", "\[Epsilon]"}], "-", 
                   RowBox[{"24", " ", 
                    SuperscriptBox["q", "2"], " ", "wx", " ", "\[Epsilon]"}], 
                   "-", 
                   RowBox[{"36", " ", "q", " ", 
                    SuperscriptBox["\[Epsilon]", "2"]}], "-", 
                   RowBox[{"9", " ", "q", " ", "wx", " ", 
                    SuperscriptBox["\[Epsilon]", "2"]}], "-", 
                   RowBox[{"27", " ", 
                    SuperscriptBox["\[Epsilon]", "3"]}]}]]}]}], ")"}]}]]}], 
           "1"},
          {
           RowBox[{"-", 
            FractionBox[
             RowBox[{
              RowBox[{"4", " ", 
               SuperscriptBox["q", "2"], " ", "wx"}], "+", 
              RowBox[{"12", " ", "q", " ", "\[Epsilon]"}], "-", 
              RowBox[{"9", " ", "q", " ", "wx", " ", "\[Epsilon]"}], "-", 
              RowBox[{"27", " ", 
               SuperscriptBox["\[Epsilon]", "2"]}], "+", 
              RowBox[{"3", " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "q"}], " ", "wx"}], "-", 
                 RowBox[{"3", " ", "\[Epsilon]"}]}]], " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "4"}], " ", 
                  SuperscriptBox["q", "3"], " ", "wx"}], "-", 
                 RowBox[{"4", " ", 
                  SuperscriptBox["q", "3"], " ", 
                  SuperscriptBox["wx", "2"]}], "-", 
                 RowBox[{"12", " ", 
                  SuperscriptBox["q", "2"], " ", "\[Epsilon]"}], "-", 
                 RowBox[{"24", " ", 
                  SuperscriptBox["q", "2"], " ", "wx", " ", "\[Epsilon]"}], 
                 "-", 
                 RowBox[{"36", " ", "q", " ", 
                  SuperscriptBox["\[Epsilon]", "2"]}], "-", 
                 RowBox[{"9", " ", "q", " ", "wx", " ", 
                  SuperscriptBox["\[Epsilon]", "2"]}], "-", 
                 RowBox[{"27", " ", 
                  SuperscriptBox["\[Epsilon]", "3"]}]}]]}]}], 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"3", " ", 
                 SuperscriptBox["q", "2"], " ", "wx"}], "+", 
                RowBox[{"3", " ", 
                 SuperscriptBox["q", "2"], " ", 
                 SuperscriptBox["wx", "2"]}], "+", 
                RowBox[{"9", " ", "q", " ", "\[Epsilon]"}], "+", 
                RowBox[{"21", " ", "q", " ", "wx", " ", "\[Epsilon]"}], "+", 
                RowBox[{"36", " ", 
                 SuperscriptBox["\[Epsilon]", "2"]}], "+", 
                RowBox[{
                 SqrtBox[
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "q"}], " ", "wx"}], "-", 
                   RowBox[{"3", " ", "\[Epsilon]"}]}]], " ", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "4"}], " ", 
                    SuperscriptBox["q", "3"], " ", "wx"}], "-", 
                   RowBox[{"4", " ", 
                    SuperscriptBox["q", "3"], " ", 
                    SuperscriptBox["wx", "2"]}], "-", 
                   RowBox[{"12", " ", 
                    SuperscriptBox["q", "2"], " ", "\[Epsilon]"}], "-", 
                   RowBox[{"24", " ", 
                    SuperscriptBox["q", "2"], " ", "wx", " ", "\[Epsilon]"}], 
                   "-", 
                   RowBox[{"36", " ", "q", " ", 
                    SuperscriptBox["\[Epsilon]", "2"]}], "-", 
                   RowBox[{"9", " ", "q", " ", "wx", " ", 
                    SuperscriptBox["\[Epsilon]", "2"]}], "-", 
                   RowBox[{"27", " ", 
                    SuperscriptBox["\[Epsilon]", "3"]}]}]]}]}], ")"}]}]]}], 
           RowBox[{"-", 
            FractionBox[
             RowBox[{"q", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", "q", " ", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "q"}], " ", "wx"}], "-", 
                   RowBox[{"3", " ", "\[Epsilon]"}]}]]}], "+", 
                RowBox[{"6", " ", "q", " ", "wx", " ", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "q"}], " ", "wx"}], "-", 
                   RowBox[{"3", " ", "\[Epsilon]"}]}]]}], "+", 
                RowBox[{"33", " ", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "q"}], " ", "wx"}], "-", 
                   RowBox[{"3", " ", "\[Epsilon]"}]}]], " ", "\[Epsilon]"}], 
                "+", 
                SqrtBox[
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "4"}], " ", 
                   SuperscriptBox["q", "3"], " ", "wx"}], "-", 
                  RowBox[{"4", " ", 
                   SuperscriptBox["q", "3"], " ", 
                   SuperscriptBox["wx", "2"]}], "-", 
                  RowBox[{"12", " ", 
                   SuperscriptBox["q", "2"], " ", "\[Epsilon]"}], "-", 
                  RowBox[{"24", " ", 
                   SuperscriptBox["q", "2"], " ", "wx", " ", "\[Epsilon]"}], 
                  "-", 
                  RowBox[{"36", " ", "q", " ", 
                   SuperscriptBox["\[Epsilon]", "2"]}], "-", 
                  RowBox[{"9", " ", "q", " ", "wx", " ", 
                   SuperscriptBox["\[Epsilon]", "2"]}], "-", 
                  RowBox[{"27", " ", 
                   SuperscriptBox["\[Epsilon]", "3"]}]}]]}], ")"}]}], 
             RowBox[{"12", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"3", " ", 
                 SuperscriptBox["q", "2"], " ", "wx"}], "+", 
                RowBox[{"3", " ", 
                 SuperscriptBox["q", "2"], " ", 
                 SuperscriptBox["wx", "2"]}], "+", 
                RowBox[{"9", " ", "q", " ", "\[Epsilon]"}], "+", 
                RowBox[{"21", " ", "q", " ", "wx", " ", "\[Epsilon]"}], "+", 
                RowBox[{"36", " ", 
                 SuperscriptBox["\[Epsilon]", "2"]}], "+", 
                RowBox[{
                 SqrtBox[
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "q"}], " ", "wx"}], "-", 
                   RowBox[{"3", " ", "\[Epsilon]"}]}]], " ", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "4"}], " ", 
                    SuperscriptBox["q", "3"], " ", "wx"}], "-", 
                   RowBox[{"4", " ", 
                    SuperscriptBox["q", "3"], " ", 
                    SuperscriptBox["wx", "2"]}], "-", 
                   RowBox[{"12", " ", 
                    SuperscriptBox["q", "2"], " ", "\[Epsilon]"}], "-", 
                   RowBox[{"24", " ", 
                    SuperscriptBox["q", "2"], " ", "wx", " ", "\[Epsilon]"}], 
                   "-", 
                   RowBox[{"36", " ", "q", " ", 
                    SuperscriptBox["\[Epsilon]", "2"]}], "-", 
                   RowBox[{"9", " ", "q", " ", "wx", " ", 
                    SuperscriptBox["\[Epsilon]", "2"]}], "-", 
                   RowBox[{"27", " ", 
                    SuperscriptBox["\[Epsilon]", "3"]}]}]]}]}], ")"}]}]]}], 
           "1"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]]},
     {
      TagBox[
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            FractionBox[
             RowBox[{
              RowBox[{"-", "1"}], "-", "wx"}], "\[Epsilon]"]},
           {
            RowBox[{"-", 
             FractionBox[
              SqrtBox[
               RowBox[{
                RowBox[{"-", "1"}], "-", "wx"}]], 
              RowBox[{
               SqrtBox["3"], " ", 
               SqrtBox["\[Epsilon]"]}]]}]},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {
           FractionBox[
            RowBox[{
             SqrtBox["3"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "-", "wx"}], ")"}], 
              RowBox[{"3", "/", "2"}]]}], 
            SqrtBox["\[Epsilon]"]], "0", 
           FractionBox[
            RowBox[{"q", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "-", "wx"}], ")"}], 
              RowBox[{"3", "/", "2"}]]}], 
            RowBox[{
             SqrtBox["3"], " ", 
             SuperscriptBox["\[Epsilon]", 
              RowBox[{"3", "/", "2"}]]}]]},
          {
           RowBox[{
            FractionBox["1", "6"], " ", 
            RowBox[{"(", 
             RowBox[{"5", "+", 
              RowBox[{"3", " ", "wx"}]}], ")"}]}], 
           FractionBox[
            RowBox[{"2", " ", 
             SqrtBox[
              RowBox[{
               RowBox[{"-", "1"}], "-", "wx"}]]}], 
            RowBox[{
             SqrtBox["3"], " ", 
             SqrtBox["\[Epsilon]"]}]], 
           RowBox[{"-", 
            FractionBox["1", "6"]}]},
          {"0", "0", 
           FractionBox[
            RowBox[{
             SqrtBox[
              RowBox[{
               RowBox[{"-", "1"}], "-", "wx"}]], " ", 
             RowBox[{"(", 
              RowBox[{"q", "+", 
               RowBox[{"q", " ", "wx"}], "+", 
               RowBox[{"3", " ", "\[Epsilon]"}]}], ")"}]}], 
            RowBox[{
             SqrtBox["3"], " ", 
             SuperscriptBox["\[Epsilon]", 
              RowBox[{"3", "/", "2"}]]}]]}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            FractionBox[
             RowBox[{"2", " ", 
              SqrtBox[
               RowBox[{
                RowBox[{"-", "1"}], "-", "wx"}]]}], 
             RowBox[{
              SqrtBox["3"], " ", 
              SqrtBox["\[Epsilon]"]}]]},
           {
            RowBox[{"-", 
             FractionBox[
              RowBox[{
               SqrtBox["3"], " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{"-", "1"}], "-", "wx"}]], " ", 
               RowBox[{"(", 
                RowBox[{"1", "+", "wx"}], ")"}]}], 
              SqrtBox["\[Epsilon]"]]}]},
           {
            FractionBox[
             RowBox[{
              SqrtBox[
               RowBox[{
                RowBox[{"-", "1"}], "-", "wx"}]], " ", 
              RowBox[{"(", 
               RowBox[{"q", "+", 
                RowBox[{"q", " ", "wx"}], "+", 
                RowBox[{"3", " ", "\[Epsilon]"}]}], ")"}]}], 
             RowBox[{
              SqrtBox["3"], " ", 
              SuperscriptBox["\[Epsilon]", 
               RowBox[{"3", "/", "2"}]]}]]}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "1", "0"},
          {
           RowBox[{"-", 
            FractionBox[
             RowBox[{"2", " ", 
              SqrtBox["3"], " ", 
              SqrtBox[
               RowBox[{
                RowBox[{"-", "1"}], "-", "wx"}]]}], 
             SqrtBox["\[Epsilon]"]]}], "1", "0"},
          {
           RowBox[{"-", 
            FractionBox[
             RowBox[{"q", "+", 
              RowBox[{"q", " ", "wx"}]}], 
             RowBox[{"q", "+", 
              RowBox[{"q", " ", "wx"}], "+", 
              RowBox[{"6", " ", "\[Epsilon]"}], "+", 
              RowBox[{"3", " ", "wx", " ", "\[Epsilon]"}]}]]}], 
           RowBox[{"-", 
            FractionBox[
             RowBox[{
              SqrtBox["3"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", 
                 SuperscriptBox["\[Epsilon]", 
                  RowBox[{"3", "/", "2"}]]}], "+", 
                RowBox[{"wx", " ", 
                 SuperscriptBox["\[Epsilon]", 
                  RowBox[{"3", "/", "2"}]]}]}], ")"}]}], 
             RowBox[{"2", " ", 
              SqrtBox[
               RowBox[{
                RowBox[{"-", "1"}], "-", "wx"}]], " ", 
              RowBox[{"(", 
               RowBox[{"q", "+", 
                RowBox[{"q", " ", "wx"}], "+", 
                RowBox[{"6", " ", "\[Epsilon]"}], "+", 
                RowBox[{"3", " ", "wx", " ", "\[Epsilon]"}]}], ")"}]}]]}], "1"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]]},
     {
      TagBox[
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            FractionBox[
             RowBox[{
              RowBox[{"-", "1"}], "-", "wx"}], "\[Epsilon]"]},
           {
            FractionBox[
             SqrtBox[
              RowBox[{
               RowBox[{"-", "1"}], "-", "wx"}]], 
             RowBox[{
              SqrtBox["3"], " ", 
              SqrtBox["\[Epsilon]"]}]]},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {
           RowBox[{"-", 
            FractionBox[
             RowBox[{
              SqrtBox["3"], " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "-", "wx"}], ")"}], 
               RowBox[{"3", "/", "2"}]]}], 
             SqrtBox["\[Epsilon]"]]}], "0", 
           RowBox[{"-", 
            FractionBox[
             RowBox[{"q", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "-", "wx"}], ")"}], 
               RowBox[{"3", "/", "2"}]]}], 
             RowBox[{
              SqrtBox["3"], " ", 
              SuperscriptBox["\[Epsilon]", 
               RowBox[{"3", "/", "2"}]]}]]}]},
          {
           RowBox[{
            FractionBox["1", "6"], " ", 
            RowBox[{"(", 
             RowBox[{"5", "+", 
              RowBox[{"3", " ", "wx"}]}], ")"}]}], 
           RowBox[{"-", 
            FractionBox[
             RowBox[{"2", " ", 
              SqrtBox[
               RowBox[{
                RowBox[{"-", "1"}], "-", "wx"}]]}], 
             RowBox[{
              SqrtBox["3"], " ", 
              SqrtBox["\[Epsilon]"]}]]}], 
           RowBox[{"-", 
            FractionBox["1", "6"]}]},
          {"0", "0", 
           RowBox[{"-", 
            FractionBox[
             RowBox[{
              SqrtBox[
               RowBox[{
                RowBox[{"-", "1"}], "-", "wx"}]], " ", 
              RowBox[{"(", 
               RowBox[{"q", "+", 
                RowBox[{"q", " ", "wx"}], "+", 
                RowBox[{"3", " ", "\[Epsilon]"}]}], ")"}]}], 
             RowBox[{
              SqrtBox["3"], " ", 
              SuperscriptBox["\[Epsilon]", 
               RowBox[{"3", "/", "2"}]]}]]}]}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            RowBox[{"-", 
             FractionBox[
              RowBox[{"2", " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{"-", "1"}], "-", "wx"}]]}], 
              RowBox[{
               SqrtBox["3"], " ", 
               SqrtBox["\[Epsilon]"]}]]}]},
           {
            FractionBox[
             RowBox[{
              SqrtBox["3"], " ", 
              SqrtBox[
               RowBox[{
                RowBox[{"-", "1"}], "-", "wx"}]], " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", "wx"}], ")"}]}], 
             SqrtBox["\[Epsilon]"]]},
           {
            RowBox[{"-", 
             FractionBox[
              RowBox[{
               SqrtBox[
                RowBox[{
                 RowBox[{"-", "1"}], "-", "wx"}]], " ", 
               RowBox[{"(", 
                RowBox[{"q", "+", 
                 RowBox[{"q", " ", "wx"}], "+", 
                 RowBox[{"3", " ", "\[Epsilon]"}]}], ")"}]}], 
              RowBox[{
               SqrtBox["3"], " ", 
               SuperscriptBox["\[Epsilon]", 
                RowBox[{"3", "/", "2"}]]}]]}]}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "1", "0"},
          {
           FractionBox[
            RowBox[{"2", " ", 
             SqrtBox["3"], " ", 
             SqrtBox[
              RowBox[{
               RowBox[{"-", "1"}], "-", "wx"}]]}], 
            SqrtBox["\[Epsilon]"]], "1", "0"},
          {
           RowBox[{"-", 
            FractionBox[
             RowBox[{"q", "+", 
              RowBox[{"q", " ", "wx"}]}], 
             RowBox[{"q", "+", 
              RowBox[{"q", " ", "wx"}], "+", 
              RowBox[{"6", " ", "\[Epsilon]"}], "+", 
              RowBox[{"3", " ", "wx", " ", "\[Epsilon]"}]}]]}], 
           FractionBox[
            RowBox[{
             SqrtBox["3"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", 
                SuperscriptBox["\[Epsilon]", 
                 RowBox[{"3", "/", "2"}]]}], "+", 
               RowBox[{"wx", " ", 
                SuperscriptBox["\[Epsilon]", 
                 RowBox[{"3", "/", "2"}]]}]}], ")"}]}], 
            RowBox[{"2", " ", 
             SqrtBox[
              RowBox[{
               RowBox[{"-", "1"}], "-", "wx"}]], " ", 
             RowBox[{"(", 
              RowBox[{"q", "+", 
               RowBox[{"q", " ", "wx"}], "+", 
               RowBox[{"6", " ", "\[Epsilon]"}], "+", 
               RowBox[{"3", " ", "wx", " ", "\[Epsilon]"}]}], ")"}]}]], "1"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{
     "Columns" -> {{False}}, "Rows" -> {False, True, {False}, False}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   {None, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {
     None, {"Fixed Point", "Jacobian", "Eigenvalues", 
       "Eigenvectors"}}]]]], "Output",
 CellChangeTimes->{
  3.884941454690998*^9, {3.884941542933641*^9, 3.884941546476881*^9}, {
   3.884941605209611*^9, 3.884941629149145*^9}, 3.88495119079465*^9, 
   3.88495122436862*^9, 3.8849512959610043`*^9, 3.884951377134953*^9, 
   3.8849514201387043`*^9, 3.8849518012042103`*^9, 3.88562223805123*^9, 
   3.885622503492572*^9, 3.8856226457884483`*^9, 3.8856396860561047`*^9, 
   3.8856416872205048`*^9, 3.88564192395665*^9, 3.885875118753622*^9, 
   3.885876467829794*^9, 3.88587660344481*^9, 3.885877104125065*^9, 
   3.8858771737497377`*^9, 3.885879583665038*^9, 3.8858810737327747`*^9, 
   3.885983970859274*^9, 3.8873508072443657`*^9, 3.887360789363636*^9, 
   3.8874370789522543`*^9, 3.8874372204501667`*^9, 3.8874392183274717`*^9, 
   3.887977553478746*^9, 3.888066043321027*^9, 3.888310946149785*^9, 
   3.888385829189434*^9, 3.888386217467806*^9, 3.888399171109647*^9, 
   3.888399397299287*^9, 3.8883997790856247`*^9, 3.888402423841889*^9},
 CellLabel->
  "Out[37]//TableForm=",ExpressionUUID->"d523581d-ca73-40ee-9150-\
7a7062c614ea"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Eq1", "[", 
    RowBox[{"q_", ",", "wx_", ",", "\[Epsilon]_"}], "]"}], "=", "de1"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Eq2", "[", 
    RowBox[{"wx_", ",", "\[Epsilon]_"}], "]"}], "=", "de2"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Eq3", "[", "q_", "]"}], "=", "de3"}], ";"}]}], "Input",
 CellChangeTimes->{{3.878636626661203*^9, 3.878636636042757*^9}, {
   3.8786400729113073`*^9, 3.878640099369973*^9}, {3.878640199884038*^9, 
   3.878640211434988*^9}, 3.878720216431931*^9, {3.878881437960136*^9, 
   3.878881453370654*^9}, {3.8865940267335377`*^9, 3.8865940274907312`*^9}, {
   3.888308047863652*^9, 3.888308049070133*^9}, {3.888399036557212*^9, 
   3.888399079836182*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"98cc73a0-c2ab-4a12-9694-9eeb54f24e4c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"StreamPlot3D", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Eq1", "[", 
        RowBox[{"q", ",", "wx", ",", "\[Epsilon]"}], "]"}], ",", 
       RowBox[{"Eq2", "[", 
        RowBox[{"wx", ",", "\[Epsilon]"}], "]"}], ",", 
       RowBox[{"Eq3", "[", "q", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"z", ",", "0", ",", "5"}], "}"}], ",", 
     RowBox[{"AxesLabel", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}]}], 
    "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"q", ",", "0", ",", "1", ",", 
     RowBox[{"Appearance", "->", "\"\<Open\>\""}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"wx", ",", 
     RowBox[{"-", "5"}], ",", "1", ",", 
     RowBox[{"Appearance", "->", "\"\<Open\>\""}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", ",", 
     RowBox[{"-", "1"}], ",", "1", ",", 
     RowBox[{"Appearance", "->", "\"\<Open\>\""}]}], "}"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.878639778339827*^9, 3.8786398085073023`*^9}, {
   3.878639979197041*^9, 3.878639982821209*^9}, {3.878640026324665*^9, 
   3.878640045259263*^9}, {3.87864010346107*^9, 3.878640117483438*^9}, {
   3.8786401881407013`*^9, 3.878640222468185*^9}, {3.8786403968945436`*^9, 
   3.878640398155799*^9}, {3.8786404492447853`*^9, 3.878640474115641*^9}, 
   3.878640504316465*^9, {3.878720213961834*^9, 3.8787202253307457`*^9}, {
   3.878881441265929*^9, 3.878881488261342*^9}, {3.878882049904756*^9, 
   3.878882050665854*^9}, 3.886593945750594*^9, {3.886594024078988*^9, 
   3.886594032638586*^9}, {3.888399106173613*^9, 3.8883991603772507`*^9}, {
   3.888402444529725*^9, 3.8884024446391277`*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"178e33f8-ea4e-4708-afa2-4876b8dc892a"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`q$$ = 
    1., $CellContext`wx$$ = -0.6, $CellContext`\[Epsilon]$$ = -0.25, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`q$$], 0, 1}, {
      Hold[$CellContext`wx$$], -5, 1}, {
      Hold[$CellContext`\[Epsilon]$$], -1, 1}}, Typeset`size$$ = {
    360., {178., 182.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`q$$ = 
        0, $CellContext`wx$$ = -5, $CellContext`\[Epsilon]$$ = -1}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> StreamPlot3D[{
         $CellContext`Eq1[$CellContext`q$$, $CellContext`wx$$, $CellContext`\
\[Epsilon]$$], 
         $CellContext`Eq2[$CellContext`wx$$, $CellContext`\[Epsilon]$$], 
         $CellContext`Eq3[$CellContext`q$$]}, {$CellContext`x, 0, 
         5}, {$CellContext`y, -2, 2}, {$CellContext`z, 0, 5}, 
        AxesLabel -> {"x", "y", "z"}], 
      "Specifications" :> {{$CellContext`q$$, 0, 1, Appearance -> 
         "Open"}, {$CellContext`wx$$, -5, 1, Appearance -> 
         "Open"}, {$CellContext`\[Epsilon]$$, -1, 1, Appearance -> "Open"}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{406., {277.6875, 283.3125}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.8883991743648663`*^9, 3.888399400224999*^9, {3.888402427243051*^9, 
   3.888402445012536*^9}},
 CellLabel->"Out[42]=",ExpressionUUID->"6db918a3-4e01-454b-8eff-d4845ba77165"],

Cell[BoxData[
 TemplateBox[{
  "Rest", "normal", 
   "\"Nonatomic expression expected at position \
\\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \\!\\(\\*RowBox[{\\\"Rest\\\", \\\"[\\\", \
\\\"\\\\\\\"Coordinates\\\\\\\"\\\", \\\"]\\\"}]\\).\"", 2, 104, 21, 
   18332645112968276501, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8884029286872063`*^9},
 CellLabel->"",ExpressionUUID->"c04b3e8c-7b38-420d-a1b0-8f323ab1a556"],

Cell[BoxData[
 TemplateBox[{
  "Join", "heads", 
   "\"Heads \\!\\(\\*RowBox[{\\\"NDSolveValue\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{RowBox[{SuperscriptBox[\\\"System`VectorPlotsDump`w$98598\\\",\
 \\\"\[Prime]\\\", Rule[MultilineFunction, None]], \\\"[\\\", \
\\\"System`VectorPlotsDump`t$98598\\\", \\\"]\\\"}], \\\"\[Equal]\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"Eq1\\\", \\\"[\\\", \
RowBox[{\\\"1.`\\\", \\\",\\\", RowBox[{\\\"-\\\", \\\"0.6`\\\"}], \\\",\\\", \
RowBox[{\\\"-\\\", \\\"0.25`\\\"}]}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"Eq2\
\\\", \\\"[\\\", RowBox[{RowBox[{\\\"-\\\", \\\"0.6`\\\"}], \\\",\\\", \
RowBox[{\\\"-\\\", \\\"0.25`\\\"}]}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"Eq3\
\\\", \\\"[\\\", \\\"1.`\\\", \\\"]\\\"}], \\\",\\\", \
SqrtBox[RowBox[{SuperscriptBox[RowBox[{\\\"Eq1\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"3\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \
\\\"2\\\"], \\\"+\\\", SuperscriptBox[RowBox[{\\\"Eq2\\\", \\\"[\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\
\\\"}], \\\"2\\\"], \\\"+\\\", SuperscriptBox[RowBox[{\\\"Eq3\\\", \\\"[\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\
\\\"}], \\\"2\\\"]}]]}], \\\"}\\\"}]}], \\\",\\\", \
RowBox[{RowBox[{\\\"System`VectorPlotsDump`w$98598\\\", \\\"[\\\", \\\"0\\\", \
\\\"]\\\"}], \\\"\[Equal]\\\", RowBox[{\\\"{\\\", RowBox[{\\\"0.5`\\\", \\\",\
\\\", RowBox[{\\\"-\\\", \\\"1.6`\\\"}], \\\",\\\", \\\"0.5`\\\", \\\",\\\", \
\\\"0.`\\\"}], \\\"}\\\"}]}], \\\",\\\", RowBox[{\\\"WhenEvent\\\", \
\\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\
\"}], \\\"]\\\"}]}], \\\"}\\\"}], \\\",\\\", \
\\\"System`VectorPlotsDump`w$98598\\\", \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"System`VectorPlotsDump`t$98598\\\", \\\",\\\", RowBox[{\\\"-\\\", \
\\\"\[Infinity]\\\"}], \\\",\\\", \\\"0.`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"\\\\\\\"ExtrapolationHandler\\\\\\\"\\\", \\\"\[Rule]\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"Indeterminate\\\", \\\"&\\\"}], \
\\\",\\\", RowBox[{\\\"\\\\\\\"WarningMessage\\\\\\\"\\\", \\\"\[Rule]\\\", \
\\\"True\\\"}]}], \\\"}\\\"}]}], \\\",\\\", RowBox[{\\\"Method\\\", \\\"\
\[Rule]\\\", \\\"Automatic\\\"}]}], \\\"]\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"NDSolveValue\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{RowBox[{SuperscriptBox[\\\"System`VectorPlotsDump`w$98598\\\",\
 \\\"\[Prime]\\\", Rule[MultilineFunction, None]], \\\"[\\\", \
\\\"System`VectorPlotsDump`t$98598\\\", \\\"]\\\"}], \\\"\[Equal]\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"Eq1\\\", \\\"[\\\", \
RowBox[{\\\"1.`\\\", \\\",\\\", RowBox[{\\\"-\\\", \\\"0.6`\\\"}], \\\",\\\", \
RowBox[{\\\"-\\\", \\\"0.25`\\\"}]}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"Eq2\
\\\", \\\"[\\\", RowBox[{RowBox[{\\\"-\\\", \\\"0.6`\\\"}], \\\",\\\", \
RowBox[{\\\"-\\\", \\\"0.25`\\\"}]}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"Eq3\
\\\", \\\"[\\\", \\\"1.`\\\", \\\"]\\\"}], \\\",\\\", \
SqrtBox[RowBox[{SuperscriptBox[RowBox[{\\\"Eq1\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"3\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \
\\\"2\\\"], \\\"+\\\", SuperscriptBox[RowBox[{\\\"Eq2\\\", \\\"[\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\
\\\"}], \\\"2\\\"], \\\"+\\\", SuperscriptBox[RowBox[{\\\"Eq3\\\", \\\"[\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\
\\\"}], \\\"2\\\"]}]]}], \\\"}\\\"}]}], \\\",\\\", \
RowBox[{RowBox[{\\\"System`VectorPlotsDump`w$98598\\\", \\\"[\\\", \\\"0\\\", \
\\\"]\\\"}], \\\"\[Equal]\\\", RowBox[{\\\"{\\\", RowBox[{\\\"0.5`\\\", \\\",\
\\\", RowBox[{\\\"-\\\", \\\"1.6`\\\"}], \\\",\\\", \\\"0.5`\\\", \\\",\\\", \
\\\"0.`\\\"}], \\\"}\\\"}]}], \\\",\\\", RowBox[{\\\"WhenEvent\\\", \
\\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\
\"}], \\\"]\\\"}]}], \\\"}\\\"}], \\\",\\\", \
\\\"System`VectorPlotsDump`w$98598\\\", \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"System`VectorPlotsDump`t$98598\\\", \\\",\\\", \\\"0.`\\\", \\\",\
\\\", \\\"\[Infinity]\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"\\\\\\\"ExtrapolationHandler\\\\\\\"\\\", \\\"\[Rule]\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"Indeterminate\\\", \\\"&\\\"}], \
\\\",\\\", RowBox[{\\\"\\\\\\\"WarningMessage\\\\\\\"\\\", \\\"\[Rule]\\\", \
\\\"True\\\"}]}], \\\"}\\\"}]}], \\\",\\\", RowBox[{\\\"Method\\\", \\\"\
\[Rule]\\\", \\\"Automatic\\\"}]}], \\\"]\\\"}]\\) at positions \
\\!\\(\\*RowBox[{\\\"1\\\"}]\\) and \\!\\(\\*RowBox[{\\\"2\\\"}]\\) are \
expected to be the same.\"", 2, 104, 22, 18332645112968276501, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.888402928747726*^9},
 CellLabel->"",ExpressionUUID->"f685f469-dbd1-4fcb-ab1b-e9784bcc3c11"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partw", 
   "\"Part \\!\\(\\*RowBox[{\\\"1\\\"}]\\) of \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"}\\\"}]\\) does not exist.\"", 2, 104, 23, 18332645112968276501, "Local"},
  
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8884029287693777`*^9},
 CellLabel->"",ExpressionUUID->"d70c196f-38fc-4a00-aa3b-38acf2bd7778"],

Cell[BoxData[
 TemplateBox[{
  "Interpolation", "innd", 
   "\"First argument in \\!\\(\\*RowBox[{RowBox[{\\\"{\\\", \
RowBox[{\\\"Null\\\", \\\",\\\", RowBox[{\\\"{\\\", \\\"}\\\"}]}], \
\\\"}\\\"}], \\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"2\\\", \\\",\\\", \
\\\"1\\\"}], \\\"\[RightDoubleBracket]\\\"}]\\) does not contain a list of \
data and coordinates.\"", 2, 104, 24, 18332645112968276501, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.888402928789157*^9},
 CellLabel->"",ExpressionUUID->"3e03e2cd-4d04-443e-9217-ac90233fb7fd"],

Cell[BoxData[
 TemplateBox[{
  "PropertyValue", "pvobj", 
   "\"\\!\\(\\*RowBox[{\\\"Interpolation\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"Null\\\", \\\",\\\", \
RowBox[{\\\"{\\\", \\\"}\\\"}]}], \\\"}\\\"}], \\\"\[LeftDoubleBracket]\\\", \
RowBox[{\\\"2\\\", \\\",\\\", \\\"1\\\"}], \\\"\[RightDoubleBracket]\\\"}], \
\\\"]\\\"}]\\) is not an object with properties.\"", 2, 104, 25, 
   18332645112968276501, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.888402928808107*^9},
 CellLabel->"",ExpressionUUID->"50afdfd4-63b5-4e4a-b8e2-d0d36f63d46d"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partw", 
   "\"Part \\!\\(\\*RowBox[{\\\"4\\\"}]\\) of \
\\!\\(\\*RowBox[{\\\"Interpolation\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{\\\"Null\\\", \\\",\\\", RowBox[{\\\"{\\\", \\\"}\\\"}]}], \
\\\"}\\\"}], \\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"2\\\", \\\",\\\", \
\\\"1\\\"}], \\\"\[RightDoubleBracket]\\\"}], \\\"]\\\"}]\\) does not \
exist.\"", 2, 104, 26, 18332645112968276501, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.888402928814966*^9},
 CellLabel->"",ExpressionUUID->"5a58ee9e-cc88-4045-82d2-efc46d008b77"],

Cell[BoxData[
 TemplateBox[{
  "Set", "shape", 
   "\"Lists \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\
\"System`VectorPlotsDump`linesxmin$98598\\\", \\\",\\\", \
\\\"System`VectorPlotsDump`linesxmax$98598\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"System`VectorPlotsDump`linesymin$98598\\\", \\\
\",\\\", \\\"System`VectorPlotsDump`linesymax$98598\\\"}], \\\"}\\\"}], \\\",\
\\\", RowBox[{\\\"{\\\", RowBox[{\\\"System`VectorPlotsDump`lineszmin$98598\\\
\", \\\",\\\", \\\"System`VectorPlotsDump`lineszmax$98598\\\"}], \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"System`VectorPlotsDump`linesfieldmin$98598\\\", \\\",\\\", \
\\\"System`VectorPlotsDump`linesfieldmax$98598\\\"}], \\\"}\\\"}]}], \
\\\"}\\\"}]\\) and \\!\\(\\*RowBox[{\\\"System`VectorPlotsDump`extremes$98730\
\\\"}]\\) are not the same shape.\"", 2, 104, 27, 18332645112968276501, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.888402928929062*^9},
 CellLabel->"",ExpressionUUID->"19111d73-d596-4923-bfb1-9787df7561a0"],

Cell[BoxData[
 TemplateBox[{
  "Rest", "normal", 
   "\"Nonatomic expression expected at position \
\\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \\!\\(\\*RowBox[{\\\"Rest\\\", \\\"[\\\", \
\\\"\\\\\\\"Coordinates\\\\\\\"\\\", \\\"]\\\"}]\\).\"", 2, 104, 28, 
   18332645112968276501, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8884029289384727`*^9},
 CellLabel->"",ExpressionUUID->"c4b20223-8446-468b-b5f1-a0ca5b763fa7"],

Cell[BoxData[
 TemplateBox[{
  "Join", "heads", 
   "\"Heads \\!\\(\\*RowBox[{\\\"NDSolveValue\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{RowBox[{SuperscriptBox[\\\"System`VectorPlotsDump`w$98598\\\",\
 \\\"\[Prime]\\\", Rule[MultilineFunction, None]], \\\"[\\\", \
\\\"System`VectorPlotsDump`t$98598\\\", \\\"]\\\"}], \\\"\[Equal]\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"Eq1\\\", \\\"[\\\", \
RowBox[{\\\"1.`\\\", \\\",\\\", RowBox[{\\\"-\\\", \\\"0.6`\\\"}], \\\",\\\", \
RowBox[{\\\"-\\\", \\\"0.25`\\\"}]}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"Eq2\
\\\", \\\"[\\\", RowBox[{RowBox[{\\\"-\\\", \\\"0.6`\\\"}], \\\",\\\", \
RowBox[{\\\"-\\\", \\\"0.25`\\\"}]}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"Eq3\
\\\", \\\"[\\\", \\\"1.`\\\", \\\"]\\\"}], \\\",\\\", \
SqrtBox[RowBox[{SuperscriptBox[RowBox[{\\\"Eq1\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"3\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \
\\\"2\\\"], \\\"+\\\", SuperscriptBox[RowBox[{\\\"Eq2\\\", \\\"[\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\
\\\"}], \\\"2\\\"], \\\"+\\\", SuperscriptBox[RowBox[{\\\"Eq3\\\", \\\"[\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\
\\\"}], \\\"2\\\"]}]]}], \\\"}\\\"}]}], \\\",\\\", \
RowBox[{RowBox[{\\\"System`VectorPlotsDump`w$98598\\\", \\\"[\\\", \\\"0\\\", \
\\\"]\\\"}], \\\"\[Equal]\\\", RowBox[{\\\"{\\\", RowBox[{\\\"0.5`\\\", \\\",\
\\\", RowBox[{\\\"-\\\", \\\"1.6`\\\"}], \\\",\\\", \\\"1.8333333333333333`\\\
\", \\\",\\\", \\\"0.`\\\"}], \\\"}\\\"}]}], \\\",\\\", RowBox[{\\\"WhenEvent\
\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\"}\\\"}], \\\",\\\", \
\\\"System`VectorPlotsDump`w$98598\\\", \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"System`VectorPlotsDump`t$98598\\\", \\\",\\\", RowBox[{\\\"-\\\", \
\\\"\[Infinity]\\\"}], \\\",\\\", \\\"0.`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"\\\\\\\"ExtrapolationHandler\\\\\\\"\\\", \\\"\[Rule]\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"Indeterminate\\\", \\\"&\\\"}], \
\\\",\\\", RowBox[{\\\"\\\\\\\"WarningMessage\\\\\\\"\\\", \\\"\[Rule]\\\", \
\\\"True\\\"}]}], \\\"}\\\"}]}], \\\",\\\", RowBox[{\\\"Method\\\", \\\"\
\[Rule]\\\", \\\"Automatic\\\"}]}], \\\"]\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"NDSolveValue\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{RowBox[{SuperscriptBox[\\\"System`VectorPlotsDump`w$98598\\\",\
 \\\"\[Prime]\\\", Rule[MultilineFunction, None]], \\\"[\\\", \
\\\"System`VectorPlotsDump`t$98598\\\", \\\"]\\\"}], \\\"\[Equal]\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"Eq1\\\", \\\"[\\\", \
RowBox[{\\\"1.`\\\", \\\",\\\", RowBox[{\\\"-\\\", \\\"0.6`\\\"}], \\\",\\\", \
RowBox[{\\\"-\\\", \\\"0.25`\\\"}]}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"Eq2\
\\\", \\\"[\\\", RowBox[{RowBox[{\\\"-\\\", \\\"0.6`\\\"}], \\\",\\\", \
RowBox[{\\\"-\\\", \\\"0.25`\\\"}]}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"Eq3\
\\\", \\\"[\\\", \\\"1.`\\\", \\\"]\\\"}], \\\",\\\", \
SqrtBox[RowBox[{SuperscriptBox[RowBox[{\\\"Eq1\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"3\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \
\\\"2\\\"], \\\"+\\\", SuperscriptBox[RowBox[{\\\"Eq2\\\", \\\"[\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\
\\\"}], \\\"2\\\"], \\\"+\\\", SuperscriptBox[RowBox[{\\\"Eq3\\\", \\\"[\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\
\\\"}], \\\"2\\\"]}]]}], \\\"}\\\"}]}], \\\",\\\", \
RowBox[{RowBox[{\\\"System`VectorPlotsDump`w$98598\\\", \\\"[\\\", \\\"0\\\", \
\\\"]\\\"}], \\\"\[Equal]\\\", RowBox[{\\\"{\\\", RowBox[{\\\"0.5`\\\", \\\",\
\\\", RowBox[{\\\"-\\\", \\\"1.6`\\\"}], \\\",\\\", \\\"1.8333333333333333`\\\
\", \\\",\\\", \\\"0.`\\\"}], \\\"}\\\"}]}], \\\",\\\", RowBox[{\\\"WhenEvent\
\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\"}\\\"}], \\\",\\\", \
\\\"System`VectorPlotsDump`w$98598\\\", \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"System`VectorPlotsDump`t$98598\\\", \\\",\\\", \\\"0.`\\\", \\\",\
\\\", \\\"\[Infinity]\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"\\\\\\\"ExtrapolationHandler\\\\\\\"\\\", \\\"\[Rule]\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"Indeterminate\\\", \\\"&\\\"}], \
\\\",\\\", RowBox[{\\\"\\\\\\\"WarningMessage\\\\\\\"\\\", \\\"\[Rule]\\\", \
\\\"True\\\"}]}], \\\"}\\\"}]}], \\\",\\\", RowBox[{\\\"Method\\\", \\\"\
\[Rule]\\\", \\\"Automatic\\\"}]}], \\\"]\\\"}]\\) at positions \
\\!\\(\\*RowBox[{\\\"1\\\"}]\\) and \\!\\(\\*RowBox[{\\\"2\\\"}]\\) are \
expected to be the same.\"", 2, 104, 29, 18332645112968276501, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.888402928961823*^9},
 CellLabel->"",ExpressionUUID->"2be4d711-28cc-4d95-91b9-6e93bf90a587"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partw", 
   "\"Part \\!\\(\\*RowBox[{\\\"1\\\"}]\\) of \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"}\\\"}]\\) does not exist.\"", 2, 104, 30, 18332645112968276501, "Local"},
  
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.888402928971675*^9},
 CellLabel->"",ExpressionUUID->"98e4c26b-12ab-493e-9f7a-e77fbd35e2f8"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Part\\\", \\\"::\\\", \
\\\"partw\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 104, 31, 18332645112968276501, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.888402928978973*^9},
 CellLabel->"",ExpressionUUID->"1c8be64a-dc29-40f3-adc6-d16721f0576b"],

Cell[BoxData[
 TemplateBox[{
  "Interpolation", "innd", 
   "\"First argument in \\!\\(\\*RowBox[{RowBox[{\\\"{\\\", \
RowBox[{\\\"Null\\\", \\\",\\\", RowBox[{\\\"{\\\", \\\"}\\\"}]}], \
\\\"}\\\"}], \\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"2\\\", \\\",\\\", \
\\\"1\\\"}], \\\"\[RightDoubleBracket]\\\"}]\\) does not contain a list of \
data and coordinates.\"", 2, 104, 32, 18332645112968276501, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.888402928986771*^9},
 CellLabel->"",ExpressionUUID->"48365f71-1d2b-4ec7-b0a6-5c33a0b77410"],

Cell[BoxData[
 TemplateBox[{
  "PropertyValue", "pvobj", 
   "\"\\!\\(\\*RowBox[{\\\"Interpolation\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"Null\\\", \\\",\\\", \
RowBox[{\\\"{\\\", \\\"}\\\"}]}], \\\"}\\\"}], \\\"\[LeftDoubleBracket]\\\", \
RowBox[{\\\"2\\\", \\\",\\\", \\\"1\\\"}], \\\"\[RightDoubleBracket]\\\"}], \
\\\"]\\\"}]\\) is not an object with properties.\"", 2, 104, 33, 
   18332645112968276501, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.88840292904778*^9},
 CellLabel->"",ExpressionUUID->"cebe8b49-44d2-4a66-a524-e128dd541228"],

Cell[BoxData[
 TemplateBox[{
  "Set", "shape", 
   "\"Lists \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\
\"System`VectorPlotsDump`linesxmin$98598\\\", \\\",\\\", \
\\\"System`VectorPlotsDump`linesxmax$98598\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"System`VectorPlotsDump`linesymin$98598\\\", \\\
\",\\\", \\\"System`VectorPlotsDump`linesymax$98598\\\"}], \\\"}\\\"}], \\\",\
\\\", RowBox[{\\\"{\\\", RowBox[{\\\"System`VectorPlotsDump`lineszmin$98598\\\
\", \\\",\\\", \\\"System`VectorPlotsDump`lineszmax$98598\\\"}], \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"System`VectorPlotsDump`linesfieldmin$98598\\\", \\\",\\\", \
\\\"System`VectorPlotsDump`linesfieldmax$98598\\\"}], \\\"}\\\"}]}], \
\\\"}\\\"}]\\) and \\!\\(\\*RowBox[{\\\"System`VectorPlotsDump`extremes$98844\
\\\"}]\\) are not the same shape.\"", 2, 104, 34, 18332645112968276501, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.888402929100525*^9},
 CellLabel->"",ExpressionUUID->"5b212056-4db0-47e5-9fe9-f64c0520e431"],

Cell[BoxData[
 TemplateBox[{
  "Rest", "normal", 
   "\"Nonatomic expression expected at position \
\\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \\!\\(\\*RowBox[{\\\"Rest\\\", \\\"[\\\", \
\\\"\\\\\\\"Coordinates\\\\\\\"\\\", \\\"]\\\"}]\\).\"", 2, 104, 35, 
   18332645112968276501, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.888402929152474*^9},
 CellLabel->"",ExpressionUUID->"58016237-5d46-45f4-b44a-adc52bf1793e"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Rest\\\", \\\"::\\\", \
\\\"normal\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 104, 36, 18332645112968276501, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.888402929204105*^9},
 CellLabel->"",ExpressionUUID->"21f00d98-dcaf-4df7-9eb0-9fe8c2f57025"],

Cell[BoxData[
 TemplateBox[{
  "Join", "heads", 
   "\"Heads \\!\\(\\*RowBox[{\\\"NDSolveValue\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{RowBox[{SuperscriptBox[\\\"System`VectorPlotsDump`w$98598\\\",\
 \\\"\[Prime]\\\", Rule[MultilineFunction, None]], \\\"[\\\", \
\\\"System`VectorPlotsDump`t$98598\\\", \\\"]\\\"}], \\\"\[Equal]\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"Eq1\\\", \\\"[\\\", \
RowBox[{\\\"1.`\\\", \\\",\\\", RowBox[{\\\"-\\\", \\\"0.6`\\\"}], \\\",\\\", \
RowBox[{\\\"-\\\", \\\"0.25`\\\"}]}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"Eq2\
\\\", \\\"[\\\", RowBox[{RowBox[{\\\"-\\\", \\\"0.6`\\\"}], \\\",\\\", \
RowBox[{\\\"-\\\", \\\"0.25`\\\"}]}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"Eq3\
\\\", \\\"[\\\", \\\"1.`\\\", \\\"]\\\"}], \\\",\\\", \
SqrtBox[RowBox[{SuperscriptBox[RowBox[{\\\"Eq1\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"3\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \
\\\"2\\\"], \\\"+\\\", SuperscriptBox[RowBox[{\\\"Eq2\\\", \\\"[\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\
\\\"}], \\\"2\\\"], \\\"+\\\", SuperscriptBox[RowBox[{\\\"Eq3\\\", \\\"[\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\
\\\"}], \\\"2\\\"]}]]}], \\\"}\\\"}]}], \\\",\\\", \
RowBox[{RowBox[{\\\"System`VectorPlotsDump`w$98598\\\", \\\"[\\\", \\\"0\\\", \
\\\"]\\\"}], \\\"\[Equal]\\\", RowBox[{\\\"{\\\", RowBox[{\\\"0.5`\\\", \\\",\
\\\", RowBox[{\\\"-\\\", \\\"1.6`\\\"}], \\\",\\\", \\\"3.1666666666666665`\\\
\", \\\",\\\", \\\"0.`\\\"}], \\\"}\\\"}]}], \\\",\\\", RowBox[{\\\"WhenEvent\
\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\"}\\\"}], \\\",\\\", \
\\\"System`VectorPlotsDump`w$98598\\\", \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"System`VectorPlotsDump`t$98598\\\", \\\",\\\", RowBox[{\\\"-\\\", \
\\\"\[Infinity]\\\"}], \\\",\\\", \\\"0.`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"\\\\\\\"ExtrapolationHandler\\\\\\\"\\\", \\\"\[Rule]\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"Indeterminate\\\", \\\"&\\\"}], \
\\\",\\\", RowBox[{\\\"\\\\\\\"WarningMessage\\\\\\\"\\\", \\\"\[Rule]\\\", \
\\\"True\\\"}]}], \\\"}\\\"}]}], \\\",\\\", RowBox[{\\\"Method\\\", \\\"\
\[Rule]\\\", \\\"Automatic\\\"}]}], \\\"]\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"NDSolveValue\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{RowBox[{SuperscriptBox[\\\"System`VectorPlotsDump`w$98598\\\",\
 \\\"\[Prime]\\\", Rule[MultilineFunction, None]], \\\"[\\\", \
\\\"System`VectorPlotsDump`t$98598\\\", \\\"]\\\"}], \\\"\[Equal]\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"Eq1\\\", \\\"[\\\", \
RowBox[{\\\"1.`\\\", \\\",\\\", RowBox[{\\\"-\\\", \\\"0.6`\\\"}], \\\",\\\", \
RowBox[{\\\"-\\\", \\\"0.25`\\\"}]}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"Eq2\
\\\", \\\"[\\\", RowBox[{RowBox[{\\\"-\\\", \\\"0.6`\\\"}], \\\",\\\", \
RowBox[{\\\"-\\\", \\\"0.25`\\\"}]}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"Eq3\
\\\", \\\"[\\\", \\\"1.`\\\", \\\"]\\\"}], \\\",\\\", \
SqrtBox[RowBox[{SuperscriptBox[RowBox[{\\\"Eq1\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"3\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \
\\\"2\\\"], \\\"+\\\", SuperscriptBox[RowBox[{\\\"Eq2\\\", \\\"[\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\
\\\"}], \\\"2\\\"], \\\"+\\\", SuperscriptBox[RowBox[{\\\"Eq3\\\", \\\"[\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\
\\\"}], \\\"2\\\"]}]]}], \\\"}\\\"}]}], \\\",\\\", \
RowBox[{RowBox[{\\\"System`VectorPlotsDump`w$98598\\\", \\\"[\\\", \\\"0\\\", \
\\\"]\\\"}], \\\"\[Equal]\\\", RowBox[{\\\"{\\\", RowBox[{\\\"0.5`\\\", \\\",\
\\\", RowBox[{\\\"-\\\", \\\"1.6`\\\"}], \\\",\\\", \\\"3.1666666666666665`\\\
\", \\\",\\\", \\\"0.`\\\"}], \\\"}\\\"}]}], \\\",\\\", RowBox[{\\\"WhenEvent\
\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\"}\\\"}], \\\",\\\", \
\\\"System`VectorPlotsDump`w$98598\\\", \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"System`VectorPlotsDump`t$98598\\\", \\\",\\\", \\\"0.`\\\", \\\",\
\\\", \\\"\[Infinity]\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"\\\\\\\"ExtrapolationHandler\\\\\\\"\\\", \\\"\[Rule]\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"Indeterminate\\\", \\\"&\\\"}], \
\\\",\\\", RowBox[{\\\"\\\\\\\"WarningMessage\\\\\\\"\\\", \\\"\[Rule]\\\", \
\\\"True\\\"}]}], \\\"}\\\"}]}], \\\",\\\", RowBox[{\\\"Method\\\", \\\"\
\[Rule]\\\", \\\"Automatic\\\"}]}], \\\"]\\\"}]\\) at positions \
\\!\\(\\*RowBox[{\\\"1\\\"}]\\) and \\!\\(\\*RowBox[{\\\"2\\\"}]\\) are \
expected to be the same.\"", 2, 104, 37, 18332645112968276501, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8884029292339487`*^9},
 CellLabel->"",ExpressionUUID->"d0abcb15-72ce-4269-977e-eabddbdea507"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Join\\\", \\\"::\\\", \
\\\"heads\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 104, 38, 18332645112968276501, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.888402929244*^9},
 CellLabel->"",ExpressionUUID->"77534147-4494-4b03-81e0-df9838fb3782"],

Cell[BoxData[
 TemplateBox[{
  "Interpolation", "innd", 
   "\"First argument in \\!\\(\\*RowBox[{RowBox[{\\\"{\\\", \
RowBox[{\\\"Null\\\", \\\",\\\", RowBox[{\\\"{\\\", \\\"}\\\"}]}], \
\\\"}\\\"}], \\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"2\\\", \\\",\\\", \
\\\"1\\\"}], \\\"\[RightDoubleBracket]\\\"}]\\) does not contain a list of \
data and coordinates.\"", 2, 104, 39, 18332645112968276501, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8884029292510223`*^9},
 CellLabel->"",ExpressionUUID->"fe51e683-4590-4b95-b6d5-f06c8e9c7c46"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Interpolation\\\", \
\\\"::\\\", \\\"innd\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"", 2, 104, 40, 18332645112968276501, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.888402929259522*^9},
 CellLabel->"",ExpressionUUID->"e16523aa-c903-4c50-986b-d09b4a0b37fc"],

Cell[BoxData[
 TemplateBox[{
  "PropertyValue", "pvobj", 
   "\"\\!\\(\\*RowBox[{\\\"Interpolation\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"Null\\\", \\\",\\\", \
RowBox[{\\\"{\\\", \\\"}\\\"}]}], \\\"}\\\"}], \\\"\[LeftDoubleBracket]\\\", \
RowBox[{\\\"2\\\", \\\",\\\", \\\"1\\\"}], \\\"\[RightDoubleBracket]\\\"}], \
\\\"]\\\"}]\\) is not an object with properties.\"", 2, 104, 41, 
   18332645112968276501, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.888402929266759*^9},
 CellLabel->"",ExpressionUUID->"5d21a25c-2929-4c1f-8a3a-6c864bfc2fe5"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"PropertyValue\\\", \
\\\"::\\\", \\\"pvobj\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"", 2, 104, 42, 18332645112968276501, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8884029292741137`*^9},
 CellLabel->"",ExpressionUUID->"ea35e937-b0d7-4576-bc3a-011621e160ac"],

Cell[BoxData[
 TemplateBox[{
  "Set", "shape", 
   "\"Lists \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\
\"System`VectorPlotsDump`linesxmin$98598\\\", \\\",\\\", \
\\\"System`VectorPlotsDump`linesxmax$98598\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"System`VectorPlotsDump`linesymin$98598\\\", \\\
\",\\\", \\\"System`VectorPlotsDump`linesymax$98598\\\"}], \\\"}\\\"}], \\\",\
\\\", RowBox[{\\\"{\\\", RowBox[{\\\"System`VectorPlotsDump`lineszmin$98598\\\
\", \\\",\\\", \\\"System`VectorPlotsDump`lineszmax$98598\\\"}], \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"System`VectorPlotsDump`linesfieldmin$98598\\\", \\\",\\\", \
\\\"System`VectorPlotsDump`linesfieldmax$98598\\\"}], \\\"}\\\"}]}], \
\\\"}\\\"}]\\) and \\!\\(\\*RowBox[{\\\"System`VectorPlotsDump`extremes$98948\
\\\"}]\\) are not the same shape.\"", 2, 104, 43, 18332645112968276501, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8884029292808*^9},
 CellLabel->"",ExpressionUUID->"9ac303ab-bf1f-4b68-9738-bf351e966845"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Set\\\", \\\"::\\\", \\\
\"shape\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 104, 44, 18332645112968276501, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.888402929287397*^9},
 CellLabel->"",ExpressionUUID->"e0952e6d-7776-4be5-8d5a-59e76d5d51b5"],

Cell[BoxData[
 TemplateBox[{
  "Rest", "normal", 
   "\"Nonatomic expression expected at position \
\\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \\!\\(\\*RowBox[{\\\"Rest\\\", \\\"[\\\", \
\\\"\\\\\\\"Coordinates\\\\\\\"\\\", \\\"]\\\"}]\\).\"", 2, 212, 79, 
   18332645112968276501, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.888403306135634*^9},
 CellLabel->"",ExpressionUUID->"b54e6b85-7610-4418-870e-f15c5e9123c2"],

Cell[BoxData[
 TemplateBox[{
  "Join", "heads", 
   "\"Heads \\!\\(\\*RowBox[{\\\"NDSolveValue\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{RowBox[{SuperscriptBox[\\\"System`VectorPlotsDump`w$119702\\\"\
, \\\"\[Prime]\\\", Rule[MultilineFunction, None]], \\\"[\\\", \
\\\"System`VectorPlotsDump`t$119702\\\", \\\"]\\\"}], \\\"\[Equal]\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"Eq1\\\", \\\"[\\\", \
RowBox[{\\\"1.`\\\", \\\",\\\", RowBox[{\\\"-\\\", \\\"0.6`\\\"}], \\\",\\\", \
RowBox[{\\\"-\\\", \\\"0.25`\\\"}]}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"Eq2\
\\\", \\\"[\\\", RowBox[{RowBox[{\\\"-\\\", \\\"0.6`\\\"}], \\\",\\\", \
RowBox[{\\\"-\\\", \\\"0.25`\\\"}]}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"Eq3\
\\\", \\\"[\\\", \\\"1.`\\\", \\\"]\\\"}], \\\",\\\", \
SqrtBox[RowBox[{SuperscriptBox[RowBox[{\\\"Eq1\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"3\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \
\\\"2\\\"], \\\"+\\\", SuperscriptBox[RowBox[{\\\"Eq2\\\", \\\"[\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\
\\\"}], \\\"2\\\"], \\\"+\\\", SuperscriptBox[RowBox[{\\\"Eq3\\\", \\\"[\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\
\\\"}], \\\"2\\\"]}]]}], \\\"}\\\"}]}], \\\",\\\", \
RowBox[{RowBox[{\\\"System`VectorPlotsDump`w$119702\\\", \\\"[\\\", \
\\\"0\\\", \\\"]\\\"}], \\\"\[Equal]\\\", RowBox[{\\\"{\\\", RowBox[{\\\"0.5`\
\\\", \\\",\\\", RowBox[{\\\"-\\\", \\\"1.6`\\\"}], \\\",\\\", \\\"0.5`\\\", \
\\\",\\\", \\\"0.`\\\"}], \\\"}\\\"}]}], \\\",\\\", \
RowBox[{\\\"WhenEvent\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}], \\\",\\\", \
\\\"\\\\\\\"StopIntegration\\\\\\\"\\\"}], \\\"]\\\"}]}], \\\"}\\\"}], \
\\\",\\\", \\\"System`VectorPlotsDump`w$119702\\\", \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"System`VectorPlotsDump`t$119702\\\", \
\\\",\\\", RowBox[{\\\"-\\\", \\\"\[Infinity]\\\"}], \\\",\\\", \
\\\"0.`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"\\\\\\\"ExtrapolationHandler\\\\\\\"\\\", \\\"\[Rule]\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"Indeterminate\\\", \\\"&\\\"}], \
\\\",\\\", RowBox[{\\\"\\\\\\\"WarningMessage\\\\\\\"\\\", \\\"\[Rule]\\\", \
\\\"True\\\"}]}], \\\"}\\\"}]}], \\\",\\\", RowBox[{\\\"Method\\\", \\\"\
\[Rule]\\\", \\\"Automatic\\\"}]}], \\\"]\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"NDSolveValue\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{RowBox[{SuperscriptBox[\\\"System`VectorPlotsDump`w$119702\\\"\
, \\\"\[Prime]\\\", Rule[MultilineFunction, None]], \\\"[\\\", \
\\\"System`VectorPlotsDump`t$119702\\\", \\\"]\\\"}], \\\"\[Equal]\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"Eq1\\\", \\\"[\\\", \
RowBox[{\\\"1.`\\\", \\\",\\\", RowBox[{\\\"-\\\", \\\"0.6`\\\"}], \\\",\\\", \
RowBox[{\\\"-\\\", \\\"0.25`\\\"}]}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"Eq2\
\\\", \\\"[\\\", RowBox[{RowBox[{\\\"-\\\", \\\"0.6`\\\"}], \\\",\\\", \
RowBox[{\\\"-\\\", \\\"0.25`\\\"}]}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"Eq3\
\\\", \\\"[\\\", \\\"1.`\\\", \\\"]\\\"}], \\\",\\\", \
SqrtBox[RowBox[{SuperscriptBox[RowBox[{\\\"Eq1\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"3\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \
\\\"2\\\"], \\\"+\\\", SuperscriptBox[RowBox[{\\\"Eq2\\\", \\\"[\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\
\\\"}], \\\"2\\\"], \\\"+\\\", SuperscriptBox[RowBox[{\\\"Eq3\\\", \\\"[\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\
\\\"}], \\\"2\\\"]}]]}], \\\"}\\\"}]}], \\\",\\\", \
RowBox[{RowBox[{\\\"System`VectorPlotsDump`w$119702\\\", \\\"[\\\", \
\\\"0\\\", \\\"]\\\"}], \\\"\[Equal]\\\", RowBox[{\\\"{\\\", RowBox[{\\\"0.5`\
\\\", \\\",\\\", RowBox[{\\\"-\\\", \\\"1.6`\\\"}], \\\",\\\", \\\"0.5`\\\", \
\\\",\\\", \\\"0.`\\\"}], \\\"}\\\"}]}], \\\",\\\", \
RowBox[{\\\"WhenEvent\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}], \\\",\\\", \
\\\"\\\\\\\"StopIntegration\\\\\\\"\\\"}], \\\"]\\\"}]}], \\\"}\\\"}], \
\\\",\\\", \\\"System`VectorPlotsDump`w$119702\\\", \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"System`VectorPlotsDump`t$119702\\\", \
\\\",\\\", \\\"0.`\\\", \\\",\\\", \\\"\[Infinity]\\\"}], \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"\\\\\\\"ExtrapolationHandler\\\\\\\"\\\", \
\\\"\[Rule]\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"Indeterminate\\\", \\\
\"&\\\"}], \\\",\\\", RowBox[{\\\"\\\\\\\"WarningMessage\\\\\\\"\\\", \\\"\
\[Rule]\\\", \\\"True\\\"}]}], \\\"}\\\"}]}], \\\",\\\", RowBox[{\\\"Method\\\
\", \\\"\[Rule]\\\", \\\"Automatic\\\"}]}], \\\"]\\\"}]\\) at positions \
\\!\\(\\*RowBox[{\\\"1\\\"}]\\) and \\!\\(\\*RowBox[{\\\"2\\\"}]\\) are \
expected to be the same.\"", 2, 212, 80, 18332645112968276501, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.888403306169428*^9},
 CellLabel->"",ExpressionUUID->"05708274-06f4-4c80-ab82-fbff8164d0b2"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partw", 
   "\"Part \\!\\(\\*RowBox[{\\\"1\\\"}]\\) of \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"}\\\"}]\\) does not exist.\"", 2, 212, 81, 18332645112968276501, "Local"},
  
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.888403306179391*^9},
 CellLabel->"",ExpressionUUID->"33fc8d96-4d2e-4dd0-a448-3e8a940ed68d"],

Cell[BoxData[
 TemplateBox[{
  "Interpolation", "innd", 
   "\"First argument in \\!\\(\\*RowBox[{RowBox[{\\\"{\\\", \
RowBox[{\\\"Null\\\", \\\",\\\", RowBox[{\\\"{\\\", \\\"}\\\"}]}], \
\\\"}\\\"}], \\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"2\\\", \\\",\\\", \
\\\"1\\\"}], \\\"\[RightDoubleBracket]\\\"}]\\) does not contain a list of \
data and coordinates.\"", 2, 212, 82, 18332645112968276501, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.888403306187921*^9},
 CellLabel->"",ExpressionUUID->"605c5c85-0806-4b96-a799-1571570b29c9"],

Cell[BoxData[
 TemplateBox[{
  "PropertyValue", "pvobj", 
   "\"\\!\\(\\*RowBox[{\\\"Interpolation\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"Null\\\", \\\",\\\", \
RowBox[{\\\"{\\\", \\\"}\\\"}]}], \\\"}\\\"}], \\\"\[LeftDoubleBracket]\\\", \
RowBox[{\\\"2\\\", \\\",\\\", \\\"1\\\"}], \\\"\[RightDoubleBracket]\\\"}], \
\\\"]\\\"}]\\) is not an object with properties.\"", 2, 212, 83, 
   18332645112968276501, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.888403306252633*^9},
 CellLabel->"",ExpressionUUID->"b60bd0a6-70ab-45be-9949-437dfc0ceca4"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partw", 
   "\"Part \\!\\(\\*RowBox[{\\\"4\\\"}]\\) of \
\\!\\(\\*RowBox[{\\\"Interpolation\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{\\\"Null\\\", \\\",\\\", RowBox[{\\\"{\\\", \\\"}\\\"}]}], \
\\\"}\\\"}], \\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"2\\\", \\\",\\\", \
\\\"1\\\"}], \\\"\[RightDoubleBracket]\\\"}], \\\"]\\\"}]\\) does not \
exist.\"", 2, 212, 84, 18332645112968276501, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.888403306305327*^9},
 CellLabel->"",ExpressionUUID->"a1b0c923-4644-45a2-86ac-3eacf794b092"],

Cell[BoxData[
 TemplateBox[{
  "Set", "shape", 
   "\"Lists \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\
\"System`VectorPlotsDump`linesxmin$119702\\\", \\\",\\\", \
\\\"System`VectorPlotsDump`linesxmax$119702\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"System`VectorPlotsDump`linesymin$119702\\\", \
\\\",\\\", \\\"System`VectorPlotsDump`linesymax$119702\\\"}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"System`VectorPlotsDump`lineszmin$119702\\\", \\\",\\\", \
\\\"System`VectorPlotsDump`lineszmax$119702\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", \
RowBox[{\\\"System`VectorPlotsDump`linesfieldmin$119702\\\", \\\",\\\", \
\\\"System`VectorPlotsDump`linesfieldmax$119702\\\"}], \\\"}\\\"}]}], \\\"}\\\
\"}]\\) and \\!\\(\\*RowBox[{\\\"System`VectorPlotsDump`extremes$119782\\\"}]\
\\) are not the same shape.\"", 2, 212, 85, 18332645112968276501, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.888403306357257*^9},
 CellLabel->"",ExpressionUUID->"e5a199f1-5dce-4948-9561-8f6209fac720"],

Cell[BoxData[
 TemplateBox[{
  "Rest", "normal", 
   "\"Nonatomic expression expected at position \
\\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \\!\\(\\*RowBox[{\\\"Rest\\\", \\\"[\\\", \
\\\"\\\\\\\"Coordinates\\\\\\\"\\\", \\\"]\\\"}]\\).\"", 2, 212, 86, 
   18332645112968276501, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.888403306409343*^9},
 CellLabel->"",ExpressionUUID->"1cab2866-f1d6-4c62-8d4b-6dfb2f5ab1a0"],

Cell[BoxData[
 TemplateBox[{
  "Join", "heads", 
   "\"Heads \\!\\(\\*RowBox[{\\\"NDSolveValue\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{RowBox[{SuperscriptBox[\\\"System`VectorPlotsDump`w$119702\\\"\
, \\\"\[Prime]\\\", Rule[MultilineFunction, None]], \\\"[\\\", \
\\\"System`VectorPlotsDump`t$119702\\\", \\\"]\\\"}], \\\"\[Equal]\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"Eq1\\\", \\\"[\\\", \
RowBox[{\\\"1.`\\\", \\\",\\\", RowBox[{\\\"-\\\", \\\"0.6`\\\"}], \\\",\\\", \
RowBox[{\\\"-\\\", \\\"0.25`\\\"}]}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"Eq2\
\\\", \\\"[\\\", RowBox[{RowBox[{\\\"-\\\", \\\"0.6`\\\"}], \\\",\\\", \
RowBox[{\\\"-\\\", \\\"0.25`\\\"}]}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"Eq3\
\\\", \\\"[\\\", \\\"1.`\\\", \\\"]\\\"}], \\\",\\\", \
SqrtBox[RowBox[{SuperscriptBox[RowBox[{\\\"Eq1\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"3\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \
\\\"2\\\"], \\\"+\\\", SuperscriptBox[RowBox[{\\\"Eq2\\\", \\\"[\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\
\\\"}], \\\"2\\\"], \\\"+\\\", SuperscriptBox[RowBox[{\\\"Eq3\\\", \\\"[\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\
\\\"}], \\\"2\\\"]}]]}], \\\"}\\\"}]}], \\\",\\\", \
RowBox[{RowBox[{\\\"System`VectorPlotsDump`w$119702\\\", \\\"[\\\", \
\\\"0\\\", \\\"]\\\"}], \\\"\[Equal]\\\", RowBox[{\\\"{\\\", RowBox[{\\\"0.5`\
\\\", \\\",\\\", RowBox[{\\\"-\\\", \\\"1.6`\\\"}], \\\",\\\", \
\\\"1.8333333333333333`\\\", \\\",\\\", \\\"0.`\\\"}], \\\"}\\\"}]}], \\\",\\\
\", RowBox[{\\\"WhenEvent\\\", \\\"[\\\", RowBox[{RowBox[{\\\"\[LeftSkeleton]\
\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\",\\\", \
\\\"\\\\\\\"StopIntegration\\\\\\\"\\\"}], \\\"]\\\"}]}], \\\"}\\\"}], \
\\\",\\\", \\\"System`VectorPlotsDump`w$119702\\\", \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"System`VectorPlotsDump`t$119702\\\", \
\\\",\\\", RowBox[{\\\"-\\\", \\\"\[Infinity]\\\"}], \\\",\\\", \
\\\"0.`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"\\\\\\\"ExtrapolationHandler\\\\\\\"\\\", \\\"\[Rule]\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"Indeterminate\\\", \\\"&\\\"}], \
\\\",\\\", RowBox[{\\\"\\\\\\\"WarningMessage\\\\\\\"\\\", \\\"\[Rule]\\\", \
\\\"True\\\"}]}], \\\"}\\\"}]}], \\\",\\\", RowBox[{\\\"Method\\\", \\\"\
\[Rule]\\\", \\\"Automatic\\\"}]}], \\\"]\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"NDSolveValue\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{RowBox[{SuperscriptBox[\\\"System`VectorPlotsDump`w$119702\\\"\
, \\\"\[Prime]\\\", Rule[MultilineFunction, None]], \\\"[\\\", \
\\\"System`VectorPlotsDump`t$119702\\\", \\\"]\\\"}], \\\"\[Equal]\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"Eq1\\\", \\\"[\\\", \
RowBox[{\\\"1.`\\\", \\\",\\\", RowBox[{\\\"-\\\", \\\"0.6`\\\"}], \\\",\\\", \
RowBox[{\\\"-\\\", \\\"0.25`\\\"}]}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"Eq2\
\\\", \\\"[\\\", RowBox[{RowBox[{\\\"-\\\", \\\"0.6`\\\"}], \\\",\\\", \
RowBox[{\\\"-\\\", \\\"0.25`\\\"}]}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"Eq3\
\\\", \\\"[\\\", \\\"1.`\\\", \\\"]\\\"}], \\\",\\\", \
SqrtBox[RowBox[{SuperscriptBox[RowBox[{\\\"Eq1\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"3\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \
\\\"2\\\"], \\\"+\\\", SuperscriptBox[RowBox[{\\\"Eq2\\\", \\\"[\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\
\\\"}], \\\"2\\\"], \\\"+\\\", SuperscriptBox[RowBox[{\\\"Eq3\\\", \\\"[\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\
\\\"}], \\\"2\\\"]}]]}], \\\"}\\\"}]}], \\\",\\\", \
RowBox[{RowBox[{\\\"System`VectorPlotsDump`w$119702\\\", \\\"[\\\", \
\\\"0\\\", \\\"]\\\"}], \\\"\[Equal]\\\", RowBox[{\\\"{\\\", RowBox[{\\\"0.5`\
\\\", \\\",\\\", RowBox[{\\\"-\\\", \\\"1.6`\\\"}], \\\",\\\", \
\\\"1.8333333333333333`\\\", \\\",\\\", \\\"0.`\\\"}], \\\"}\\\"}]}], \\\",\\\
\", RowBox[{\\\"WhenEvent\\\", \\\"[\\\", RowBox[{RowBox[{\\\"\[LeftSkeleton]\
\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\",\\\", \
\\\"\\\\\\\"StopIntegration\\\\\\\"\\\"}], \\\"]\\\"}]}], \\\"}\\\"}], \
\\\",\\\", \\\"System`VectorPlotsDump`w$119702\\\", \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"System`VectorPlotsDump`t$119702\\\", \
\\\",\\\", \\\"0.`\\\", \\\",\\\", \\\"\[Infinity]\\\"}], \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"\\\\\\\"ExtrapolationHandler\\\\\\\"\\\", \
\\\"\[Rule]\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"Indeterminate\\\", \\\
\"&\\\"}], \\\",\\\", RowBox[{\\\"\\\\\\\"WarningMessage\\\\\\\"\\\", \\\"\
\[Rule]\\\", \\\"True\\\"}]}], \\\"}\\\"}]}], \\\",\\\", RowBox[{\\\"Method\\\
\", \\\"\[Rule]\\\", \\\"Automatic\\\"}]}], \\\"]\\\"}]\\) at positions \
\\!\\(\\*RowBox[{\\\"1\\\"}]\\) and \\!\\(\\*RowBox[{\\\"2\\\"}]\\) are \
expected to be the same.\"", 2, 212, 87, 18332645112968276501, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.888403306445877*^9},
 CellLabel->"",ExpressionUUID->"8e0f52b1-cb4f-47c9-a060-1c3f3ad0bfa5"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partw", 
   "\"Part \\!\\(\\*RowBox[{\\\"1\\\"}]\\) of \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"}\\\"}]\\) does not exist.\"", 2, 212, 88, 18332645112968276501, "Local"},
  
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.888403306456086*^9},
 CellLabel->"",ExpressionUUID->"ed706088-333c-4941-834d-e4254e591836"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Part\\\", \\\"::\\\", \
\\\"partw\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 212, 89, 18332645112968276501, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.888403306463982*^9},
 CellLabel->"",ExpressionUUID->"f8167b63-e73f-4078-879a-8a0a3c93a3d8"],

Cell[BoxData[
 TemplateBox[{
  "Interpolation", "innd", 
   "\"First argument in \\!\\(\\*RowBox[{RowBox[{\\\"{\\\", \
RowBox[{\\\"Null\\\", \\\",\\\", RowBox[{\\\"{\\\", \\\"}\\\"}]}], \
\\\"}\\\"}], \\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"2\\\", \\\",\\\", \
\\\"1\\\"}], \\\"\[RightDoubleBracket]\\\"}]\\) does not contain a list of \
data and coordinates.\"", 2, 212, 90, 18332645112968276501, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8884033065317993`*^9},
 CellLabel->"",ExpressionUUID->"97b44b45-34c8-49d2-828c-84f001057471"],

Cell[BoxData[
 TemplateBox[{
  "PropertyValue", "pvobj", 
   "\"\\!\\(\\*RowBox[{\\\"Interpolation\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"Null\\\", \\\",\\\", \
RowBox[{\\\"{\\\", \\\"}\\\"}]}], \\\"}\\\"}], \\\"\[LeftDoubleBracket]\\\", \
RowBox[{\\\"2\\\", \\\",\\\", \\\"1\\\"}], \\\"\[RightDoubleBracket]\\\"}], \
\\\"]\\\"}]\\) is not an object with properties.\"", 2, 212, 91, 
   18332645112968276501, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.888403306583197*^9},
 CellLabel->"",ExpressionUUID->"6280d5a8-e1c5-4450-a0cc-7bab461fed14"],

Cell[BoxData[
 TemplateBox[{
  "Set", "shape", 
   "\"Lists \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\
\"System`VectorPlotsDump`linesxmin$119702\\\", \\\",\\\", \
\\\"System`VectorPlotsDump`linesxmax$119702\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"System`VectorPlotsDump`linesymin$119702\\\", \
\\\",\\\", \\\"System`VectorPlotsDump`linesymax$119702\\\"}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"System`VectorPlotsDump`lineszmin$119702\\\", \\\",\\\", \
\\\"System`VectorPlotsDump`lineszmax$119702\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", \
RowBox[{\\\"System`VectorPlotsDump`linesfieldmin$119702\\\", \\\",\\\", \
\\\"System`VectorPlotsDump`linesfieldmax$119702\\\"}], \\\"}\\\"}]}], \\\"}\\\
\"}]\\) and \\!\\(\\*RowBox[{\\\"System`VectorPlotsDump`extremes$119874\\\"}]\
\\) are not the same shape.\"", 2, 212, 92, 18332645112968276501, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8884033066352587`*^9},
 CellLabel->"",ExpressionUUID->"cfeb3186-d6b3-44ca-bbdc-fe13ddecc827"],

Cell[BoxData[
 TemplateBox[{
  "Rest", "normal", 
   "\"Nonatomic expression expected at position \
\\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \\!\\(\\*RowBox[{\\\"Rest\\\", \\\"[\\\", \
\\\"\\\\\\\"Coordinates\\\\\\\"\\\", \\\"]\\\"}]\\).\"", 2, 212, 93, 
   18332645112968276501, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8884033066872253`*^9},
 CellLabel->"",ExpressionUUID->"005ac9ae-ab6a-4b37-bfa8-452f460ace2d"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Rest\\\", \\\"::\\\", \
\\\"normal\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 212, 94, 18332645112968276501, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8884033067387247`*^9},
 CellLabel->"",ExpressionUUID->"40adc877-dd64-4fbd-a6fe-85389bcde189"],

Cell[BoxData[
 TemplateBox[{
  "Join", "heads", 
   "\"Heads \\!\\(\\*RowBox[{\\\"NDSolveValue\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{RowBox[{SuperscriptBox[\\\"System`VectorPlotsDump`w$119702\\\"\
, \\\"\[Prime]\\\", Rule[MultilineFunction, None]], \\\"[\\\", \
\\\"System`VectorPlotsDump`t$119702\\\", \\\"]\\\"}], \\\"\[Equal]\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"Eq1\\\", \\\"[\\\", \
RowBox[{\\\"1.`\\\", \\\",\\\", RowBox[{\\\"-\\\", \\\"0.6`\\\"}], \\\",\\\", \
RowBox[{\\\"-\\\", \\\"0.25`\\\"}]}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"Eq2\
\\\", \\\"[\\\", RowBox[{RowBox[{\\\"-\\\", \\\"0.6`\\\"}], \\\",\\\", \
RowBox[{\\\"-\\\", \\\"0.25`\\\"}]}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"Eq3\
\\\", \\\"[\\\", \\\"1.`\\\", \\\"]\\\"}], \\\",\\\", \
SqrtBox[RowBox[{SuperscriptBox[RowBox[{\\\"Eq1\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"3\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \
\\\"2\\\"], \\\"+\\\", SuperscriptBox[RowBox[{\\\"Eq2\\\", \\\"[\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\
\\\"}], \\\"2\\\"], \\\"+\\\", SuperscriptBox[RowBox[{\\\"Eq3\\\", \\\"[\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\
\\\"}], \\\"2\\\"]}]]}], \\\"}\\\"}]}], \\\",\\\", \
RowBox[{RowBox[{\\\"System`VectorPlotsDump`w$119702\\\", \\\"[\\\", \
\\\"0\\\", \\\"]\\\"}], \\\"\[Equal]\\\", RowBox[{\\\"{\\\", RowBox[{\\\"0.5`\
\\\", \\\",\\\", RowBox[{\\\"-\\\", \\\"1.6`\\\"}], \\\",\\\", \
\\\"3.1666666666666665`\\\", \\\",\\\", \\\"0.`\\\"}], \\\"}\\\"}]}], \\\",\\\
\", RowBox[{\\\"WhenEvent\\\", \\\"[\\\", RowBox[{RowBox[{\\\"\[LeftSkeleton]\
\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\",\\\", \
\\\"\\\\\\\"StopIntegration\\\\\\\"\\\"}], \\\"]\\\"}]}], \\\"}\\\"}], \
\\\",\\\", \\\"System`VectorPlotsDump`w$119702\\\", \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"System`VectorPlotsDump`t$119702\\\", \
\\\",\\\", RowBox[{\\\"-\\\", \\\"\[Infinity]\\\"}], \\\",\\\", \
\\\"0.`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"\\\\\\\"ExtrapolationHandler\\\\\\\"\\\", \\\"\[Rule]\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"Indeterminate\\\", \\\"&\\\"}], \
\\\",\\\", RowBox[{\\\"\\\\\\\"WarningMessage\\\\\\\"\\\", \\\"\[Rule]\\\", \
\\\"True\\\"}]}], \\\"}\\\"}]}], \\\",\\\", RowBox[{\\\"Method\\\", \\\"\
\[Rule]\\\", \\\"Automatic\\\"}]}], \\\"]\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"NDSolveValue\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{RowBox[{SuperscriptBox[\\\"System`VectorPlotsDump`w$119702\\\"\
, \\\"\[Prime]\\\", Rule[MultilineFunction, None]], \\\"[\\\", \
\\\"System`VectorPlotsDump`t$119702\\\", \\\"]\\\"}], \\\"\[Equal]\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"Eq1\\\", \\\"[\\\", \
RowBox[{\\\"1.`\\\", \\\",\\\", RowBox[{\\\"-\\\", \\\"0.6`\\\"}], \\\",\\\", \
RowBox[{\\\"-\\\", \\\"0.25`\\\"}]}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"Eq2\
\\\", \\\"[\\\", RowBox[{RowBox[{\\\"-\\\", \\\"0.6`\\\"}], \\\",\\\", \
RowBox[{\\\"-\\\", \\\"0.25`\\\"}]}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"Eq3\
\\\", \\\"[\\\", \\\"1.`\\\", \\\"]\\\"}], \\\",\\\", \
SqrtBox[RowBox[{SuperscriptBox[RowBox[{\\\"Eq1\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"3\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \
\\\"2\\\"], \\\"+\\\", SuperscriptBox[RowBox[{\\\"Eq2\\\", \\\"[\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\
\\\"}], \\\"2\\\"], \\\"+\\\", SuperscriptBox[RowBox[{\\\"Eq3\\\", \\\"[\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\
\\\"}], \\\"2\\\"]}]]}], \\\"}\\\"}]}], \\\",\\\", \
RowBox[{RowBox[{\\\"System`VectorPlotsDump`w$119702\\\", \\\"[\\\", \
\\\"0\\\", \\\"]\\\"}], \\\"\[Equal]\\\", RowBox[{\\\"{\\\", RowBox[{\\\"0.5`\
\\\", \\\",\\\", RowBox[{\\\"-\\\", \\\"1.6`\\\"}], \\\",\\\", \
\\\"3.1666666666666665`\\\", \\\",\\\", \\\"0.`\\\"}], \\\"}\\\"}]}], \\\",\\\
\", RowBox[{\\\"WhenEvent\\\", \\\"[\\\", RowBox[{RowBox[{\\\"\[LeftSkeleton]\
\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\",\\\", \
\\\"\\\\\\\"StopIntegration\\\\\\\"\\\"}], \\\"]\\\"}]}], \\\"}\\\"}], \
\\\",\\\", \\\"System`VectorPlotsDump`w$119702\\\", \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"System`VectorPlotsDump`t$119702\\\", \
\\\",\\\", \\\"0.`\\\", \\\",\\\", \\\"\[Infinity]\\\"}], \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"\\\\\\\"ExtrapolationHandler\\\\\\\"\\\", \
\\\"\[Rule]\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"Indeterminate\\\", \\\
\"&\\\"}], \\\",\\\", RowBox[{\\\"\\\\\\\"WarningMessage\\\\\\\"\\\", \\\"\
\[Rule]\\\", \\\"True\\\"}]}], \\\"}\\\"}]}], \\\",\\\", RowBox[{\\\"Method\\\
\", \\\"\[Rule]\\\", \\\"Automatic\\\"}]}], \\\"]\\\"}]\\) at positions \
\\!\\(\\*RowBox[{\\\"1\\\"}]\\) and \\!\\(\\*RowBox[{\\\"2\\\"}]\\) are \
expected to be the same.\"", 2, 212, 95, 18332645112968276501, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8884033067622232`*^9},
 CellLabel->"",ExpressionUUID->"ef787a4f-330c-4c30-b6b7-e85a42792e24"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Join\\\", \\\"::\\\", \
\\\"heads\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 212, 96, 18332645112968276501, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.88840330677289*^9},
 CellLabel->"",ExpressionUUID->"237186c6-b5e7-485b-a363-d02035a0d81d"],

Cell[BoxData[
 TemplateBox[{
  "Interpolation", "innd", 
   "\"First argument in \\!\\(\\*RowBox[{RowBox[{\\\"{\\\", \
RowBox[{\\\"Null\\\", \\\",\\\", RowBox[{\\\"{\\\", \\\"}\\\"}]}], \
\\\"}\\\"}], \\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"2\\\", \\\",\\\", \
\\\"1\\\"}], \\\"\[RightDoubleBracket]\\\"}]\\) does not contain a list of \
data and coordinates.\"", 2, 212, 97, 18332645112968276501, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8884033067807217`*^9},
 CellLabel->"",ExpressionUUID->"10d813fd-5b5c-448d-b36a-a4b0f2fdb949"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Interpolation\\\", \
\\\"::\\\", \\\"innd\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"", 2, 212, 98, 18332645112968276501, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.888403306788494*^9},
 CellLabel->"",ExpressionUUID->"2b1be84e-71cb-43ac-8516-4af71ee11c9a"],

Cell[BoxData[
 TemplateBox[{
  "PropertyValue", "pvobj", 
   "\"\\!\\(\\*RowBox[{\\\"Interpolation\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"Null\\\", \\\",\\\", \
RowBox[{\\\"{\\\", \\\"}\\\"}]}], \\\"}\\\"}], \\\"\[LeftDoubleBracket]\\\", \
RowBox[{\\\"2\\\", \\\",\\\", \\\"1\\\"}], \\\"\[RightDoubleBracket]\\\"}], \
\\\"]\\\"}]\\) is not an object with properties.\"", 2, 212, 99, 
   18332645112968276501, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.888403306796217*^9},
 CellLabel->"",ExpressionUUID->"36823f51-9dee-403b-9045-159bf536b3ab"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"PropertyValue\\\", \
\\\"::\\\", \\\"pvobj\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"", 2, 212, 100, 18332645112968276501, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8884033068036957`*^9},
 CellLabel->"",ExpressionUUID->"6ea64692-af3f-4ee0-838f-1badf4aa9465"],

Cell[BoxData[
 TemplateBox[{
  "Set", "shape", 
   "\"Lists \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\
\"System`VectorPlotsDump`linesxmin$119702\\\", \\\",\\\", \
\\\"System`VectorPlotsDump`linesxmax$119702\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"System`VectorPlotsDump`linesymin$119702\\\", \
\\\",\\\", \\\"System`VectorPlotsDump`linesymax$119702\\\"}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"System`VectorPlotsDump`lineszmin$119702\\\", \\\",\\\", \
\\\"System`VectorPlotsDump`lineszmax$119702\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", \
RowBox[{\\\"System`VectorPlotsDump`linesfieldmin$119702\\\", \\\",\\\", \
\\\"System`VectorPlotsDump`linesfieldmax$119702\\\"}], \\\"}\\\"}]}], \\\"}\\\
\"}]\\) and \\!\\(\\*RowBox[{\\\"System`VectorPlotsDump`extremes$119972\\\"}]\
\\) are not the same shape.\"", 2, 212, 101, 18332645112968276501, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.888403306811233*^9},
 CellLabel->"",ExpressionUUID->"e0d819f7-e3eb-4ed0-8b45-d135303a7676"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Set\\\", \\\"::\\\", \\\
\"shape\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 212, 102, 18332645112968276501, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.888403306818932*^9},
 CellLabel->"",ExpressionUUID->"571d8ebb-0b70-4712-b4d0-1953381f15d0"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["x - y Numeric Phase Space", "Subsection",
 CellChangeTimes->{{3.888396757108968*^9, 3.888396789868569*^9}, {
  3.88839979994514*^9, 3.888399802657398*^9}, {3.888402516101452*^9, 
  3.888402519021077*^9}},ExpressionUUID->"fd2fd6be-667a-40f0-bbfc-\
6481b4edbcb9"],

Cell[CellGroupData[{

Cell["Fig 9 a", "Subsubsection",
 CellChangeTimes->{{3.888402521166562*^9, 
  3.888402552229291*^9}},ExpressionUUID->"a6ec4fb6-a982-48fa-8f9b-\
58907ff08a76"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Clear", " ", "all", " ", "variables"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], ";"}]}]], "Input",
 CellLabel->
  "In[212]:=",ExpressionUUID->"78c7d805-f295-4d90-8b0a-3fd9f64510ae"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Define", " ", "the", " ", "dynamical", " ", "system", " ", "for", " ", 
    "coupled", " ", "dark", " ", "matter", " ", 
    RowBox[{"(", "z", ")"}], " ", "and", " ", "dark", " ", "energy", " ", 
    RowBox[{"(", "x", ")"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"de1t", ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"x1", "'"}], "[", "t", "]"}], "==", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "3"}], "*", 
       RowBox[{"y1", "[", "t", "]"}], "*", 
       RowBox[{"x1", "[", "t", "]"}], "*", 
       RowBox[{"(", 
        RowBox[{"1", "+", "wx", "+", 
         RowBox[{"\[Epsilon]", "*", 
          RowBox[{"x1", "[", "t", "]"}]}]}], ")"}]}], "-", 
      RowBox[{"q", "*", 
       RowBox[{"x1", "[", "t", "]"}], "*", 
       RowBox[{"y1", "[", "t", "]"}], "*", 
       RowBox[{"z1", "[", "t", "]"}]}]}]}]}], "\[IndentingNewLine]", 
   RowBox[{"de2t", ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"y1", "'"}], "[", "t", "]"}], "==", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"y1", "[", "t", "]"}], "^", "2"}]}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "/", "6"}], ")"}], "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"x1", "[", "t", "]"}], "+", 
         RowBox[{"z1", "[", "t", "]"}], "+", 
         RowBox[{"3", "*", "wx", "*", 
          RowBox[{"x1", "[", "t", "]"}]}], "+", 
         RowBox[{"3", "*", "\[Epsilon]", "*", 
          RowBox[{
           RowBox[{"x1", "[", "t", "]"}], "^", "2"}]}]}], ")"}]}]}]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"de3t", ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"z1", "'"}], "[", "t", "]"}], "==", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "3"}], "*", 
       RowBox[{"y1", "[", "t", "]"}], "*", 
       RowBox[{"z1", "[", "t", "]"}]}], "+", " ", 
      RowBox[{"q", "*", 
       RowBox[{"x1", "[", "t", "]"}], "*", 
       RowBox[{"y1", "[", "t", "]"}], "*", 
       RowBox[{"z1", "[", "t", "]"}]}]}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.888401218788467*^9, 3.888401273947598*^9}, {
  3.888401348229657*^9, 3.888401349531745*^9}},
 CellLabel->
  "In[213]:=",ExpressionUUID->"9dad91ad-8503-47ce-ae6e-ff5e69544d47"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"q", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wx", "=", 
   RowBox[{"-", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Epsilon]", "=", "0.1"}], ";"}]}], "Input",
 CellChangeTimes->{{3.887977889055066*^9, 3.8879778890554047`*^9}, {
   3.8879783492505503`*^9, 3.8879783568319263`*^9}, {3.8884013253873777`*^9, 
   3.888401334714533*^9}, 3.888401731282817*^9},
 CellLabel->
  "In[216]:=",ExpressionUUID->"65d3313b-888a-4a5c-85e7-9daed3c85483"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"traj", "[", 
     RowBox[{"x0_", ",", "y0_", ",", "z0_"}], "]"}], "=", 
    RowBox[{"NDSolve", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"de1t", ",", "de2t", ",", "de3t", ",", " ", 
        RowBox[{
         RowBox[{"x1", "[", "0", "]"}], "==", "x0"}], ",", 
        RowBox[{
         RowBox[{"y1", "[", "0", "]"}], "==", "y0"}], ",", 
        RowBox[{
         RowBox[{"z1", "[", "0", "]"}], "==", "z0"}]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"x1", ",", "y1", ",", "z1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", 
        RowBox[{"-", "50"}], ",", "50"}], "}"}]}], "]"}]}], ";"}], 
  " "}]], "Input",
 CellChangeTimes->{{3.8438885804511986`*^9, 3.843888581311265*^9}, {
  3.8438938592742786`*^9, 3.843893939219122*^9}, {3.8438941114297333`*^9, 
  3.8438942191846347`*^9}, {3.843894249969864*^9, 3.843894346269736*^9}, {
  3.8438944055744495`*^9, 3.843894799140247*^9}, {3.8438948607399817`*^9, 
  3.8438948847105308`*^9}, {3.844144226711842*^9, 3.844144269018071*^9}, {
  3.887979872791584*^9, 3.887979910367338*^9}, {3.887980029651232*^9, 
  3.887980031254677*^9}, {3.888055637414365*^9, 3.8880556536066236`*^9}, {
  3.8880559265002527`*^9, 3.888055942599481*^9}, {3.888385806342004*^9, 
  3.888385807953027*^9}, {3.888401283220417*^9, 3.8884012975687943`*^9}, {
  3.8884013397587967`*^9, 3.888401343483832*^9}},
 CellLabel->
  "In[219]:=",ExpressionUUID->"6c528d2a-2ad6-4a99-8f60-0644a705f277"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve", "ndinnt", 
   "\"Initial condition \\!\\(\\*RowBox[{\\\"x0\\\"}]\\) is not a number or a \
rectangular array of numbers.\"", 2, 219, 103, 18332645112968276501, "Local"},
  
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.888310947399899*^9, 3.888385574514182*^9, 3.8883856324712677`*^9, 
   3.888385739330179*^9, 3.888385830216976*^9, {3.8884013373018436`*^9, 
   3.888401352004178*^9}, 3.888401735657505*^9, 3.888403184623478*^9, 
   3.888403448110656*^9},
 CellLabel->
  "During evaluation of \
In[219]:=",ExpressionUUID->"12d58b00-0a7c-4437-bdd9-ece552626802"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"sol", "[", "1", "]"}], "=", 
   RowBox[{"traj", "[", 
    RowBox[{"0.02", ",", "0.01", ",", "0.009"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sol", "[", "2", "]"}], "=", 
   RowBox[{"traj", "[", 
    RowBox[{"0.02", ",", "0.05", ",", "0.009"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sol", "[", "3", "]"}], "=", 
   RowBox[{"traj", "[", 
    RowBox[{"0.8", ",", "0.055", ",", "0.009"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sol", "[", "4", "]"}], "=", 
   RowBox[{"traj", "[", 
    RowBox[{"0.99", ",", "0.06", ",", "0.009"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sol", "[", "5", "]"}], "=", 
   RowBox[{"traj", "[", 
    RowBox[{"2.991", ",", "1", ",", "0.009"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sol", "[", "6", "]"}], "=", 
   RowBox[{"traj", "[", 
    RowBox[{"0.02", ",", "0.09", ",", "0.009"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.887978731059854*^9, 3.887978757612252*^9}, {
   3.887978845812172*^9, 3.887978859965249*^9}, {3.88797894002472*^9, 
   3.8879789403355103`*^9}, {3.88797897759439*^9, 3.88797901355768*^9}, 
   3.887979128052725*^9, {3.88797923767091*^9, 3.887979237845546*^9}, {
   3.887979375257626*^9, 3.88797939675972*^9}, {3.887979429202385*^9, 
   3.887979516979513*^9}, {3.887979558765677*^9, 3.887979566700461*^9}, {
   3.887979612678831*^9, 3.887979664270924*^9}, {3.887979922277718*^9, 
   3.887979997391836*^9}, 3.887980080905983*^9, {3.8879801208038273`*^9, 
   3.88798015412414*^9}, {3.888054939843245*^9, 3.888054943018937*^9}, {
   3.888055844364393*^9, 3.8880558605745296`*^9}, {3.888055913193152*^9, 
   3.888055918216709*^9}, 3.8880559966976633`*^9, {3.888056036287993*^9, 
   3.888056085299884*^9}, {3.88805612209927*^9, 3.8880561244131937`*^9}, {
   3.88805618652389*^9, 3.888056190803598*^9}, {3.8883009702722473`*^9, 
   3.888301001671629*^9}, {3.8883010401298227`*^9, 3.888301112638144*^9}, 
   3.888301171388793*^9, {3.888301202257996*^9, 3.8883012287725487`*^9}, {
   3.888401380694333*^9, 3.8884013833951883`*^9}, {3.888401462909256*^9, 
   3.888401475754928*^9}, {3.888403425705557*^9, 3.888403440122449*^9}},
 CellLabel->
  "In[220]:=",ExpressionUUID->"b8fdb4d0-0082-45c8-aa67-03c0ff53d9e6"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve", "ndsz", 
   "\"At \\!\\(\\*RowBox[{\\\"t\\\"}]\\) == \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"5.83120554090352`\\\"}]\\), step size is effectively zero; singularity or \
stiff system suspected.\"", 2, 224, 104, 18332645112968276501, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.8883010563175793`*^9, 3.88830111310071*^9}, 
   3.888301171886917*^9, {3.888301203169413*^9, 3.888301232801238*^9}, 
   3.8883109474272747`*^9, 3.888385574536441*^9, 3.8883856330240717`*^9, 
   3.888385739890205*^9, 3.888385830769507*^9, 3.888401353398034*^9, 
   3.888401384607732*^9, 3.888401477169449*^9, 3.888401736653503*^9, 
   3.8884031850720654`*^9, 3.888403448648273*^9},
 CellLabel->
  "During evaluation of \
In[220]:=",ExpressionUUID->"5b930b55-7044-43a2-8f95-04e58bfc7378"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve", "ndsz", 
   "\"At \\!\\(\\*RowBox[{\\\"t\\\"}]\\) == \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"11.916022069361208`\\\"}]\\), step size is effectively zero; singularity \
or stiff system suspected.\"", 2, 225, 105, 18332645112968276501, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.8883010563175793`*^9, 3.88830111310071*^9}, 
   3.888301171886917*^9, {3.888301203169413*^9, 3.888301232801238*^9}, 
   3.8883109474272747`*^9, 3.888385574536441*^9, 3.8883856330240717`*^9, 
   3.888385739890205*^9, 3.888385830769507*^9, 3.888401353398034*^9, 
   3.888401384607732*^9, 3.888401477169449*^9, 3.888401736653503*^9, 
   3.8884031850720654`*^9, 3.8884034486576242`*^9},
 CellLabel->
  "During evaluation of \
In[220]:=",ExpressionUUID->"ea11953e-362b-40e1-8db0-a91c6d94935e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\n", 
  RowBox[{"ParametricPlot", "[", 
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x1", "[", "t", "]"}], ",", 
          RowBox[{"y1", "[", "t", "]"}]}], "}"}], "/.", 
        RowBox[{"sol", "[", "i", "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "6"}], "}"}]}], "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{"-", "50"}], ",", "50"}], "}"}], ",", 
     RowBox[{"PlotStyle", " ", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"Gray", ",", " ", 
         RowBox[{"Opacity", "[", "0.75", "]"}]}], "}"}], "}"}]}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "10.5"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "}"}]}]}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.887979052254037*^9, 3.887979188623329*^9}, {
   3.887979228021886*^9, 3.887979401632031*^9}, {3.8879794459550867`*^9, 
   3.887979470345598*^9}, {3.887979600112005*^9, 3.88797960112506*^9}, {
   3.887979692930244*^9, 3.88797971039893*^9}, {3.887979803249867*^9, 
   3.887979842918675*^9}, {3.8879800704105587`*^9, 3.8879801035747423`*^9}, {
   3.8880557121793327`*^9, 3.888055759237444*^9}, {3.888055829243101*^9, 
   3.8880558350643997`*^9}, {3.8880558766966743`*^9, 3.888055894503551*^9}, {
   3.888055934499653*^9, 3.8880559569798098`*^9}, 3.888056008344767*^9, 
   3.8880560546239023`*^9, {3.8880560971933813`*^9, 3.888056164628825*^9}, 
   3.888057209628414*^9, {3.8883010969077797`*^9, 3.888301106866012*^9}, 
   3.88838581273239*^9, {3.888401301027873*^9, 3.888401314603023*^9}, {
   3.888401394687004*^9, 3.888401408667405*^9}, {3.8884017594302588`*^9, 
   3.888401789202386*^9}, {3.888403159353446*^9, 3.888403173188019*^9}, {
   3.888403456831375*^9, 3.8884034923388157`*^9}},
 CellLabel->
  "In[231]:=",ExpressionUUID->"ec24f521-d53e-4f26-859c-99cc64d6c35e"],

Cell[BoxData[
 TemplateBox[{
  "InterpolatingFunction", "dmval", 
   "\"Input value \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"-\\\", \
\\\"49.99795918367347`\\\"}], \\\"}\\\"}]\\) lies outside the range of data \
in the interpolating function. Extrapolation will be used.\"", 2, 231, 126, 
   18332645112968276501, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.88840140918043*^9, 3.8884014786355047`*^9, {3.888401738346781*^9, 
   3.888401789765861*^9}, {3.888403159764903*^9, 3.888403186132861*^9}, {
   3.88840344970714*^9, 3.888403492959365*^9}},
 CellLabel->
  "During evaluation of \
In[231]:=",ExpressionUUID->"486fcb28-7ada-4e7c-bb6f-3d0a25a2ab1b"],

Cell[BoxData[
 TemplateBox[{
  "InterpolatingFunction", "dmval", 
   "\"Input value \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"-\\\", \
\\\"49.99795918367347`\\\"}], \\\"}\\\"}]\\) lies outside the range of data \
in the interpolating function. Extrapolation will be used.\"", 2, 231, 127, 
   18332645112968276501, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.88840140918043*^9, 3.8884014786355047`*^9, {3.888401738346781*^9, 
   3.888401789765861*^9}, {3.888403159764903*^9, 3.888403186132861*^9}, {
   3.88840344970714*^9, 3.888403492968416*^9}},
 CellLabel->
  "During evaluation of \
In[231]:=",ExpressionUUID->"f45ac62a-d9a4-42cd-8471-3351995244ae"],

Cell[BoxData[
 TemplateBox[{
  "InterpolatingFunction", "dmval", 
   "\"Input value \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"-\\\", \
\\\"49.99795918367347`\\\"}], \\\"}\\\"}]\\) lies outside the range of data \
in the interpolating function. Extrapolation will be used.\"", 2, 231, 128, 
   18332645112968276501, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.88840140918043*^9, 3.8884014786355047`*^9, {3.888401738346781*^9, 
   3.888401789765861*^9}, {3.888403159764903*^9, 3.888403186132861*^9}, {
   3.88840344970714*^9, 3.888403492976604*^9}},
 CellLabel->
  "During evaluation of \
In[231]:=",ExpressionUUID->"f112dc07-8fd2-4f1f-85da-14f3d3cdcbf3"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"InterpolatingFunction\\\
\", \\\"::\\\", \\\"dmval\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"", 2, 231, 129, 18332645112968276501, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.88840140918043*^9, 3.8884014786355047`*^9, {3.888401738346781*^9, 
   3.888401789765861*^9}, {3.888403159764903*^9, 3.888403186132861*^9}, {
   3.88840344970714*^9, 3.888403492985002*^9}},
 CellLabel->
  "During evaluation of \
In[231]:=",ExpressionUUID->"f81ea910-5edb-404f-b36c-201c86fcd084"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[0.75], 
      LineBox[CompressedData["
1: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
UYnjVVP+V83ZYYnP7wl6MJVY8tu0xkpih4YhzoO/fND3V47MJFayQfXArkyP
O1Tij/TyzSI3NuhmcnT9gAeV0AttD3yvwgbL15YXNW5TiaPh0tcNllihMp3Y
l+RFJT5dMd5XVscKr7+LOyDnTyXk/1zaHxnDCh397nGMhlOJGZJKmb4jK9xX
0Fs5+5hKLLK2XLUzZoW+PdVmZtlUQtU1TMZlLytMd5JhF3qL+l9GObksxQp5
V3XL97dTiaY8Ed/4TaywrmOrVdkUlWDrN748sZkVrmvdsRrJi+5rmnKzL3aw
wt2Uyu9ZSui8YvUsy/cQK6RkvVQdP47OIwtT18BlVmj18KrmHrS+nOhoO5If
ywrr/wl5G6XRCEPHzcvZbaxQV84peQnt7xrszA2cW9lgrl92A3UNrY/GJUvP
vdigThrvka7ddOKfmVahzigb3GrQ/p/ORVQ/iuePPLNlh+So7evyY+mE5obv
beqz7PC16EmZB0104qaW9OVMtB4+8W7gjGSZIzyjL/yXgeZ7WWt83lF9juhj
4pO+i86z+n0d+5WuzxEGRpSDmVs4oeSWjwbvk+YIW6VoiRxhLthR+sZn66c5
gtbBKzqziRtekauJ2kufI8hqUUer5Xjg32yDM4sb5wnvRckIIxVeOFXoLx6i
PE+kekgfaNdaB0Wys/aJ68wTThSSBZfGejiSvO+1sOk8Udnl6b6Pnw86F5G2
CxydJ/5qPnvV684Hr67e8PquN09oFi3+/fKJD/Y4jeldVJknMgLuH7nBxw+v
DnQeGhGbJxyuCu34rcUPTzYoSlTOzxGWvQ/MdpnzQw5ofuJc8xzhuE3RYctJ
fuhzarej0+M5Ynzd9mwDbX4YWpJfmWwzR2wU1r02KswPS644PS/dMkeIysrk
lXbxQfCUHwb/pBPdq2cnP0fwQZ/Ya+UTaD1Lqg3467WXD5r8Zl2qP0wnRht6
Q0zi18M/r7gos2h9Lt0r43KmZB1soMcHGqXSCP0hUmHBe144oPxeKuMojZDP
LZuMaOKBHzWZu5tXqIRlp6NgWy0XTEix4Llxmkp8Tt3hoVnHAb/kza1GK84S
S+wW/QPf2GF9hG2u6t8ZYo/ksN/AGBs86TasLflyhuCbKhhe5mSDkQHmV9Nc
ZogtswPuxSifvYGg43owQ0y+bg6/bMcCddpOlKevnyFOnjpOwHRm6Cgndz39
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
K4Q3q5IK2HcRJ4tmOKDd4oLJ8y9UUL4ayllvQoIb2j1lzg9RgVR0xcX+LBJ0
HZZeyl2iAiVF8b9G7GQo+EFrxRStp1k+zltYSsnwVPX/SrrveK7eLwDgyfh8
olBmkRYRqWhIxr1IEg1SSHZklFVJRiqjIhFFZI+iJV8yKlSS0SAro6ySkJXP
B0X1O+f5/fl+3fu59z7nOc9zr1evzgkUuL+dRe3WzOp4wjePTp88sXbEikXN
PX7+T+rheTTPb8vlN86wKO3WSzP92fNo34TuetvrLGp+3lLH6tF59HTX5gbh
XFi/0uyk8xt46W7B8Bm3GhbV+OGSpo0L7AdiUQLKX1iUYFSW7vNEXppnH6Wz
YpYFfxelVS6s4qV1R1b2cgizqa88eht3feelORolKxXl2dQXRwWlv3P46NVz
rn8Z0WRToouLZNmCfPSh/cvfiBmzqdbCqVRxcT567n+L+wLt2VShKFvHS5SP
XnZVJYzzBJu6oVVopzifj5b8lxUXfI5NHWNtPxX/i5eO0U72GApnU7qCmRXS
XfA800vvrIb3xI6lG19ZlMLzKAQHKCSyqTE+T8X+67z01MyWy5PwHfft17/6
YEdeusJ6Yigsg00VxToWcm3kpQWWcaX+BM8df9SkMzOP/iBYG6qZzqaKi5xu
yzyfR7seNDQKSWZTl3Z5jkVemEffDIz0/3KTTSl7C349ojOPThsNfON7jU3N
Dq5yC+ScR6+cLpfwvMSmfHVvLcitYNKr/HQFxgLYlMK86wP5wUz6QIuXgrQX
mzKyOKmtqcekOcblPqk5sKk9OpGWQ3xMevu9hh5HUzalNSLsv72RQRvsHXBp
3smmDJYYej5PYtBR4cfdilTZVEmA+o8Xrgw679vuueoQb9vRoPs3NRj0oQLr
gqglbCpdQrY7SIhB8/ab0j28sB9PuATnDfPQvvruIwdnWJQKtTCJfstDm9Yc
3Cn+g0WZXXa014HvhQ3yM0L6n1nU6y0LdpRDvsYYC7ybV8eidvZ3rcq9wENb
t/Y+OP0C1vvmTd+5TvDQ7y/urL9fwKKmu6Yqco7y0LeXRFaVZ7MoOZHCsUAb
HtrQYbi3IolFiRbkFNlbwvXXHLeoiYH8yzDKUbDioYuDX/B9DmNRpdHFTTl2
PPTxzKR6ZhCLaho75HLfhYf+/E+1bL8/i9oUW5f65xQP/cX8y7MX3iwqo7CA
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
e54Q/3OZIOf/D6l6taM=
       "]]},
     Annotation[#, "Charting`Private`Tag$125684#1"]& ], 
    TagBox[
     {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[0.75], 
      LineBox[CompressedData["
1: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
97Xm7baMl9+l2M+UTJq/sxhd2DCA/VqJelj6M/QcvYRwdMrZl8z9nAMMsH8q
MZYpbUC7Zn7D/qtESjvqO1ql8DzzfjBw3lYCnyd1VXUAemPvGPP8n7r+//k1
+V3Mfvdr6Blz/QOLWR7oTac/nGasFsb0n8xyScP+a0S/tyINnZv0B/uzEu7U
xhKmvyl/Qyz6S+zjj+ihBHqJWQ/ePkw/bcPdWtfQO6reMP3HP9on3UBHfG5S
RJuYazHnX9iMY0z/akOjrjy0mfNtc/RznSImvk0NPv+h63RysJ8zkb7x2hut
t+oR9mslAQ83hzDre0EeM1/2GtVMvz5jLzfsz0wqJpYno9WlepuY/WNZPNN/
OGuG9hcmvnO6mH7B0t9WdjPxt59ZiB6b/P4XutJZuQR9Y+Q3kz9HF4s/QU+7
FT3ExOdh7WPmeVQfjqLHT4Yy/eJ2Ctgx+VfeEPAQPe+oN/Y7Jg8vljH3+5XM
w37I5MOTrdlMP3b/b9g/mcy10EpFn2JTFpoUXE1g+jPzJrPRW78cDkBrnBZh
fNHSgenPHGrQyVyvZnJ4C9MP+oQC9l8mBoG7TNBzpo0w96/nk2H6g/eOeDD7
00Bltgpaavmpv0z8r6ycid5ReHiEOU9clzPzd+ORAfO8Mhm3x3B+pX41Y79l
8twy/Tc6e/2WPma/3C/L9Gd3rE9j9sO4kjlMfvSq1DHxNf7awfTDzhtd95mx
7q2H6OfJ0dhvnYg+criDXvfsK/ZfJrXTJDKZ6/noB+b9SOFFKtPPu7aslrm+
JYbp3y0tcLQGvWvN4Uvo+Pjdr9Ds3Z7xaOGzB7HfNzFVCLrA9PNtffACXZ+Y
E/v//qvj2K+ZPN5Swvz9Ci27x+g9nGTm+zkKDdi/mcjeOnwTndJ/CPvBkqx3
o/eYfsjPljBeNymKOZ/Ok3HGTa5GzO/DxYFF2J+crOz5zPRznmW1+wlapUeZ
6X++NqGHye91hzYw/YCXjV97hk4K2sz0T+8I9cX+5WS+tB7TX32L9iFm/KK/
Wpn5sTILecmsv39TmH7g360Tq9C/ImSYfuDxCm3M+mgTGWD6T+d+YWF/YzJa
vZXp/55sofOeiZ+vGtMf/nKhDbN+np7Yw/SPj6nbh/1TidqXv0z+hCXvZOYn
JmWCWb/+s42Y9cVX4sT0q3fbIM7M50whHUOmf7x7OfarJ3f8xAm6PLCcmf/A
HWeN0HzCi5nfO+ZSj5nrx+MnMfuze57sCmY9qSzCfsvkRg5vPvPvZTqXGJsn
DEqj047nMO/PTlvuiTHv63Nbsb86OWx+momXuW4ic7/UNTfHmX7ycXvb0YdM
Jo+gZbmzsf8v+b4+n8t8blPLjJ/fJpXZzyxKTmD/Z/LM+f0vtISKEvO8Aq5b
f6ADx14w8Thspt+FXvjAh3k/uL8+rAOt7buIid+T/3SZ+Y/T5zDxTYizYPq9
WwqX1aG3KlS3onvMkpn58Lue24I2qoth8j3zcEYz2oH9lHmfrN9ImM9fHjZj
8n9pqEkb099b2JiZb13VSOZ+Gy9lYz9jMstVtIfpP938lHG69s0h5nw4Yc1c
b2cZ9xf9mXue+f6cxAVM/JQkB5h8Gc/XYjHvW2MHmPGVlGRMRjueHWPGn9Zj
yryPjXw5wazXIhP2NLTd5R7m+Y8++Tod7XHQkImXa2QN0w/5zpTdzPlrdXWY
uT4jPI6Jt88ZbQFmvy2XZeI9wNnAzJ/Hw2TmeoGUAKZf+q/OP8z3n963g8e8
D+gfYO4vViLAzKdaigoT77yYSOZ5m//+YsZv/nsN8302ZxKY8cvJvxHG+929
xmLmz+XvTOb5xbyvMt4xw4L5fbhvjQLz/bfgCMfPBy9nMvc/4rCXeX+5fvcZ
8/kBAwHm8/D0rcznefMhXOCnv3UYS+4oYv5e8oAQ4xXunYw9LvAx1pf4x/jT
qCTj/wFUTfUp
       "]]},
     Annotation[#, "Charting`Private`Tag$125684#2"]& ], 
    TagBox[
     {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[0.75], 
      LineBox[CompressedData["
1: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
/1UD+S7ckkvr2uDF1vrIf+Ekc7tYPozzHLlAdj2LnARxPbO3lyEvg6ub0a0K
Owqy/Axu/waBdbBtlCPyabh+XyG2HqcXZyC/hktIuuUHt3+8w/Yzz7J+lg91
v8IkjF3/yfw7cN6iA2fZ+mmfng+bzxxm15PeV8vy0WxdKpCvw8Xf6uiFf/zt
YutPZIw1y28bVWPN9s+uKfJs/lMEJW7CxeZL57F8PEOJ+3Dum3oruCRwLvKs
OFFtvh0sD+TJTLYfn3x4fz9szTsR+V2cvmlPAMv/WteDvCFuVldOGMt3eZSD
PCJO44DoBVh7kiubfxnV6/Fw0trCRrafTz6VDE9ZV9HCjm+WewuOlTmG/vjc
qtCDLF/p8yW9LjYeMmosX+mnUHQv/FzpO8tXWn4giD0PaE7qYPlKVpU/kSfF
9dios+NNDv04BA90P2bPK5HXDJEfxa36cIzlK+VLzUD+Eyfl9InlKyUFebP7
U3uc6lGW13YxAvlRnO7kHyxf6qpqEPv72u9mLH9K75o5+/55f9OV8KzqZHZ8
iTcterDTyxjkV3GPWxQ14F+u09h+Nu/SxmnwRL/1yHPhDBbwSbI8NJUNyI/i
VvsqCMF9TcrsejcdzmD79f77+Ww8dqgWtrO8vXMLO2De9WtYvoN4s0cbrPXt
ewFs+P0zG++BRYtzYB3XmciD42qC/R7B8m1H2P5bUfOC5Yd12NWy+ftYOpLl
i5XEGyNfjNN54XIV/rO6EXlunHhT3yX4uHZaMbxmZmoM7GX3DHlunHDMMZaH
VpYlzNZ30s9brL4VjrK8Nm5CzBD7vIpjHFvvwUvM2fGf3pqFvDWuMPDLTZiL
+pHBxi9PkeW1jerrZhbXCS2EH6rKss9v6btQwfLMdo3OYv+eG/5Yw/LIeDl2
/JHrbT/Db1pTWX1f0Kxh+X/bnpsgr43r3TeerZ+LkjzIa+P6ikVY3uLSkirk
ZXFX9LL4MR8bvr54yT5fOnMUy8NzqUT+EidrsY7lK8aVDRSy/WSOMMs7K/8y
E/lt3HtFVbb+jHst2fjZLMqcDvP8PFDO1q99JsvTG2yLYOOdmqA6B+YqU9+w
+awWZPVj6ZSBPD7OWkOH5aU1fLiBvD6udmMBy/NrPO+NfDAuyyKV5f1Zxaoh
743jGfOZ5QEubc1m83/1shvLC4w/pIZ8Qm7v9yL299njPZFPyHVETl8EO2qo
suczN5lgtl+Ev9RHPiF3WsGD5QHqVWcyv7nwgP33u9iSz+zzcoalbHwapo9j
x4t8M4mNn3DQv98Td25j+Yl7d49l57Oij5/dj4bXdbL94pGTOcuXE67MZdcz
Rfwxq3frLjd2vYNvDFgenUrYTDYePVd6WJ6kUEpvFVtf79pZPuSqvm52v3n5
azHbL1/YabDx1j73kNXDqwvz2fz09EmxfEeP1Aul7P4VbczyLEMNLrL5Ws2v
zPI6I/dls/1uRkuWANtfFAXY8R+s/MLy0DzLbdj8Seu7sHykruyb7Hzii81G
s3y6YJYPyhkkHB4DX3ihyc5/peZXVj9zU8yr2fiklLJ6FP1sz77vo3iI5SMu
4DNkn/cSXcHqs+vGOna8XbLSLG/y4OLjbP2ey3vB8ii7+KvZ3zddLmfnPy1O
jf19Y4cVs1k3yyPlyuzusvy+v8bi//5uWMrMN6qPfX+5/ifmPyos75QLn/0v
D3V8xr/PdwaOYMfbPIblpXJaSYLMzff+2cKYl3mTyT8Hv/iXx7o09J9FLv+z
3ol/Xv31X75r16J/zln2z1nd45j/B4lpl8c=
       "]]},
     Annotation[#, "Charting`Private`Tag$125684#3"]& ], 
    TagBox[
     {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[0.75], 
      LineBox[CompressedData["
1:eJwk23c81d0fAHDz3mtkFKI0FCIrKeMpfQ+JbEolUTKK7FQkOySrMrJXJUJS
WVlfWS0le++ZPe61x++c+/vneV7v1733+z3ncz6fzznH63kEzBwuWNLR0NBc
IdLQoH9HssJ/0JCAwSWu1ifdZPz03f/7uuP/LcxHS3Xu6//b4fb/fSD//zYL
+//3cwz/70fUp5KA6a9dVL+sYqBaXuv/1ovf3N7eJoJek51U17Z1Uc2qRaCa
/U0O1aYGiy3I7fNlVC8wslA/V3yvTn3eaZ0zVHfsXqJarPkk1avSJOr3Z3yq
qL+fX2mhRZ+/pSRQPxf8lb2BPr/SLk79XFBmjRF9Xjcd04YsRVqnfn9s32gz
MsNziSX0fWt1jSZklauGFGRP70bq52J8lDVkbFcc9ffnbP2oz3NXON+J3Hix
mR25VpGnC/lyVtNO5BBtdernt7zbqC5/nNCO7MLwghP53El36vOedNyl/j5p
6v/za9/hx0qdf2sX9f0v5WpIyEGu9tTxRTZbMCDfKyM0Ipc89qHGI3NH/l/k
9yaC1PFKnnavR1aQzycjKwa4/0H+b1VnAvl8ocFvajzHLw0iv85KpbppdLAP
WUH4JvX7v4tTe5H16wOoz+syaaD6w11iA3LFRfd+avykB6jj4f2TMoS87yMD
Nf6iIqfGkZ1XL1Dnu9eLaxKZ0PyUGo+GxxozyJT8nx3I3yR/zCPvmGSixrPk
9RPqegyeU+5G/jDov4p8r9a5Bzl1smoTudI2qRc5vFyJDsXnj3xlHzXf+iYI
yD8t2vuRvx/U46DWw/HCQWQt3l981PWLlxhG/hLy/ShyffbtEeTOy36yyLt4
toeQ6ZeNFZAFzG9Qfz/7nus/ZPHPktTnG19OoH5e1N5PHY/tk5fyyAv6DtTx
TjfRySHLmXRR50en1XMC+fe9Y9R8mV4TPI583MyJGp+c/g5JZCuhJGp+qG6u
U8dnX15AzY/PesHCyCoSJdT4tytHCSBfyMqj5kOYnhQ/Nb9oP1HX0zmGizr/
73VFP6nxa7zBhJymVPkduY4JUOPH49RQizx2eJqaTz3Da9XIPgkui9R8yFKp
Qo5z7qOu573qnK/Ix98JDiOrHlOooK5HwYVuZMbC0XJqfpFym6n1Zfu9jFrv
DEFFyHxjriXIbR40b5DfhR6ifn5K8FEKcj6nHPX3ZXpdidT6zgzDkdPSDiUg
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
4gw63c9/jXECv+qgv2HrC3iz6tWliTYOEMcvzhVosIDHPbJb3KjaAUjuoRnn
Wedxi+5rr2tXWUBdQvmsmO0czvkXqxvUYgYdwwqtj5Nm8RrN0pLS80Tw/eAm
SzM2jffZtC14zjICy+RZguXeKbz2cZ1M3QcGwKt1hEtlawLfLj2wddGFDiwQ
CFuGHeN41Vde5uvetEB7tSRRpnUMP7vKOmqVQAOiRbK4pDtG8dTDPkUqkdsY
l5T7xY2BEZyOkZUzjGML6zgkkXhqbhifE6c4amZtYD5OPRvh9MO45NeRijNm
6xjvEOno271D+D3mqPoI/lVsY+ijRpThAK4nLt2oyL+CGV5yjKx078fjmtVS
M48tY0ZuKULJ5/vwa6fYTY0Ml7Ck1/sWuhN7cJaljbjJFxRM64ZEc+ZKF950
5WzUwW4yZkQT7edl2Im/eaFzvekkGeu5kHOgo7Qdf1haq/xp1yJWIX3dSvVF
C861W5Of9+UC5s6ve9OPphl/5Tb32k5wAVstmauKv9uIcx3tvkAon8cM3KKU
ZMf+4qYTzy3UzOYx4PSpgVT6B5d+/i85nWMeG6s4wvLo/S/c93U7Tc73Oczq
QuCxM6++4z4r+4bnns5hF/29Yttja/Ba7if1XAZz2Prcx4jOiEq8o1mk5pfw
HDYkMBFbfADHLaJ2pzbTzmGWL8QN6Pd+weUeiTFTfsxiL3YId/TwfsZJYH+N
SMosdiiLyVtVOhN3zIubJQXMYuUv0kYabiXge220oxwfzWJJt923vAqd8KWQ
alzPexYzam0ReB0Ugf0yfg9yI2exO+K2s08q07B7VnKM2UWz2ES3btl8fy6m
GujJ7jI1i4X3cLTrDBZgTK28fhK8c9igfxfD9kgpxrJXycNYeQ4TYNr79cqD
r9jdifkthvtzmCs2VhPyqBqzOdh01DF3DpOy97lJ9/gb1r4n1YVMnsNeuisO
C4b+xHS4BY8uKcN4pnTz3Yn7jYn0fnUbj5vHFOk7r7+79BezWdrtqrM5j+2+
1Jt/sr8Bu/w5/mjpnQXs87TnP2G7Jsz4VHx929AC9u/xrd6/G83YHZsinmvW
i9gH67alsGet2Jpg+QbXxiK2+ebFq2qhdmx98193txYF+z7w+LTu9S5scP/k
DtodS1joAwXCS9oeTLv0vvyz3iXMk53WVyGzF5teqVBqr1zG5s/sv2Yh3o8Z
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
p1tExo7VSPHYuBHA96xJ1lxY77Ozb8ab7xLAQiz/Q6EUMrZtPKE850AAjmvW
89VRZEzolbNjoBMBpJE+JyfB/LI8PSBn5kIAYX2NbuV+cH84rl992ocA6q++
8xX3JGO173evNYQRAHcSW8yUKxmbXrpNrY+mTA767XvwedxKcdufCaDUqqDQ
9C4Za81592wFzifgRsNOFpjPNEdkb9oPE4BRfHAx2RHm74G+W8w0RHDbMeMK
J/y+uVb/ivM+IkhTtFnSh89TNZFd0oPxm7nk7pLmQsZ4ex7TqBoTQWrkfyYr
j8iY2tsguWV3ImjznHU66UPG5PLZKu0SiQCwThQceULGxhi/x0/AeqwybXj2
B+5/6//JmvD2EkGSqukyJ5z/m0XtktebRODHSTPXnkDGtFb8v53iJwHfWu8V
pjQyJkGJJ0QokEB+oZJQ8Ht4fvrJL3HDgQT8KzZoeHAyRg7U99N/QgJ966KX
pr6RsddAaWUrgQRsc1YDsv+SsRKz+FdyuSRgQTf+4UwHGcNHOH81VpDAzo/s
s8EDZCz5hlhe7h8SsCbFfff8B99/+QpjSQcJ/O6Yv0U/D9ePZrtjaADm37c/
gURYv5yHpS6LjJGAeCVR+tEWGXMZVUkN/UcCp2v7jugxUDBFm/rbh6EbBO/k
uTFRMPODb1jpRkmA4c+W5fwOCrbWrsOt0U8Cws7PuN5zUrATUgYBgu0kQKf4
7sw7mJ++/OEzFb9J4JXSl9whHli/Me6zBl9JQKZUKNqYl4IZ1LJ77/1MApf3
nUzk4YP3dKeHEhdfk0C6J8UdOWZSzVMxnAQ+rJ7aYw6/7xFlnLDPG86/74Ah
424K5q+5/Z+cHQl8jtcqJHJTML5LRtG/r5LAwNuPNx7shPe6+v0Wh1RJYP32
qerr7BRM5p60wP3jJHDgp+etehYKdrcpmZXuAAkwl7rmthEp2B0j8IyWlQTe
umakPYH1FE4pWk5fJYLrw06ZszA+D3fHxwmOE0FPo5LewTUyVn/H+GNqGxGU
8NhxH6WQsUTPIUeV70Qgmbr83745Mmbgc+aOeDERHIlfDGaaJGO0+p9Lnd8T
QWAzj/TWCBnzM7Wyk3pFBBzmIJYJrl/B7WdMDjFEsJy6rqLQTcZMfvDMnn5O
BC4TmhmxbWRMpMGRkPyUCLSCf56UbSJj56a7Dr30I4IM3Y9cfPVkjKDnvL7f
B473yDdFzV9kzOz0Le3jXkSg47dq1wzz6VPH4epqT5ifS/tWi6th/p57Of0N
fr4Z4MDAUEnGRjXaSEd9iWCHX9rVzzAftUrbHrX6w/2n3/berzI4f0Ll9YIg
ImCk8cnWLoXjl+s3z4XjmyuuI/5XQsZYExu830UTgaDwrgfPismYVF/rYf9k
2J/0Szs0oTWe21wRyiACO9b+cRvo+VZNG5uPRPB2UDR5ErqD7DgqV0IEY9WM
fTXweX+07Lhsaohgi09nmQzfF4AxKIzUE8G6Ws+lu+VkbOFJf0NAJxGcSnhM
lq0gYy+rJZmlR4gglytY7BScD2vsqeqaWSJ4enBq+wGc72LzhpjIGhHsKrrO
PVgL45dxKuc0AwkUs+gOOP8gY5WhKnGqO0jgb91cBhnG73yVY8kgNwnMDRzw
CvxDxo7XSRzf3kcC3VUJJiINZExd7XxWsBAJsOz5aPgbrkdKLieLmzgJeDbr
fXGE5yV7NbJrGcw39iG7GRZYr2Ftyuxa8jD/tk82xHSRsc6Y10v8iiQQ0ed9
ixPur2rth92OKpGAwR9uFcd+MjZz/5eMowoJ6D8wUc4dJGMnhUwcpmA+rxG4
/tYNk7HI5FPXks+TwLyfxe+vo2Ss4eUDzmB1WC/DhjHB42SMdFiDJw/66C5e
hSMTsH+MEAUOQl8/IbMrHObjsIHpgzY1Esi9Y2nycwru5zVfxIfOkcANyo6Y
P9NkzFbC11fnLOwHZjd5k2bIWPsAja8QIIGzdb7B8rNkrNGYKeH+adh/XKo1
kqDHP7Hs0obzkytLP/QXWqfl73yxDNz/bgXcqoemsQ1r+CNJAoAlszcRmv/l
/dQYURLgWX9aqgidp5LlJyJIApJfXid/hO9rO+UXG7afBBQiU5w34HhOJ2n8
6OQlgSUF2scC0HsqVgr54X7aqFeuIQjHH/Ln9W1zuH6xdsXPSHB+pbNKd8qI
JPCOT/BEI+yHuuxkDXk6EqBtcjvnD+NzaSKCNLBBBMeTonqExmB/HNXQqFqG
+fLz4qEiWJ8ON49wTywQgUT1ghyA8abzKxu4PkMEbJXXj1XC9Sg6K+V0dIII
KM8E2ZVh/eJ9UiMXR4lA9LZHVlUfGbvDWx86MAjrf2qhQgOub1H6OdH2PiI6
b//qhPV930o88FQPzNf9VftcYD7sdElgZ+siAgVSePkheL+eFr23X78D1lOg
4aP+dthf6qp6GOB5AYTsb/4E+8FyVp2pCOw/Mh0mW/Ew3xwzmyq+tML6iXsx
kthCxljOx23nQ0ffjeQvhvu9Z+PadT74/flpo8V5mK/vz3zi7YNW+0/oiiq0
4KeGbvTf821FtW0UNpKxizL3zB/B+jIWtxRVg35uHc5/rpsISoevbi3C/H8k
Rsi+Ave/xPIE8XJoKd3fjln9MH42HfJp0PdkLczlh4igMr3sWga01nEO6SVY
nyaZIoG10K3n6626YT8tjcgP3oJ+mdR9b3CSCDwCVIZ14PucAs+Vb8N4cxxc
XMuHdlUNqhWD6+H3eN+6NBzvj10SR69TiIC29+hyBbTAz9HysBUiGIw5NmgK
55sbyJyXv04E9un54ewwHju1e23Q/6+kZdzT/BNa/0zy1HdauP/UN5g9h/Hb
OBrWPwT7AYutcIIDjC9TUCHeCPMn9rD21Usw/ufMrzuHMZPA/1q687Ccui4M
4BUlaVaSSIooYyVNcpqLSolSSERkLkQlmgcSaTBkqkgUEaKSBplLadSICE0k
9RZKvnVv35+/6/E855y9197nvO/VudcopW33cf/N6eDtEqd6W2ZU1DaD5svz
Y+6TFWKCBlXaqWoSNJ/6e2se2EsIGgwH+v7pI/csGsGJU71ywqOrK2j+C/ld
2gOlBA2mqhzak9Lcx8numTPmGu03JgF5+TuoXjrV02VDxwkaHHD+3DCD6kn1
8DbtcTKCBr/KqmRqyGk5thfw97mnZrwX86T94t5psSmw05m7kYPkmN0ZkTLk
UJnS5D1Un1K/+NWj6ffqDZTO1ZEfGm7QLKHjzagaEFGlera5Mzj1FZ1PVdF/
eZthK4s5Z+l8Cxrrck6QJx5YUqYrKWigzoUaXCUfM8zvyhQXNOi+GVyZTla7
Y54kQNc//aq/zHny0Sc/tTkanwzP8F4/8qaKOxKuYwQNVuns2GpFbk3NOuI1
WtDANLPvljA5+T7/gD+N96JmR6kCOj/b2jTfcH4ab5Eqfjdym+OzsTEjBA0m
WluM4iEXi4hsTqH5q9jTeusEXW/XngfNT/9SfVWdvyRHTv6q7DZIz2OzJTsj
LtJ4aYTOumBO6/30OZ8xk8mPBxbH3qT7gfc764qzNN55tpcHFtD9fr1Wmq8M
+aTjyNr3tB9UiSqfiqX52SQ6relmP9Xr0vg0CbJC/1GBK1R/V9/fnhRL8xm5
Oqn3cR/dPxtOWMiSV+skRIuQo1UKXVJo/u29onYF9I4y+HF1W7A2Wbgk3GcS
2SdVJq2K6uf81m9GrVTfmpPW3tlPdiy1eYq/tx/I3LtsGrm0u+c29qPgUlP5
Zqo/4+zpGtPp+3zTBEIvkusKbquFk82XOdZtJ29W9pktSMcfVJ2kb0pObrHb
k0qe89ytcAa5+TMvjyud/7OzwSYyZJ0pfBnz6foSvUadEidfa2qfPJGuv3HK
6FVSZIXu+Z1StL5Cr3grKZInvM2KlKPx2tE7bpMO7m91ld6zaDwtL8X5O5Ed
46Vn4u/vV9rVFgSS0+a2qLnQ+O/mH7smk7z4dsc0X5qfyNtmIV/IFt3Fr07Q
+nxkXr5Sia535baR0vj7z/Tx67s3kGe6ygil8wgaKFyzcrlKnqN1TDyV5n+n
UHh2N7kgIy05jvb3mV8NhXVofK9t6znnSfUy20nBI5ic42Qthfv9kuHK4Vfk
uW94nH6Qz7Q61cvQfMm4HVQ5TPUW1vrcYzWZV+6Ho7AA3Z//KkqcJ0s+/LLs
APmBZdi0JrKW/II7NWT1Z7pTx1M9BMYd05Wj+u2/r3HElhwdHCxgRa7f59YV
Qs5Sf7nEnWxdcvPTXXJKjMNeD/I2ZeMp78lS71Q03MiNSWUuAlR/On+6TfD3
6+/E8jZNJ/+dtfGaDLl8dOFYY7LvQIPvGzq+SGG6jRPZuDr+Rzi5g09DYivZ
9HDSLlVy+Z/Frl5k29Ob1hTS9Xn0rFp+gLy1bZ6RJdlS8fpoP7K0RkRmKY1H
WFbDrf3kjxGt5mZkvpbyoJ3kY9miV3NoPD9aGz5eR8451OE1g6xcY1y4lNxf
o2eL8bfo8S3TJstmnKscpvl5k+m7eDK5x0M7Ygt54pLcOD7yG6e27zV4f3aX
oMxHuv6VG7QO4P1l3fG3dYvIBz8n++B96zvF37efJw+oGWtokFNN4uS8yWMc
tj25Q/WSp+N2dxk5YvpYbiGZNzrosir5pZz24Vd4P0fd3mEEmadz3g53cnRn
7zzMX0nFr/Mi5JlW105nkXl41c4/pPps19DoOE52rHv61pu8LbbNfxvZpt0l
hSOfa/NPsyAntdVNlCRHZ1/Nmk7m99i+7DvVu8eyk58EyZf9LWY0kDvLTfd2
Ub2FLBfxLid/ir94qpL8YatLJ2wxU9L7AXnfnWyFRrKt/l+dVPLqKYKn8Hur
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
HLrHmwsiv5r/4wLyVdwcjRJCyN2mhSlzkL8gnI28PO7pW59e5DEdfuo+5TB5
ZI1jMOpz9tYiw0jyuiMf7XTI0Wa3jaPIwo1vXZD3JLtSUxHPe+PuZJxFHpSe
nMrDaPJb3Q0sLyp2WFMjhhy4/7UqLPmiPBD1Fj+qhOVH1Yjcu4L9gH/IwQa/
92tidWI8efnmcVE43lZdx10nyRYeeRZaPHifda8E6rcmOvDofDLPRaFweFXY
lI1q5KXO9a/hr9nujciTmpp4oxueKLVmGNd/Y4tHK6za9qkeeUDCP9/dgl39
Jx2YgvM/JrsSLvpPrhv5Up9n6tXj+Cb7Jhojv6vlTooO7HujPRj5Bb9LFx/A
+U6VmJoviv2jQDUJ16PU6DGMPDnlkGUZuN7jY+7YIo9qtLvAFYzH87qLLE+3
MD8r8gSeZ9Ib7JEf2PW1xBXj92v0m0lY3xLX8+dgfNPvT9/4HffzSy238Xx1
oTe9B3lVkiNLPTE/Ai/My7H+K0bxa2C9DuqZ8SIfreKQ/68IzE/JhUjU4x6Z
ychn54bC1XYjX+3n8ydJbP4df99D3orD7IGIUPKi0uWrcH85J13jj3oxPXR0
DfLbLL4fjMB6t3EOeIh8t6xH/ZdRX1NGvvWFl2tdqg0kx3XdPgHn2WbKw4an
Bf/CajlLD+F+0ej2Ox+/V+28sh/1+l5buxTH22MiHg5XZS+f0kIe6X5zHixs
WpSN8/X0W9d7iLxrNf9RXE+AfVkZ/OPJ3Djk3QXV2CDvjtO5bvOyDftToS7y
7jgts/XTkZf393X5Nzi1rP8S1uPv0JJp+H1981BtjO9+98cecGFZWPMP8tyd
dmXw0Ye8R5EXt+KeiD7OX7Z/cCHmpyF91gN44+DyduTHGa0rNcP1GvUOHUbe
2OFy0bfwu0IZ1h/gmMR8f4zXbS0plh845ski5AdyY76bduH5TTJd8Q18I+6m
Fuqn0C8L+ZncnMMOCsi/cQl93gvvbzrSiDzHymsaqZg/P83vbqg/K055JebX
sP/uQ+wXFa9UkJfOeR+42IJ8RKvjRVdgixV7X+P5YFvHDmOsd74zcw8jXzHS
urQWdlFfIIz6Nlb96IJ6mnAmcy08rv/lF1ZftZtYfmOr99L1qL8JeV+XwlcD
/Ergs5s29eD3VDSapqFe3123cIG33x3eBXOhPOdw/CL+g9fg+TsPpOP8Cg46
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
7Q==
       "]]},
     Annotation[#, "Charting`Private`Tag$125684#4"]& ], 
    TagBox[
     {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[0.75], 
      LineBox[CompressedData["
1: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

       "]]},
     Annotation[#, "Charting`Private`Tag$125684#5"]& ], 
    TagBox[
     {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[0.75], 
      LineBox[CompressedData["
1:eJwU13k8VF8UAHBbZuxbZamoREUSEhWdp6iZFEUhQj+yl0gRkS0l+xrJUgnJ
VjH27Mu8se+EyJYWZRn79rv9NZ/v5713373nnHvumz1md3QsmBgYGLq3MDD8
+2U4eN/7Ac5C81U4Yf0onB9ns9OOcLLtJG9hsHFrnBsmBV5QjmvMYaFxj3rM
hLrx4+/KXb8qPmeh7b3bYp5nzo9Hp7iO8yp3kseD+1kX8GESv85DjTx3FtqW
KNOCXxf48T8FJPPVOyw01iuHnULU+PGN3uyHHvydZE0uPr+q98Oknq9b7F/o
sdBU3yyyjUjx4y0CdQbTZBbaKeONkQgxfjyUf6JUaKqDzDjmXU0JHCaljUTM
ZR1hoe2zs89gYuPH59PV6tU7O8g2m7sFhFyGSQ08+0O8BFlok71Din6zfPiG
bY2Y9QYzre2ar5vIAB/OWy3Z+OVNB3npZuxuXq1h0np1ZtLNcWbantfPHKtq
+fBnP/dscW5kpomaiQt45PDhZ4eKjHvimGmHRTuPSfny4adsUlLWsQ7yQHyM
QdzyEGnhwg3Y78NMo3leSN95mw+Xr48bDbRhpokf2JG2R58Pj9R4Mv2Mt4Ps
9M7AQTx9iFSwK0Nty2VmmifN4cBxNT7ck/NdLq7OTHN0XO/RPMaHG3bf+Gj9
u52cZPjqoPjtIdJaxFYhs0PMtJkvSzyeu/nwl4lXiMd2M9M0aU7Pk7bx4ZzV
XUfvU9vJbTM23+zlhkge1o6mUwRmGinEx+nPJi/eqaf68/mHdrJJ8CH3BrYh
0vuLdheL/jLRrgn352n/5MWHdj3GX/Qw0apEs3WqO3lxtn5DHkHvdvJTW//A
H8VfSYPv1mkh5Uw06uVDGuRyXtysTJgcm8ZEy7Z48vhbOi/OQsViJ12YaHLr
YTSSJy9evLvxMpt4O7nA19C7QPQrKdGoRV/2BhPtyvc3lYK2vHh5IcExgMRE
s/PUnVi6wou7ylmNu9HbyIHVwr6WbYMkyRzp/uUjTLTCBx1HfgMvXhr1Rfq4
BBOt27H19S1FXjyuKT24pq2NbDIQ86MiZpAUpbe6UcfFRNveZLb94W5evCxV
1XMbExON+TqLENt2XvzmDjHekzlt5GTe5EYLk0HS/XM5aZU/GWlhmdtT5BnR
+u9tfXExto28W+GhgY7yIOlOhcCGdwcjjabn7DjQy4Pbf8t01StlpAUJajx3
yeHB/xgv2RfZtJE/ZDi3Lf4cIH0z/lmulcxIuyA9sljuw4NLr2eXdjxnpGn3
GCw53eLB276pVQ2ot5FdudzPVWQNkGLigs3+ejDS2vdLBq0CDy7z9ivxiSMj
7fJWX5GWgzx4mI0ydnR3G9l0+YPpkMMAqRW/OF9jwEhbO1iUG73Ojf+g7+99
v8BAq3vd7a6jxY1fXaDktB1joLn/lZGOWuTENeqC2L53tZDJJdE2mne+kIwT
hE+eEmOgBd73S7rfxImfsYgT9BBgoDXsmP54v5ATPxp+JMMlrIW8ZlkUnaz4
hbRj/skfwaVN/M9Iu1tUCCeOp2r8LRjexDs0Lx/KdeXE9dP8gm5rtpD3Pjbs
1F7rI5m6M0qIfNrEHQcWd/Jc4sRf61s42ixv4F3XAzu2ZnDgxjInDMStm8nS
zjwVUdBHCj9x/252wwauK5NpeNKHA999oGbwW94GrtdXVzx4mwNvs6p+1bgP
3T/m6v+e0Ef6epTZ3fbpBs53+1UapsGB023/Sy932MAb4y1kGeU4cMXQg4l9
35rI5wr8dwi09pLW7mR/CjyzgUu7H7n6isiBF7peG7CnNJGbPFlM5DJ6SX+V
pCMeb9/AFRZ4/a2G2fEI0TC59z/WcV7p3Xl6hey4lMnt0F3GTeSX1R8y+v/r
JaV7Rrutla7jMydcam+HseMNK5/181PXcc7QcVV/d3Zc3+zkX90dTWTp2F6Z
k9K9pFCOBp/qh+u4XebW31J67DhBrdZkm9U67uZv2fPxDDtuMVh+Db42km8c
Er/gu9RDMs3lFe1WReO1Kcb3ibLjlL19a+oH1/FbV1Md3TjZ8RfcTU5erxvJ
dbrpYfx1PaSPdteygGEd7+h7sNT1nQ1vcfF3a/i1hlNmmlLCutjwnR9FGQUt
GslKkjfwycgeEsnYfm6zag2/4i9LE/vIhgvbxMe9y17Df4vKqtIT2XBuL4da
poON5LASlZotZj2kbx+Ecrc/WcMPJWZ8yXdjw7XFvooNOK7hWYk7GFOs2fDI
Y48en5lqIGdJH9W2OdJDUg3dk+NLXsOnB07Nxamj8fhL6hJqG8hnw2wdPXh6
SDftJp0v71nDdUrD2HJ3s+E79ui8P8u1hp9kPTnYwM2G80SXv7YLaCA/KGM5
oPe1m0QTHnh7cXwVX2a7yyH4i4ifCHWyMm1bxd/1z/xH7iPimbN4d7B2A9n6
+rkf97K6SRq2M3ZJ6av4vi8vfOspRHzivtQBEc5VvLJkgcx/kIjfvaX5X24w
jVy20ObgwdlNOsgnvF9wfAX3Yn944jgrEQ9gzipPblvB6enJ5/voBLzvL8tN
7AqNbLqh64QPdJFqZAsF+96j+6Neh8m3E/Dt8ant3jEr+P1Fm6pfFQR8SsHA
c/cOGjkj6cV9w6wu0i6xTcO/Diu40pXbx10SCfhE++uHIr3LOP3+No3ZbQT8
YoLtRQ5TnEwRTUiW4esiqcf9PHD60zLuxTrGtI/Oijdtqo2YJy3j+WPbyeRR
VrzxeWztpf042Wooxuz7SCcpvJGBp9p1Gffxn3uRWcmKn7Yc8mCwWsbnLcJe
/fzAirMp0bdO/qWSP5g7bh/P6ySd3lBnjFFbxu3mWG94hrLiBNkzfNOHl/EL
JR1bux+x4tLHj2+2FlLJDtWiwZJPO0mCBl5Vn9mW8Taig2i8MSve53PMVH5x
CddNlb/DcZEVv2QgTuLwoZK9t0dHZVzrJLUyuW9Tal/CtQK8EpkOseIPA3yk
6suX8LeTGw8CdrDiidr2uc81qeTye/iK06FOUuPBU9YMvaM4zpy/rWJqhupq
JXLSBx/Fj5GiF9KGZ6jVVVKiHCWj+KGl/cefd8xQJ2TzeV5mjuKKsUP9AXUz
1N3JzNzyiaN4T6bMoF/RDDWL11CwNXQUjy32Pfk0c4ZanKGqvsdpFE/q4GJL
iJih5lUa3Oy8OYrPft93/6PfDHX5Tax/iN4o7ktgV258MEO9EvumW/DEKP7U
jaV0q+kMlbjljcEjxlG8N3tf+Iz0DJXlUKqNzdwIvv5yu7+y2Az1aAWro9H4
CJ5YaIb78c9QpRmXja7gI7hrRMs+heVp6rb4m3dfhI/gV85ZCvTVTVNjf90W
uyM+gptn9t+9ZD5NjTd7WE/dNoL/+JB6ZVVvmpoRcOX8QeIIbiUzZpV5fpr6
tcyvb+P3N9zmlfvOPfLTVJJ96tRq/jdcdyo44grjNLUvccFW5cI3fFSeM6NG
7S/Vm+75nvZwGN8c7n2zE5+ifl/Kq5u4PYwnnmiVZf4wRbU0KP3EfmMYj+u0
/7L4fIrKf8F5xkZ9GPfILX3AYTFFrV9nbvTjGsZDvfVt+xmnqN6hA3xmp4fw
St9baSKnflOTyh64BcUP4qEkmcKVip/Uv81GHcMeX/AbWzsyzf5+pxbZFL1h
1+jCQ8XONIQqjVK7XA/HuTu04tOWssI5eYPUWKEjNeLTVPxgA2WJ4N9NlVPJ
D79Cq8L1+D+/EllppV5xkUyT+VSFy7W/tiSNtVKDxneEVlNSycrpwlmu/Z9I
N3UFV3b5VOGL+4ZEBgpbqa77aiUUbavw8VO7ltWSW6k/fP9+NuWowrfyGbtH
Xmyljn6p/zg4V4kXf3RX0lNupQoED2kqNqeQDWxeNins+EQ6fiTt1/baSpxB
ZHarAHcrtdSkX6w9qxLXaDPUEpltoR7fwpr1+nklfujlNSUFagu1qkQ1wM+z
Ei8Uqut0SGyhWoi8yPawrsS/tfpt77jXQj3fk5X9Zl8Kmff45SyLkI8kOLIt
/f2JSpyRK/rslr0t1ARB89tD4pX4emLO1q6lZqoRQfbqAa5KPPxp7lm8pZn6
LCZU32+hAi+++KTxW2oz9fiNl3YLQxW4ywOu56KPmqmWC5nH/R+9JfMx9BFd
WT6Srq9yp2zNrcBfCLbkssg0UxfWkwsr4ytwlrjO71kszVT9F6eKfZ5U4Cvx
+8QeDjRRM/Pbm/P43pIDo1xGd7z/QEpd+WqOGaLxsRP63kFN1JJpvhUVdfT8
X5pS8c0mqvTkRtWPvnJcgbOBwlTfSCU4TO57l12On+TJr55KaqQauwvxxqgk
k1WZB+00Z3NIHAbNz+IMyvF0wyeSh3Uaqd5CEjbNMuX41o/HjHylG6lCF1K0
DjKX43P9c22rLI1U+l73Axm9Zfhps2S3mK8N1KNN3WO62WU4Y4OUhl5hA5V2
7u5m1qs3ZKEn/uGmf7NJFtcbPwsbluEFpvqbKrcaqMmvK/OPHSnDKS/qm2+e
baA2uf0978Zahgu3p3jm7G6gEoR8rccGPuNjoT2Mu1ZpVMf09PV7uZ9xbsPT
GlldNOrhjz0mQsQ35Gn+pdzlmSySns3Nc2z/fcY9ZK+1KAbSqLuXdHo5lT/j
NaTWeRlLGvXNyWcvjvF8xi0CtieQ1GjUj/z0WoW3r8k5SbYS2y5kkS6+9rZY
+1yKp7xJlRlfxKnV4okXYqNLcfLTkgXLDpxql/zhks98CT7LvrpefRqnOl/2
5O9vKsF3BjJaT4vi1DnJV5Sq4VfkVYszdB9CJsmMZ1xh/VEJDtTnq9k9VGqI
Z/edOv0SXCVymkUtj0rlnJBhpRwpwV2/9DfRw6jUtbtC41S2Enxp36mztNtU
6iO96hXG0WI8b3nNuPI8lfotZvrS9OVX5D/Hc6J0RTJIl8VbiY6xxbhO2+kk
MwKVStrvvuvNvWL8j+SwMfF7PZVB9dB5Y95X5EyqucbtrPekry9cW2/KFOOX
o0sEMlLrqaWatMsLbMV4jmvtdNqTeurYwdzs+cQkcrBDwNFMtfekCWqwkWt1
ET4hHHp76Ww91aFns872VRF+7bXInOb+emrLrCS3u0cRfq/rnFopoZ5q+eDh
OT56Ivnj9ouxtbnppJzuiPl1pSL8+xdR5jlqHfXWSPcD+21F+BeXqOtF6XXU
XvHvGreCCvHJoDds0zJ1VMb/0m+42RbiAS5yteo8dVS/gBEt/5QEMphdNV1P
eEdqzTkdSZcsxGPuX9t/pr2WSmERDrmxpRB/caUs93duLXW3YuzhYKkE8hyR
WWNI6R2pRk5/I7qqAC/QTlOLcqmlylws0zN9XYDbKy0eiLhWS11wOcA0+SGe
fBJP2zHYnkZizY/b1DItwM8aNCx824XGP8ujcP9UAc5gvKNagaGW+qA//Ndz
5XjyQNM1vXn7NNJXki+P6Ho+rtzIMi5VW0N9se798tVAPq7FZLu7Na2GKjDZ
zhlb+ZIcoiZrLcmZRkpYeJLKGJ+PB0xGvL99u4a6/1EQcfhhPn7+5t4hi0s1
1B/HT/0cMMrHTwp9e+2qUEPVT0+qX973kkzI388iEpBKyup8Oyu3Mx+fLfdN
mFuupv5ZMFh7tkbBdTwVSq8NVlOt3/1pJ36MIzd4VF3rPJhKcuFSa4/6TMFP
6DQtu7ytpm6q3/M+l0jBTeR8N2T9q6l6giUD5qfiyLvO3Dd6Q0shdR3tESPc
oOC7DU5FzGhXUy2PsM4KqFFwAzsewqpCNTX8ETOBrekFufiInrvPrRTSVv1B
3afMFDyWe/sW07Uq6t3ax3VTY3n4CVvBe0XDVdQnlnVOC9dfkG84PpR14kkh
eXrhEwLv8vDET5HTZelV1Du8li4dz/LwFdsvozYhVdTu2Is9cc6xeHGa6vfh
hVTquPEOopZOLN5/S9KjqTOVavLwsYLE4Vh8ulerr/9TKtWWM1ceJmJwti/k
18Z3UqnGr8lfxQxicMKUXtzcjxRqmk0C6fHp5/jIZ+yx4fhb6gLHhNF1uSi8
l/SnPZH+hmpocITrP6cw3Hh0m2PmSCLVVncyVHLBF7/SyIazfY6gpp7gxR9N
OOOeK74jJE8/askn3X1p2Ra4n+SL0iDDe9RnWqaVBbqX8EZV910n00yoBHul
yLyjcjhzYrp6myRG9dk9r/0nc5r6p7XhQZHWZr0L+2+GwxJ/qWc0y/TeqqzX
n7X+b+cC2xRV4VCer/Pp1XrvvKt/wnb9oMruf8EfH7lYX6p7aNrj+gi1dm/b
qpvKTH3r+6S543Zt1GMejx02rw3Xbz+yb+DulhjqZPVhe/34lPrMovvDXF/D
qczxo/K02lf1r18L1/QIBlKFlbeGDNq/qF/bG6u57OBOjSiVt+/7FFBPq+o4
84nrErV0NKCtRtyk/txH+m9+TVXqzYn0tWhPzXrFG0b82TL7qMNnf2pIzcjX
s7qcHv2u96qev2ncWCkru+7Mq/u6hNcKmO5U+reWBm6s0rF9Lt5lCNZnddaV
Ytmxa/e+sww/SwbBzj1mrewEzOPc9dm4bg/4aToh5XaRBWNeXBQ6H2MOn7YR
j+zcx4SN7wlblRXSAQ9Oz6pPNxmwxOKwD2d/qsOsv404//d1mA1ZOWIlpQJe
k+PK/g9XoSZzk1dqpyJ8s0jg1ri1DKfNXxulbpeDJpt2vp2pi5DNqFkgc1YG
nlz6wdMrsgAHUNSj90tBN1jhheV08HmrXKK4+wAkDGI77gfNgTL+J/9GsyTs
ChSQCHObhfLWfbO0JQkoj65oHHk8A8oDR65vd5eA83vNXUlp0zDEzPv9tpoE
iP3k3lJT+hdkYPuPsOMSoLR2UrFL6w9IWq9uX7gmASWXqp8eYpiCuGGrRPGX
EvBakl9/tvEXVIVg6z4MkjATokJSf/kT1P8mdtK9JIHwdSr6qc8POL/uHFYo
tB+exPCPN3lOwrneK0MrNfthI3iLXFzYd8Bj3ZjDfQ/AThmO2YZPE5BXtPGH
pnMQeGZK/oaMjUP3DPGirpwUbPJfOau1bxyuMouThEWl4eMC29X3DmPgxxGQ
B0KHoD/hCPUOdRTiKioofGIywH43WS5cahQU+YsbluUOg9KtH2f3PB8BmfaA
Uw8vycLvyBLQYh8BtXJ19+2qR+DlEKnD+Mk3KNsexmbUcwSe/Y32es/2DUaT
xkXGneVAfzWU9VXkMOT+lKyP3CEPY8sVjkXiw3D7T1fc+Vp5OBWyT2nz7hDI
3hvLnXZSgNwa793c6V/hpMqRfQ77j0LNmWqOwclBuNJl5UUZOgqnHvzxK5Eb
hBjQzcyJV4TYfEhl9x2AQ80mO7VNjgGj5JZppYF+MP0d3nTurxLMXynblHz7
Bbprq3iflSmD8gXV6U2+L3Cp89pdiDgO9gPmr8f8+qDa3ZBh4uxJUFU9ee/G
o174blevUbtfBRTu4T2XmXphfM0mbZFTFbLnXXoYA3vA7vKn1eNjp8BJDbMM
T++G7QxyCqrdABpXr9svnuqGbH/CmoolBt9vd8ge6O2ChSwp1VozNXhVIDm0
Z1sXtKvs4ZUaUwPl1JnXoYWdMMFlHvra6jS4c0Yn8Jl2QklAN6X83hnYv4XR
qSivAx5vO3/SbOMM7PHYqRJn3gECvL/4eQLUQT2oeZ5pWwcoy8fc9ErTgMNb
pXiXH7WDhjWHntrxs7DF6wDPJaV2OBMhFrml6SzEs9xQrZ5pg9ipR0/DV87B
W/OFG69vtcFU9chxvSgSMKg8ujpyqA1c/N4ICR0hwywtyfXHn1Zw5yj8Gnz7
PJSu/LfO9KAVzA/i24BHE+xarSZnT7WC/MiaxOQnTdgQeiJnQWiFpyN9UzsZ
LgLPHtMHh463gPJj1XOp6RfhuXWx7d32ZqBeItTuvaoFIVuctmvbN4PWdAo+
/VEbolb73ttmNcGr9jhtM7XL8Kd1KazlbCO8/HChQiH+Mhx/biw5NtcAMU9i
12YWL0NPQzh335sGOCdneELhkw40cMsf3cfaANolNR4UXl3Q+TL43biYBvqx
skRxB12YFTkqrupAA5V9loFlclegviphNH8Yh9KH68O/Iq+AjoXpjeMvcdg8
VX2YefEK4Fxvfsnq4zAiLeL5p/wqPB0ljmh2UOFW2I+cD9f14Y/XRc0D/fVw
zfrIcck6fWAsWTot9aoeFNz8y3yPGMBhFdU2Hct6aKxWWpsnXIPsLri9OF8H
Hzk2kj5VGkL+6SelxXvqoPewioW5vBEURKYJ7/pbC7teGiyvJBvBy2fr9rc+
14LRIW/Nr8+uA98nnpni67Ww1XLi8L0bJnCiOkfmYUoNKCsdYjXsNQGNDGPd
dNcaGDe1cpK8bApc5o3EOK0a2NJXGF209wasHoh9+mGlGqwNv32x3/kfMOwp
kVI2qoZdzRV/14z+g+BjSR0MitXg99Dn7cbL/yBUtuePLU81KDlyKBvvMoOp
nlqGbXVVoFQRuvhMwhy+vF7MsTxRBT95mPIKrM3hr4uyw6BQFdCOJf+4lmkO
01xcG/2LlUDUf227dvQmOO3SEbAsqITTI3/syjQt4PdQ4D4LlUq41O74NirC
Aj4cznjfJloJQeumdcN9FlCAb138yFgJk87r+f02lrCaYWtZS62ARdeqcbNQ
K5B2nLNeM6qA5N7Ubz87rcCqEN8TeKYCKjIeYf0i1rDth1+Fg3QFBPoYHVhI
s4Y0ByqX81I51I5Dzo56GzicXPSQdKYcRO8c/TnFYwsjPpbiTwTLIfTK1nyp
a7awOtlPuv67DLrsVS+O/7aFQ46Xh6kxZdBaWBduJXwLliYHCObzn0HrC6Nj
jMUtCHWS8d/X/Bmcyu5GHP10Cxz+xny+lfYZak4eVi+8cBuM8Pe/nxl9BjfW
mLXpJ/bw0sbgazVeCg35HaHq/g5wkk+4NKO0BL51yaQOf3QAfu6MNZaEEtin
tcBV0O8A40RXZZpHCTx5drtH4IgjRFUwfojASqDwpIp7dL8j8JklGSzSisF+
Z5MIJ+EuPD/VQQzMLgaZUPrdcvm70F3jGeEVUQznDHxjBwPugtrSgmuQUTGc
d8UoDKecQHpr5gvW2SKQCtY5ZGnnBN68Adf8e4vgvDEPP8cLJ2gP0GYzLy8C
5xcrtVvnneCTvmOwWEgRFOh+3K7w4R7ETsi7vZQtgrtPuVgX5Z1hKVhHqMu7
EDRrl8zzrJ1B85Sper1dIez6NRVak+gMfFVKrPx6hfDcvbB/iMMFGox1krOk
C+HLtmMcW3+6wKcPuwtGvxRAVex0peveBxCwwgne9QXApmyVqGT0ABTV1h44
5BXAgeyEkbKmB/Co2khCLbQA1tMrtfgKXEEx3PJyDKkAxNX+/rg46wpr+Z8M
s5UKILaIaWhSxg0Cu2cM+fYXQHoWM49qqhuYDYoHF7IWwNsKfd0HLx+CrU5j
xUM8H6zOC4VX9D0E1/sDSd+K8+FRBOW+vZA7LAhwNodk5oMb267Fjefu0L2j
4EtpWD5o/p58y/XCA7JIk5YG1/PhLt9z9cQvHuCha5bzQzsfbumsFMfvfASF
N3TVys7kAy/NLv/760cwPHn1ieyhfOhqK/Y6Nv4I2AVrjRp258OrGPXMxQOe
sD3bsvzdtnzw2wz82PXRE0gea/clGfJhQ+NVK33BE251W/2qnafA9zeHnTVE
vYBzsFk15RcF3KWtKsJuekE/3U9yby8FPllj0jx0LxC/susLRx4FOHzDCoOF
vMGwcY3xdQYFpMKilC6qesPmEXtLp2QK2Jum1IY/9YafY2bRzZEUGD0UoyiU
5Q0qumKlekHIMdkOI+3eQNUJ/i7iR4FlK9ZoDTEfsD5fcU3PhQIlpLR9wxo+
UBW5b3+TAwVsGqUbK2/5wMpZN1ZPWwoM577KMS7xgfBgZWKkCQX0ImfChUd9
QPEu9pFuQAFuru+9Yhy+oGb+wDVMlwLldsRx7uu+wLHjmMt9MgVk6pkUMB9f
4Dl4OIpTgwKTyx22lHe+YFUXmtGFUcCAw1P/TosvkE8PxbWqUGCEiVBjv+AL
U79ewboyBf5+t3+Yt+sxPOG/5mKkSIGJyiKSmsZj0NwSJPZLjgLSd1kuK0Q/
BrkgJ6VEaQqca9nYE/f5MYg+lzOrPECBQBW6subEY8jK1XXeJkmB/ZD/8ByP
HzQGHrweJ06BSoeJrlBlP2jnuLmuvYcCjHaSChJmfiC0J+/MMTEKhNQLehKD
/GCxkCZ0cRcFuHZfTzmR7wd4hYFl1A40Hnd0eOmwH4xL8GznFKGAt/RN2VCO
J5DSlciXJ0SBaj4729xjT+C/z4WngwQpoHZD6bCU2ROokdKLjNpOgSP1+ffp
wU+AY1hxrnEbBU7zhF4WKH4CRSy39RWRD3kmdzydeAL6KmcoTVspkGrcw6Ur
8BRuSTEwPUe2nOHid8aegufdX/IhyHu9pWZnbj8FocILqvnIEbq8FfUvn0JZ
ot12bjTerZw3wUv4U1jGQ3OjkS37a275LT2FS4MM7BfRfA61Zzve2e8POfee
8x5F8317oLm5QM8fBJs/1J5H6zlp4Fht+sQfAnZOHAwXpoD814kQ63x/OBfZ
qEpA8cCVPBw6JvzhmcUKY9ZOCpwa8Ul7LfgMguu2uPiIUqDD8KxTJ+kZhP94
nPB0NwWootsFbrs9gzZGbufSvRS4noHV3cp8BgGnlRj3SFBgh/k1WufXZ/B1
JRQo+yngtibKMqoeANmZJ//ckqFAX36keNCDADhL0HAOO4LqNUT4RHJmANQX
5fWNKlDAdZv1oT3bA2FMKtJc5CQFdpa/0PD7EwgdVwP66jUpECvx9Xq9RBBI
lV59aXeJAp1d2k98jYMgu4yaBVdRfQfkDzo0BwF33cReV1MKkD0dMe38YBgV
bfim4EyBJ5xTQeEzwfBsZaT0ujsFtCgtJUYyISDLzJ6V70OBCu2+uNDUEBBs
5NbbCKXA75GrbRlJofD4tqv7cCYF6uU+au79GgpqxjWP7dF+L1UK+y+aOwx0
GW2bDpVSYLGE/be7Vhh4sSeXn2hE9afFoTneFgYRjzrjX/2hQBa16bvgZDgc
ZLEL+qySDzeXkomsRlEgfDcop3UT9aurjR8NS+Lgqs2p0jcKRWDh27C4ZyMO
pM7mvLmkWQRPrtdPtqi9BOWakGId8yII8g1kmG14CdQgM1b9qCLI59eWb/kV
D/jT1vEHK0XweTiD0dQkCZ5fvcyy1lMMzd6nUwbj38BNU3yWZ7gUGqWnvh5p
fwOW7mQjQ5bPUB7QTbtBTIZHwVu27T74GQxjN0RtXZLhP8NnBvvufQb6dfuM
4htvQeflqWV13jJIPK2w8Z9FKrjat8q8NSuHiqnmUKpNBnR4PDa6jlWCePjX
mGuVGaBoVqXhZVgJIxXeR56JZAKL24nJ9XuV4KKgevd3WyY0sIfacWZUwoJa
zuHlq9lwbF/m1bc7quBB9okTW4c+QEC01yc93mowNmiyey3yEe7kS26bPFIN
Tkmf5630P8IWwjHfmcvV8OP2LmpN50eoxYwOOUdXw7HLG+2fhz6BuUROReDe
GkjadugSL+pjJc4xi4b6tZC8/vwXYxQF8t/LDnzwqoXwJ2SGsR8UmAn3nMh6
XwsiwRy/81/mw5RF/7VMhjpwIarHWgsXwr2xqs2DlDrIOCfIyRVSAhvZP0t2
qlOB/RrNMiKoCs618T7M29sILvYnn0rOV8H+s7Yz1x0b4WkZ223Z/6rB3FZn
uryyERJffAtVUa8Bzei783+smiB/0aBc6GQd3Puut5Te0Axm/Z61PTsagHCp
4OddhjZ4w8Br/rOjAb7t1SqoPt4GrqwHtmpGNsLaMd17UffawG1S+VDgwWa4
zlAoOPunDWgWjmZnhltBdXqrp/1SOyT9EpOTD+6CpvFzbIcduiDO4etWJfVu
EEn9MuVO64L00NKT6iw9UPulhUTZ3w1bmfjZ+173Qjn5+fKdX91wzvavWpzl
AMj139J3jO+Fa8bej9VdB2HknsDwf/x9wD/e0a328iukSdcWxgb1QYJ9k8W4
/zAwRkanVIZ8gXHqpZPxLqOQ5hO3qtQ2AK6kbUl8l8cg4o6OxSOHQRgsCJD8
T3kc1tl/c1/c/hXkJPJkFBW/g4d0gAabyxAUfX6lIcHzG+a0MhpjL3yDyweI
+MVHU8B6isvBvPQbvJXaaYoR/8LBmD0hhnIj8NPEwxxOzgAbm8LitkOjcMiS
S6TSfx6IW6aOdduPw5eWU608LQvw2CQXm+SegGu/n9SkyC5B/q8/5T/zJyDg
UIFFAHkVzohd3/TaPQl+M0d0LhDXgY2jN2ZxZBKYEmViVX5vwO/zoZG7c35A
uA6Z7WosI3Ym+Le9jOUvCB1LbmRsZMLq4tLNaJd/w44g9TEBYRas1OqqtA9p
CoYKD/PosBIw+7wfV9r1/8Jgx9WsOV1ujNj07LvT2gwQHpsNH1XhxYbmUtQv
x89C6vyFFXYTPixPBb+aAnMgLmGR9bpBAPucJT30JYgO+FBLcCKnMHabM+IS
g+gipOCZwt4mIph7suyDPwWLYH7Ug7w/fQdWMRbcPHJ+CeLjQj0ihEUxB1HK
TRP9ZcjRak+Z4NyDbfuvg/JseQU+K52U93Dcg7H8XvjynbQKvVlv93E27MFu
O6nNLYSsQhXu1ddvshdjNlBkamVcg6j0exvqcXuxsJ/X1LYeQY4JEmlp3Itt
lmxZ+6m/BgenlxIXFvZi/3E938HrtgYFR008WYXFMYvys1lHY9bgxnRYwqq8
OOY9Ev5mNWcN8MXczzfUxbEb6Ve/LtasQQzT+aOiF8Qxgak3ze+712AHZ6Gw
Mkkcu/zsarnP+BpAyaqAq6I4RvjwK75nZg2Wmb1cOHnEsSL3Uy9GV9cgYZnt
slDzXuwW+TtLLvM6nKufLXhmsxdLCHjqz8y2DrS4viyX7j1YbP9VIwLHOmyG
rJgUsu3Bal6JZDOhvBfxv219uCCGWf+kjTWsrcG3qgPH2PV2Ycwl/gdsxtYg
8r4GUUxTBHsRPOZFLlwDe88tPV5EQSyTtLgW67gGHw5+EIpuFsAqL4zn+XGs
wZdX5ecCenixT8tztmS/VWCM6ZI/GMaJKV/nPps8sgITvVq/4gyImECeb2CE
1Ao4+Fa3aa+xYLMvDwxftFiGJ1+5//RdZ8I+JA2khMYtgVj92M4D+gxYyPap
X+9bF+HWMC90Ra8D7rk0dpFzEaoMl0eTTqzCMXdu6rtLC7BpN3wp6O4y3PtW
J1ScNA/3Bdndz8stQbmp3Kr+lnmIl5d8LIYtgsTKL8X39+lg3sfo+C10AUiX
zEbqp+fgju6170tbFyDfUDos3HkOVroVjZ7UzcNu4UCVWtY5aBy4452fMA8B
y20RnK9nYem6aca56Hm4dXXQn1VjFqxLUw5Lpc/Df2dZCVqzM3Bw/9Kd493z
oByvrPLo3QycsFfKJoosgNSckaWi1QxYW3/+Xnx3AcL/u+O7/fAM3J49GDj2
dQGszdiVaGvT4BN+l+u+8SKwlWYf22yfhp9fXp1MmVqEs/PVBrYfpuECx7LZ
j5AliI42tKyLmoaMDwSlCWwZ9LdIVnR4ToPUs1+4FfMK5LFPT+g7TsPgEdWr
ht0rUC19lWGXzTTsZzM/W120CpJjx+RmLKfBQzwovCRrDY7daWBNtZ2Gg6KX
tth+WofBhusNPPemQfWoUtF6/QaIhut1svhOQ7Q5j9a7P5vQ4pxffz1mGrg1
1cY1Ixmw05ZCvX/R/CTr//5dVGLEHH2DFqJbpoGH0OX23zgjttf4D4vk3DRo
VlmZkA2ZMdOau8pXSDMQ5ZgT47eHBTNueuIV4ToDPxV4gqemWTDs3WraUvYM
5JZ/3WOVyoqpexgLqkvMgvEhiWDBQAL2/fi5wDiLWdS/mswO3Cdix0brtVbe
zcJdqbWGrVfYsU8fKln1lObgiOttgUgNDsw0ELJdvedgWuGiRYoiJxZWPutH
b5wDw9WrVccJ3Jii3r2aBgs6uMdt+0Ad4cawne8UNj7S4ep7bB/fRx7s4/lT
iYrrdHgo9OjMcSVeTMVqmIafnYeGXOvI6EBerKTiQT9XyDwIPYroKergxS5K
gJZO+zwUEd/PtXHxYSLZf69951+AlO5Z+mFlPkzpl9NzMe0F0Cf06ppe5sPY
7WtadZ4sgIjL5cckAz5Mf6/BwW8FC1Chf18Au8CH2S10eRwbXQD6R3roHhk+
zIn07VAzYRGIzhX6Jqu8mMwxOVkliUXYXXDxCkshLxauwO8kdHIRlNqLA4tu
8mJr0hNXFMmLwMywcPY9My+mXCFwz1F7EeiSYvf7D/NgW02qDDovLkKZo/aT
cg1uLErA1jRQHV2/toNv6jIX5pno8OOHwiLMSUjdl7vGiWF8DhFWOxeh2P6N
0cwNDqwl4axl/MYC3NUpOfH3NjvWYmypdbJ/AVTPPM7d/5gNUz03ws2RuwCr
e360VaUSsQO/Q8u/ovW+FPdd3d5LwEweZemH6C/AiR0GcJudgFE0RTLe71mA
S2IXuwQus2JbtEXXt/+ch/NqewfuZ27B1vc40Os/zkNfuqaa/c4t2HHFEO54
V7QPBfZfcHjFgh1rO8l47TTat/4mLelKLNhKJW/Ve855EB46FCD6jRljsU3v
Fu+jQzBDxUrpS2YspeR4yKl3dDBm9rp125IZe3RlS7OJGx1+2ePqOzFmLJ7v
oUynNh2+vF3zr9jPjNFczx4ZOECHApZLcaY7mTHBJ8rWb7fQYSsbdzH3LmZM
vu90+IWJOeB71aY6d4AZOyxgrz9JmwPp6hOpasCMMRewrHrlzoHMR0UuFVNm
bN1VJX/7qzlIWLgiecSfGdv00/r5OmwOgrma1u8VMWNCHt+FtvrNgc+wxnPr
WWbsq7dJtoHHHNzPNHO7Lc+CnTzhk37VdQ4sz/Ffn3zAgnntamL4/WAOJE15
36rWsmBz5cNiSw/noEVC1qhl+xZsNi7kiI7PHCTuvMW/emsLlngn/XRz4Bx8
uZLZJli/BTs9lGutEoueVyh7cW8fK5Y00DJrnYbO6+BlKf3HrJjXlE7IzqI5
EDsY+nNlnBXbWa1lsLNpDty0HgmHkQjYm4KQuYOjcyB3SUFIJYOAxZMkW5hX
52Cp9hrPydtELM+TSYsgSweJDpuYdBoRC5nxnEw6T4dbl7S7bPexYS+1bdJH
Lelw0NjtoY8rG2Zo8cTVz5cOiXV1JQtUNsz9+a9YpVd08JwIlOriY8e0LnSK
ZJbSQXjvgd/KuuzYVB95OLqXDhT5IoJWEDtm1zMilT5Hh8C6z72GpexYm9be
oXiueTATW9qoHmHHvveFXJCWnAcV3jUvvk12jInizi+gOg8X552c5nk5MPZf
5npCOvMgF7NZqS3EgUV91C/bYjEPn8807JHdxoEdFWfbkXV/Hi7/Pl3XTuDA
jMhDGpO+8+BL0I/JmGbH3jHkKsaFzsOvoGd39VvZseKnMrI5sfPgTuyujk9j
xxb6Zdd2ovNrrMr/hKULO+b33Oz26Jt5eBn98HQJxo4tjR3Q4Xw7D9OybgIF
LOzY+5EDde/R9cvm+Re8a9iwBUH3+i+J83AuqjtSw5sN267O0F6Bxu+/kSEv
rcKGpfy3FO8fNg+C3DpUrQUiRu5wXjJ/Mg+2jFHKpR+ImJXP1a5nbvPgbzB2
yOYWEQtWatqieHse/OquFctLEbGgF8Ktb0zmYSNNNKj/JwHjWPjYzac9DwsG
pGy2HAJGj2z6W3EK7S8rucPnXAhYwSlbpj8y83BNtK+aWZ2A9WhsHOraOQ/p
Nz0+RG8jYEUJ1qs5HPPg6j7d3PaHFeupfGXTsUqHumAe8fhGVkz0Ec1E/Tcd
ksJ0VIg5rJizX/fIgUE6YJk9rTues2KPA/psk5vp8JS/zqDNmxULcx6nt1fQ
ISrO0lX4Lit2p+IGd0cuuv437Um/JSt2dVrdtSSNDjES1UaLpqxYpv0uh1fx
dJiXxu+cNWbFQuKXWiMi6GB5Y7dCvAkr9j3JZjTpGR3ULxoo15uzYgL5Pult
3nQYbLu4HH6LFet7MSkh+5AOWaW/2qoeoPv9ktlK0fdF6/GLB3f5o/F4521c
HdHzW6xM/4tjxZL35AVY2NOB7NwpdxGtJ6Ht5xb3W3S439ijH1/Him2rML6c
b0eHHM39asRhVuyQJs95DnTdT0WbTlplxS4VCGx1uE2HbHnGpq1CBOxS8mhc
zx06cAm3S+45hvKxy1xJwYkOkZozLnuvErCXyrMv7rrQ4fsurYrGewQs0/vT
gq87HWTODX7tiCJg7L/Fb1zxoYPq+TWR33kEbIrHKqXFnw4pce8taJ0EzLAi
qXM4lA4lt26ckqCj/K1OidyNQfvp3PbaPH4iNl1wQOF2Eh2mR9L6FI4QsZPl
U1b/4qvzcU73xgUipr/w9JvGBzq4yBtnNHoSMa+Oo255lWg+jrkFCc+JWFjx
nnI7Gh3efVKywTKI2JvTzuysHXS4bLLbIPAzEfsU/NfZvp8OTGviVsZNRMzR
68aV8FE6XJBu5X35hYglU4e7jX7R4Xqrjrb8OBHrczQeKJ2lA+/FE5KCU0RM
93eb1dtlOpDeWFiemyVidhJ6biwM89A1nWFfTydi15Orn7ai70OdaFb7t8hb
Jcb5N9jRdx12gHtuhogx5ekEPeZB++3erYrm30TMOwz9dxeYB73Qo76G6H17
krRrfbfPgwCj/LOyfiKGr9vfmxeaB/GI4wIHW4nYmYPvJz+KzIOSsF9kYxUR
W7pdFVu8Yx7wlNuKQ7lErOKExxd+tB843pzdFZdMxLK7dq+Vo+unzBiFlSOI
mAJmUkVFzz8eGBOdR/Gr+UsrUhRG59tg40Eu1D/lhIeyeAXResoMo0quEbGL
Y/GUm1vnQURqm/iJs0Rs0XpqRZUPPf9q4l2FPBFTUrz/IB31O/yLOPNjMRTP
FrXJPLZ54I888oXCScQynEPc7FE8pB/pGj5eIWDwX/6HMRQv3PWklvAPArZ2
HpeVXKOj/39l/nHovBapvROmtkgH7QvpVgdxAiaV4H5SA8VfDNS8RooJmMWb
50owRYd9YvrY1ywClpLKIaw6ieprYm+d1RsCptdk73ET5TM9LyiRFEvAlj4V
haV9pcPrn4RHgaEEzL3qtATfF5Rv+qXaY/4ELOBvimhGFx3iGFtTL/oQsI5N
57hHbXSQy6JEtXgQMILLhcLIJnR+GzJUF7oRsM9MiUkzOB3YvCNDmFwJ2E/t
kdDEOjq0cx3anfyAgK2bT6ckVdPR/5NWuxB0fe3srMQy6h95lmIZlIcE7Gie
sHx2GR1o8mf2Ej0JGNOIImslOl863cR3OPkSsE8nPSfkS9D3oUki7wia33mb
QSGWYrQ/K+7LAJp/cffdHUeL0PdAYMo+p+cEbOhHw53KQjrYP0+qt0gkYJwu
dZPpyJwstT/WU9H6Ft2cfiJP15yb3POBgNXfmnLyRM//0fwWW1BEwBi5bj+8
icYPfcby6W01Ok/1Hn6IQu8/GyMx1dyExjePCmT/TIftAg6yO1F+Jgwrj1b8
m7/Eu6m7IwTsoVeidg5a3yzbI87i3wRM5zmV1FZFB603fQF9CwQse/c9RbFa
Otj2XttWzEDE3B7t5Yyop8Mj1rAFDXYiBsfwuL1ov3rn/ja2FkD1k5OehjfS
YVlkOYR7JxHbW07a9Gyhw5uBK5JvpIlY+FdceqOTDmWWNTfuovrz6NyhWtiD
4lN73CZImYglspqcskT5LZp6aTChSsQkEs79YUT9XYfdVsH1NBFzdX0S5DeE
5iNfEQCons9kv0/+9Y0OMxVuwcfIROxay+fzsmN0KHVsNTLWJGKUtVfECxPo
efFjChTUf7JFG3/8q7fDXrLRaheJ2NNC50jGn3QwFS2LIiDPOymIRqH+wRZ5
IY0b3e/6o91kDp03stFuxqbniVgukJ/t+oP6uYqxFwuJiPGtdr7m+4vqOe37
WzYNtJ+afm80I59cunfAXY2IfT73uObqNB0e7+Ml2qL1BFzMt05F9suwthtB
6w3a6ypQhXzt48UFugIRMxjKOPseueIWz7ePh4nYMm/Q1v+QC7g8Xx08SMTe
P2KemETj+0xEVt0SR/11iDNKHbmRLaQmcBcRcxi7o+GC5qfqmdb3XJCIjdAv
OTxG+81B+lFzAh8RUxcm0e6g9XTSxIZyOIjYOs52QhWt96iUqn//FiL2wOlv
2/QPOhSmvA04jPIdT4wqCUHx0mfVjaSg/d+7NKGw4zsdLg5yerrPE7BlPRe3
uHE6DBi4NgdPo/3jyFfPi+LvQ+eXnftFwKo+Var7jNDhvUJfft53AlYj7LMy
O0yHucorXgGjBMxsj6alBsqnb2St98AQAbtjSMBeoXwnSjWlfBggYEK/tnEQ
B+gw4v0hlf0LAdvX1j7khepDwG6ebaqHgM1UPI3kRt/rqzsqzhl0EzA/rUWP
PFRPK35CnzS7CNjhWyHv7nfT4WPDXHUNOr8UDIejrqB+MSmZ/bMcOdvpjr0u
qselZ28YlNH9pX+1up3QefOeqXNOEo2X+dZSoKCdDp/LEm/5offR/vs1sQuZ
S0BWV7MP9atv4UXvUL8Jeq7mfaefgK0mtljrIztpsjtMDhKwNnWxlweRc0Pa
izOGCVh/UsR/osj1zuq12Wj9l1TfJR5F3rL06NnEBAFjlVCrtkWuxvcPnEPf
Ux8y4zfLkJ9KgV/9FAHrJPSekUXvn1fluWk4Q8DGJz0UipBzHfbenUfnMaHw
4FVDNH89iVDRkCUCJldB/cOD1rdqv5tDZI2A+Ss7H+tBrgx+FxK6ifrXmS1Y
ForH1ufUe+NMREwwWnNrKIqXc/y54wKsRKyf1EtxRfEMEXdV5WMjYt+Uu6Rs
0ffznTw7m15UP/e27vA2RvH/ZeDXYcZNxN4J5w1dQvmZ8tWUyeAlYrv9dbzU
0Hlt1iD2Xxb6PmhabaUeQvmUvujEYLmViHX0VJzgRfk2+/RzsH0bEdsnnBX5
A5mHzOQ0u52INXaK5+Wj/m92Kv5eDarn0s+ytfdRvVTG8h4jCxExI60pQQlU
T3FPT8r5IGcOntaqRl7QCbzjiDywc7+iNuoPPISBTWHkvZrJf+qRB7/V2Xmi
8QLNY6mHUH1GB1lvT0Xvmzy8aeGBLE9MqIlA89mV6BBVhJzj+vLbeTTf3Pbu
u9+Qv1+9LdqJ1vPjdPy5eeQkSIs7ivZXxIHDyf8crF2ZeJeHiP3h7VQeRW42
rX0XxYXWe+jdahmyWQzfmdcofkY7S1afIb/NP72QiOJ7kMvTXQO5oDRKJYpA
xHruJ/XMovlKiX8yeor2Z3PC2aBI5PhPYk6PmImYllbigYPIYb+D1DwZiRhh
OP8yBa3fhR6n+S+/8UwX844jw17u8Nx1dF50uG8pRPFr/N5aP71KwM5ozKzI
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
C/ltZafPry1hpL/3fsxL/eQtA7UnrwD1/1JDJ0E=
       "]]},
     Annotation[#, "Charting`Private`Tag$125684#6"]& ]}, {}},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{755.25, 504.},
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "ScalingFunctions" -> 
    None},
  PlotRange->{{0, 10.5}, {-4, 4}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.888301030336822*^9, 3.888301114960032*^9}, 
   3.888301173925928*^9, {3.888301205127512*^9, 3.888301234454039*^9}, 
   3.8883109477529917`*^9, 3.888385574889071*^9, 3.888385742193818*^9, 
   3.888385831174666*^9, {3.888401369404501*^9, 3.888401409241605*^9}, 
   3.888401478708088*^9, {3.888401738446601*^9, 3.8884017898472633`*^9}, {
   3.88840315980135*^9, 3.888403186228149*^9}, {3.888403449792634*^9, 
   3.888403493045258*^9}},
 CellLabel->"Out[231]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzsvQm4XFW171vuqt0nIaETkSYgIooeRFTsEFBUULDhiL0esEUQBYmAdFUF
iNIGEVFAOmkFpFV6REAUlb4NSBcISUhCSEISQkLkzd8Y/7HWrNpVCefc+753
33vZ37eqaq9atdaYo+/mnDvsMmHXb+2xy4TvfmOX8R/74S577vrdb+w9/qM/
+GE6VX1NpVJ9vlLpOWN8pZY+v1KpLONlXqXyv+fsJ+y1+tn0Mr9S6Xjl2X72
Y/Y6MDa9rJUd307HAn0eGPnjs/zHW/HSt5E9qze9/Fq/qvTM4rU2T9fz33Zd
77KlA1vVhf5Te+1fL718Jh23c4HGUQyq7W7n+Nfb2mvv+elln/Zf9NnLK9/+
9rfbfntSy29XSS9PpuONI35bqfLjSvy13eU3fnY7e63tmF5uSsdOusOrv8HH
/UqGcN1///H6NYN49r//6/9cceWKK1dcueLKFVf+f//KagdT+H8OdCuuXHHl
iitXXLniyhVXrrBXK65cceWKK1dcueLK//dcucJerbhyxZUrrlxx5f9vr/T6
WnVbnX7Ff2ev11eyv+p/84614fRyg45x6egZsBv0/s9uuhUvXsnri1tww8vT
cWM6RqWj/1XfbUu/sltFL/5qFa/a/TUdY+3Rr/oJXuSq9VS8ivg3gWegL6PA
p7ool05Ox56V+M2reuj2fuWF6eXMfAz/Hbr1b5xejkzHu9KxWjo+VfEa3bf+
e7D43fpem15OTccT6XgxHY+kY0JlRcHv/9QrT7f/135NennNK6+80lOv13vT
lX0XXHDB4LHHHjt81FFHjUrnVvrZz362cnpf5fDDD18tHWsceeSRr/vJT36y
5hFHHLFWOr/2Mcccs066Zr0DDzxw/f322+8N6X2DdH7DdLzp0EMP3Sj95i3p
88aHHHLIW9P729J7pWeTgw46qNL39vT/29O9ODZN5zf76U9/+s7DDjus513p
6553NxqNnvekSyq196b/35sueH96/0A60/MBrtoinen5YPpU25JPW6YnVapb
pWfyyf7zLz5YXMzPKn3c4f26I3fmGZvzNY+trL5Z+rhpggSIgPA/EhxAzygY
DSNjhIx2fHpfK2ECjKyeMLZq+n9c+u2Y9A72BtJRTRgFyye+Gqq8z/7fCYr0
nnTSScMTJkwYm+6xejrA+Hhh9i3C3Ls0DMa5TTq33cEHH/zJ9L5jOj6Xzn2x
2Wx+NR27pOOb6f9d0/ndE4b2TO8T0rj2Sef2T58PTkcjXXNYOvfTdByZPh+d
zh2b3n+e/j8hfT4xff51Ok5J//8mvZ+e3n+bzp+V3s9N/5+X3i9I7xelcxen
49L0+fJ0/CEdV6b/r07fX5uO69Pxp3Tuz+m4OR23pOPWdO5v6fh7Ov6R/r89
HXekz3el45503Jv+vz8dD6TPD6b3h9L7pHQ8nI5H0v+PpvfH0vtj6f2JdDyZ
njc5vT+Vzj2d3qek90rPM+lTpXdqep2mY3o6/yws1jMDtprJBbVZ6eRz6d/n
0n8cPbPB3vPxqTKOL7n0Wd2Fu/MknvovIEuf702f/5k+M7Lr0/+XpPdfpWO/
hPGxEydOrBy2HHb4t318P5wDBw3utddecBacBhdsBAekA+bdMnHBR9P7Duk5
/5mOL6Xn7JI4AWp/L33eK53bNx0Hps/NdByePh+ZvpuYjhOganqHomem785J
x/np84XpHZgvT8cf03F1OncdlEvX3pTe/5KOv6ZzUOz2dO7O9BlK3ZcOqASF
Hknnoczj4EY4mpLOTU3v04Q/8AjCZ0OFn4HkmiG5d3ZGATu4oJdLq7PSv1V+
2DMz/ds70/7lC/vEt0bD2nNxtw24b6UKPbZNt6lxq0OWg/977ePbqjvttBNS
iGSvI52GZnhfuhe6Bon7VDp2SqoFSftGOr6bDiQMnB+QjkPS55+l4+j0+Rfp
HXyfKulBai6StPxREgKObwa/SEP6fIek4IH0Ga6Hxx5PBxwOPqel41nxJGOu
rM94q8+DnDnw9Zz0qW+u4WBu+jhPR6VnHvrpBdA0n0/zOVldkF4XpHMclR57
rfHNCxzpP46q3W0sN+ZZcRjR0rlZouosUXhG+oyEQfFn9T4dAk4zoKaJKaba
fyam1SliFhPdKkJchX8q/SbXkm+4arI+P2EjetIMxhPpFa57XNzX85jd89H0
8V9SGZWeh21kk8SsD0m19IDlSh98fF/6dK9k+e503MXXqKTK4J0iC4rqdon6
P9M75Pp7Om6zJ/yNW70TMUFcbkkHovPndPYGKULIjXJESV4mkbsofb5ArHF2
ekcsT0vnfpM+n5Q+o4hRyMel92MSK6KsYa/D0jvifWA6t1/6/4fpfffEmt9M
576SDlj008k8fzwdGIut0+VbiJUxthi+TdKBsUO9vDFdt15icVQOqmdIxuwN
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
wq3FbaC0ix8UGQicMWKJSZKUWBPwRv2e+3A/ajqsvgJsGc6XMdnTcT4aXF7b
LLMuEJ5m4L318DAKiBcpYFss2dvMxqBNcKHIa+AF4jKhHq+TOBLYLpDKGMny
rehveIaOcd+dyHiRbM03tLS54dzRD1utp/maPBH9hz9K468Uy7qwLcELLgqZ
NvJhuCk0yH9f9uD3QiPoJ+PM9Q8J3bGSeSgXsAJ5bOKayIZPA4iYLJysN7dU
n7KpictIflRh8RObLb1pNQAhIY+tLhuhrYiCxSc58cEUB9oiO2+z29jUdfIu
wMBEIdYHxUtgq5JLhJ/H9ZiWSdmZrlcY4kkUUStIg1c4RSxqpEnHt9JzaOG1
Ve09B9nP4nOkJWkkA+94xagLm0LsojEeGB6RUiTiJtiELogUni8ROIbgMtGH
RF2IR9AnNqyYIhufuyk3CnVk2Uj2wJmETsRKrfmPr3Unj+ebq+/TPbOWBGsI
uUccjpH3TocBNCTRJgUhqPcdygPUrBKp8ONeZ3dcFesMxghyPiiOZPmkgzRq
oMZpu1XcCCfOzanWaLXQ+eJI9dZVNmbLSqOnz0qf8dVxgrDK5DNU8eqn0QlQ
qO2fLOTh31sTj1bVnSb9gxWfKKRi8d+c5JLWFoSAWsJFZpltffVVeC7BJcQJ
W4JKsD4vYet2MTW/QI/SvdaQ07d1Ojp47d/sTjUv+1XhykuEu1jiIKZ25EuU
5A3HNSXgmp5nh0Fj/xjwwYTYS6RzYwOmSo/tf7EanwmGL5C5/mPd868w+N+k
iMKeRj42EmItqy9nAumVx/5stoWImy+TYOs0NX05rvNUxaN2gXOOX2ClUm9e
7CeWJDzBJQFg+AuNYJG+J4fXi5U88CFIY6NBsH80HcDGMAkp/maj3I8JwhFo
EKYRdDwiAk/T+7+kAXAYbmmTzmjuY2oPma1aK6F3605oD2J7qU+SPj5XltMy
3U7wGn2tNrdcmNWiKvm0j2IG5ECxu4RdVS0mJQ7kE5rq3raer+llE4bTg2Br
RvpX6VuCz5j/gnXESlrCctvShm0gz+1w2SJEYUrpQrwupnbDRnhG5AEpriC6
+PQUGD4vq4zYXtPI7FndV02KleRje4qwZejKvxibmaj2odNxJQjtyOXAPSit
khh7dieGmumodH1GHpitrNT0Wbv52sv5FD1rB5NWYxpA7PIBh/f6WiX5VgMV
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
ftt4zf8D56wONg==\
\>", "ImageResolution" -> \
96.],ExpressionUUID->"502d0111-741b-4812-bcfa-918fa6e7e29e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", 
  RowBox[{"Evaluate", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"z1", "[", "t", "]"}], ",", 
         RowBox[{"x1", "[", "t", "]"}]}], "}"}], "/.", 
       RowBox[{"sol", "[", "i", "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "6"}], "}"}]}], "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"t", ",", 
      RowBox[{"-", "50"}], ",", "50"}], "}"}], ",", 
    RowBox[{"PlotStyle", " ", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"Gray", ",", " ", 
        RowBox[{"Opacity", "[", "0.75", "]"}]}], "}"}], "}"}]}], ",", 
    RowBox[{"PlotRange", "->", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "10.5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "10.5"}], "}"}]}], "}"}]}]}], "]"}], "]"}]], "Input",\

 CellChangeTimes->{{3.888404475133993*^9, 3.888404481566263*^9}},
 CellLabel->
  "In[232]:=",ExpressionUUID->"2f93e765-2e8e-4eb3-abf9-3b2e57b52786"],

Cell[BoxData[
 TemplateBox[{
  "InterpolatingFunction", "dmval", 
   "\"Input value \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"-\\\", \
\\\"49.99795918367347`\\\"}], \\\"}\\\"}]\\) lies outside the range of data \
in the interpolating function. Extrapolation will be used.\"", 2, 232, 130, 
   18332645112968276501, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8884044820276747`*^9},
 CellLabel->
  "During evaluation of \
In[232]:=",ExpressionUUID->"4b501f90-e59d-434d-a3c3-16a2bb6fa34c"],

Cell[BoxData[
 TemplateBox[{
  "InterpolatingFunction", "dmval", 
   "\"Input value \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"-\\\", \
\\\"49.99795918367347`\\\"}], \\\"}\\\"}]\\) lies outside the range of data \
in the interpolating function. Extrapolation will be used.\"", 2, 232, 131, 
   18332645112968276501, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.888404482036734*^9},
 CellLabel->
  "During evaluation of \
In[232]:=",ExpressionUUID->"04d3f729-8e25-4eda-90ae-45ab6d195006"],

Cell[BoxData[
 TemplateBox[{
  "InterpolatingFunction", "dmval", 
   "\"Input value \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"-\\\", \
\\\"49.99795918367347`\\\"}], \\\"}\\\"}]\\) lies outside the range of data \
in the interpolating function. Extrapolation will be used.\"", 2, 232, 132, 
   18332645112968276501, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8884044820451717`*^9},
 CellLabel->
  "During evaluation of \
In[232]:=",ExpressionUUID->"64227821-6b32-404b-85a9-fa19fa92d30c"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"InterpolatingFunction\\\
\", \\\"::\\\", \\\"dmval\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"", 2, 232, 133, 18332645112968276501, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8884044820539503`*^9},
 CellLabel->
  "During evaluation of \
In[232]:=",ExpressionUUID->"82896373-af4a-44d5-89a7-8e19c1d3bee6"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[0.75], 
      LineBox[CompressedData["
1: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
hfh61y40ZTz8SkF//yS4W/Hhz7dRSLXA9XW/9j9qDh6vlPLGF9+acb28nHeY
wfOhVT6arvED/r28tJYIJx3VdsmsOYHr88Hzk2br8fx9rWBZdG3F71dTPrgO
z+/A8/eSRvh8ua2SK8dLp6P+t0G/erAbbdp0VvHvqwjZJqGD+Hniu9ux8RG8
n6faGB3jsZXFzOz78Hoi2va8bOw33rd0RiA/9qhT4WNs2wqzJjrkgwR/OmOL
HT8mKGSwREPrHxzdPYQ/f0v34eO3FnC9ttvoHcQ2d4lKWsbnAfeJh46p+PoG
Y5Ll7uL64uKQ1WzE15+j/7hsF75/SCU+de/C48st2pakOU1D79nfjbZ+pyAl
MX7/bbg+Q1pYssvwfMQMHTgViM+Te/UX39/F88Vm83lsaIKG1PT+WB3G99ft
dez8gdhM1Y3mkpDfIR25zxR7Usim6Bee/wVH3axN2HEdCv6xn/F+uuFaYAGv
u9N2OOL1Mhx7HRKCrV8+nqaI93MO3+hv+HyP0ZC2Fcg7c5iTu4i/X670yXAX
5COFCZwXxdcncORCanM9BSXsuvyoE9tvf6jnT1wvQR8zUCkeT01uovcc3v+n
Xy61ZOLxUrkFHitjCxwUq8zD87HffZ+2J6632Sd6Rh/wfB0U2BH8s5qC/itr
vjs4j88z97K99tiWgjMr3Hg/eq/5TZ/F9SoU39YK+UU+D/f+fYkt6q9/4zg+
jynfkuJ9sRvfOySH4vXqTlL8dBL7thN7Zzpezxslyy/PYjvHblUqh7zZi+cU
wrAfjksU1kJ+lEQlRwV2Q5bD7wr8vBbxI7mODX//qQ//Tj7D9VJKP5J7CruO
adTgCt7v0164hLCvmts+08P1tfPUnJ89Hs9LQ5s93dgN+2e3DGGbuaTQIU8k
KLN5/gYef+1QvNwAtuSvV24qeL7suvylzfB5IV/Kt78Nu0ufqTMM20k+6dgt
PL+rrHvD87Gj74fuMcLz/+HehfD32DKyn0ZmsK9vu/aqGjuOasj3Aq/XtoYH
X9Oxhd3bcw9BfmqEiaYXduvNy6MseH3jKXqmm7Bpyqb/nsP5bTV2qxVfD7/I
ef5tuB64a/a3umHPum3ph3wJBv56plk8nlTeI6/24vrh4vTe7o3d82rBrRr7
ijvRMInnY6Na9GFlXG9W3iKEM3bU8o3eIGwX2/gjX/D8rZUsDG+EPKdfbONa
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
mtEghXz/xIdI8v2vdxaR/h836Dby
       "]]},
     Annotation[#, "Charting`Private`Tag$126182#1"]& ], 
    TagBox[
     {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[0.75], 
      LineBox[CompressedData["
1:eJwk2Xc81d8bAHDbtbIqq2REGSGVVPIcIytavtE2kuxIKMlIiYrKjuysIiMl
ZJTsyEoZZYVsyh75nXN/f/V6v+69n88Zz3me50jU/MqJS3Q0NDQbWGhoyL+/
nBKqPn+mQbReHYtra8xI8nNVNXH1G+0F4r0GO2qJxfSH5ogdRz7VEV+4WzdL
zBbqW0+cW0lP9fcJ2Sbi1vHkGeK5W5mtxEHGjNTfF3xWaCP21704T+zna/+N
uG6/FPX9ifn/fSeWaji2TLxpuY9q/ietq8S+jalUpwe40tPQUNC29ofU5yV8
Mmch3v/j3Vfiab96VmLNxQrq+4977WQnXpZ410Kc+NCXg3hfXHAzMWtc4Tri
VYuT1PH7v23jJNZ2o2kkFm75xkXc9S+kgZirqpib2LmJnzr/O+mePMSBtp8r
iZf/a+MlvnkrtIz4WAyift5vKFJKfED/AvX3R+oriok1E/Wpz9+1P+A9db3O
slPfHxxlU0Sd//UY6njtJqwLifvn19iIy/bcKyCe7NhFnW9xSuU74nX+BynU
9YjYTfWTfikm4iGDinxiGc+SFbKe2sp3qc8TdPb+Q6xE10F9X1dR8STxQ2t7
6vhM79ONE5uzKVPHb5bkMEKsWKf8gfhRA9Nv4tW0K+XEv9nqBojLn3dVENuf
Leonlue9Ro2vS3K/e4m3x2+nxtNTfYse6n4zLVD3MyLX5wexz7uUPmKW8MfU
z6/KaQ8QF/Yd7iM26M0bIo6btv5FzNM0OUyc/3FkkPjj6vwoMYNRwzBxq0n1
OHV9C7mo89nvpDFJHFAfNUX83sxiiti4xooav6d3ykwTL2S6U89D27YXVP+x
t6Yl67lZ/An1+61K/dT135p2gfo81dUs6v7Z3yumvu/ImXvriefLMv8/niPW
AsT+oruo453tUhEmVv373yDxKcFmMer+WfD2E8+3bdtG7H7NoZu4hUdVhlhW
6HInca0Srzxx6GM+6nn6zeOhSNzw9AE1vndpXtpD3KFUTo3XF7UNe4nfXS6h
7sfRlHf7iM95/FdCnc+57weIFZnmXhP3ep6lekPz51fEktqi+4kZs+vTqeeB
XkWZ+BqLUDJ1P76kUd9n9jMvnrgp4zJ1PPVy0c+I06KuyxHnL9VHEm992ilF
bOl9Oox446PIrdTf+zoHExvIN1PXJ9hI7DFxbNBDfuKlxUtBxJTMKup5irBX
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
rx75jf1OfDnpOK4XNHpLgoomtEgqy5N13yYK+mTi+DYMP09Pm+a/VAUK8t93
8wIrfp/C31fPTQ9RUHDrWuzDI7TIKeFggcQZnC92LAqKHqJFH+ay+F47UFA1
Y2R3M56fl9ne2Y+38f2wc2NeniwtWl3d5skRju+TWhWNPZtpkX+agJZeGgVl
KDmuuHHQIufwbM6dBRQ0s62qkeQnpZk/UTerKShhrm8p6DfeX2WbhoGvFCTu
fnibE87fuSr5cQq9FLTuRW+ND66/yjpljKIj+P5/l8/pXzrOz6Le3b5TFORz
0FB0WygN2hJ8eV5mhoKOCE9FqZLzkxX8Zxb7roZYpL8Vzl8VoWaVfygo74mz
lq4hDbr/+7rNw3F8nmyW+T6p0qBfO4v/oAEKSnqnK3ZAhgadE3JjH2qnIJHd
XuPj/DRIxbmq7mEdPr/p444CFHz/H1xV1S3E9+GPQ+Vj02swHdJRq5qC+6Me
UYtr39ZAVWC7bsQjCmqy/OIh9WENtrXcEbnnSkEl7atmFllrMLLZ8p3OWdz/
02uWOyauwWeZib1bVHF+E0/gCo5agySrl/4n8Pk/OinX/C9iDYSdj8wo4Hou
5lqw7xf+vLl6oxk7ri8Ze2g8Liatwd3y2bj97/F922HAKzhnDcTZsrjWRzGj
Xyfjejwq1sDh+aPuP264n18fJCbavQYumoMeikbMqMg6n/favzWQyYz6ILeH
GbE3bLB/xU2DeBrdr2hswPV6w5+KTkmcn+S1U+vmmNC3FJvkdLxeTX/+cxHt
YEKMWiJJC6dwfrCoVokpZUJeTdGaSS40iN8vPT8slQk9Se54dhPvT3Wyz98L
wUzoQlfqMQPc77jH0JTqeTMhtnTU34H7YzPrD9dTnZjQhwQr5m4cHyyvN0GZ
JRMa4LS4wyaKz8spzz1dJkyoEfKiKdq0yLw3p+zgeSbkdCUcudjToi95NTRi
+HN3Sur2oRBaFBmrJV12iQmZDb7QHCmgRca6zwV18PMTNgefo+3Gv38ardDr
g7//o5UllY4OlYdJm6RHMKGcT0pqR7bSISbTd/tf5zKh4SqR+osadEh/6EsR
fQsTWjWdCzlmQodkPBs2PVlgQgzqzqk33ehQi1pCLBLH9/PvulcNHtAhseux
D/pP4H49PPLorig6NBjdlL3nHjOycfS2SEqiQ05NG1w6S5lR9rOJTpFUOnTu
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
YE1nUxf6qzkUtKdtWcA4AxuV9XTM18+hfQ1bvsfoceB9+0c+XGSfR3cC+y8e
eMCBmye2sArpzqPqRtm6lh8cOCqsdo1v4DxymFA9cE6cE4e6Lxir/pxHfiln
zC0tOXFMqnB9qPoCGj9nVj55jxPL6no8aIhZQCaF2TuScznxGTnvBjGeRdQt
yic0+5MTu0e4i5+7uYgyhYImvec4sZsFzTpqfhE9WJtkusi9DN/ofrbR/voS
4uZKOmsiuAxzepvkOCwsIZ1Jt3cXiau9NDseYBq+q86VHs6zDJ8KPGjnS+Zb
fdo3j2mBE3NEbtn6uZCGFe/q/F3bRY5P31jnysKEk/KHfR8WkOu/vC+0HjPh
NVGr5pceceJ7c26lwteZcEGK9qn1DpxYJXEXT1gqE957PfTY6DZO7FKZnvmk
iwn3TjBitRY4sKNR3kwcLzNmzh51ZCngwIe3/THfuoMZT3X/jFO+yYHfhov8
mrJgxrgo8mS+NgfW29M6+PISM37xQqLhHo2DvM8ljm27y4z9TCY/ueeT/XVj
4qt7EcxYVNhwu7knA/9aHJiriGfG6w/VP2rAxP5domsSmfFk0qLyE1YGFueu
PFv6jBmn3fmmqVZOxwrTB3dJRjFj7h1/khTC6bj7SHxXQAgzlv3td7/lBB33
948LXvZkxvrG15YHb6XjogYOGUsHZpxr+/tAMCcdj4t/t07bR84fE7WR3sOO
HyaomdG2M+Pg8aPlK4vYsajLLvV8QWbM03rza1EiO67ctkrfcZoJ70Y314iR
fUSdveWBZyMTlug+xLfKnR2HewftdnzHhPW9zgf/d54dn2z4+erpPSasdkVF
LOgkO171Lvy3pwMTVmpqcK87xo4/l4RtddRnwsNLAbbIih3v3/4u4YMUE/Z7
JcD33JodX11pfb1giYbfZ1cV159ix5JMXPmFbTT837nX+fedyPf5uRLY8mg4
MnzyfcINdsw4Z55VEEXDFZZ7p2sD2fHlozUNCl40XOsjaNn0lB0fq6m3cz1J
w8lXln44ZbDjSLkTaZ8MabhPczHOopIdy42MPVVWpmG2lfQso9/smJPZ/+Mf
MRre8J9YKI2FjvWrCyJmOWn40No+yw0SdPxHvlF7ZGIJHcnvXn5Ti+y3zfaG
HS1LaLhxYFk22X+7sdVwY8ESaoxw33bbnY4VrV//+fZmCTXVC3n+F0XH684t
qQ7ELaE7liG7E/Po+EXZ439LEUsouChowb6Njr0V3ATYHy2h26yn9z6Yp+MZ
E/e8TrJ/fVh0NvspzMAOL2fbnGKWkGLj/r2MHQzs+0jbCacsobvD4uZ6Bxi4
ROSD/o6cJWQR9k5/zJGBrbTSaGKVS2j1rvN7v99mYF3tus+vu5YQH912U0UE
A/t/EXz+jKw3XR/7y1GvGbj+q6jlYW4a1i1OXbfuEwOfCO4L0yLj8ay3bq1J
NQN/07HuNd9Iw9O/X76f+sHAa0K0t7uS9bl3n5YnXy8DD3qpvzt+gIaPOc+f
CBtk4GYNr7d/7Wi4jL73rvsYA08Vi0Z0kPegUKfXS7UTDBybdF2LEQx5Eatl
ool9Z1liNsbT8O3ApP7JUQZeG3PVck0WDQ9tZ+Yd/8vASGIxPrGMhu1e9Xhl
9jDwxpsPbj0k9XGt/j2rXSsDCytOf8kbJs/vp8ZVCrUMLJRnEThGY8Lj55k0
1YoY+K11gTU3HxNetS585lMGGU+5htiBNUw4spz7xVQCAx/6F//0vCIT1nnt
6LYinIFNcl12uKsy4bVJwj+MbjHwjJn9KhZdJpwmfPpAuzMDq/uzSIwakb/3
baMtWTHw9Y0a7ZoHmfBoc3xCjyED33bjCuu2IM8v1mSrryoMfHlsirnXigmH
NyenNMkw8M/DLBG7bJjwQIOlss4KBs7w3Se28jgTbvc56akK+XuRkT8Pkb+r
XH4i8WuIjj3YmBNljjHhPTpWvCfa6fi12+zz+5ZM+LNVjNL3Kjoe6Y9dmWnG
hGVKlthPfyI+q2H2ci8T/nvZWUMyjY7NV14ZDzFgwixWKWxiiXQcmlje4w37
4/qdng6RdMzyu359tArZ/6IEGAIP6Fg5ju0a20Ym7PTmQJjcXTreeDY8p1ma
CfuPGQ7G36bjykM+JVuFmHDN3nW9dz3p+IfUJg4NHiasfnGtVNt1Or7aoKfF
RfZjHkv+raHX6Njm0mfewmka3iaWdDXuKh0/cNdUcP8LeYzuS8zk7++3sESa
ddKw95HEvwludPzOd7eoXRMNp/bL3LxO1pP8Tv97xeU0/ImFlu3iTcedG1mF
gwrIfN/52+x6h5zf8p1gFakX5U3ZYU6BdKx9Sin7yWsadjqQvn4PuR9pMe27
7M9p+NvOvtbhCDpuzj1yVzSahr/aCJTqxtOxKBI61P+Qhleks4RsfknHguGe
X66F0PDKb97rHpP35Z/yN4/UB9DwgpGexcl8Oo41LOyc96HhPQbydVdK6Zh5
ZK5q1puGRcP9LLLr6ZhvFctslQcNN4x8VVzeDnkzvqPXbtBw4fLBP9Z9dHxH
+nLZDFkPRi668g/G6HhN5JPje4j/lNxZd5+s/+n6caMzxJWK5GcXO3mer7eh
GV8n++O95dvDlzPwgH1TnZA7DTdVJYYqCjFwDdd23mxPGh7/zypWVoqBRbRN
F0Vu0TAjOVz3zHoG9vz6s0jJl4Ztls6K9G5h4N3BpQ8H7tIw8gy4EUT2k227
nb8q36fhL3YfsvdrMfCBTSbm02Q8NvuVzCvoMLD92aAUSbLfepiPJPLvYuAd
xQyPKLJe13xgbeYg9Z6gv0zXLJmGzdgRA/5/6dAmhr1yKnlej7GKCxgz8N+X
M9ek3tPwR5tXZ7YT9xeNBXLnk/W+r3LNBfL5WMeHByBPIUXGtKyeHC/niesl
yEN7+UNT3d6AHC93c95IHQ0HOYQd0oL/v2fMqb7sGw2LtdvE22kzcLt2SPDX
dhoe4G/SHtdgYKe+w3OC3TScufeyyzRZfzSZQe+RPhoWVLxv46tE9pM+9lW7
Bmn49PB8Q5YC2c/23b6ycpSGHS5y90etZeA7+UH3907QsICV5kcTCQbmrhbl
nZ6iYVbFQe2fZLxbLFfV0WfI+XjCGm1XMvDvtW8svGdp2MCvYucIFwPLnB4w
PDVHxkvJWv0/Mn/R3/ozMonj7B2CHMj6Du80iHIjFszvuQ55B3FHAxSzyPft
8ky2Nk3QsVH6Wk1XcvzT308tBgzT8csGuk8OWT9t0hljz/rpWODWUY6wSRr2
2Sa5bGMvHTtGXD23bJzUyz8r9k2/6Dg4oHSrwgiZP8FOx9ek/jReTWFmcr9V
6jg49QcdN1zn/f34D/z/UMtA9W90/HZJJnqph9SrleARk2Y6rjb51Yd+0TDN
L7jtTyMdP9HZvf00GV/2UtffXMQFsvLx3t/J7/W6Hvv0BjrmMLzD+YSs15Zu
fLKVWEhx9tlHMl+ac2aqnvD9Lfv0pyH/yE/n1sMmOn6zu7fOhKznjJ6r14Rb
yPOORymv6isNu17sL2P+Tscrp8+YekJ+x+dOXv1WOn5oNbXLnqz3ct1qt+/k
fgb2H9kQ8pGG9bg3BGV0kvV3a7J4Ppfcj0OZRwV5X6691lL8DvIJLF00VpH1
trz8+UAGPE+W5kK8B+j4cI3dIiOTPP9lB3ZxkPE9nrbi3at0Go6NcjKMIevx
1xXR8Wdp5H1A68U79Sk6Fvlm4TH0job/KrWx187Q8cVuySv+xLsjXIUOLdCx
3Tn2WsgjEFPd51ZA5ndqapA1hZjptb0QJ3mfE7sS5bWBHO9lUFubHJ2B1aKq
0CixR/HTTSs5GVhp+bIz0+T8O1MXQr+Q+rl9Ku/LDnJ9Sd9bJFTJeh+63Hzj
Dbn+oiuz68/wMXClxXyjCrm/0ZOK25VJ/R3DU8zdOWR/PbM95cMqBjZsvxfx
+gMNZzcz0lkEGLhxlzRHKBkv9j+HLtMFye/HWts3fp/IehuTD/9KvCy88m/g
ZzL+ap13dVczMH/01PrHZPxP9wfaeRLnXr81klhMw7InVL5fI/ZSyvqbVkLD
1e4BqtuJHyWsWMgiz2ezn+KmWeR4xT5HjN5AHtvgKx8aseXhSLVwMv+/hapD
+cn1PGK+8/hUDQ23irx5P0uu16nQ44IoqRc3eRXHdHI/qZtGj2bW0/DsUWa/
XeT5KN/9SGFzIw0bt4WzZ/My8P4bXqa+pN541mNRHjI+opKjHtnNNFxv4M5t
xM3A43UVbF9ayPuB86zC1WUMrPXCJ+AF2S82MePy/ziI2+N32JL6xc+2yLwl
83HhctCzCeJYU+/DxWwMHKhvVn30B6mXG/jYTxYGXspK3RRJXKbUNrLERN6X
DLbdSyN2VN//nwKZ799ewQrPiPfw77hxBvKGBI/4OhEj/8IHOWQ/z60dvStI
fM5R5rD0HB3TO3T3Q/5IsmkbVyKpp+uGZnvZiTkiX9kb/KNjU73s1fvJ9YZ+
2fqbY5r8HmzJ8LlN7md+vOHi4CQd8xzg9o0h96tkq5w+QfaLprNmSklkPFp3
3ymRIM6Xa3oVS8Yr9P74jQvjdLzeeWAD5Llsp9UpQJ7L52i1X+fJ+NK0f9T6
EkctVtEMyfinOb/l3kOccSzjhWQtDa8/vGO1MvE6097+f9U0HHw7p0+LuLr2
UHodmc8TL4K4zxFvY5xvTa2EfiSjvbnEdTiGGfImubh3XJEn57eLf/UygKz3
W9q/otOI01C/kD+pF7fZCxPm5Hot2hMdH5aS93fnvomV5P7uC0W6ppP6yrFf
/NNNPPxzc0032R/21yfRS8h6zH5sN7OO2O7x2ws5ZHzMxaTnvUl9+hjvVssm
4yeSf6lyhDxPIgNunysg4ztybL/oZeI3XOUiNWS/fdi9RXMF8Y+I7pO/yHyY
mMy7fimC9f7RcZLM19dKpeRgcJyGGzuZT7RYFORMzCtuNwZ5cy6C3FmniSe7
igxWk/k3yGQ67kr82OHsjlWkPu4ll7wNh8/fngtlZWbgrLbLsWXEkfWyZr+J
g25OD/GR8z9R16nOIfV10Xa3kQPxsWt91u5kv/DND9eqI+ayH8pQJPVYoBW8
0YDcn5C2RGEZce9o51gjce22NJFj5Pky93mG7kzGo5AWOdQCeUtK8RtXkfHL
uz3zDvKfathTxT4RB7aYKd0irjM3vOtCxvuWplnUO+KKZ1c2rSXzYSGZtRPy
nkRLkxt/EJcf6emCPCist3AwhMxfWcWq02+IpYtaI7XJ/OqX9Y55EX+7aVIE
ebdevU0TmsRlR9aMhELepXXy0G9yPWExD29tIvXyMKPwuRc4b36mgPjuzw+T
HMRi3HjRgNRX+OPAeh9yf48/tl0tJI75T2z/FBkPgWdZdpvJfiFp/N7fitjm
nqdAMLGqlUd0Hhm/At4tY+3E9a0eaauJbW6JRKwh9cumeKLXmYz3lp18Q6bE
RmwtOiVkfg7L/uq8QMw9dq1WgjjVZTYd8r6al76fvwH5sh+EPkIe2P1nJgOQ
D5yP/LwgL2xDNH0C8sKSUgbeQJ4Y16Fw9jRSH4Lj2jyQNzZqcTME8sYuH3gX
DHlkWdI5Oa/J80FNXmk75JWlNCeEaxKH7bokCnlmd9ZeZvpG6q1u5VpXXeJm
e744b+LDTX2uw+T+o5xOM3YQx7V52IURB1wYvjZP6tV6oid0K7HwDWXpauK1
ASf0a8l4Ju6pZXpLrKimVnqW2Prl5VbIaxsqsTnOVgX/v//CGchr60qY031K
5oej6Z1kAvG/Es04NeL7H6zO5hIfYZ55CPmAo9wDAW3EyQptcm7EOZrhMZyQ
Hzdgs08C8jrjoj5rz0Pew+yfclIfLGVyPXD9RsW+2e6QB8jqO14KeW0XnM9v
J87PPF6+mtz/ske3Q6ZIfR0J0NE6Rxwruzb6I/HBy99Eiolbh5r77hG3ek1v
loLxPL3p9WlilRe/jbyIZVSE+XcTD5dm7vxJHC8lKaJM/If7v3FNMj+3dU0y
ZIldXmfrPiEuVdmVBnl+irM9myGfPed4dI008b7/4j8bk/ke8MY5kOcXzFHB
G0t8zHx+HvL8ziapmQ0TJzi5r7Ekvn+Rt06F1Iuw+f1QyPOj3drff41YLdAr
O5q45XGsSAaxRtLh0RJi7/SFkT7io2k3/aaJK9KUJflJPX7z4SuXJ+NRe37p
nCrxxguJS8eIowad3psRi7GZnH1YDvmUM0tniPt7WA9UE1+fOWAC+YpPTco2
sJHxr8z5UQj5i05D+8XViVuUd8ZAPuN0tmqkM7EOdpKC+q/KdpeEfMcdrLQY
yHd8YMGlAPOrd+qFC+Q/ikUL63FAfueiFw3yIR1HA5l2EM/+UCqA6+3qk5+x
JXatE9kwTu5nuFehKZD4kXFbQQWxzKTDnnfES3QrrnjiclWXFQ3EYWFGYZeJ
mz5unh2FPNCDm37vItZJlGhaRurR987pUEHi1gOH70gS50lJS0M+o13TpgUl
4nsxFVLpxKmTRZswcZvckBDk2R5/tEdmN/GWYssAU+JPsSl/IZ+Ty2V8aA3x
nYjb0ZDfaSl77BPka796UWWzh3jf7n1nComHHzVb6xLfKnxj8oj47sR8pSqx
mCC92ol4o5ZN/wbiEh01FUNiE37alDCxSl1ZjRzxWv2iHXTic7ZxLQxiEdXf
NLi/mpMl1wchz/TLo6gW4q+8Rd2NkIeqlnviI/HjtE0KnyH/MeJkAuS71OX+
OAZ5hCHzirk+xLoPNHyfE9MFN8yehjw/DZ6oaOKG9JrM3cTMpk73IF/1RaiT
3gZiUcbWXWCvQ0xTXMRa+v1xkM86zi7BD3m+hQdbL0F+q1JAyBD0N/heLB36
mti9Kf9LBrFrNsrLJT61qfAb5PVaqq55Xw75q4jP3pvYlrdKux2uR7o67gzU
yw9TvnHi2fyHWZDPO13y8AcHuf/4+xG1iHhPjP5BKeJbwmLLNxL/7FjYoAH5
tSPqAeKQH2q1YaU58am/4xZ8xKU1o9kXIG89gduPnTg/y6wO8p/9GweFF0m9
R25yWJ4C+YyXbfj/EVd1YlnIY34wt/z8BLFXBkcV5C/vFl0jBHm8jnapXyDv
3rB9hh3+nsZ4XCYIecY0uvg08e3zZ55thjxWhYWdkPfbcKFQ1ACe33+3mEMe
MPuLDUyQB5waW7gV8oJLE3evv0Dc/ONbugDkWb9PvHAb+hMosb2Wgnzy9f3Z
YcTxrpljm4gnHx8biCN2Xz19UIv4zI+R8deQ96/nlGAM+e7ezsXviTfQktOs
YHx3vrD5BP0S9q3bex6scq/gC+QPv7Db5UmcHBcxWEJseLrsHOR7m8mbT0B+
cu2csVYscfG/0hH4+w+b012Qf/40pXQRvv/8Pe92yE8/7D+1A36PcNs58EEe
d3vIvw85xH5Xwk0hv/2317MXkI/YHKFXB/WSoMYnDvnPEt1y1xeIy87k6EQT
K+45tZmT1BfPggkOJV5oONrCT+zX5qDuQ2w0vee4BORVi/BYXyG2Etf4APmE
zwpcG+2JG7eZfYe8bYHXMyWQl8tz5E8q7C+vjRZsDSFvVagYaRGf/nq6Wo24
vkHYeyfkabeOK2+A/ffHO1c94qcazDkixHq6nyQgX1u+od+Hi5jtmncQ2Jvf
NQfmP5L/ZiHkbf8RU3ODfgWcnUXVkLetwt7RBf0FnmXGfoY87wg7zhWQl+6h
+uol5H2bMa9YU0pcePh4LFzfZlVRSchv/paekqkE+aiynvLpxBeOJTJD/vbM
u027oT7fsa6KkiFuNCwOjIf3BanpaFHI400vnYN89B3t5yRXEauutoiCfPQ4
VnktyOO+k2LjCvnor5O7eJiJ06QGPCAfXWTu4Kt/ZPxv/47JgfXg2/xZCebn
q98tSfCWQ6ZZkMefVmmSBObvZD0A+eo32k7vgu8n+qWJQt6+4aL+UCjxxSFe
eeiPcfc3R9BDyEMWfxoI/S2CZQJXwPNxxctVltDv4Yx37FnIp65KN4yFetou
1nfzOeRbn2x2Sa6A9+mGnZB/+4x927d42D+iPoTBeOxsCuqMgnpZRzsO+elS
QXlhj4hj140FFxGHhp+ZfUAsE/ScA/KV5Rs/C0A9G5x3y4Txj0pMHIQ8+1CP
Hx6QZ39uvM0L8u6n1bL2QP+Iaq7OKsgPr/1+ig77ufHx1kb496GtXx0jIX+7
9qBcKFji/ukpyFuvH1dfAG/7asgC/RAiL5nw+hN/+meaCvnrmSOShXD8oFeb
RmB/EM9Ey4KIc6uj30H/gycPaO2Q75/3X8yADPF10z+b4PoNpuyCIf8/OyRx
/CFxSlLCQ+gPcPDFaxHoH1AjVjqrDPnmTHYRkK/P1rkzQ4W4Zk/o8WfEzrIC
n6G+JyaTTyRB/njkIUnoTyA6rhAMeft/Mh3qtYiPLvi0pMH8XGpogX4GSkl2
m2F+NCantkK/g1Nzf+eh30blw9YO+DuDNTYb+mmIcKFG+L4AR4AZzHeITZcw
HJ/e2lcA+d5OzOIf4fyzgntGoT/L9uqkChVqP1Fvgv4YpWMGB6H/wdDIrZPt
kP+tOmoL+2WZqvKDXzA/iRpc8Hu3sbXSAvL7b6BfVnKw/j0430I/DCHvj2ek
iOfv54b8JR6JY9MWI/57sOsf5Ik7a6ZPwHiHbAvsgX4UV+q+hEM/lYK7DQeh
X4VV5spt0B+hT2KfAfSzGGMa7oT+J3eENT6DZf20UqDfiXvw3yLwr+jep7De
1Xu6D4LDplZVQj24Pgi8CsfDrL81oZ8G/13L7dBfwKzmxALsB6kd+uGwnrYt
ZxeAfhwJmVLR8Ptl/SJTMPRXmFXZYAn9MOL/eZyHfh6CZ17UQT+MjIboHHje
SPvf5YP7l8q/dQX6gbw5oiEJ/ULO6zg/h/qNMpXmgn4iPe4XDaCfSMvNj62w
Ptd2bz0GvyfucOyPgvEWeuvQA3nDK/pbzKFfifdw6HfwEZd9ArB+Gyrl1ODz
d+8e+wXz95bmvAR+TjtP9SuUvvxEGs63Q+9TEfRLUX+a8BT6pZxUvj0A/VRG
txxzhP1uou88gvrw+0/fG/qVrFm5phjW/7fN+o1wfxXqm32gn8NtqZ3WcP9O
Y7HekO+/+U8N/wDkW9sd/wj9bBTm8PAg/P599E8T+sHguN5OWI/PH3cwQ32u
3sTdPU6cdYSLB/rJRBw0+Avv2y9Zl1lDvw6u9JxR6Gei724zCf0kog/eG4B+
RvYntWvAVwYla6F/kfko9yA4bY/wE5hvpoInBvB9BQePndD/RjOz7CdYWtv+
E9SHrdC/13C+R5Nqy6Ef0YaPKqlwPd/c7NfD8+HhtGcnXO+nVQ7c0A9lufeE
GvQTWTTckw79eZQUpd7D/UZwCotBP5+3w3P7YTxuSuzSh/qUVrjFBuN17ITh
RuifMn1Xpwyer9qeRQ3gQOEDT2B8WR90qkF/gCjx6Asw/gUCf6h+Q9nKtobQ
H2P+ltYe8O1N8WJUfzG/hBn4vnmV8G/od/V2JsMZzDjhHwv9URKF2Kh+R8VR
IQbU+r0m/xWu70PSg4/QLwlF/fkM+xlr8T4xeL6bDkpEwf0YN6cdh/rZPDNv
Afeb6HPOH9a78vz+BRgP9ZbJUOjXVJUefhf6Dx27m38D6k/T6DIHjF+4m5Ye
9HuqvBh3Hfo9TfU5DYB5Gzb3Qn+zslX6TvD7Qc5XzxjmQ7uttAasVKOdAf1o
1vKy8kJ963T4SMH8fc/QVAQLqNVS/R9TI5PkwWwf7URgvr98ecUOrhpPewXr
2Xfd2y9wPMf9aw9AfSyYC9mDe5wSeSCP/+vRmWG4HpdDO39BPXFdS7am+lOZ
c9bA+p8aupMN99NRtOI79NsqXVe9BPerJSLADGY1ZNsGNsQ1BlCfBavHjsD4
DKz5+Rr6H/XbWl2B8asI6aD6i3GNVfvD+MaWSv6A/eSnbn84vE+jUuFYsPoT
l2iYD8Z7iTtgPyvZ5zBf3K7+/mBF/uNvoB/ZF49TyeDJ05c/wPy2cgv9Bt+X
/VoN6/nWn1FNOJ9n9fMBqAdavs4rcFdaLx840EBdGa7X1VpVF+pH6rxvJfgN
k/ltWP8+IeXX4P7iWtrrod4Mvudtg/EwvtqmDA7UFFgCbz2gmgD92tZ0qdbD
+L1c830d2KnZ/w30h2LiuZMP9ftJ/P59GO/phItnwI/lWK7AfMS6ZKwFS5bY
WsF8uS4/Ng39tDpfbN8J/YkmnK1+gN3OGEhT/ew7ZevAOacTFsFXi7mpv99p
1quj+sPvcpwET/2SiYS8/TVrvCTg+GpdMZZQP64/ZY6A27NOckF9jRrLPAOv
8eV/C7br2DULTlU9rwv9dOr36x6F+wmXaithpertbQl4RWeCBtSr0ANJLRiP
T3MT0eCKpfW54IRdtGHwy2gtLRjP/QKKilDvS6tqv4Adi4stwGafTphS71O6
b6l+geqLF1vBu9wr3MHaPbH2MF/liiWXwMZGUePgiu/frcDLgpeuU/2kuf7b
Dl5gPkH1M5YSD6b6Fer9CvQEW08nfYDrSdr+4R84Rf+pI1hXhcsV6kkzyZMD
PCH6oge8taw1Au63ovKyEdTfeImhFHiEx/QF2COmOxbGSyL3/D/wBZdzVD/G
7OgFdahfMeunITDe4W92XgD7cGxlAQ9Ff34CVuP66QrzI4cj3oPL/5n9hvnT
44ovARs/30v1G+bDWeVgFfebjVQ/apGQz+AjXWupfr4/38q8Bifv3f8N6sV+
8e898F36CTvwK6bjp8AnTNPmob4eR+orgW3kNaLA7ohtGq4/2UrUAOzsEJAO
3nqKfxHqU0cxj+qneUh7NB/c7R4iBvaN3Ev19xTnMS2H8eqyDbMHj71bcxnM
dTTVBCyqwL8GLGlXhsEWqvpfqX7ctiwIvOFEuhPVT/dFuQH47L39QlS/2unl
VuBZA9kvVD/2QMvr4ELZLa7g3xPb4sGemmfkwINPV1D9FTdbqf2E+rA1ecQF
9/Mu1SgS7OD2dQ+4e8sxa7CpYkEI+EWDgjz4pPPz7+D7G2mzUH+7Q86sg/Hj
2FVcC170+HYVjGub3oKNe4fKwMZf/f8DL92NE6P6/2aL3wG/tR9zAjvbr7gB
ThxlK6D2536la+Cg3ePLYX7x+vPu4HMVpUfATMve+oHP3I6Ip/pF8xyPADvm
dvWCeVZ0pVKf3ykvC/Xz71JNFTirP98KLBFZOAKO8JkPBusHbBCE+ztleCcX
PDegpg1mlrrSAb5y2+I8+P3y24tgDb2RKPChFmt+qFetn7bVVD/Y8nYZsL8j
C9Uv8LaPpyK40EZ+GzhF5PQmsEaMkj1YzjZxPdWvl+4RQfXX1ju8Bqwy87gc
3KQtwwNeJrxsDtxX9d80nN+9UJ/qzy6pzNsKjjP5vB/snN5PXX8M18w18MZF
///AJRW1UeC/falOYIEdAh/By8eX6YEHU1y+gzNU1q4Gp/oEj4EXau/9gfFc
G17PBvX5Qykjh+q3fHlsFbjtnfldqn966TxVv/svsVPrUbeocy3YbpeJIrjk
aYg8GE/lLsH8OqksyoFvKnyrBzedfCAFHhccTgKrOkZS/Z6Dyg5R/bo9/HdS
/Z2ta25Ygf3/vV6A67uSUakO1hNeMUD1dzfJoOpracKoCWwZ6cIC1q7OyafG
o4qV6m/NmXQkERzXdf472PLmpiBweusbqt/2lXEPF6ofdvDnT+DTLleo/s75
gfezwU5MalQ/eic34UxwUHyxKPjHYSvKn83FqP2VaZ1lDtj6e2sXzN9634QC
8PjFzBJwjP9X6nyv9JNfg3VWf2qhjrf/fTh4lXJwHzhPddgd3G8jPgfeJ0uj
6mf0ntVyuD8XhTUHwR/y5mXA4nuNdoL3DM5R42Me5Ev1i44WO0Lth2K/a2TA
mSbC58HlAdpClOV8qX7KFyz/Uf3V1QeL48DrHSYZ4Anebx/A49k7WMGdoXlN
4Krdn6l+qcwXXUfAUu9uUbYoreSA+TdW2MYCDuz4Lgnm7atgB/vyX6f6wTv2
GFL94I3sXxuDj8u8WQn+3uJ6HPzIf5rq5y7wrOIi1d/e6SW1n3lk7bsNFon0
Uwbbbiij+s/a8ARicPHStqfgxOJME3Di1vAksGD4P6o/b4x4bypYUjXpHDU/
toLvwYeFI6nxLrGX+QD+sKM2CHx1E/dH6n7CDKKp8cmqzQO33mml5m/B+w7V
/zRbfuIjuKjFI4vqX7zDswqc9V8hdT6ddPc2cOPHg8ng0SfDVP/gNSZKsWDl
tvgZMMp48hC84iRih3ryfctOrbdkuU984IOdlzzAs3JrqfqL3/XHGfxSyFkW
/N/eUyfAbjsuKYLldC8dAK8TktoK1vA8ogtOy71M1XMDbfU2sJjERU3waEmy
LFjJYRqBjSJUBan1nmCjTT2PHLZR8zv++i3l1Ymv52D+F+/8pvrRf96bMAS+
rshGfT/ipNAvsKaToAY47IM4VT9fFg7vADOyOaj+755uNcpgnV9dn8AOPe4b
Ke94lQX21TpO7X+cuafegM2QpyS4dsXyF+DdJ+WEqX7ZEl9iwfGCl1dQ32+9
Hwk+ZXGWE3xE79IjcJA8nZk6/1GncLCo325q/A0kvB6A3c4l/AY3RKaEgmPS
TzeB8w58oD7/QHO4EtzzLIc63qeZZ9Tz2Hr8KXW+dsWveWCmrq3U9WgLWVL9
3oVeXXoO7s+1egN+vu8E1S/5G3/dC3BSzew7sG14cRy4K1AiB8xVZBUF3sUU
TD0v+QcePQI/jtEppfZLzqth1Ppx0KJ+3xpIzVH9xzltPL+BEyRk74FVBzo6
qfXbNkv1m5cdkOmnxs/xRgB1/AuGY2CBiiR/cJTXvlnw1oWblNcJqDHD/O99
9o8y5982qh6k9vyjvs+8yMMH7vztHQiOU66k6ifQLZw6/9/A1eJgaRbl++B2
jlFpqv97kDl1/bNlB+XBrsea/gMfuSy3EfzGNuYJON/dWgncHpnxlHqeds5T
9cvESXYK4vsxS9T+IpxSQI0n7cNpdfD2lUmvwIJs2zXBI2NBWeA317gRePMF
nwKwp4W/Frhtg18xuHLsJPX5G28uUM9n41V51PG2tMvXgG8uxqtSz8esVw3g
c6lCKuAOjcUWMJei+FZwsaMItf7dXVI3g7edGeug+sWPDCuAc6Kdu8HPUibX
gQ9wP6TqTyPuswyYlnGiH+zdcEgCXBje9Bd8Yec7Eep9ye7vEHV9D8cEwLs/
fxwBD5ysoeZDQEx0DHz6wDsuan+8zDoOLjj+iE7tL/evUr5k7EPNb5DQRsoX
dJfNwPyrBR4apeb3UCy130e1NQ5T37ev+wtey8pMnZ/F4eAfan13jVP72yUj
9V6wVVHKH3Dabt8u8HCCPHV/H4/voOrRze8cdf8Pw0x+gjt6b3SCD0qUtYFL
Dt5oB1+Lf9kKNnpmTY3vi0uJP6j9wFi8jlqvexD1d80PbNTvXeMbQtT3Y+s4
K8Bb7ui2g2+FKJZS833mE3W+X5PnqPnesTaIup5mv+pC6nmh+Jy63ljj01R9
rN030gN+lL8jn6rX5af7wDntOtR6F3bgHABzpPjlgv2tvw+CJWyX5YBvsHyh
xs/IrvY9mOd52jh4S/Z3qh4TlJ9PUftfYAC1X6REylPzkeI4Sn3+w4fEZdR+
bMhMHe/PvTBusLiLCnW+uAED6v15riPkA/X+WFfES9X7Yx7q+ZSty1hBrY9I
K+p+rn78tRKs2ltH/XufQ1DVKnCvnj31vsI7Xkb5Bf8/qv69lw1Qn7/Ol0zt
f1cDlSjzmBpT413yaTd1/EyZTmp9hDlvoerv03ULan72P5mmri+vPZXqt6xw
LpaHen4Z91PrR6p3I3U/wSXM1H6rxB5D3W+k1wzlIZU5ar+59eUiNf+aQrHs
4C/TB76BXf2UWcC5FZcoj44bLsB4vtKpaKbqM8bjH7U/Wl+njqdVmk6Ntwdb
O3V+nxMWk+DzDAHq+g5YX5gA8y1Xq6XW8wcWyntOnaDuX/XRTcoxZn+oekq9
H0Qd7/x5N2r8hmMWp8Ft2wy/UvWekkytpyuFJ6h6CzjvQj0/k9aWUM8P4yE9
6nqHY50oBwx/pcH9vOXaQH0+vvs9dX+9x99Qx1Nh/8IGlj+aRZ1fRKySGg+h
pb/UfGlYFVI+z02j3kf+bS6jPv/XNoGaL20PSVbqfSb7NTVfZ+YFqXoTjyul
HGhkQv17iofjDPX9I/9U5qnnfZQ/tZ7uzJ2mbC9WVAa24P//5xXvnaZ8PP4+
df3mFvrU9dz8yk4dX6Uiifr+n2ubKX//VkON56sJxET1s1WSp/5+5ZQN9ftB
aOMXymc1WKi/v6Xvpj6fum4ZdXyJ9d+ov/NZZFOfF5aNoKxyroeyz8P/f199
+SLl/wHgu5D2
       "]]},
     Annotation[#, "Charting`Private`Tag$126182#2"]& ], 
    TagBox[
     {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[0.75], 
      LineBox[CompressedData["
1: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
bVhDfpBnz8W1kCMTk1+ST+/5lEXIOr0D5Ou7UbmE/EljS3VLkZfcPquI3Hrq
WC756c6KUP8aWyvJX3e5rFYS+X0DP/ntXPbNJv/d8sqd15F5Xy7gRxb+NJyA
HNT1jUX74fysePJPZuwk3xYnPpR8fFZbE8l3mf4zm9bHo3oh8jtOj/9L37dq
DP3nyxVRJN8eV9V88pWeWmZD9/tjok7+xv3lJum0XidKHyDXhHy+RX6robfk
GzwTuph8gwOzT5KP8FGFIvkIj5aXXUMuep5D/qPX026Tn1F4+dka5Nk/18Ui
Ow1fbkTe5HL/EvnDJt63Uv+21pCPkX/DZvJ1HjkcQ/V7WauVfJyr4y3Jvzhc
J0D+24orT4l/NMwnn6vCvWn0/Zm268m3Kl/wlXyMUgs55ONz4tUn/2OLogqt
73eRHHq/cVhaQP7My47WtL8lOxeQP/KSFz/5GLNSVRYifxlZSv3Taeajertv
l5SKbL94Ofn8JHsXZSK3bXpK/krxB33k2ymyzSK/Zda9JvJlsUQ+kv+ytevj
I9o/k7zJjym10I/8jPsGaulz5Vul5N/si55L/k0lAyPyc+p7T9VGLir4937u
LXOK9qfL7UXkS23QzVBH3q128Q1ypNxB8mPqpcqR7+9hUy/1b8JwJ/lS9W2F
yG/0J2A71Y+E1cAc5MmZfLS+X11+QP9eORZl0YvMe9+RxrPOUJ18gukXe8iX
efROPvlMi5c5kN922pwe8p3ONm6g+XHr0CM/avQrSW7kiw2KxMJe3eRPLX4Q
Rb5U62Fuej4vqn9Af5/raUP+Rd8D0XR9/5h3A8hLxfTo/rLCj2i9emckU/sS
61vIVzt7ST21f/yVEfkcLQrzyZ+qo/SLfLUSE/s7ab+7NkS+2ldB4jQeFokm
5I8N2neNxkvj9VfyzUq8lKDn5T2LbnqexKf60n5Y9UuXeFPTOK2361FvyFcr
pn+W5su06h593trRRfvpxbZwut5Ff2ua37f9d2h/sTj8mPzKxlozqD3P7bfR
81gvKofWw48ZCrRe7VadIH/tgzwRqpcY92Dq35QliuTrHXt9n/r/ZZE77ec/
zgnS+PzJaKX1vXHYh3y2jyefIB/wKGuQ/KUr7JzJ/9WcdZTG+0D4QfIJDw1L
kU/YU6yG/I+ruZX/+bWlV9DnD1Z+Jv9hWPsk+nv5g8X0PH0z3kk8Y8VO8qNl
effR/S7f/0Z+4186kuQfTq6zIv9xe6MztdfF3p/qZ619YQmyUao/+XHtrsiR
b3ZZvxWt777YKOr/Sq0eYvX0teQzdVH1Iv+ySWQt+YXD1xTT9e6X65Lf1C3x
Ft3vs2UE+YYHDP2E6fmo/JT8lwuWK1H7bpd30frqDHxI9Zvg007z+2ybNvXP
9cwj8kuvSs+i/rMm7ST/tOcGcXq+LG3+Q3wqdD/5qBckvqH1mT3CkD90/4ps
+vzFHC6q/+n/BdL1+lMnqP43+f2k+x9M30Xjn9StR+1j/3Igf/Z46Rbqj3Bm
A73PcNx9qb6s01Tp8zk7ftB4lPfp0/WmvDpJ9WXdUUb+Wo0lLuRzrHx7iO7v
uCSS6m3HTQvaX2+ECBMbCCmSX1yTPU4+0OaGc+Sb5sn8S58PxBjzkD9pXg1d
f7XkT+ov/+lf5H8OVDxC/tw3AjHUPj9Ba7q+0sdAeh7tmjmDfMl+itL0eVRF
Jd1PddiNPndMekH1Nmi2gT7f1Gf3zwdfw038bOtdGs8lPP/87ZuMG4jb2i8S
W67oIG4qLvvnc1f953tPtawi7g/hpevNT/rnh9dJ5yM+7FhLbGs6iTh54J9v
/lTlP9+8idA/H71A0j9mH/v3+eqef/56rin/uNTiH/8Ps/S/Yg==
       "]]},
     Annotation[#, "Charting`Private`Tag$126182#3"]& ], 
    TagBox[
     {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[0.75], 
      LineBox[CompressedData["
1:eJwk2nk4VVsbAPBzDs45hgyFKERRIqmEFK2lTJkSMkVEGlA0mMdkqpBCCoVE
g0jdRIbIXKbMkgxlHjLP07fW/u4/9/k9++y9117rXe/7LveKWDvq21JIJNJv
GomE/11fU43+IcEoNgQSHY7W/9+K1//vL9P/905+MuE3Q/+348X/W8j0/7YO
///v9b5UEvYknk6HrcylhB+VMBKuC6sgrBe3ur6+ToNOW3MJl7f+Iswr9JQw
x4sMwn3ew4TbJgsIc5vtqsFWSj9BPE+2wpS4/nPzHOEHt0IIL+6n///32huI
308uNJPx9aRHj4jrolVvV/D14y+L/2+ZJSZ83fJcyXdsmc0WVOyJ+JZKYvwK
jcR1d33ZCuxr/UaM2L3vZcqxpenLxPOFb3IR1oFk4v1JDFOEzy9lLGMr8X0j
7v+rsHEJ2zevm3h+VOH9BezwmH3E+28EHZvHVtb4VIXNGCE1h01m4a3DThxb
n8G+/vJOA7aKqcksNqvO7ibsHs+dxO/31SU3Y39RsyCe5wPaW7CT/OaJ97Er
VbdiS/LPEuMRYXvWhr1XoYkYv2pNDnFd1SGA+H4v82ji/kBXKzoxP15LxPtC
EnazYm9VYCLsv8uZDftr6xwxvkOVbzZg/zGpq8d+ees7O7ZvfvgP7AaDJg5s
pvIrxPcbpTVuxGbI7SjBvuDXStjYJ68I25XxARe2pO3vAuzgn9eJ+93tEvKx
3QN4iOdbufjnEfGzIYAYT09IUC52ivMXFuyY3W8/E+srX0Z8T0O/eg523u1b
xPdvtT5P/F7hUBYx36GfA4jnFQ6Sp7Cj+v4Q7+tpODWOHXDf/Qt2//H8UWK+
H6gS4z28qDuMfWtErRj71xTzIHbYU+9S7Kp9Y33YMbf6iHhJ3LP2F1vghf03
Ip4HT//B3pSxgYhXS6/5bmzvhKpa7Mb+P13YZm4pxPyeFucjbHDzDrEeNblJ
ndheRofbifdb1BMedqruwi4y8CKeF3jn1h/spe9dPdgggKkPm682kRhPO/X0
ALb3sUJivKe5nIawd4sfIb4nM9loBHurL/cI9v1i2hh2/W3Nf9hl6Zf/YVfs
/TaJvYt8bZyY7+RgIn6vdDtOEPE5UrKKzWa5Rlzn6Bom9uOXmd2EsyNjiXiz
mBsinl8prMeJPWxzdBT7eBArDzY1YNcwtjZfFT924cO3xPgfMdgIEfmq5Ecv
tkNf4XbszzxRPcR8FfTsxF66M/cb+3NopQS23+31n9hc5Zf2YputVRH7iyQY
vR97ZeQsMf//5jUOYl/WziHWq90oQA5brm0Psd9LSVKHsJVfBRLxzTBvrkCM
73g3ET+7wtcJm9QoEvE3ns59GJtVNS4L29wonrje9mY5kxh/8CPieQonbN5i
jzVS5LF3zVJeYVO0fxPjOXq3P5m4viR6gNh/dPZE7Izun8T3DDm6x2OrrS4T
3+tdJP4E+z+9e8R80F8eeETsp2PRItgDnnmR2OF60gLYnZ9LHmBfKTblxf5n
pRVB5LPH3MT61I+2h2NXM0MKMZ60ovvYt+Jdp/F6P9kuRtwfe6OLiB+2NxLE
8w+8Fu3FPvHmRzT2w0/6HdiR/puI8TXSM5uwH0dNEeO3TdKowTbpvpKEreEn
UI7daBuYiu2VIlmI3VUhTcyXEuPdHOyhFa0P2G/WvT8Q+3d7K5EPNhVsSMeO
P1RfSOQfRYVX2CrgMJHPW71JL7Br9y8S+/GIqGcithT5J5EvC/R+PcVOmWrt
JPJPyvZ4bFnqXD/2zPZTcdi/j8gQ8Z1WeYHwv++e89h3gi8Tv4+k3lrH3rHu
9IzYX1WHaTXIa4m+Sdh/+F+zYwteiU4h8tVkFQ+2t82HN0S+SHoigC36ojET
O/lv8XZs5rSebGweBTlx7HvqrcT8NCdN78FOc/9Yid0juLwP+5KyewM2/Yzm
Qezip9t/E++jv5XDTgq3J/JBXD/zIey7GvJE/pSbtSHsXRVI1OszB3Plsd03
GxP1wSOQlbh/djx5C7autboM9lN/sjh2uM4laWySgbYsEe/qVyWwRc4FHCP2
80lTUezVt69PEvs1aI8g9kjXO3NsDX46MR/bN/Bdxk70mWEl5q+u6CZ2yKdJ
Mrav+Btf7PWi9Tk836m8TXewA1N3E/nNVF06Evvi82JiPfO3acRhc24UIuod
3+7BJKIe5q0R+Z3r1pGXxPOfns/GfrXrWBr2+xXT18T+mJhNx86N1Y8j8qMC
1zvs1ImrYdhSnn4Z2DfXMnyxkz8ef4stWrrxOlG/+81eYd94n3CeuG5W/hw7
fW+9MRFvWaHE+GJvtmthP8/JfEjM3+08iP3E5kAI9j2zm3LYoZ+4vIh6q0eV
Iu7POHmVyF9CP0SxHV0OWGKnDbEKYe8U7tPF/vThMx/2t7SLSsT97j+5ifni
zyXySbiS/UbslksdRH6IvX6Ni8h/D/7fn6m83Ulc38WhTdRP29pk4n6HpKAW
7OW2QeL5deqBRUT8Vc8S79enaBDxfe/l953Ysz9qI7E/utruw5a9uMcb+2dY
xhGiPjw9fhFbaPKZBnbUEWN97NtJcsR8SRy7eBSbOcH5Ijbj+xuSRH0bOuOO
vT3Eix/7VUpLKPbB6kQ6dkioOZFvitWKF9dw/ybd8Al7/2b2MezGMHmiH/VT
CviDffRVKFF/Mj+LtmPbFX5ewZ6oIDVhh3eucON4FNib8gP7hIqkFPbpmX2E
4yZUVLFjt7xowA78e8ICezRxrRW766KwM7bQmePd2Ox3ft3DXjQJHcF+UKWc
hL002kWM97K0QRaxPzYfZSX6m48cldjXWlO3EfmD4+JPbAawVR57QP7FIPY+
6/BT2HbtHrPY5z/mXcUumP62jv38vVE4dqyfE60W17PmjUT+cfLQYcM2SUhu
JNanmJ0d22W1nehPVTL8iOuSa67bcHyQpt8Q91t3cKsT/Z16NPF8hkYtR+yP
59RnsBcEsmOwBXIy+7BX9CcKif78QHwj9in+iAGiPuXLf8F2erOfnYzrX1NO
CrbVDScZ7OtzhnexxXsGjLAD5ZUcsDevS7th71Gw1yLyj8KnR9jvBhjFsHOT
tD5iZy7uJtZTfqi9BtteSI/oD5ruMP8lnscx8oJY/1XXaWyFJh1Xoh5o31jD
FjaYIeJzZ10mAwX/XuPKFmzRMR7CmU7qo1XINRwhK/j3QcM8hdgfO9+PY8vK
20diJx1T68Duovy4jD3d7VmMvdJSfQw7VPrec2x/3mkhbDtSrBf2utbS2nfk
uApvPWzzUL2/2OYfU4WwjdSMqrEbs5KI+YxXdcjFtrBdJvJbkOORDGz5mlV7
7JPHJF5hq6vsI/J5m4YBYd+jVkS/ycBeT/y+QfrMY6KeBPflYVew/dEhzoca
63XY31+8pGDfeTIyjK09/CAbx++WCQc2PH4pcPcKtuZDnYPYs0ZeYtgaOz5b
Y4uWOHWv4npXcjIGeylbLQF79LRXPfbupBprbErRa04835eGmySxbR+7GxL9
Z8m55RXkuW43ot/4IGLbgD19uIboL7ecsXuP/d/rOFkcD56SK4+xTUJ5ArHv
b/p6B5uzM6IZO6D1fQD2CaWNO3F8n7rEeRd7cuihM3a/BFMstvoAWwl2xvPP
H7Gp95M31CGbNfu1Yy+X2Rhi97oYsOLxunnDR9jUlEU17IbUPQ3YPt5HwrAP
GRyi/cD1VO3Xb+zDCXEHsQV95Q/h+RIr8TLFhmqecdiPf5OdsUNe1FPx/Aev
WAZh73S66o7t2bolDHuw6iRxPvrXUBaCXVzJ70T8veDOtBv27WtXJrFreA9b
YD+5M3uT2B+sHrLY6sZ2i9jXuH6RsR+oi3rjeH/2JrgYj/9KnOMa9tV7r12x
37TEezIgN5qHi2ALax+extZbny/C8/V99aUNI3Lc7Vwj7DGfvVXYirmv/+L5
B594xZmQbYMeXsJ+vWXUDftE3XuiPxOVsMvH/nvmpiVRP0PlJrElptWacLxs
Gp7joSKP6NH1sE/qZItjy9Czv+P4lG7+K4n92axKFXvv1SUh7PkTX4q/IYdn
u5GxRcwZjmPTE3434OeL7WytqMT1Sm72ITaVnqaP3cdHOYZdG8zQV4F8YEKv
G39PgKStH/YV271Xsc/l7N+JPXp9eATPR49lUGs5sruJsRn2Mf9n0diJMsm5
eD43uXw6hz21vLIBu1uEpoT9+cz903g97mQ5iWNvvH6H6B/+WD4QxXb4UUT0
16v6LAew4z7vmcHxMljkdQr7ulOpALZQmvNt7Pm7FsdwvJXNzVVg+1ImLuD4
fbJUIYTHa8g5GrqM6+vPd8HYZZ6ln5aQixZdKPj79e/39S8iOwt+DMeOtTTf
hr2+bCiJ5y/mhK/1AnK/0J5W7IjEbx/mkd9zsD3A81+b/Wkjtsx0szFeL9el
iIA5ZHMqTYLo5wq3s2C334lhwvEQLW+VMovPz71eRL1LVIcm2I6a73/gePpz
4JModoutZT6OP5FZSTbsujNbX+P4jfwcyoFtM6MRVY/sNVoujf10XsuzAcfr
UuUV7M7W/8404uv7L3/H/lykLNOEzMf2TBWP51GP+jp2G0NfJzbvk00FzTg/
XMqNxt9z7vHc5Ra8vx3iL+PvP+VbytCK8799tSmeH+PISyHY6opXz+P5NPB+
N4t9MdghGM+3aL/tiTbkudn3RXg9lN/53sIeOXucHa/flenP8djdRxKv4PV2
T517gi0eaPILx0NlAo8b9pstMwY4fmxfLchib4lca8Txlmq7oRG/r7vjqAmO
X/OI2yexrezKO3D8W05HpuHxX/C3sqDj+KK6DeDvK/75t5kZn+81/jBgf83z
PsaK80WsBQXPxyfTkWdsyLOpd3rxfB7R+t6/AdkxmvIWz3d5XCMPB7La979m
eD1sk0zFOfH5+w3/DF4//yr/LVy4Hx946oHXlyv10iD2818mkzg+zrWbhG9E
zlFOPoPjR233HeZNeP/whBTg+AvXUTbGvkTrncfxDG8t3MR+PMV3oAzH820e
4rrKRMy1EuRfvDtW8PNuMBnmf0WWeTpgjX2WR4KvCMdzhcxd/H4Pdce7X5Ap
9jzX8Xg7Hk/wFSBHnWcRwN/j7vz4Wx7yK4GUO/h735b0JeXieHz9Mh/Pj/u/
sNTPON9J5eTg+dt/xrUjB88Xq60/DZ8PZr00sLc2HBTC69FvZ/MvG5n1p/gD
vH7XXonUYy8EyxJ/f7oZ/XEa21Y/lg/v35PcVSb4/o7qy0dwPKXF65Hx+xy3
3NXH8Xjo1aMx7MvtXBdnkK1KhgXxeCdrN/tPIr/N8XuQj+vdtbNv/+F+fuyv
Kv5eM/0T4yPI4gf8DuH52DjvaTiEnPjB+UIxjkff4L5+3I/f6v9eivPZPs+0
XlyPzqta4XyxN0D23R/kJaE1Ybxe/608XOxGTh3To+L1pQ8VPuzC+Wpcg47j
Yf9axa1O3H9uHhTC+4/VNr7mN+7nnb8o43gsSn7qha3+T/HiT2QbXvZIbDly
bmAH8vuQD9z4/rsVLpFduP5JcTPh5++MOhr0B+eLXhVb/P7XQe0GfcjKJb0H
8fh0cninBpDPHwy+gcdPKe4zGkYO+vhXaAD31xK1bqPIlkd5DwwjLxxx0v2H
zJS34dUY7i++f6wdRz7Y1+WB53PenWFqAvmGkU8Szh+7nJXfT+L8yS63Ea/P
sXAXpinkpv+2lhDniTcJQ/j69WNdL/H+JJ+WNsPeazPwAe+/7owXBvh5s7Ex
LTi+drGyN+H3Hz5/kBHH8z6uwx14fEcSkyT5kJt+HbmCx3+tKF9REPlyR3cI
/r43HqK7tuP6Yn3uYC9ygs7cz53IZt69zt3I61KuKpLIJTeLDPB8nj0+dloa
uf0QZyvOD74cYO0AsqrYHxa8Pk6D6nvl8O8VdJbweh57M9NyCNfjhbb3eD+m
RR0cPoz78VceEO83s7tR5oq4P13Uz8L7p+EG2w4lnF+2j2zD8btiJiODHXU3
6sEHXA90YoPw7z80TWxNx/n/oTnfEWSepLc/XuJ4Xqr4i98nxTzy9TlyhRDz
oCyyb+yOzc+QexyHD+PxXt636dsT5K72/AYp5At01cFo5N1BglniyDPuUgEP
kTkv+Y3g+TlsK/j2PvKh9ce+Ash+9uZXw3B8KT/z5kEe4P/Zcg/5ren4LF4P
Nynpybs4Pz5SW8T7d8IwuwJbr2JzLN6fiQk7z+Hf6wS9+If33zVSaEkozh9i
8RtGkSWPVkyHI1szJ7H/xfXKbMPUA+RMti1s7bj/vHejAI93++8K4XrkoQFh
w1hcH85+v1iJ/EN767sEXG8qzqwWIku8+1SWgqxJSVnNRmYSeBX+FrkuuCEg
E/mD/pfl/5ADezUzXiNHWEav4Hyw8uFuVDLyxQeOfng/W8PBU8+Qk/SDr+P1
3TIgu/YEeZzxYx7ej2TGsYxHeD+ZP1fB8XPcUtc9Crm09Pj0EDIPb8/VSNwP
//RPm0Y2NtzwFNvO+/CpVeT7FcOc0chST6bLqTUkOCBwuDEGeVHS4B8H8uN9
0gNxyKfbGF7zIb+NMj6ZhFz/9VObMPKhE4H0V7jf/5dtKY78yCWDBX/fhrfB
wtLIny9/1v6M6+3u2PWDyBkT2l9KkD06iv4oIPvlZmjV4fdbPstUQubTOtH1
C9lviskQInvv32aO892dBsnPysgNrnbJOJ/+qvesxd6pGBaJ6+VFPbEQ/Pti
H1YmXlxPB8x+4edJK7+sE0OO8Ej4it+n37tUgeNT4F/0YTwevvOnClWRtzlm
qUkha5UmB51GHm0aHRVFvjZWP3oe9+c/3itsRd46PFJ4A9mVb89hTmThD/M1
t3A/qPWXwoh8dq9+XzgyhTMtfQ7Nb8psWnMsrjdzs4aDuL6GTF5NQfaaEdiC
8ye13jogA5+vwzftwP0ZR9z30SzkV1YGj/B+dM+86ZuH/N/G2QS83y6R1vgL
8fk8w9HxEbL+VFRCETJ/7qODgbje3N41g68vilZvv4nrJ/sbxgJcX+NYHW2Q
v2wzKcvG/UHJNV0D5CqKtWQmsm7g9NxxZJO6DfKpOB9Jsz6TRZ6ImJ54grz3
MrO7OO5vZOqs7+H+PGc0VwB57WvUcw/kzueCURtxvL1Tr72InCzzIIsF+RuX
hqchcuy+1ABGnK+vmTwBuP+oNhcmIZfu3HZqNzJT7t/U1SoSZE8Jq8b1npt9
uzQ2W0b5Udyv2Y+xVK8h75F524nriYq9930Knr8C8d4y5EbFjf503F9sPhCe
huvbaMhLTlwf2QyFHiDH+FhRtuJ+5FN5iwuO1zSPu7twPbvzfdUc+Qi/7gE5
5Edmce3Hkb83rw2rIcdf/PBREplMfxRriq30t5Eb2WzXQ5GryNt+U33X12iw
w2a3ZQDyon/uygiyzcTUrnhkxpK/99uRf76+oJWF+xcRFbcq5BnhhhjcH1eN
/Zn5gmzRfLYB1wtrcq9iFnLMv535eD/ySUj5ZyDvGDrNswN5iuIw+wZ5dP/F
GID8cId3HnbHkOHiGfz7t9JT6ciBpMBJV+Rvhm+yPiLPhXHIROLrXgsbC5HP
1vg7pSNz789jr0HOUdQ1L0dWfhWZ1olML3z9+jfyquq39mnktCiXDdN4f9gE
BbDhfiJ5VZFaS4Kpn0rDxfH8GTRM8SIrmynXqOP6f+HWmCiy6Goqix3yPdng
UWnkD8MuHPeRt67IfZZHjlF5+/AT8tmQvTsUkQOC/hzD/cEyw/Fl7I9aPDW4
fzMUG912GFl20qMO1xulc/luMsiJxr3dF5CPD4f+E0eOCBSLicbny03SHluQ
o5VHvEvxfrmkI0xHnj1bsXUaWZqptn8SfY+MQuecMJkOPZsseluRN068j9BB
vvQzSSkXeaTf57Ib8mZza74nyM9uPCQnIX+ePP/mJnJ59oX2cuQ1T4tDOsj8
VjHuQ8hedox0vF4lR0/a0il02DBb74DzAUfnKYkdyLc0Qypxf8a5g2KlgFwR
9M07Bvnxya5nmsjMXK8WbXG9H7p71whZ7nniRxnkl/eobebI6fS2XWQcP6M7
j1ogk05aNNai/SFz3uS2MfK5aS+lp8iXjp8J0MJuzB91QA4U2yWM3zdWd9ju
KPJDHs8Twsg9vwTBRuTii5lsZOSPCgdmBr+j6z0+br/Q97xWCeQoQS6YOPHh
HTJTXi5nEvJYlOCSN7JOUYTLbeQBJbOHasg55md/XUJOGE9wYURucZjzNEQ+
Qt33Kh/N/5Mdtr/UkOU0DAsdkTlilc5D5CBKgKsQduUFR2Vk9TTlxG+4Hzbq
19FEPp5cy3kdn6cpe/acQZaCs1/4kJNDOSVvImfXer3E+6n2eOKpaOwDfU3n
keMUa4O/IPuQWyzYkN/M8b4ZR76dvnrm0yqqV6737cTR9//kNhu3Qb4Xbnn1
EvLS6Tp5XuSkrpYj7/D8/Rg+VbuC8g/XySMryPo15/XDkHMvv67Uxf1NsNgJ
Q2Rn2RS+VJx/YlKlRZGb2nYakVE8pIyenF9dRvWPv/KBJfLB6+Zuf5AvJ6VX
FCL3zP6+2oC8jyNjWBjF64H+3SG1yDyjY623kFHbeawVefr5zYs9yBs+p7ON
IUdpa1w4WkeC+w4sCHOi9z1OOvcsBvmn57dEiMwg+qltBNl24o2PD3JC5VS3
wg8Uzym3A74hx9lfCvFDnkxkMBFB3ztycyT9C/IH19yLgci+q3WHppF3R3jR
Z5EvzDhLCtaj8+q5e3qOON8oxUYeQeb/WAhxvkgeNnihgyy1kSXRF5+ft3Qm
6yPn7XopgPvlT+6RJE1k4b3eCm+R4Xc1TRnkkwUKZ06geHF/t+kgO/J8t0n1
ILJg0fYX7ej9Cjtqc0JQfBYeXY97jGxh8xbsYkD9qI79WQ3klcZjdsXInxO/
qA6j7zW0bFE0YUT94NkbEz7Iyc2zWf3Isc98+GnIaZfuN9szofp6Se/TbTSf
P0b3p/Yhr+Y0/p1F6xHGaQj0qXRYxZw2eBY5uHa5+h2yYI2gIj6PZeTA+BXk
Ecl9jkR9MRPmkqeh/aDqrHIdxce9bP1vFsjXvNnCy1G8uQeR3R2RGe3aVLcg
V4tcE7NH9qq6f83xG8qnkeUzJ5GZFK7trqxE37Mn5pQg8sSS7IOdyKV3lhcb
0Pv+ZDHWhVaQ4L97DlVOyI30dMbVchTvm2K3zKPxfzkYq+uO/G533LkLyH60
q9kMyFocH28Uou9/XRki9ayMBO0sKnwYkEXLMh5oIue0TzXLoPmbzGkJYUGe
dhZT00fzPfoxNbmrFO3vA7sLrNB6HA9clatCVgzh8jmH1u+AwoBJLfJFy/Ob
jNF633ihbD2AvNdRPd0IxUPl5VNHeNHzjo9sO3kKxY/huxZwBjnVttX1BIq/
jlv89z8hr/637ZsyiufI1d7ZXWi896J4mZSW0Hlut9a+d8iGHFrTSoso/qe9
H2uh7z+91eKq+gIN1mi+NVxBloufOmU+T4MyMVIXi9B8WZtxevjO0aDTisyl
R2h+D55ryfhvFo2PNtjmheZ/z9agd8szNOg66zF7Da1XSPkOITPkgRfSeTfw
efznT5f6aRp0m/yx6ovW/5zpoU3nkW3++hlGoXi5enSAgxu5v2NZLgPF06O0
Yau/UzRoq8Qx+B3Fo431xxeNyMoktegBFM9PmaBOP3KBmIMquZEERXbHWQmg
++n/qqa4m9D+uFX3nwuyoo1ZwLZmEhSkfE+YRb60IPlbsAXFg9S8yhM0vn8S
Un/ZWkmQS+wMPIe+527zsv8Q8mBQ2Ig2+t5Xvyq/Zrah+YkkbzuD5qPjPD3X
8icJCgjnWd9F86WXIvJ+GrkpzaGyDc1nq4UDj107et9CJ6MKmv84+VNhRcgi
DGkXcX7Q3vyaNIvMdZnyyxb3G4KvHjH9QvVNznABn8f+/LFqnEDXT/x4NdWM
4uPOEWevLORJe86vSSietoga/tBHNo+grN5E8Xg79J92JXr/M6OYzVoovi0b
mkm8yKfO2B/axkyH7PsMFRTR+OuYsq+OstDh97d13UfQ91158TIhnY0O/UUe
ifKi+Xi+IptqwU6H3rL8NdVo/mDlosk8Bx3+uFD97xyaX0gzjXbmQuddxdHd
bWj+c4WhaeNGdB44dsr5wA9cn5a/snKjerf8/fBNtJ773xhJbuGhw/nqIeUk
tP6ya5IyS8iF3yReFaB4cU1S/faSF53fNTwHalB8jU5ArW2b6ZC3J/i/FhSf
urKh1yyQ/x0Q5/iN4t9Ba+ChJXKfMmVbfzGKt1g16x3I5Pe1ivNFaD+w7T2L
n5f+SLeepxDNpz3depgH//c7BiP1AhS/y20HR9H4zl7ee/xBHuqvK7+R0zfR
IfD0WFz4TII3Yw4OS6HvCQkMKbudg97XvDfAiZMOd9HuZctlo/vZzfRc0fxM
nAt7z/uJBD33UM6oovkDIyNK4llovU23eXei+T5xlDPa8SPqZ75o7ldH62F/
uTJk4j/U356PexSA8gPpo+6VDOQRCVbPeLS+244/2/sW+Yv/uGg0igdHrZTV
EeTT5vwPnFH8vDHO7fRGz8vZ+UuehOLN729WphV6X6W4zrwfil+jSvLWaDSe
ZslgUcokqleVym5b0PhvxFHjw8dQ/G9U9RhH3yd2s8Ru/zB63lmJSK581J+1
S9bO9qP9/DXa0vsL6sdjP7AN/KXBbd1hNnu/ov6x481Jzh4a/DygILINzb/+
6ychXp00uBaYLX8C5Qf2XgEDuQ50/9SsWApaz/2Zx7LV29H5e8mkUAKt/0rg
U5XcNhrUtD2W9QPFi/y/7OBHrajf+OynEIb2o2GTr3tvC+pX7zLfO43idZbk
mvsG+bpDsZvQbxJkebidexzZpmBwb0c3CZJGxr9mofst/PzC/HtJcHvqx1Hy
T5Qv0l6JMA2SoKZ46VoTer/a35fnjEfQ/plk3Sz9mwY784YqHP6heprv4Mne
TYNKmhGrhybRefS32KQj+t7fOkz0zGkSbGkKPac7gPJpzLtr5bPoPC26kSV5
BH3PZpeb1+ZJUM11xcp2ggbTyWMyLxdQPnLz2HwP5YvIrImqs4uo/2e0OkZH
6yW+/eS7COQaTn2ZOvzfd67z3ZZDplln/v6B6gsfy/v3Wuj+8UXD6BUUP5tq
69eq51D9evHpGUTx6NlrbvR5hgQlPniO3OFH+3VsEzfXFMqn/J8+lW5D/esv
Z4ZW9D0KO6+f6xCjw2CRgIsc6HvDbK3m8iRR/3ykb+PXfnR/Kouq7n46vPqz
QWumB/UDY+1SPnJov26uav6vA+UHYxZ2+SN02H85pZUV5YNrg6/LzgM6bJev
/8CC1itngsdh5hgdRguv04vQ+t68vMTTpIr674B/ZkooHja3BTRPq6P+89Lx
TdFof32/VsaieoIOaYrXuH6heKy8Zf03D/mA0tXyHZkkaByWKKCLLKv/yTvg
NTrfHeYdnUH3v3Q+UbgxGZ23d5VppKHnx3FmKPbGo/G+3CnohN5/6HjgffYY
dB6SjJdTOUqHHjbzxakPSPAPxf3hHgU61GDydvkaSoJmbfw79snQ4Ye8YZbr
IShfBWQzmO2hQ5NL4iJVASRY23BIPVuUDlmlzvv9voXyx9jebhMBVH9D/jbm
+KLviZt7dwrN/+bdgQF2Pmh8mXrd2Wg/i5Ut3VzzRv0kvcYN/z3pyYH5Lm90
3dNcd780Wn+hwBU44Yv/vvRVwRXtLwltfW4zfxLcWl9f/6QL1QfFkz8KAkmw
/fYnzU9NNPjS/lXNlrskuENbRXnsGw3qcg5Srt4nwV+3sictC2mwofS4+fto
tP+Xu4T2ZdHggsbNRzloPkJ0b11NS0P18HR0TuQLEpygcp36+hzFGxOt4WA6
Cd7Z68DyIJYG/+M2uXUPzX/8qVMSCpFo/7nsvhaA8uOvx3krLaE02C0WNMCM
6vPFhzJ+QcHo/PttwZoB5f8I80N1526j/U1lWjmN4sVLauO0nx8NOjQdDu8d
JcHMgmtZiz40KC8QH3kfxW/8tMHfTuRN5XuyZRnJ8KZH8HXUHMHVaveO/zjI
MFSfY0kCPe++gO+lvi1kKBGWKfoSve989tXCF2JkmCKou/w5DPUP5dc9q6TJ
sOlRx7RNNA3+2X5j/YACGf48lzGW+IwGQ2KutX1UJsO8P6+PXXpNg+rbxawk
T5DhqZTwtjQ0P79So9SvnyRDuv9Nd5MStF/XnLkvGpLhyuyz3NMNNBgqU8Aw
bEyGfVE2lwP/oPmPLwrpNCXD4vKl+RLUD7AlqpZLmpEhNfpY6iATjrf+uAIT
MuxiKjhQxofi+fe3pYDTZNiRszd4J4qnzO0nZNz0yLDQNEyqGe2X1re3ViLR
eA6xBDlFG9Chgoi1zy9Ihg/c9uiIX0T9cdtVDRM5MlwsPHlA24MObwYkim+V
IMOSM84vC0Lp0HSxPOuIABkGPdzre+gZHc5tSOtrZSPD/aFS79wy6FCz1/Qp
9wo6jy7tij1SQIe72aP8BIZJsC2eT0T5O4rf8z+Ct6H9azKhd1e7mQ5zdavr
9UtQvXmYfnRnJ+oPknuVxjNQf/h9SCG+F/XDq9v/7YtF/ZNl/7bbg3RovLnz
uhGKz20jajXZQyjen99JTXBC51eJs6Rt6PrM02hGHXN0frou5Jv6F9UzP7t7
zzRIMF32k45aB8pXsW3qjbKoH3gf9HCtng7pAnsYxEVJ0H4FtraX0qGhYc+R
1k0kqH0lt/bfR9TfeFJWNjOhenT2s6nJc3R+H5wSPjKxDs7XxS8qhdGhVXNP
1d72dbDd6f7mWmc63GH+L9Gych30bF5PAOZ02Nb2UXdL3jo4fahYpw7SoW1d
UkvCh3WQUiJA+7qDDr+Cq5fF362DQ8ojYhZoPY8nnP7dnbkOrjhojU/0of5U
dLP/SPY6ECj8trWmjAbry4bvWJWug5b1SBHVFLRf645t1G5ZB/6D8H1GAA3u
UVILzRxbB1F59DSr8+j8GN5EPobGrz/gWPBBBe2XT/4lJrwk+GSXXcKKGLp/
tfQymwQJMt4RSI+m0yApgCKkBlF+KdNVaBqlQtaq7x5DJmj9lsxsNzRSIXOE
/XDDDXRe5x1yiMqjwr3aSdxtEajfg+cu5aZSYTzNRzYV7W8RhxdTg9FUqKOh
lj2Bz0M8rCd7gqnwwT4h5gCU/y9b8xV2elHhyVETFTEUP7aikrv5nakw4grH
WKQUGer+vRhT5kSFx385x4Wg/TKXwAh4kEv07i58vEaGSXtcug7eoMLfGg0J
pZFkeGtgsFHbgwp9L6zymmeR4U6mORffQCoc7Jft528hQ6mtytWDUVT44mkt
X8wsGVqDwvmnr6hwulVV4+ImCox7Zdz1pogKN7REuG+RpkCqz+egjb+pUG1s
T5GSBgW+S9JiqlmlwnejHyQszlKg66sQ/7LtNNh1qtOe6RoF5vEydrVrofUJ
jNcq96XAUp/uvl9uNKjBbwBk71Lg7oFOs2CUD/aEBMuP36fAa5di3t9D9V5c
0cv+aQQF7Ycwtduo36uh16jM3aNAr9E63nkdOnSN2y3x9RYFnmf/UG9+B8XT
poIn7eh9h8KzYnnL6fCRwYiwjDkFXuleSnRhYIY22wL3NEMKtGQSaCuAzHDv
v2Wp3m0UuGvlr7GwNzP0ujjSEbdIhmoLR49XZjNDzmsz/Qa1ZDhlE1jdNs4M
I3+kHPZ4Rob3l0HeDVEWKDItZxJpR4YP6x9pFhiyQIVjyd3yMmSo5OeT98eX
BfYce5rNjvqFlvlxTcEUFvjrpE9IFerXXr7bcedzCQs8z/mrTRzVm+H+2S1b
f7FAzQG7C70ovu4yeZp8GWaBJ0NCX+dSSNCq4t8lOMUCHYvkrpbfXQdHczuB
+ST6fay/2dZNKJ7jlIfGBljgG9u3vnkJa2Auf2fdTDMLpPzqiW3ZvwaKTO6l
heWxwNIU3o/e31fBzR0O3HOPWaDNsz8Xk+1WQVlay/ngqyyQS2VjgeCmVUAd
qX7yQZEFvuPlLk8qXQGct4ycSIwscHTFRPS77wroVdjNxlLGDBct245sVl0B
UftyGVz9mOFtl+p7/7hXwGNnKc0lOWa4dJ2FPWV8GQSdkPTWRvkoos/I2615
GXye3z8n8ZgO+XmMxOLKl0Hb9eQ6AxU63N+U6Lu3ZBlU721Ru/2PBl+nRx3U
rloGFnYP56/H0GDVdwEnhq5lkGil3dACaPB9VybZYm0ZODY4/TIfpMK7jlzy
5rtXgIeYte/bB1TY1TwUum65Ai6G3b5vq0iFIdlVr5Sfr4AzLu+qhIeY4K9Q
42j+iRXg5TN4xOkxExQ81gg9TqyCIc1rol2aTDDISpVBP2MVfFXfcHyaxARj
Q/rq7witgaY0tlKpPEbIr/mXhyF2DWSce0Bm82CEig4GUajHAi81ytiZjzLC
3y+tbmxA+Uzv8feJZzRGeN/9SM4fKRKcObq3xa+RAUYEK9wpQ/2NqUCLhthL
Bsgn+1vEdgj1xxf+WEvfZoDanlw3z6H9bc8YJHjiEgPMFvwqDHLJUMHusY2Y
MQMULGIyPbebAkV3jI3d0mOAl9ZPj1HiKbC8X7JU/DQDrF+9ELqXiwEukfMP
TNoyQIPpR4OfghkgB99iQyF6vnJ68Q+pNQZoefVreOA7BjiqZuXecZ0RSsTo
lCgOM8DizurH+X8ZocOxBuneg4xQylZw5YYuE8zRK2t1iWCE7Gr7NhlmMsGX
ZG7m7lVGmHJe2MqSSoWWLoxvh72ZID2Bfd1IhwpDj4YISnJRoWltil/DLSrU
4tSV+ptNhRdvs0/aJFKh7WUfj+5rqH57yThXplBhdmsTyRj1h5dM07eJ3afC
4G3JDp+3MsMI3babmmZUWNY3aPOIhvaHxUnVZSYqrN6Sme+1xgJfpvMW737I
BC8fFAubWmaFxouVDMJo3dITA7UCltjg3muhWWH6jFBXWTPs3/QGeGdW5J1j
GAP8JBX77UIPOzzRr7utPosC/6tadFrJ44DFo72S1+rJcPUX/fnto5xw68fp
4dOoH2dTtHipdZ8Tzpj3p+bNrAPpz3D7SA0nHH7sXVcstgZutLfXpixwQpqD
eUf7pRVg8d+c1i12Lmj5pVz3UNkSmGvlGVHl4IIm/y2w88FFEN439MhpmRO+
fu2Z0NExD/Zqp9zmb+KEXdw9n7SezgE5zVXJplhOuLzDJ63j1iwQFDtUHXqK
E5pKq5GY786AsuUy39oZDphvyW78+OM06HVivgSlOWD1mQf7+tenwBMfyaQB
I3ZYe/o/VS67KRChnxnC47QBDu75d1tschLYfrO/0uDDBkdWVHgPR04CnmM1
v6uCWOHWbc+++utOgjBDTnGteyzwAZ+QylmRSbCptbNT4j4zDNG58sCCZRKI
eufd/xmFzvMvNYuV6ZPg9sPiwAuo34sWGXtC2zIJJGwEMlzSUb0Y6u1pPzoJ
+DJfR1mXMEHPsHlJQZdJ4B87s/FADyPc0Gn61bpwEhjM6r57g/aLL2Vg1n7L
FJDd/+XSWXkGqCCTdEEieAqMdVJkMpwo8FWyulI+0zR43Z0g0PofGeYOHndx
eDQN8k+YRS6SyDDHw3b8g8IMqFOb+iSM6jSraTJNdmIGOPc41D24vg4YSWW1
5bmz4DrrV+0qjTUgHuT6xSF2Dqzp/C6tObAKQk/tm7KImAe0ldQsz30or0z1
tVOfLQAjWVvfEuVlIJHefpqtbBHEbhh58urCEkh4vNisQ1sGZT43fLUTFsHM
UPTi4IUVkChySH5xZAGkHo1ZKK1aBezL6vIcxgtgZ2H26/O660BRX+Pb86Z5
IK6b+u+uGzo/bizvv2s7D5ycwy3Fz6D+8ix/wjDLPHCFDOeM9SiwOMTuzfHy
OcDuvaB5xZQBVmxWvhT+ZA5YbsobznVlhMteqhTT4Dmwn3X7pOtbJvj77U7j
8Ydz4LAc9+fnC1TIb0R3fVg0B77uv7atHvVhvmLBtgU886A9M3bPYBszbE+R
6Q16Mg8ihTjAJ3tWmGG3nL7l9ALoqwgXsNi4ARbYTn63NFwEiytK2v4V7JDq
/barMnUJLECOJX5lTkiaCIk0sloBX+jNUkpbuGC1csKTLyhPyn2w1K/v5YK3
29l/qOSR4IKhmLnyw40Q7rHVbw+jQEENr1xJjk2wVl7/580ORmiV9Sjsy/FN
UErb3rsdnaeWeA8LzvBsghsU7iiU6bBC07qCkRdXN0LZnb3sSxEcsGF04sVN
ZS5oD/QGT4ON8P6NYs9YCQ5oWSQvf3+OG7ZKbFVe52SFXWdU88C3zfCONIv7
rxiUh76XjSaEbIEWif/SwyQpsGJK86E3TRDGKFs2VmquAKVLejvlxLZBcuXY
9VM3Z4H07RPJlpeFYfL0Dp+S/nHwriz8ygW6CLSLvO6UazsANPw1fm50FoGH
9+ebijH1gN66l3Y9n0Rgu9CfB11pbUBnoGv0dLMIVDRPOvOnpx5sf33SZqhF
BP4r3D56gvwdnMo58etDkQhsO9ry0puxBKgwnRx3eyQCNeP2aKcy54PnjCT7
CTMR+Gfqs/zTro9A2iSIRuMUgeEnJZ6cv/YOXDt9Yod4tjCUHDR+Wrr2EvTR
e/pcTwlDvdEzHpxRz0Fi+n97KEXb4O35iMbXh56CwaghpowKIXij6XusnEUM
+G3nqGqcLwirG2R22pEjgcZGW+6sRAEoOTRvlO52H5za7sTU7LoV7tRv1cwO
ugv6vaTz2FS3wIS20nDN4iCw1ph2pIuVH7LuvMH2qfM2MB/gettetxnG+47n
Bry4BSghj5/fiOKF99fh3qQWX8DmZxv3x5wH9n0w0Poj4Q12JzfG0fZwQ8fy
pPh+fk9g/MHfzIhxE+zo2d457O8OGHU7IqoGuGDz+8cJKjpuoEnNdG64lRMq
d/BMHbjgCmhcP3XupHFAj/T0e2aFLiDW88r0SskGuPU/GB6l4wLOd5xJLl9k
hfYjd8fE6C6A6weo/qPNArekK6XuGHQGrPwulxvz6fBa7KFZEnKZVn5evgYN
boQJ7YcZXECXfeuUzzgTFH2+UMIn5wLKb1fLVL9jhLJfjdy9vF3AqojZ78Mh
DNCW1Eb70uIC1vO3rRm4UmDg192WZ5VcQclXPpazfmR4Tu7+fpb3ruD4Ilv/
pXgStBGlkZj3uYGkHbdyVKLWwad0HofKHDdAYWLjCudcA6mvnv5oPOEOJvbM
OmmlrYAXYhprVT3uYO/XvqKj1svgvI6vlY2vB2BlnWI9JbMEpg+8rDIV8QQ3
WaLrIgUWgcOH+VW3ck+gt2d/g5LAApgOoW6JvOIFYpvUk97smwdGBzh23eLx
BmeOcFiZmcyBjdvCKkUKvAHr3ErsyINZEOdbL2pm4wMajY9HC3fMgLdF3/m5
ab7gxQPds42yM6CCh4nRQcQPuOeXH/uwaRqU7JJ84uDgB7g3awnwPZoC3ilb
VHd+9APPPSaSr4hOAavymY4J+VvAajjivLr1JHh6oXCXD5M/KOcJruM2nABx
x16ElUn4g59N4mVVOyfAhG1vVfsJf3A+enNSE3kCUJeGDFJu+qOTu1CZeOI4
uK1yVJrLzx84fYwdpweNg+ePWL/mBPiDrfY60U6e4+B00FPmKH9/MBdaWqjn
Nw5uSrVkprr7gyrzdJgZNQ688kqESHb+4OYleaa3OeNgzxbeA3kG/kAtxIfD
dXQclL35RF7a5A9Ytyp7mx+bAIKXEp4PD98C14cn1xidJ8C96s05PPm3gL1w
o4RT5gRo5E8XPqd7C+jyiErMHZsEkbcj/1PgvAXEO796DMZOguXSTnJ+jR+w
n9vsprs6CY5PWd81CvYDRv/FSeSjOm15wLXVW8kPmB+Jq2v9OwU29z2MNu7x
BXb2ObxnLk8D1rJwzi/HfMGS6JcV7hU039FG1pVL3mB5daijQ3sWZEu1cYca
eIM/QiMbyBvmwEBniP2TNC+gk+986H7nHFAZG/zOzugFxhaKlNuK54HbzJ7n
XGc9gSFf6pRB3gLIUZ90q871AC1PFyyjvy0CGVGThetbPYD46g7vM+NLwOw9
dyu85Q5EHhv9DNi7Aq5ufX7VZ8wNSF7Ofsd/ZxWMHBdvu33ODbx+wTd0grwO
+CTmzhZ0ugLTKzbuWdokuPeJJvU92q+Cmgzk5d1kuJx89Dp92QXUv/cbKuan
wMnw89FPnrqA5+etly4IMsDthdd5nfVcwExWwJ4TcozwuEyp2jyPCyAFm+ZV
2zLBH+cE/uuccAaRHIZcOqjfYL1B1YjrdQap/RTDg1J06FTF2Wu+5Ax0XISV
tKqZoaZG/TvTQy6ghHZU+fM9Vhhv4MRrk+oC5BbX3h1y2ACjpu0sb+q6gil/
2zcTVzigRNWotquSG5BZiJoRq+SE8w8Y1I0D3IHHhTq9gUEu+PGC3Ts3BU9Q
9WS35eLmTTBo/XFzl4c3kDN0OBpgwA3HGkqcYg75gcCyLCOeJzxQTzNAYH63
P7jIkGma3McLR8JyPX9lB4BHfzXqnsnyQfYv0TBqcwhoYluJ5wjkh0NsM5fo
UaHAIqf/zJe6LVAxv5Qar/UAPGaY2WrLJQD5v6i/4zaPBsr+TJHdqoIwQHXB
/vFALGjpDuEyuywEPc3uCYipJoHDmQdnbNy2wfij/qVtD1OB9IctsuvywnBk
utnqHSkDdNs5e35NFYbnKGv9I0ofwW7RywvyNBFolbaLxpmRB8Y6Tt1gNhGB
+xQYWFt2lICp8DLbkBgReKqzqUQ16zv4L2DJzaZEBHIc8Wk2K2oAfzPLKjTa
RGB39Ca1s5fbwfninFC/ehGoIKBze8ejP2C33MF7T1+JwJWtYVdVGIeBxIf9
2zxOi8Dq5I2vVchTgOXUknBfrTCkBi0GHHZfAD93lkp7swnDAfbPh81KGOH1
a548Px9thWdy3giHhTLDTXO0ra8L+eCv1ud9J7jZoYEIwz/ZIh6opGyfX/GP
EwbrFkbeq98Ir8vmWmqd2AgFS5tZenZwQhdOeoAs2yao+Gn7a95XrDD2aYvN
EOo/eIaEfp9opsFvi0t7k1g3wRCZmMqv6L1Wm7P3PfDfCEOjs566mlLgvmS7
K9QyLrjrNTyWifo4RY19YXeHOKE0u292GusaeBoYw/yExAl/fpN+6tG4DBq2
/itmkGSH8Xy3vf/uWAI6DI5espZs0KxmdVG/ewEUDnrlZKWic/dVPqelqXkw
nk996UVlho5OLp26WvPA1juw9rcfDYa+Kegv75gDSwzfT7jyUmHT4LxVFzo3
JBR532wtZ4TOp5kizFA/2JyaJzESwQDlrkzs/Rg5B5hTx6HGDQr8oRegnvUF
2XJqwtyBDJ1zROZ3MaF+VDYrKtyDBJNUr9fEnZ8HA377Kx8fWgfV1gwTh3/N
A92Kh16yiatgd0/X0dcXF0C4SUfAAXT+PpGX0ThMXwQ9BaUurPVLgL7f+Jbe
l0Xw4x2LsEf0IjC4o294KXgJlOwXWHO+uQAqemd/T9gsg6Gzy+kHHObBg8JV
n1qDFfDVmE1OwHMOmJm8OkU2XgXN+7U3NCfMgnq36pz4K2ugxq11v8zPGSAR
+NPjS8w62Loj5eqT/TPA6WH0RIslCZbXZsZ5xk6Dk3fClS+skGCwcGSgEapL
ScZ19IgkMtw+qOFSGTcFek5nO2ifpMDRfvnvETIo3ihubgFMDLC88hd/RPsk
sMyInGcrZYC19/waKyImQWztzidJd9H514dHw8JoEuiWBGzuMGGCBdYqFlGS
k4Dz57ljsnupEJ1mn7RzToKkT+Rbk8w0aPBBpjiPOgni1b7zSI6gdUubHZ/Y
MAlW1wZvfPpBhzefyYga7poEG0YY1fZ9Zob3D6X2DRtMgrk7Ew/7n7NAp+cC
jl1R6DwlZGf0G+Wruev2qr4jk+DqSrJq9TU2aCzIraBgOgVSlW682KS/AXLu
2K0c0TUFeIbkuht2s8P3eWY3NvpNAyvVSOu2WXa4nd/pjJriDLhn5aNU9oED
HmHeYhTKMwtCfPcpBe/lhDXZrLZUVDdsR9NDItw44e8EUcWLO+bBw/fR0l+y
0PmTFCFVarIAHvWo213p5YSdbOy3LN4uAt+8x3/3MnDBWDUQc1FgGfBeYP76
m5MLFnRlj7ekrIChh7sNstm44Aepj/QjKmtAl//WpOMcJ1wfr7+RMbkOTOKt
rx6v5YRSmyhlNxpJ0KD58efVKE64X75GIjudDIuX/TiWtDhhku9FsOpPgYnc
YXelhjlgo/mjBTddBrhHQ8xeSYwD3k2TTPVhZYTq8e+n9HXZIQO3GPlHFiMc
ce4UGrXbAHMOeWzrPsEEWWT17EP82KCsu/gMtYwJnqUamJ6LYoX5pTuGn4lR
YYnEpj7pNBbYrq1XRbenQouvh94zfmOGcoxuU/HRVCh28vCvfZN0uEmSejkk
lQqNLcQCju2kQ7Fiho7EBCocnbxRz25Hg8NufS9kb1Phm/WUzyUFVJixx2Kw
y4AKh6NZBinbqVDuzNM5U24qPLAh9PzyIyb48cYlCYsKJuivc6H1tgATZB88
IxDiyATdz21Z2v+BER6IT3mrzcEEn5CSoq8aM8LaDSaDva8Y4fuuvxWB6LsN
zm4J0TnKCN/kqHz6r4YBmn5R+qhSzwD9Vn+x733KAKV3e7Vq2TDAxrw3zRLu
DDByXtQzbZYCo5+WrPZaMcCtm1vl3e5QoEryXt0EAwY4+lYs6fE2Cvzjkdye
ooeuiys8/p5DhmGx2W91jRngg6ruLa9Pk2F22L2wxQsMcGrdOeD9HAmeX7x/
msOXAebsuKOugfrcyyqd/aQEBgguxu0sUCPB5L+KY6rlDNDpy2L901GUX94k
u5+ZYYCCxQKCFkbrIO2f451icUbY4mgvyVi1BjQjSwPWrBlhgE+NcI3mGrAI
VcmLfM4Iqcwukk+rV0Fnhwjf/CgjVPOa/tB9ZhUs3PjL4aTIBMeFIt9mL6wA
RaEwWdMIJrg296JAIXkFSNZe/EgdZILM/KxsbmdWwFrUs8XSY1T4x3dQ1kdk
BYTeG4hoReso2lUXoD+7DB6QRTjd1qgw64vzvdmWZfBM5kRTswUNBoyV7TxX
vgxi+kJP8xbQoNraVc7gkmUQniT25/RWOmT68cFAp3YZHKt/pPDKlQ6707ZI
h/UvA/1ved1b6+nwzfsNRexsK+Budv+rvJ3MkJ2V/e3toyuAwpkhF+nKDPdd
z20O9l4BwTT5t++LmWGs/tRgVOUKWPEaENtPQ/mhOG6dtm0VXPFVP31IhQVG
flM9zOu3Cv54WQkzuLNAECgxUzWMvMIyOPCCBbJqPLjMdnYNRDJeeXumggW+
/zb75X7bGsgK/Voz38UC8/7rD/9jsg7E9NNP+v1jgYP89Br73+hc0vM7oXeK
BVZl3nh+6AAJqiQpOyiPscAmmbhmdhcSnEyRHfn7mwVu8DYVVPtMgqc3ZRiq
lbHAgMqypKElEtRLmudiQ+8vUJBVoR8mQ++JKut1DxZobBA7l+dMhmoi7cUs
WixQN2f9nDTa73kxGU/28aDx2Ec2J3eRYZCnW1dAOzP8pnCW342NAtfeNrOI
xTND6CFZLSFDgVkCXNHSZ5jhhet80eYGFKhp0P+lgI8ZDv558aTRgYLO9cLm
Hc10mHl0Y4+7LwVe2bwnOiiSDuGRN1/M7lFgn1N4+3N9Onz9kaMmKYICH0t/
ZFnfRIe+4QzaMfcpsFMz/7huGw1evcZ2LzaEApt3XSnanUiDF5l8zIW8KNBj
VPsepwMNXu92Y0ixo0Ctt0N7LirSYNNq1bdcQwqERaQsDy4aPC42bjt1mAJ1
ExUD/UeoELY2uPUIUmBYifKupO9UaMNnwyq4RoabwOddAxlU2Hj8hKJ8Bxlu
/S307PRjKiwKPcZdgPbfA7l8x64gKqTFb398MIoM95VJ89p7UKFAM4VDwJEM
x8dfDDZdp8Ko++2yqBGH6+bDxyYcqTCytUiRLkaGYs9vOIVco8LLX7l5O0hk
aKvYI2/tSoX+D3tffflNgvcOnCpVvEWFz+7eFyPlo7qavnmpPpwKX2rUMw3G
keDY3EVif+xbpT/I8iZBMR7l2PX/qFBQrWP92TkSbMl4fX8BfY9hdkVIozoJ
knbJnbvaS4VpXVfdPPaR4Mq2rgssJBq8c8joz39b0TlYu3vhhiANTlQPxz1h
JkE1C7k5PTR/5uNdVl4z6Bzx+zZJzZwGf0cL5pv/WgfqqXfl571osLg85Yp0
5TqQz2IvvvKUBlkX9fyu566DAabKuGG0H8OGTr0V+LAOlg/LWfB10uB96c6T
fO/WwYtpnbzkVRqcn/1jpvZ+HWgvBFYcEaBDRSWmGK+cdSA1G0eNVKDDS0Wz
+4NK14GjgKeV1Wk6jDgfxiXWvA5GvwtIWTrSYX/fhmyO4XUwE3Iq4FQwHaof
HDP1IKP8BpUX1uLpULPOmyGfgwTzrOOey2fS4WFFs51x20iwsI+rqqGIDhcG
JNd70HwkWEp+zKylw8cJ0o7Gx0lQ28iYKe8nHU7XJ5YXGpHgOGn9598eOgRi
z6Y67EiQa4e0kfgAHZpoeOc6+pKga79KUtgQHZo2z0kciiJBJfu6izuwD3O+
m3uF5lf4BRulnw6/WX3NciggwaU2XR7NbjrkC9jeZ1FPggelDYNE21C8b6/I
juglQX+Bh/+KaujwTkOiWh3K56cfe40bfqXDoVPbwgZpZGhYzuG39T86/PFK
2ypzMxlqX3OXMkimw6IBGQ/STjJ8PKLuo/SQDhVO8gh9PoD2e7R5vKAfHbIa
WT4tUiLDQK31w/JX6DCR4uTCqE6G/KfNYmpM6fC46fd+N10yrKwTOr9djQ61
pG0e8RmSoczN/SLOB+jQ1VBovdeYDK83JrBRttHhrJlDTp8pGdqZwftkNjqs
dRJu3GVGhg9nc+ZfLtJgqohRJ/7/Adw3x8WKDtJg/9QWpkJUr+rszN8ntdLg
+5Pn9dROkeFTn79OKpU0ePA7zeq6Fvq+W0ft9uTSoMq7e2HnVciQfOq//Bvp
NPhx7f5RqEiGAVaXrkg/R/v7g5qzhAwZfrp4n9nxMQ0qLc5tOYHOtRbfeMcV
I2jQyl7Hu1iIDMXrnagJd2iwTtnnR/4mMlQd+7X9UQANLl3Z9cmCToZUvRvL
QrdosAXmjn1Dfau14gWdA740OHOdpVx0kgQ//NxRWupDg9YHt/BE9JHgsuqj
sQp03fl25VfJdhLs12ylS/jToK3Unzs8dSh+8ls9WwJpMPENt8DlUhJ0pxaf
/XQXfV8ZTyDIJcEA+W6bTDS+LyElDu8ySZDtab3f6xiUnxj9GWpekqB0V8uO
wAQadJgsuPw6gQQ1I+yNxV7RYFnjhmyDxyjft2jZ27+nQTH/oGetD0jw54xT
v3weDVL7tTuOhpJgrfYVbvsytP9U7rXeDybB/7V03vFYfm8cf8h4MsueZTXI
SEaE3NlJEVkVympQiPqipQglUigkWiJKmSFSkYZRkT3KSFZ2VMTvXJffn+/X
8zz3fcZ1zn17vZz3J1SXSfP7R9L/h4YLtcE0aiLs2+fQVlaKY9r/3r8gGnW9
QpFN+Tt5Py4eERAl9cyRoFXxZpSVOtmr1CV9hkZNfplbt/YvK2V+8k8ED2HD
dK0sbSY6Je56M+sD4deRBolGnHQqLfa0pDa5nkm59/Nufjr1z3m3n8N5GrWh
WmHDgjid+rzelkXmAo3aamySGbGK1OtKh5LgcBp1++ly9kB5OnXuPUeFF2n/
UeMp/1JSb38nj35viaZRUU163GYadOqKK8vZ3Dga1Rp/b1pMh05Vxtn/Gk6k
UcbN0oFyW+iUBtMrhxO3adTI8SoVbwM6lVy4ap/uAxqltsrBa5jUs+wNx8CN
j2hUbIrWnhQTOlXgwCW7I4dGfb5+YnnEVjpVt21CyLeQRtGlTQXyCNsuDZe7
/oLsH99ZJSUI79ZcGEsj89m7a9+JJmM6tU+q0iLhA43qflMk32NIpzZ7HLTY
+4lGeSqcP79Dn04pTIeH9TTQqOYu2vlVFJ1i6nKvk2qjUXV7lyYd16ZTsRnb
mLm/0aj+HHbe7aR/9kasBslk/e9o+DRerEKnnnzNm3rbT/Zvz6jPtYp0SiRQ
9n3IMI0Su378TrwsnXpr+naydpRG5RlkhqyVoZP3xustdyZoVJNWSELUCjo1
uCo44u8U+bs42fR9qxDZL3vKVzeR/UTk5e9nYuT5OhaWHrLxN426XHvvgAuZ
P7rS5D6xPzSqZHTL4VJWsl/xhK8KJ2zOPWWqwUinljw1njlN2Howht41x0rZ
CRueZiQ82mdqWj7DSt1k654RIdfz2r+Gf3CCrC9Hl74acj/GkNIuxxFWav/O
gwZSv2hUob6Sj9wgK3VLJezPykmyH39V+m7Vx0rJuz40/zhGow4LfYzs6mal
vLR/rtIcId9PM5Rt/spKbbWZSXEfolHHD8qHa3WQ539A7pr9ZHx4/kvi5moj
7wcXeIw2kPX5U9Zvxc4WVspGwvVSTxeNulVd3sFE3h/YJ9YcP9NJo2Yyq/et
JfvPJl8eJ4428M3UvyxqZKWycpc7Xm+ikfe0xIV8whmxLPqrvtCoM3V/HYXJ
9wX+JLq/IvP7eHOO0FfCgw0jH4/V0CiZnM/t8P+U+mcPV8H5ESsVP5eTZH39
a9Z03fCWRkUfuiZm2M5Kjag9L9leAf4Rlke25Hk4OPoxOv4VWe/mNd6Z38jn
tbvaBctolJ+6q4tGDyvFLfSl6SN5/pttWKY8Tdbn3JnsrRVk/2g0+Xiwneyn
oSklP2ZIvV5PbvfrJn/fLr+9V+jIMxrlE274YoGMt6CLr+aqAhrlb3Spch2Z
j+fCN+Ql82nUe14FOcdfrJSs6+zK/Xk0SvJD34uo36zUjZW6/r25NOppOFte
/iwrFcGstjmDMM/2Tg84L8bDrnblKeGdm1OG3zHQqfqlTC3/CM/JRX3rIfuB
4pLoumhyvaWXnpXVkfrZ8vbzdjdyP0MXR98oNjrl75bjdoK0p2iQYXgZqTez
xJLaF9DenuI3u7jJ/qCamadB3l91/BqeWy8n9epcNttB+ju+eYnuMlKvI3mZ
yulkPF4yOw2c4yPP++DMkmiyPoV9Fdkfkv3m5Gq+b9EvadTQhkzhCwJ0alQn
uOnOaxold9FDQ0CQTlU4nhopIeOfUWSRDP8fLT/THdpWSaMK4rklgXMOcevN
vKNR145lRQgSvsncPAH/78f3h3lDNLneWG96AyeZ79ItLmpV5H7t8q5e/2rJ
+sidlakh7QlKC/lcT+rD3MxE8SZp71r91AOX68h6PWlau4mHTnX+8TKQJvUU
teXFcPYy8r4rmvAtluwPyrnGd1hI/yf5Kj07G8l6fPNbQ5eMT5ng3Qv/SD26
f85d7sxO/n5ZVRQ61kz2n7T8S8eX0ilDt7qNBS006u4z5pmzZLzl1taJ7SDP
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
       "]]},
     Annotation[#, "Charting`Private`Tag$126182#4"]& ], 
    TagBox[
     {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[0.75], 
      LineBox[CompressedData["
1:eJwU13c8Vl8YAPDXfF97rygRMloUKXFOrvASaSoViUQqJSWjksysoojqJyOj
7E32pdzXyCYjK5vsvX6nv3y+n+uee87zPOc555W4bnfmBj2JRJphIpH+/f1+
5fIJF9udWrvatXycoQFNzn3uwLfrO7WOcdHaBg4Y0IqDplU3L+3Uqmnhzzgj
YUD7m9//PkB3p1Z7EAvDcXoDmkm87H8N0ju1mPe2rJpVnKQpf/A70FUmrnU7
d+eNOOpJWhrPEeaxjB1awjZD6oYX9WlCcNz2cLyY1iEZoepGTypNhg8y5PkI
ayUtql3w6ThBk8x3ahfnFtBaJv4yMuGaNAuP+g77TR4tvyMjZvvIkDYryJjy
mYVT68D0Cp9P2VHaj7dtrOViLFoxR64P3TBVoTV1+N5Po7BosY/JhHueVKE1
/M7YP+LYh6VazubZ3GalmVtLLI/Z9GGFDmnvoTErrYLnxdGFy30Yu2NQraQm
ck/bPLNhH6a/4qPPvZeVJtsmLr0T9mHyvqG8LMKsNJXzvj3WUn3YdUqzndhf
FtrdwS833gn2YTx8S1sqv1hoshkll35S+jCO6/y1VypYaEf58RdnJ3sxHwYp
XloECy3JTTE+K6cXu9rUPyuvy0LLdZ60FE/sxXie7RKMPMhCe9H2we31+17s
Tpe86Q5xFtrNmhbCz60XK+x/YKSxSKHpyKXbtuv1Yu4fjtowfKbQ8G+7TD6V
9WCZBYuVkYwUmpE7e5ZZfA9GHv1Aq5gm0/Tju3z3BvRgBTHR+HwXmZagdDB8
/mIP1jGf4fUwm0zLNClo3T/zG+vwUFpfsSLThAyOGBhLIZ9m2WKrYabxxxyT
NXzbhS2cWlAB/zHRJAJOXtN50oV9gEnH+PyZaA9853kNb3RhG2UyDjNOTDSP
oZH2F8pdmK7Q3O2a80y09/bWT161dmLX7cqU1zmYaKmNE+3yop2Y1NRSNHRj
pNllmVympvzCylf+9OneZqDROPXfXVprxZhiPKNzzOlofO5fkpaHWzHZC+4h
nGfpaLp6vxKim1ux4C90FXe16Gj2MpdPCqW0Ykvs6h06u+lor2UnRt3NW7GL
r95FXJkk0YrlpX5eo7VgjWfvX+d0IdGeds2WSsQ2Y+VlIJTpyBZho/KyUyi4
GZML4L5YuH2L4DaIcRF2a8YOLx1kfEG/RQRtcMMjV5qx+jNdFFizSUh6tb5Y
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
6vguR0kHhXT8Y/TBu4dC+6lqogZZVctp+JEP3K4mZv3Uh9eeJH18k4b3tU7I
j8/2Uf/T1d5T5JSGB0bONjW29FGNTQx+rJim4XvDd2/9yuujkoRGuWhyafiT
59/CtJ/1Ubecjlx/+TwV52htmA3l6KP6zZ/A948k4+bsf02YDvRS9105+sut
5wvOoSThqynUTe1STbM9a/cZFxX+JnDgUBuVRcSlY+96OC6QoFG1R6KGOvdE
n/f5j3B8m/bZHbtHqqmGQWOJoiHhuJ+jXN7d1GrqqbpYFRmFcLxST27wj0Y1
1dHU+bGf6TvcN7nb6qY5jdrxc5/i7cZQ/NSx02JhWVVUu6ODvAcnQ/DTGpKj
isGV1I7TF87xl4XgMe6+zHbXK6lVtYJDKm9D8Odssu2zSpXUbayhqkAjBF/7
JPK9trmCmqC8qW8cEoz/blHmqhatoPZcWy1xpr7GL4CXNtk55dSz9lonTSRe
43ZS4gdO+JVT9bR2SDxeeYV/kpGxEL5WTiXg6/47X17hD1XDj/mwllP51Acf
HeN6hXf5O295Xy+j3htWm+dpDMKLzpNv7z1SRq1W5PCQ8grCSQm7ovi5y6j5
flPfsqYC8fr/RELii0upJzO4oxU/B+J2/60OnQktpS4OpAfIXA7EQ7udFMHd
Uqryns7tITyBOI1FVOO2dilVduYQl+rfAOwYbWheLCaHkFHPTk53CsA/Oamr
3B0poRacvF7lqBCAX12tiCgJKaF2DWffuEYfgF2Q5n9QNJ1NxOc+lY995Y9H
mWuOSk0UU4PeuzqzaPnj5ZsmPw6HF1O11hS8b4v6Y3GeeCa3ZjbhLFA4aZfk
h+s1h54VXSiish7yF7ln7ofr4l0LYzFFVN7GVxdOHfHDTokuVrOHZRFvfWfG
yLUvcXZ7rvMYQxF1O1Ug/L8XL3HLkR3M1ZmF1EXe3zlrl19iDwWT6+OnMokJ
7RgBs1lf3LjTrTZQsJBayvFhwvuLL+7BudhGVH2jxlty+Fm+8MXU40db2/Qz
CQe38+bWYr74+7SSD1P7vlH7s2LJ4q0+uEiriv6v/gJqyx3hHNdUH6x6I2ku
+GsGIWnjXyao74NTgz9FG58soD67n9l9gdkHD+7JBuN0BdRDLcvbDvd6Y5je
stpPzgxi4mCN3NWn3njTzuXivLv5VK9HJ69Lqnnj16t13s5I51Mdjid88BLw
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
ZSAGd3xasx92ZGhaA3/YcsSAnq8mzTfC/jvNNODG8Sp5mJtxThb+7qOuBFt5
ha2Gw1njVeCK8Ft8dDyZi2j97Fgwzg53P3Smbiko+IP8uJLxWRX2+jwxTM93
jJvp86pbw3rhRyLxm2DH+MRmeMezQ/T7dwP9aD9ZHXOMjk/1vGoprZfp4rWw
0Zm8XJp/Ga7icOMZwTdwT8tlYbj5ws4X8GB9Jz9dn0DTJJj5/QAXre99evGw
ZPEbdvq8uXwMbFC0ixFWC+eOhs+VPaP9ey/nwPz+96nuF7zmTXok3NJe+BVO
izxPvZ3tSSf84ucqen+hVjqN98ucyHvwxeiBT7AiwwB9/+mVuhWwwhu2WPhW
97oCmo/hBx7DF2Rc6PmBd9QhGebv3ZUGj0WvToVPsqU/pf/vhLvS+f8XFv+Y
9p92J7o+fCukY+Arn6bo7+fWy4fv0fEM5FTCy6t3RsCGh9Pq6XiZft6Gd6s2
t8GZAnohNP/PKPTBeWImwfCl85d+wLsOLgyCOap9xmm/2u97ExZwzKT/r3uE
vqb3j9rX0f6w6mAyfZ/AnNZK2G6Ol9bXpK+YKK0/n+Fw+OasoyTc0L8tivan
4zLSMOsGlgdwb6GFDCz8VonWY0DfpDzdnxQjaL/9tvr3JnjhYVG6PubTOiqw
XlXMK9jYbWIzvEjkaR7cFs5H+xP7x/giOOKsDr2uoeVbTtdnbS99PsVN7yM8
9WpCCT4g/bOG9h87d0WY+dKhBrjpVbAc/d6y8/T/GQ1P/Y10/t//aYeV8uPW
wTfYs7vg/AuxdL4j6Z29dD9I2CVG568QMwBr7WoUgn1lJgdhzkzdFfBUQt83
2GLwDl1fnQcOdH8aan+/BI49dP0nPX+ksHHAnVz6w7C3nAOND2P2A+qvdlMM
cM/MaurfvTcmEc8pNVn6PtH8Hlq/l69+oN/7s9DvO91/960Zou9b5TYI74zW
pPXwguFdPxxsy9cP+z0zp/UuMvO0B35uq98NC39fQ+efkRxKz5PHdG7Q9TG4
urUDnmRoa4Xt5vTb6XgS1en6KiS4f4Ej5lxoPRUGCtLrdnzJND4hjb3U+q0/
3tP9r5yRvl/CS4vG01LRsQsWM8woofW8Urhn/vziQ+P/WvMLHa90oQutx9wn
lXQ+WjEh+bCm2RDdD5s9G2i/F01T+gbHtRrR/f98QRitDxO/ySxaLwMLftH+
5N5A61lJ0msEtsoffAvfv8BB64fXVSmD7r9Fo3/hkb236XXtvzdofzVeb0yf
t39zmMZTb/t6+n73uYWL4Jb4tdn0vFEXuBjmNNCj4zm3uYPmw6KN/nS86esX
L4WLBFtp/mcqLuaGl31WfwfXHG+j/nPoMZ3/dKkHD+33L1+Vwet9xWm+eX2P
o+vNuUKA3u8SwFw9vz+r0PcfGTSi8WlPVuOC57i9aL0I3xen49n+N7KW1uPc
Lzp+08ToOjiqP56T5iO7Pz1f3dQxoPN9YWHyGV52o4+ux+tHs9Qb3rmxwRaB
VxrhhP5kRnjyvCa1sZ8r3Y+WNvjQ/LkcoTkNs1ZcpM9fHrCj+d60ew393i6X
rzQeoxL36PgsHWrH4DMr1On8BIeHR2GH+hy6v8u5JNPrX/38K+nzSbdofZ29
xESvy6dwzdJ8SLWk15muhdPx9QqdpNcPKUrSeJuP76L23TlK6/GhryS9f4XR
QWrvtt7598lk0/ub8+5Tt7I8px7e9pbaWLiZWi+/lPrOnllq47+F1DZJzPR9
p7zLqKdFmKhPWnygnglhoOapnrcc+XUBB3XM2z1t/noaZyU1w8N572SZd8SR
eW8Ynr9fffm8/wdPVw3G
       "]]},
     Annotation[#, "Charting`Private`Tag$126182#5"]& ], 
    TagBox[
     {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[0.75], 
      LineBox[CompressedData["
1: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
l/q3y6bv6/VP2KAlUj7xiZP61u3tY5Z9A1h6zwtyaAaZOuC/Jz3QuxujPk5d
sX5JR00VVGmUmm3F3nztrX0vtUFRNShNsGyrx0yJCeeyt9cplldknyq9qccC
bZRaLr0baogeF45rKMmlpTwIbnxRtk5xOiawJhpaj1UvbDkO31un+Es3yWi6
12NvTouhD4zrlF83/1adZa3H6B0W2x+PrVG+f2op/DJfh8mWOKSzln5s4I0Z
NdPsyqH5yzWXJz1Yo+iqPP29o6kOY27i3H7nv0Z5d+azWO+rOsxNVLqa7iT+
nZHpVVZyHbY/88VPZ401Sn2lYWRYcB1m9fbAxV/ca5RzO9Pyr7vWYYT5+35f
Fz80HPjwKv+xdA6tx/uyC61zlQIq/M9f6NVhub8PVsjmrVIeCjieH5Wqw3zf
jmpKRqxSbEjKx+XZ67Df+9936LusUiJS4k6GLdViDeSmi777Vim6dvc9lkZr
MTdO+f4nuh8anJde6t4JyqaZ99u9NqBbpZxe58jhK6rF3KuOK3d9XaEsbT4p
r3tQi+Ul/Am/XrNCOZm2tyI0vBYzTGraebh6sOFlaW9XMXc2zaH0eaTm9RVK
7tqIIzpVi1F+7BTZe3qFUjnLvWZArcVW3dYM7gwtU/77uVX/a6gGuyi/11/6
7TKF5P1T+ll+DXb5ZpBfR8dAg22gIFeKwROaUSiRqeTqMoXVqisi3aoGI62/
139utUwJEZRx61KqwWhxwi8qdJYpguY5BxXoa7DKV1GUX4LLlAXJQPm8j9UY
R1PLmsbqEkWjc/DHsfxq7M+L39MiIgMNbaY+268ePaYJpRnFSFUsUc6d7qgS
OlWNGah3WTSnL1GeZNWVaqlUY8whjUthAUuUzmt/D1xjqsaU/7Vfczi9RCEJ
3nT9MVyFOc1FddgYLlEuPn++eamoCos5/M9U7UJ/w57CD2cEyY9pZQ59T7K3
Fykn3JxMme2rMCh4zrHwdZEivnL0I5tOFXbfdJDbrn6R8lg/Ik2LswobHrUR
2trsayjkWWhSz86iJe/ozosJW6RYZIWc26h6h2UqTssdclmkNEhlmKcmvcO6
OC94e/9doHg8eX04dLES+5QydLymZ4HidySY53NnJfaxhJUzVLyvYV72UUn9
10e0sVzipcLkBYoD57j6ZlAldoCV466l/wIlNnjwQvPJSuzLb9oz3tMLFLYJ
JaYSlUrscNnp53/2LlA2fATHW5krsaPDM7fHJRYoQSca1ojfK7AT+xpePg3q
bfiWMnt49sgjGlHEjMg1NU85ItVNvphagZEX+ubg/Txlv1yg6ONLFZirw2jt
SY3eBoLh7gO2XI9oeZK7xH6mzVNG0vy7nZQqMMFZOapd8DzlnVnbkSXmCowz
xH32/VRPww+FovzFjEyauXjF5dQD85SJ1hgb/4a32MRqpKeVyjzF+8N2s/uj
txjXqv5elR3zlPdzshyB199iqRFiK2sRPQ3OVwNMuRcyaB3H35vIjc1RCgbv
Lm5qv8X2KK65mLTOUTzHBq968b/FPGKvnSqwn6N8lJrc5xldju3l3xdI3T9H
Ido/t7vmXo7pW/5O8ezobgiLHDt4J+chzYH3ongJ/xylu8D43oJsORZGFI6J
3/hHKWEQirVjLMesVL9erArvbhDXTN0To/iQxjludi6m7R+lUfXkVlJ9Gbb/
iHBlfuE/ipJF9YmzWWXY0zkFjm6j7oalK/J0P18/oGGmX+i1b/yjMJWmbx88
W4aN7Rf89tAF39+EU/3y3jJsT8+XSpP19w1XPyf8TtZ5QJsOXh58rfWPMrL/
JueuzVIsf/ePodO7/lHSNkPuPxouxfa0vMj2vPS+gfdnL1tq3X1aT4/n29WZ
WcrDpfBc4oNSjN7oyI2pgVmKXFA0+WtAKfbFJUB0rmqW8kt379SwTSlmMaRe
97e+q+Hk88yWVen7NIM21YJ9sbOUV/3Zc6oipdi9QKbYBL9Zyp8lq42IjRLs
iRihKQq6Glyf/eklF6bTitisjM6bzlKusBv1JlaVYBb2ooRN5VnKNvVSiGlG
Cbal5sTwqKqz4YRA5bDj3nRajXkytx1xljKg8UGMZFeCvS+Wfujc/5firMI0
x2tUgu0tfmmvaNjZkBBET2LuTKNdeXh9UffqXwrfyS/HbtOXYL5WF545H/hL
8Wm61TzzoxhDVNka+eqOhnDnZt+l02k0xnzTgn1//1CCb2ATvM+KMUOtmg/L
dX8oF7icr/RFFGPpdzWUf/j1UwZTLT6k+6ViZeM2HuFW/ZRxW2HywaOp2Hup
m7Umev2UMwG31GX2pGIJbCzXJLb6KO5sRWowkYKdMA6/bXi7j2KbRRsRs0rB
PnY+XKHL7KU8dXu4/5ZxMvZ8+HLyqR/dlCXWCZvTqonYkqpN8d+wdsopKxV2
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
trAV3ySgx8OWso//w+vbMmh31G0CqnZutPPB6xHu3iybisLj1aTrFq1DRrde
8rE3xhPQ25n7VhOG+HlBfRGkZLw/WdzV/Y3JKPukkEjOfdw+tdpIwOt7UXpW
JTqLgP7VXovRouH91c61mPeUgN5d7LaxNcP1QeFG8Pwr/P9SWuoluD5dajVY
OVJMQHtuKCcZWeD2+XJXlFYQ0Nld1YkknEOjrR9z1+H1cs/8KQe+Prg9Y+oo
nm/lpGu2Zw+Q0dM96+0enbjeG9jeYNhPRv1rT1Yt+ghI+ulkNvM+MuIPmY+Z
/khA+iuX5AONyKjKWP+APq4Pt6S5yO64P3yte+4of8f1Pc/VYwz39xuVPaoG
rz/rQoulBXUy2myKgO+/CajWk/Nb4R4ymmzRyr/3l4DK2IMfKSjg/p9VuNmO
12/oxL16Tykymh3dXxC+SEAdzLGNUaJkdEWY62n9MgEZBj8dShYgo1O7zSFo
lYC8/wvqeshNRg/lqh++XcPrt01stIAV1xcL6SN+6wSkoWh45zMjGSluHdws
xbk8JztyD55/1tBfWcE4n2Q6dq8E14P7TVI7BvD/W3xhCw5cJCF4EuRWhe8/
bOXfFTNLQkyi3jRYwe1b4FGe/42vj7V1cVgioBfqQ6XFkyR0bpxHeX2egObr
LG9EfichyT4ZpIvr5c17TSHDoySkulJxSP4PAWUodua8HiYhRwff9P4pAhoL
eZ3L8omECDUX7xzA48Xrscg884GE+iZiHiXj8VwXrjW1GsTPb9q0aRoloLUw
wTdmAyTkz4EtjX0moML2+YZGfL5V2ai6r38goJ+y+VM1OP9zj5Xd2U9AKxGP
CTr4eqWBGIUD3bi9dP3zsvh+5yd685M68PtedYZnGH6e0HTqKSaMgNh5lY+Z
DZGQ6VJ+QzZ+H4hONgq58Bmfr9FH2fzrCcjXjMX75xcSQpo1/yJqCKgotrci
7ysJpfGFFn/B3wMtftSmfNz/UO9rJv54/TGuBEVMTJCQLPV8o105/k7H5IZN
8ftW/AzhbEopAd1WhLCWGRIafT/NKFZCQIuGnE6n/pHQo727dq3ielPkLemz
iM/rKo6L6TI4n5CJ2xW7gp+nurXx5A0eHy9x1p0bJKTL0xflg3NdzLPYuG0S
CvgiNB2LM19y66VxOjI6f7lvZRFnvwemurxMZGQmblj0BN8vVsrfkJuZjD7Y
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
wsita5Z+FSIXe/U/uUi+m6bVL0WWChB8eZLcuKO1dCHqVVZCyoWsc+WQuTK5
UXPGe2ty3NxdlzXIZ+Li1DaT5V7HHtYlf5WOstRFfCUlx9eQ39+ccFqK9Yg2
Ll1H/j7Ue1OKrL1YkdeInJt9ih/9OWaf71XY4k5W1z/Kf/08zveG5MCz9yx+
4X5eLthrQA5fJXXgI3m2+rJ3GF/5XJNFI1kme3Ua5ucNuTC3kjx65dyllWSr
Nzo9z8iqvs9PqpBHK6Or0snLn9WFo//dEeV6mUh++2TK5Plka7m9o3fJtdLK
tZLkglwD+wjy1p/HZ88it5YVCNwgu15b8G8qefv5nMErZB3DB9c5yE2lp+RC
yAMS0yYGKf6LD3D6B5ObxYO39JD/SzozH75u5n3/E3l4qko3/GL3Vqlm8t4Q
l9f4vefTwrJa8kOpDWVXySe6Q7+Wk1s01e5i/sFMWft81N/oZVusr0l8xCwb
/b1ZvCeGfPy+VV4q6uvlTJX7mC/r4KP75M0/0iVSyVWZ/GvukotSbIKyyKli
2z0iyM396z2e4/ebYyxuYLxT8bllZD4Fka4rqE/3S/o15IBFlhqXyRJNy4be
Il67qvTQb5qTk4vbyX+vFHBeIq/zkQ/+jn7675wP6j921shqnG/LFQuyL5Df
afwrHyErLLgZDb//9nUGF9XDnCPPNPD+lG0u3HzkF7HGHv7kQr/lN4TIFdus
THHfTRcSypYgl9Z+fhJEVklbtF2W/Gu3z6MQ8qcZ3PvRL0qsbsleI6/3N/yi
QJ5WNPAP+3PlcCtRJv+cZ6GH/Q/7/BtbQf5+qb42mvxTwuXSStS7w0BCHPmf
7Cpn3EffYvQyE8lmGz2jUO/6x6W6EO+mWod5q8hlXcorM9EPf6ePwf9bcyM0
D+d314Zlq8k5foe+IX8uK6UL8DyuT2BZKVm7/F8G+tnpc+v/e4F4bqwTxfje
AQE7a8ha5Ut/amE/PCuXNJB3VTwywvq+t5TlNZFrePUV1Mi+E3WTW8kbRNfF
L8f5VlzK0UF+UKNSivO40q/yXid5Y3DitcXkjuL3P76S95dOmitPntun2tCF
9cxPO4l49uy6a4n6ndBekiyJ/VdGHPyJ+ugeKhYlJ4dukftNrnWfUSOI/ayO
cOxDvduLNaN/JwvZGPaTEznzf/OQT7Q0PoGrVQTnIt8B3etewpv1bnvg/P+n
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
       "]]},
     Annotation[#, "Charting`Private`Tag$126182#6"]& ]}, {}},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "ScalingFunctions" -> 
    None},
  PlotRange->{{0, 10.5}, {0, 10.5}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.88840448212053*^9},
 CellLabel->
  "Out[232]=",ExpressionUUID->"d51d76e3-94fe-4974-845c-40ed02187ac4"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Fig 9 b", "Subsubsection",
 CellChangeTimes->{{3.888402521166562*^9, 
  3.8884025624936743`*^9}},ExpressionUUID->"6046c041-9359-4644-94e0-\
6eb150ec0681"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Clear", " ", "all", " ", "variables"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], ";"}]}]], "Input",
 CellLabel->
  "In[173]:=",ExpressionUUID->"439898a9-adff-433c-9a99-5e2829c5b1fb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Define", " ", "the", " ", "dynamical", " ", "system", " ", "for", " ", 
    "coupled", " ", "dark", " ", "matter", " ", 
    RowBox[{"(", "z", ")"}], " ", "and", " ", "dark", " ", "energy", " ", 
    RowBox[{"(", "x", ")"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"de1t", ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"x1", "'"}], "[", "t", "]"}], "==", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "3"}], "*", 
       RowBox[{"y1", "[", "t", "]"}], "*", 
       RowBox[{"x1", "[", "t", "]"}], "*", 
       RowBox[{"(", 
        RowBox[{"1", "+", "wx", "+", 
         RowBox[{"\[Epsilon]", "*", 
          RowBox[{"x1", "[", "t", "]"}]}]}], ")"}]}], "-", 
      RowBox[{"q", "*", 
       RowBox[{"x1", "[", "t", "]"}], "*", 
       RowBox[{"y1", "[", "t", "]"}], "*", 
       RowBox[{"z1", "[", "t", "]"}]}]}]}]}], "\[IndentingNewLine]", 
   RowBox[{"de2t", ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"y1", "'"}], "[", "t", "]"}], "==", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"y1", "[", "t", "]"}], "^", "2"}]}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "/", "6"}], ")"}], "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"x1", "[", "t", "]"}], "+", 
         RowBox[{"z1", "[", "t", "]"}], "+", 
         RowBox[{"3", "*", "wx", "*", 
          RowBox[{"x1", "[", "t", "]"}]}], "+", 
         RowBox[{"3", "*", "\[Epsilon]", "*", 
          RowBox[{
           RowBox[{"x1", "[", "t", "]"}], "^", "2"}]}]}], ")"}]}]}]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"de3t", ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"z1", "'"}], "[", "t", "]"}], "==", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "3"}], "*", 
       RowBox[{"y1", "[", "t", "]"}], "*", 
       RowBox[{"z1", "[", "t", "]"}]}], "+", " ", 
      RowBox[{"q", "*", 
       RowBox[{"x1", "[", "t", "]"}], "*", 
       RowBox[{"y1", "[", "t", "]"}], "*", 
       RowBox[{"z1", "[", "t", "]"}]}]}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.888401218788467*^9, 3.888401273947598*^9}, {
  3.888401348229657*^9, 3.888401349531745*^9}},
 CellLabel->
  "In[174]:=",ExpressionUUID->"eac1cf62-20a9-4ec0-9760-555018b4758f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"q", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wx", "=", 
   RowBox[{"-", "0.6"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Epsilon]", "=", 
   RowBox[{"-", "0.25"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.887977889055066*^9, 3.8879778890554047`*^9}, {
   3.8879783492505503`*^9, 3.8879783568319263`*^9}, {3.8884013253873777`*^9, 
   3.888401334714533*^9}, 3.888401731282817*^9, {3.888402581169729*^9, 
   3.88840260350963*^9}},
 CellLabel->
  "In[177]:=",ExpressionUUID->"6183e03b-48c0-4a58-9977-ec64b86f0299"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"traj", "[", 
     RowBox[{"x0_", ",", "y0_", ",", "z0_"}], "]"}], "=", 
    RowBox[{"NDSolve", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"de1t", ",", "de2t", ",", "de3t", ",", " ", 
        RowBox[{
         RowBox[{"x1", "[", "0", "]"}], "==", "x0"}], ",", 
        RowBox[{
         RowBox[{"y1", "[", "0", "]"}], "==", "y0"}], ",", 
        RowBox[{
         RowBox[{"z1", "[", "0", "]"}], "==", "z0"}]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"x1", ",", "y1", ",", "z1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", 
        RowBox[{"-", "50"}], ",", "50"}], "}"}]}], "]"}]}], ";"}], 
  " "}]], "Input",
 CellChangeTimes->{{3.8438885804511986`*^9, 3.843888581311265*^9}, {
  3.8438938592742786`*^9, 3.843893939219122*^9}, {3.8438941114297333`*^9, 
  3.8438942191846347`*^9}, {3.843894249969864*^9, 3.843894346269736*^9}, {
  3.8438944055744495`*^9, 3.843894799140247*^9}, {3.8438948607399817`*^9, 
  3.8438948847105308`*^9}, {3.844144226711842*^9, 3.844144269018071*^9}, {
  3.887979872791584*^9, 3.887979910367338*^9}, {3.887980029651232*^9, 
  3.887980031254677*^9}, {3.888055637414365*^9, 3.8880556536066236`*^9}, {
  3.8880559265002527`*^9, 3.888055942599481*^9}, {3.888385806342004*^9, 
  3.888385807953027*^9}, {3.888401283220417*^9, 3.8884012975687943`*^9}, {
  3.8884013397587967`*^9, 3.888401343483832*^9}, {3.888402725276833*^9, 
  3.888402726925267*^9}, {3.888402998410335*^9, 3.8884030109803867`*^9}},
 CellLabel->
  "In[180]:=",ExpressionUUID->"58522eef-22b3-4b87-811a-852aec920e79"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve", "ndinnt", 
   "\"Initial condition \\!\\(\\*RowBox[{\\\"x0\\\"}]\\) is not a number or a \
rectangular array of numbers.\"", 2, 180, 73, 18332645112968276501, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.888310947399899*^9, 3.888385574514182*^9, 3.8883856324712677`*^9, 
   3.888385739330179*^9, 3.888385830216976*^9, {3.8884013373018436`*^9, 
   3.888401352004178*^9}, 3.888401735657505*^9, {3.888402605129703*^9, 
   3.8884026268330927`*^9}, 3.888402727363521*^9, {3.8884030003984747`*^9, 
   3.888403012046533*^9}, 3.888403190474678*^9},
 CellLabel->
  "During evaluation of \
In[180]:=",ExpressionUUID->"e3ecfcac-35bd-42de-8b86-a874ecf106b6"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"sol", "[", "1", "]"}], "=", 
   RowBox[{"traj", "[", 
    RowBox[{"2", ",", "0.1", ",", "0.009"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sol", "[", "2", "]"}], "=", 
   RowBox[{"traj", "[", 
    RowBox[{"0.5", ",", "0.1", ",", "0.009"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sol", "[", "3", "]"}], "=", 
   RowBox[{"traj", "[", 
    RowBox[{"5", ",", "0.1", ",", "0.009"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sol", "[", "4", "]"}], "=", 
   RowBox[{"traj", "[", 
    RowBox[{"4", ",", "0.1", ",", "0.009"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sol", "[", "5", "]"}], "=", 
   RowBox[{"traj", "[", 
    RowBox[{"1", ",", "0.1", ",", "0.009"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.887978731059854*^9, 3.887978757612252*^9}, {
   3.887978845812172*^9, 3.887978859965249*^9}, {3.88797894002472*^9, 
   3.8879789403355103`*^9}, {3.88797897759439*^9, 3.88797901355768*^9}, 
   3.887979128052725*^9, {3.88797923767091*^9, 3.887979237845546*^9}, {
   3.887979375257626*^9, 3.88797939675972*^9}, {3.887979429202385*^9, 
   3.887979516979513*^9}, {3.887979558765677*^9, 3.887979566700461*^9}, {
   3.887979612678831*^9, 3.887979664270924*^9}, {3.887979922277718*^9, 
   3.887979997391836*^9}, 3.887980080905983*^9, {3.8879801208038273`*^9, 
   3.88798015412414*^9}, {3.888054939843245*^9, 3.888054943018937*^9}, {
   3.888055844364393*^9, 3.8880558605745296`*^9}, {3.888055913193152*^9, 
   3.888055918216709*^9}, 3.8880559966976633`*^9, {3.888056036287993*^9, 
   3.888056085299884*^9}, {3.88805612209927*^9, 3.8880561244131937`*^9}, {
   3.88805618652389*^9, 3.888056190803598*^9}, {3.8883009702722473`*^9, 
   3.888301001671629*^9}, {3.8883010401298227`*^9, 3.888301112638144*^9}, 
   3.888301171388793*^9, {3.888301202257996*^9, 3.8883012287725487`*^9}, {
   3.888401380694333*^9, 3.8884013833951883`*^9}, {3.888401462909256*^9, 
   3.888401475754928*^9}, {3.888402651297779*^9, 3.8884027057433147`*^9}, {
   3.888402766916638*^9, 3.888402773252879*^9}, {3.888402855974597*^9, 
   3.888402864196711*^9}, {3.888402903096746*^9, 3.888402946812313*^9}, {
   3.888403012736313*^9, 3.888403096157276*^9}, {3.8884032087548103`*^9, 
   3.888403247818666*^9}},
 CellLabel->
  "In[206]:=",ExpressionUUID->"51bf51ec-b710-484e-b49d-a6b504bafda0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", 
  RowBox[{"Evaluate", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x1", "[", "t", "]"}], ",", 
         RowBox[{"y1", "[", "t", "]"}]}], "}"}], "/.", 
       RowBox[{"sol", "[", "i", "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "5"}], "}"}]}], "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"t", ",", 
      RowBox[{"-", "50"}], ",", "50"}], "}"}], ",", 
    RowBox[{"PlotStyle", " ", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"Gray", ",", " ", 
        RowBox[{"Opacity", "[", "0.75", "]"}]}], "}"}], "}"}]}], ",", 
    RowBox[{"PlotRange", "->", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "}"}]}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.887979052254037*^9, 3.887979188623329*^9}, {
   3.887979228021886*^9, 3.887979401632031*^9}, {3.8879794459550867`*^9, 
   3.887979470345598*^9}, {3.887979600112005*^9, 3.88797960112506*^9}, {
   3.887979692930244*^9, 3.88797971039893*^9}, {3.887979803249867*^9, 
   3.887979842918675*^9}, {3.8879800704105587`*^9, 3.8879801035747423`*^9}, {
   3.8880557121793327`*^9, 3.888055759237444*^9}, {3.888055829243101*^9, 
   3.8880558350643997`*^9}, {3.8880558766966743`*^9, 3.888055894503551*^9}, {
   3.888055934499653*^9, 3.8880559569798098`*^9}, 3.888056008344767*^9, 
   3.8880560546239023`*^9, {3.8880560971933813`*^9, 3.888056164628825*^9}, 
   3.888057209628414*^9, {3.8883010969077797`*^9, 3.888301106866012*^9}, 
   3.88838581273239*^9, {3.888401301027873*^9, 3.888401314603023*^9}, {
   3.888401394687004*^9, 3.888401408667405*^9}, {3.8884017594302588`*^9, 
   3.888401789202386*^9}, {3.888402657936475*^9, 3.888402689151956*^9}, {
   3.8884027196816397`*^9, 3.888402747418346*^9}, 3.888402867655637*^9, {
   3.888402952199245*^9, 3.8884030158848963`*^9}, 3.88840319449933*^9},
 CellLabel->
  "In[211]:=",ExpressionUUID->"e0891166-4fd0-4abc-ac29-1aa17e343851"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[0.75], 
      LineBox[CompressedData["
1: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
cwbg7z3N23WFhuv+Fm/WN2OA/wF6gH3q
       "]]},
     Annotation[#, "Charting`Private`Tag$119223#1"]& ], 
    TagBox[
     {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[0.75], 
      LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$119223#2"]& ], 
    TagBox[
     {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[0.75], 
      LineBox[CompressedData["
1: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
2vNRTcMgAK5XVAqQIO6AbHcZW6TjB19/e8LSi8sHTrXO20VvnIY5+7ou6asz
QfuIZjbvAR+4w/MCj+G+XLDhxyDJb8ILDlae6b/kmQNiospZ8z2e8FNPyqZ9
37NAWeh5uY6PHrAwOmhyMSYTmDkP9CZNusO4RIV7BQczgI4NvbtXzR3OvVFl
NpilAwdJ0kn6GTfYnJnTJHYoDaSqJ8nn5pyCtpZ5Ub4RqeA198BawDlX6Gav
Q9iGpQD7lruZS3YnIT33as3eNQYIkRl/vuLkAv0zbnL9xHTAeDk/3eLgAlV6
Hd8WPqcDLU789TwbF/hqq0myYw0d2EUGTlIsXKDe9oj5/yulg3unjxzL2usC
XU1Vle5m0UGcKyQniLjAp0ZOuq0BdBBgnG3p30mF1lV3kq5J0EGrTtt7z3Yq
LMvcpXqOTAfrdhoXu76lwtBi31vuW+jAo+qwvnMjFc5KCvAa89ABy5i0jvqE
CoNHNSrEZ2lg86i+/61MKizK3JK+rZkGQIBFTnkqFcprmEsoNdLAlMnh9ZBO
hU1y7T6amAbUEmuf9V6lQo1xPjvLGhrY6CWspx1OhQapahbpBTTAz1yLtgqh
wnKm3Lf7N2nA0eblX68zVJifV2/yIocGzBsPNjC9qbDWUGzfEoMG5GxekJ65
/+fNoy3kJBp4Mh4XzT5Jhd+FkyR0rtKAVMyYztJxKtRJ5ZE/GkMDIVO2quLH
qJBWdXooMooG/gcomGNv
       "]]},
     Annotation[#, "Charting`Private`Tag$119223#3"]& ], 
    TagBox[
     {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[0.75], 
      LineBox[CompressedData["
1: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
lQPLFTtSOY0C/wfUAMqa
       "]]},
     Annotation[#, "Charting`Private`Tag$119223#4"]& ], 
    TagBox[
     {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[0.75], 
      LineBox[CompressedData["
1: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
d5mY/BwP/wO40pLG
       "]]},
     Annotation[#, "Charting`Private`Tag$119223#5"]& ]}, {}},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{1124.25, 753.},
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "ScalingFunctions" -> 
    None},
  PlotRange->{{0, 10}, {-3, 3}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.888301030336822*^9, 3.888301114960032*^9}, 
   3.888301173925928*^9, {3.888301205127512*^9, 3.888301234454039*^9}, 
   3.8883109477529917`*^9, 3.888385574889071*^9, 3.888385742193818*^9, 
   3.888385831174666*^9, {3.888401369404501*^9, 3.888401409241605*^9}, 
   3.888401478708088*^9, {3.888401738446601*^9, 3.8884017898472633`*^9}, {
   3.888402629567595*^9, 3.88840274794925*^9}, 3.888402868242173*^9, {
   3.888402904739884*^9, 3.8884029210149517`*^9}, 3.888402952812084*^9, {
   3.88840298558711*^9, 3.888403016305736*^9}, {3.888403053713262*^9, 
   3.888403098092869*^9}, {3.888403191510972*^9, 3.888403249763896*^9}},
 CellLabel->
  "Out[211]=",ExpressionUUID->"56389543-af96-43a2-99c9-d5e385a4bda5"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1440., 782.25},
WindowMargins->{{1440, Automatic}, {0, Automatic}},
TaggingRules-><|"TryRealOnly" -> False|>,
FrontEndVersion->"13.1 for Linux x86 (64-bit) (June 16, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"09e6c285-f7ff-46e3-a8cf-7502be34a98b"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 162, 3, 98, "Title",ExpressionUUID->"4f8dd6d0-bdcb-4e22-8002-cec151dc518d"],
Cell[CellGroupData[{
Cell[767, 29, 290, 6, 68, "Section",ExpressionUUID->"934bac1c-9c7c-4aaf-8375-244abd6c5bbe"],
Cell[1060, 37, 905, 26, 93, "Input",ExpressionUUID->"4f2b3283-30ed-4a70-be21-a08102c8b296"],
Cell[1968, 65, 706, 19, 73, "Input",ExpressionUUID->"80a92158-4335-4178-8e6e-ef7d7e9ab438"],
Cell[CellGroupData[{
Cell[2699, 88, 2217, 56, 115, "Input",ExpressionUUID->"10ab93a6-55c7-40af-88f0-28f4b690b097"],
Cell[4919, 146, 2350, 47, 626, "Output",ExpressionUUID->"54e0b0a2-e42d-423d-a3fa-e48069b7be9e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[7318, 199, 294, 6, 75, "Section",ExpressionUUID->"baa56de3-431e-4ef1-bafa-11fe058a1dbb"],
Cell[7615, 207, 1066, 28, 73, "Input",ExpressionUUID->"a1875164-ac45-472d-8739-d7ae5793612b"],
Cell[CellGroupData[{
Cell[8706, 239, 595, 16, 52, "Input",ExpressionUUID->"3c910a45-46ea-44f4-8300-154a37136f60"],
Cell[9304, 257, 661, 20, 55, "Output",ExpressionUUID->"908c68f3-ca9b-4f94-b638-c76da09ed1f2"]
}, Open  ]],
Cell[9980, 280, 915, 29, 51, "Input",ExpressionUUID->"2527b036-8a35-4803-aa90-f57f6c7210f4"],
Cell[10898, 311, 955, 21, 52, "Input",ExpressionUUID->"6bbb93db-9be2-440e-bc00-a260b4f33e6d"],
Cell[CellGroupData[{
Cell[11878, 336, 1426, 34, 75, "Input",ExpressionUUID->"724a626f-8f7a-40fa-9279-fb024d12a3c6"],
Cell[13307, 372, 1708, 41, 72, "Output",ExpressionUUID->"c6fdd1c6-2200-44aa-bbbd-5481c615b3b9"]
}, Open  ]],
Cell[15030, 416, 3980, 87, 73, "Input",ExpressionUUID->"98391c92-751f-4913-a7df-e13d3b9cf583"],
Cell[CellGroupData[{
Cell[19035, 507, 1356, 26, 54, "Input",ExpressionUUID->"79976a66-8e8b-4e03-9a78-1cb5b7e7156e"],
Cell[20394, 535, 7554, 215, 151, "Output",ExpressionUUID->"f9f1f653-c422-4875-bdf6-f7ec75b70a7c"]
}, Open  ]],
Cell[27963, 753, 672, 19, 73, "Input",ExpressionUUID->"7c14175f-1b58-4be5-b371-72a2f40bd6cd"],
Cell[CellGroupData[{
Cell[28660, 776, 1017, 28, 29, "Input",ExpressionUUID->"770db4d9-3641-48af-a5b1-738640a46834"],
Cell[29680, 806, 2001, 40, 533, "Output",ExpressionUUID->"ca2d3fe5-f89b-4f0f-af6d-6b41a94e010a"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[31730, 852, 285, 6, 68, "Section",ExpressionUUID->"1986ee19-e1e4-40ed-ad83-0a8b363a8d07"],
Cell[CellGroupData[{
Cell[32040, 862, 167, 3, 54, "Subsection",ExpressionUUID->"f0afda35-ef1e-49d2-a869-54c3757c6752"],
Cell[32210, 867, 1116, 29, 73, "Input",ExpressionUUID->"1b61d005-30c6-4387-a72d-e7cb1b20bebd"],
Cell[CellGroupData[{
Cell[33351, 900, 594, 16, 52, "Input",ExpressionUUID->"e5bb7e66-b80f-4782-8394-c56e1d4025dc"],
Cell[33948, 918, 1117, 31, 58, "Output",ExpressionUUID->"084f85a9-cd7e-4efd-a1b9-480aff84470f"]
}, Open  ]],
Cell[35080, 952, 1351, 44, 71, "Input",ExpressionUUID->"c7094358-c68c-4901-99e8-e89144fef781"],
Cell[36434, 998, 930, 21, 52, "Input",ExpressionUUID->"0580e945-1232-43c3-be44-c0b4ef8b727b"],
Cell[CellGroupData[{
Cell[37389, 1023, 1425, 34, 75, "Input",ExpressionUUID->"8fd7f574-1f97-40cf-bc9e-54b8c4370a45"],
Cell[38817, 1059, 1328, 38, 72, "Output",ExpressionUUID->"9fad4d84-4613-465e-9b89-a99210600673"]
}, Open  ]],
Cell[40160, 1100, 3956, 87, 73, "Input",ExpressionUUID->"87fd21d2-bbe9-4ae8-8918-6a1eb12816e2"],
Cell[CellGroupData[{
Cell[44141, 1191, 1356, 26, 54, "Input",ExpressionUUID->"9d3b3f8b-a93f-44a2-ac91-8b32bc629dce"],
Cell[45500, 1219, 14030, 385, 228, "Output",ExpressionUUID->"de53e7d6-261e-406a-961d-0698253f7a89"]
}, Open  ]],
Cell[CellGroupData[{
Cell[59567, 1609, 952, 25, 54, "Input",ExpressionUUID->"884bd2e3-9eea-4b8f-ab3a-3ff3e667d6ef"],
Cell[60522, 1636, 454, 10, 28, "Message",ExpressionUUID->"abee2519-9a6c-4ba1-aa7d-7f55bdea53ff"],
Cell[60979, 1648, 755, 21, 61, "Output",ExpressionUUID->"e7fab54d-3f62-4589-b87f-2331aff05c4c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[61771, 1674, 290, 6, 29, "Input",ExpressionUUID->"3dc31020-6606-434d-8a47-10029c332d3c"],
Cell[62064, 1682, 447, 12, 61, "Output",ExpressionUUID->"9af4fb67-150b-437f-82af-b36ed7989012"]
}, Open  ]],
Cell[CellGroupData[{
Cell[62548, 1699, 1055, 22, 52, "Input",ExpressionUUID->"7e6aa430-e5f6-463e-803b-65f511f27630"],
Cell[63606, 1723, 503, 7, 33, "Output",ExpressionUUID->"d3f2b29b-e51d-41f6-b304-702f7e698d27"]
}, Open  ]],
Cell[CellGroupData[{
Cell[64146, 1735, 790, 19, 52, "Input",ExpressionUUID->"3c5a6619-e270-47c9-97b7-8deb3012b6f3"],
Cell[64939, 1756, 249, 5, 33, "Output",ExpressionUUID->"06ef4c47-6d2f-4c87-9f8c-ed32546ea3a6"]
}, Open  ]],
Cell[65203, 1764, 786, 19, 73, "Input",ExpressionUUID->"34729365-4981-40bb-8a41-4786488d412d"],
Cell[CellGroupData[{
Cell[66014, 1787, 1418, 34, 51, "Input",ExpressionUUID->"16ecb7b2-b31a-40df-9768-3b60ff08bc26"],
Cell[67435, 1823, 2157, 43, 578, "Output",ExpressionUUID->"e932317f-1b54-4270-9d5d-80fb87670732"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[69641, 1872, 169, 3, 54, "Subsection",ExpressionUUID->"8e3ce21e-65db-4c6c-93a7-5dc1a0db2e64"],
Cell[69813, 1877, 1742, 45, 94, "Input",ExpressionUUID->"d0766ccf-708a-4528-8ab9-182d61e51ef3"],
Cell[CellGroupData[{
Cell[71580, 1926, 963, 22, 52, "Input",ExpressionUUID->"73ac217e-fd2f-4419-8e84-b3864ed42f7b"],
Cell[72546, 1950, 408, 10, 28, "Message",ExpressionUUID->"028e6d87-e24e-418a-88be-9c0724db7aab"],
Cell[72957, 1962, 2804, 91, 114, "Output",ExpressionUUID->"83991068-c4f5-45c6-8642-4144771645f1"]
}, Open  ]],
Cell[75776, 2056, 3950, 121, 155, "Input",ExpressionUUID->"32a02369-c4ba-4ff0-b16a-9768bfe6f69d"],
Cell[79729, 2179, 801, 19, 52, "Input",ExpressionUUID->"5c57a213-ead3-45f6-ac32-19c522d26674"],
Cell[CellGroupData[{
Cell[80555, 2202, 1727, 44, 75, "Input",ExpressionUUID->"85982ac0-3f65-475b-a652-21f957fdb221"],
Cell[82285, 2248, 2617, 69, 103, "Output",ExpressionUUID->"8b1154b7-df5f-4ce0-bc6d-99cca33b590e"]
}, Open  ]],
Cell[84917, 2320, 4336, 97, 73, "Input",ExpressionUUID->"710bc041-6d6d-4ed4-ac54-4be349df37cb"],
Cell[CellGroupData[{
Cell[89278, 2421, 1356, 26, 54, "Input",ExpressionUUID->"9cb904e4-b4b9-44d8-989d-63a1e02c3035"],
Cell[90637, 2449, 71319, 1814, 636, "Output",ExpressionUUID->"d523581d-ca73-40ee-9150-7a7062c614ea"]
}, Open  ]],
Cell[161971, 4266, 865, 20, 71, "Input",ExpressionUUID->"98cc73a0-c2ab-4a12-9694-9eeb54f24e4c"],
Cell[CellGroupData[{
Cell[162861, 4290, 1990, 45, 51, "Input",ExpressionUUID->"178e33f8-ea4e-4708-afa2-4876b8dc892a"],
Cell[164854, 4337, 2334, 47, 580, "Output",ExpressionUUID->"6db918a3-4e01-454b-8eff-d4845ba77165"],
Cell[167191, 4386, 439, 9, 28, "Message",ExpressionUUID->"c04b3e8c-7b38-420d-a1b0-8f323ab1a556"],
Cell[167633, 4397, 4861, 70, 157, "Message",ExpressionUUID->"f685f469-dbd1-4fcb-ab1b-e9784bcc3c11"],
Cell[172497, 4469, 362, 8, 28, "Message",ExpressionUUID->"d70c196f-38fc-4a00-aa3b-38acf2bd7778"],
Cell[172862, 4479, 563, 10, 28, "Message",ExpressionUUID->"3e03e2cd-4d04-443e-9217-ac90233fb7fd"],
Cell[173428, 4491, 590, 11, 28, "Message",ExpressionUUID->"50afdfd4-63b5-4e4a-b8e2-d0d36f63d46d"],
Cell[174021, 4504, 601, 11, 28, "Message",ExpressionUUID->"5a58ee9e-cc88-4045-82d2-efc46d008b77"],
Cell[174625, 4517, 1073, 18, 60, "Message",ExpressionUUID->"19111d73-d596-4923-bfb1-9787df7561a0"],
Cell[175701, 4537, 439, 9, 28, "Message",ExpressionUUID->"c4b20223-8446-468b-b5f1-a0ca5b763fa7"],
Cell[176143, 4548, 4891, 70, 157, "Message",ExpressionUUID->"2be4d711-28cc-4d95-91b9-6e93bf90a587"],
Cell[181037, 4620, 360, 8, 28, "Message",ExpressionUUID->"98e4c26b-12ab-493e-9f7a-e77fbd35e2f8"],
Cell[181400, 4630, 417, 8, 28, "Message",ExpressionUUID->"1c8be64a-dc29-40f3-adc6-d16721f0576b"],
Cell[181820, 4640, 563, 10, 28, "Message",ExpressionUUID->"48365f71-1d2b-4ec7-b0a6-5c33a0b77410"],
Cell[182386, 4652, 589, 11, 28, "Message",ExpressionUUID->"cebe8b49-44d2-4a66-a524-e128dd541228"],
Cell[182978, 4665, 1073, 18, 60, "Message",ExpressionUUID->"5b212056-4db0-47e5-9fe9-f64c0520e431"],
Cell[184054, 4685, 437, 9, 28, "Message",ExpressionUUID->"58016237-5d46-45f4-b44a-adc52bf1793e"],
Cell[184494, 4696, 418, 8, 28, "Message",ExpressionUUID->"21f00d98-dcaf-4df7-9eb0-9fe8c2f57025"],
Cell[184915, 4706, 4893, 70, 157, "Message",ExpressionUUID->"d0abcb15-72ce-4269-977e-eabddbdea507"],
Cell[189811, 4778, 414, 8, 28, "Message",ExpressionUUID->"77534147-4494-4b03-81e0-df9838fb3782"],
Cell[190228, 4788, 565, 10, 28, "Message",ExpressionUUID->"fe51e683-4590-4b95-b6d5-f06c8e9c7c46"],
Cell[190796, 4800, 425, 8, 28, "Message",ExpressionUUID->"e16523aa-c903-4c50-986b-d09b4a0b37fc"],
Cell[191224, 4810, 590, 11, 28, "Message",ExpressionUUID->"5d21a25c-2929-4c1f-8a3a-6c864bfc2fe5"],
Cell[191817, 4823, 428, 8, 28, "Message",ExpressionUUID->"ea35e937-b0d7-4576-bc3a-011621e160ac"],
Cell[192248, 4833, 1071, 18, 60, "Message",ExpressionUUID->"9ac303ab-bf1f-4b68-9738-bf351e966845"],
Cell[193322, 4853, 416, 8, 28, "Message",ExpressionUUID->"e0952e6d-7776-4be5-8d5a-59e76d5d51b5"],
Cell[193741, 4863, 437, 9, 28, "Message",ExpressionUUID->"b54e6b85-7610-4418-870e-f15c5e9123c2"],
Cell[194181, 4874, 5005, 75, 184, "Message",ExpressionUUID->"05708274-06f4-4c80-ab82-fbff8164d0b2"],
Cell[199189, 4951, 360, 8, 28, "Message",ExpressionUUID->"33fc8d96-4d2e-4dd0-a448-3e8a940ed68d"],
Cell[199552, 4961, 563, 10, 28, "Message",ExpressionUUID->"605c5c85-0806-4b96-a799-1571570b29c9"],
Cell[200118, 4973, 590, 11, 28, "Message",ExpressionUUID->"b60bd0a6-70ab-45be-9949-437dfc0ceca4"],
Cell[200711, 4986, 601, 11, 28, "Message",ExpressionUUID->"a1b0c923-4644-45a2-86ac-3eacf794b092"],
Cell[201315, 4999, 1080, 18, 76, "Message",ExpressionUUID->"e5a199f1-5dce-4948-9561-8f6209fac720"],
Cell[202398, 5019, 437, 9, 28, "Message",ExpressionUUID->"1cab2866-f1d6-4c62-8d4b-6dfb2f5ab1a0"],
Cell[202838, 5030, 5031, 73, 184, "Message",ExpressionUUID->"8e0f52b1-cb4f-47c9-a060-1c3f3ad0bfa5"],
Cell[207872, 5105, 360, 8, 28, "Message",ExpressionUUID->"ed706088-333c-4941-834d-e4254e591836"],
Cell[208235, 5115, 417, 8, 28, "Message",ExpressionUUID->"f8167b63-e73f-4078-879a-8a0a3c93a3d8"],
Cell[208655, 5125, 565, 10, 28, "Message",ExpressionUUID->"97b44b45-34c8-49d2-828c-84f001057471"],
Cell[209223, 5137, 590, 11, 28, "Message",ExpressionUUID->"6280d5a8-e1c5-4450-a0cc-7bab461fed14"],
Cell[209816, 5150, 1082, 18, 76, "Message",ExpressionUUID->"cfeb3186-d6b3-44ca-bbdc-fe13ddecc827"],
Cell[210901, 5170, 439, 9, 28, "Message",ExpressionUUID->"005ac9ae-ab6a-4b37-bfa8-452f460ace2d"],
Cell[211343, 5181, 420, 8, 28, "Message",ExpressionUUID->"40adc877-dd64-4fbd-a6fe-85389bcde189"],
Cell[211766, 5191, 5033, 73, 184, "Message",ExpressionUUID->"ef787a4f-330c-4c30-b6b7-e85a42792e24"],
Cell[216802, 5266, 416, 8, 28, "Message",ExpressionUUID->"237186c6-b5e7-485b-a363-d02035a0d81d"],
Cell[217221, 5276, 565, 10, 28, "Message",ExpressionUUID->"10d813fd-5b5c-448d-b36a-a4b0f2fdb949"],
Cell[217789, 5288, 425, 8, 28, "Message",ExpressionUUID->"2b1be84e-71cb-43ac-8516-4af71ee11c9a"],
Cell[218217, 5298, 590, 11, 28, "Message",ExpressionUUID->"36823f51-9dee-403b-9045-159bf536b3ab"],
Cell[218810, 5311, 429, 8, 28, "Message",ExpressionUUID->"6ea64692-af3f-4ee0-838f-1badf4aa9465"],
Cell[219242, 5321, 1081, 18, 76, "Message",ExpressionUUID->"e0d819f7-e3eb-4ed0-8b45-d135303a7676"],
Cell[220326, 5341, 417, 8, 28, "Message",ExpressionUUID->"571d8ebb-0b70-4712-b4d0-1953381f15d0"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[220792, 5355, 267, 4, 54, "Subsection",ExpressionUUID->"fd2fd6be-667a-40f0-bbfc-6481b4edbcb9"],
Cell[CellGroupData[{
Cell[221084, 5363, 158, 3, 45, "Subsubsection",ExpressionUUID->"a6ec4fb6-a982-48fa-8f9b-58907ff08a76"],
Cell[221245, 5368, 295, 8, 52, "Input",ExpressionUUID->"78c7d805-f295-4d90-8b0a-3fd9f64510ae"],
Cell[221543, 5378, 2231, 63, 94, "Input",ExpressionUUID->"9dad91ad-8503-47ce-ae6e-ff5e69544d47"],
Cell[223777, 5443, 515, 12, 71, "Input",ExpressionUUID->"65d3313b-888a-4a5c-85e7-9daed3c85483"],
Cell[CellGroupData[{
Cell[224317, 5459, 1506, 33, 33, "Input",ExpressionUUID->"6c528d2a-2ad6-4a99-8f60-0644a705f277"],
Cell[225826, 5494, 622, 14, 28, "Message",ExpressionUUID->"12d58b00-0a7c-4437-bdd9-ece552626802"]
}, Open  ]],
Cell[CellGroupData[{
Cell[226485, 5513, 2393, 54, 133, "Input",ExpressionUUID->"b8fdb4d0-0082-45c8-aa67-03c0ff53d9e6"],
Cell[228881, 5569, 827, 15, 28, "Message",ExpressionUUID->"5b930b55-7044-43a2-8f95-04e58bfc7378"],
Cell[229711, 5586, 831, 15, 28, "Message",ExpressionUUID->"ea11953e-362b-40e1-8db0-a91c6d94935e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[230579, 5606, 2106, 47, 53, "Input",ExpressionUUID->"ec24f521-d53e-4f26-859c-99cc64d6c35e"],
Cell[232688, 5655, 682, 14, 28, "Message",ExpressionUUID->"486fcb28-7ada-4e7c-bb6f-3d0a25a2ab1b"],
Cell[233373, 5671, 682, 14, 28, "Message",ExpressionUUID->"f45ac62a-d9a4-42cd-8471-3351995244ae"],
Cell[234058, 5687, 682, 14, 28, "Message",ExpressionUUID->"f112dc07-8fd2-4f1f-85da-14f3d3cdcbf3"],
Cell[234743, 5703, 641, 13, 28, "Message",ExpressionUUID->"f81ea910-5edb-404f-b36c-201c86fcd084"],
Cell[235387, 5718, 252538, 4167, 535, 196514, 3248, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"502d0111-741b-4812-bcfa-918fa6e7e29e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[487962, 9890, 1092, 32, 33, "Input",ExpressionUUID->"2f93e765-2e8e-4eb3-abf9-3b2e57b52786"],
Cell[489057, 9924, 513, 11, 28, "Message",ExpressionUUID->"4b501f90-e59d-434d-a3c3-16a2bb6fa34c"],
Cell[489573, 9937, 511, 11, 28, "Message",ExpressionUUID->"04d3f729-8e25-4eda-90ae-45ab6d195006"],
Cell[490087, 9950, 513, 11, 28, "Message",ExpressionUUID->"64227821-6b32-404b-85a9-fa19fa92d30c"],
Cell[490603, 9963, 472, 10, 28, "Message",ExpressionUUID->"82896373-af4a-44d5-89a7-8e19c1d3bee6"],
Cell[491078, 9975, 217748, 3595, 415, "Output",ExpressionUUID->"d51d76e3-94fe-4974-845c-40ed02187ac4"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[708875, 13576, 160, 3, 45, "Subsubsection",ExpressionUUID->"6046c041-9359-4644-94e0-6eb150ec0681"],
Cell[709038, 13581, 295, 8, 52, "Input",ExpressionUUID->"439898a9-adff-433c-9a99-5e2829c5b1fb"],
Cell[709336, 13591, 2231, 63, 94, "Input",ExpressionUUID->"eac1cf62-20a9-4ec0-9760-555018b4758f"],
Cell[711570, 13656, 586, 14, 71, "Input",ExpressionUUID->"6183e03b-48c0-4a58-9977-ec64b86f0299"],
Cell[CellGroupData[{
Cell[712181, 13674, 1603, 34, 33, "Input",ExpressionUUID->"58522eef-22b3-4b87-811a-852aec920e79"],
Cell[713787, 13710, 718, 14, 28, "Message",ExpressionUUID->"e3ecfcac-35bd-42de-8b86-a874ecf106b6"]
}, Open  ]],
Cell[714520, 13727, 2448, 52, 113, "Input",ExpressionUUID->"51bf51ec-b710-484e-b49d-a6b504bafda0"],
Cell[CellGroupData[{
Cell[716993, 13783, 2151, 47, 33, "Input",ExpressionUUID->"e0891166-4fd0-4abc-ac29-1aa17e343851"],
Cell[719147, 13832, 33921, 578, 784, "Output",ExpressionUUID->"56389543-af96-43a2-99c9-d5e385a4bda5"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

